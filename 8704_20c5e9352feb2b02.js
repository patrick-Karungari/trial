(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([
  [8704],
  {
    214811: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.getAnnotationId = function (e) {
          return e.uuid || e.id || e.keyName || e.key || e.label || "";
        }),
        (t.isAnnotationValid = function ({
          annotation: e,
          taskType: t,
          customShapes: n = {},
          label: r,
        }) {
          if (
            p.default.includes(
              [s.TaskType.VideoPolygonAnnotation, s.TaskType.PolygonAnnotation],
              t
            ) &&
            e &&
            v(r || e.label, n, f.AnnotationGeometry.Polygon) ===
              f.AnnotationGeometry.Polygon &&
            "vertices" in e &&
            e.vertices.length > 3
          ) {
            return l.polygonFor(e).isValid();
          }
          return !0;
        }),
        (t.isAnnotationDone = function ({
          annotation: e,
          attributeDefinitions: t,
          requiresLabel: n = !0,
          requireLinkedAttributes: i = !0,
          prelabeledAttributes: o,
          isAttributeLocked: a,
        }) {
          if (n && !e.label) return !1;
          if (o && o.length > 0) return !1;
          let s = m.requiredAttributesForAnnotation({
            annotation: e,
            attributeDefinitions: t,
            requireLinkedAttributes: i,
          });
          if (
            ((s = p.default.omitBy(s, (e, t) => a?.(t))), p.default.isEmpty(s))
          )
            return !0;
          const u = e.attributes || {};
          return p.default.every(s, (n, i) =>
            r.validateAttribute(u[i], t[i], e)
          );
        }),
        (t.getAnnotationGeometry = v),
        (t.getDefaultAnnotationBreakdown = function (e, t) {
          if ((!e || e.length < 2) && p.default.keys(t).length)
            return p.default.keys(t)[0];
          return "label";
        }),
        (t.getBreakdownColors = function (e, t, n, r, s = {}) {
          const u = r?.breakdownColorsMap?.[n];
          if (u)
            return Array.isArray(u)
              ? p.default.map(u, (e) => ("object" === typeof e ? e.color : e))
              : p.default.mapValues(u, (e) =>
                  "object" === typeof e ? e.color : e
                );
          const c = [];
          for (let i = 0; i < 128; i++) {
            const e =
                (((65793 * (((2050 * i) & 139536) | ((32800 * i) & 558144))) >>
                  16) &
                  255) /
                256,
              [t, n, r] = g.hslToRgb(e, 1, 0.5);
            c.push(`rgb(${t}, ${n}, ${r})`);
          }
          if ("id" === n) return c;
          if ("lidarLinkingDistance" === n && s.lidarLinkingDistances) {
            const e = s.lidarLinkingDistances,
              t = p.default.flatten(
                p.default.map(e, (e) => p.default.values(e))
              ),
              n = h
                .scaleSequential(h.interpolatePlasma)
                .domain([80, p.default.min(t) || 0]);
            return (t, r = 0) => {
              const i = e[r][t.uuid];
              return (i && n(i)) || "#fff";
            };
          }
          const l = t;
          let f;
          const d = {};
          if ("label" === n) f = y.getAllChoiceDescendants(e);
          else if (l && l[n]) {
            const e = l[n].type;
            if (e !== a.AnnotationAttributeType.Category && !p.default.isNil(e))
              return c;
            f = y.getAllChoiceDescendants(l[n].choices);
          }
          const m = s.useOptimizedColors
            ? o.default.maxList.map(([e, t, n]) => `rgb(${e}, ${t}, ${n})`)
            : g.MaterialA400HexStringOrdered;
          return (
            p.default.map(f, (e, t) => {
              d[e] =
                "label" === n && e in i.LABEL_COLOR_MAP
                  ? i.LABEL_COLOR_MAP[e]
                  : m[Number(t) % m.length];
            }),
            d
          );
        }),
        (t.getDisplayLabel = function (e, t, n, r = !1) {
          if (!t) return n && e in n ? n[e] : e;
          const i = y.getAllChoices(t),
            o = p.default.find(i, (t) =>
              p.default.isString(t) ? t === e : (r ? t.display : t.choice) === e
            );
          if (!o) return n && e in n ? n[e] : e;
          let a;
          a = p.default.isString(o) ? o : r ? o.choice : o.display ?? o.choice;
          return n && a in n ? n[a] : a;
        }),
        (t.mergeLabelChoices = function e(t, n) {
          const r = p.default.cloneDeep(t);
          return (
            n.forEach((t) => {
              if (d.isNestedLabelChoice(t)) {
                const n = p.default.findIndex(r, (e) => t.choice === e.choice);
                if (-1 === n) r.push(t);
                else {
                  const i = r[n].subchoices || [];
                  r[n] = { choice: t.choice, subchoices: e(i, t.subchoices) };
                }
              } else
                "object" !== typeof t
                  ? p.default.includes(r, t) || r.push(t)
                  : p.default.find(r, { choice: t.choice }) || r.push(t);
            }),
            r
          );
        }),
        (t.removeFromLabelChoices = function e(t, n) {
          if (!t) return [];
          return p.default.reduce(
            t,
            (t, r) => {
              if (d.isNestedLabelChoice(r)) {
                const i = e(r.subchoices, n);
                return p.default.isEmpty(i)
                  ? t
                  : [...t, { ...r, subchoices: i }];
              }
              return d.getLabelChoiceValue(r) === n ? t : [...t, r];
            },
            []
          );
        }),
        (t.getAllLabelInstances = function e(t, n = !1) {
          if (!t) return [];
          let r = [];
          for (const i of t)
            i.instance_label || n
              ? "object" === typeof i
                ? i.subchoices
                  ? (r = r.concat(e(i.subchoices, !0)))
                  : r.push(i.choice)
                : r.push(i)
              : (r = r.concat(e(i.subchoices, !1)));
          return r;
        }),
        (t.filterLabels = function e(t, n) {
          return p.default.reduce(
            t,
            (t, r) => {
              if (
                !(
                  p.default.includes(n, r.choice) ||
                  p.default.intersection(
                    y.getAllChoiceDescendants(r.subchoices),
                    n
                  ).length > 0
                )
              )
                return t;
              const i = {
                ...r,
                ...(r.subchoices ? { subchoices: e(r.subchoices, n) } : {}),
              };
              return t.concat([i]);
            },
            []
          );
        }),
        (t.filterLabelsMap = function (e, t) {
          return p.default.pickBy(e, (e, n) => p.default.includes(t, n));
        }),
        (t.getErrorCategoryName = x),
        (t.getBucketedGradedAnnotations = function (e, t) {
          if (!e) return null;
          const n = {
            [_.Missing]: [],
            [_.Extraneous]: [],
            [_.Incorrect]: [],
            [_.Correct]: [],
          };
          for (const r of e) {
            const e = r.metadata.props.id,
              i =
                p.default.size(
                  p.default.get(r, ["correctAnnotation", "frames"])
                ) > 1;
            let o = !1;
            const a = [];
            for (const t of r.scores) {
              if (
                "missing" === t.graderType &&
                0 === t.correctWork &&
                1 === t.totalWork
              ) {
                n[_.Missing].push(r), (o = !0);
                break;
              }
              if (
                "extraneous" === t.graderType &&
                -1 === t.correctWork &&
                0 === t.totalWork
              ) {
                n[_.Extraneous].push(r), (o = !0);
                break;
              }
              const e = t.correctWork !== t.totalWork,
                s = 0 !== p.default.get(t, "graderConfig.defaultWeight");
              if (e && s) {
                let e = `Incorrect ${x(t)}`;
                i &&
                  p.default.size(t.relativeIncorrectFrames) > 0 &&
                  (e += ` in frame [${c.getOneBasedFrameIntervals(
                    t.relativeIncorrectFrames
                  )}]`),
                  a.push(e);
              }
            }
            o ||
              (p.default.isEmpty(a)
                ? n[_.Correct].push(r)
                : (p.default.has(t, e) && a.push(t[e]),
                  n[_.Incorrect].push({ ...r, errors: a })));
          }
          return n;
        }),
        (t.buildAttributes = function (e, t, n, r = {}) {
          const i = { ...t },
            o = Object.keys(n);
          for (const a of o) {
            if (T(n[a]) && !i[a] && r.dotKeyValueTable && e) {
              const t = r.dotKeyValueTable[a];
              if (t) {
                const n = t[e];
                p.default.isArray(n) && 1 === n.length && (i[a] = n[0]);
              }
            }
          }
          return i;
        }),
        (t.GraderBuckets = t.NUM_DISTINCT_COLORS = void 0);
      var r = n(904882),
        i = n(368242),
        o = b(n(824292)),
        a = n(599789),
        s = n(167469),
        u = b(n(524183)),
        c = n(991984),
        l = n(440169),
        f = n(308408),
        d = n(335855),
        h = (function (e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (null != e)
            for (var n in e)
              if (Object.prototype.hasOwnProperty.call(e, n)) {
                var r =
                  Object.defineProperty && Object.getOwnPropertyDescriptor
                    ? Object.getOwnPropertyDescriptor(e, n)
                    : {};
                r.get || r.set ? Object.defineProperty(t, n, r) : (t[n] = e[n]);
              }
          return (t.default = e), t;
        })(n(445206)),
        p = b(n(298784)),
        g = n(244853),
        m = n(608837),
        y = n(19161);
      function b(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function v(e, t, n) {
        for (const r in t)
          if (p.default.includes(p.default.get(t, r), e)) return r;
        return n;
      }
      t.NUM_DISTINCT_COLORS = 128;
      const _ = {
        Missing: "Missing",
        Extraneous: "Doesn't Belong",
        Incorrect: "Incorrect",
        Correct: "Correct",
      };
      function x(e) {
        const t = u.default[e.graderType].title.toLowerCase(),
          n = e.errorType.toLowerCase().replace(`${e.graderType}_`, "");
        return t === n ? t : `${t} (${n})`;
      }
      function T(e) {
        return "linked" === e.type && "dot-key-value" === e.variant;
      }
      t.GraderBuckets = _;
    },
    185008: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.areGlobalAttributesDone = function (e, t) {
          const n = s(e, t);
          return i.default.every(i.default.keys(n), (n) =>
            o.validateAttribute(e[n], t[n], {})
          );
        }),
        (t.getGlobalAttributes = void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(904882),
        a = n(808704);
      const s = (e, t) =>
        a.requiredAttributesForAnnotation({
          annotation: { label: void 0, attributes: e, isGlobal: !0 },
          attributeDefinitions: t,
        });
      t.getGlobalAttributes = s;
    },
    284167: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.checkAttributeCondition = function (e, t) {
          if (t.is_global && !e.isGlobal) return !1;
          if (!1 === t.is_global && e.isGlobal) return !1;
          return o(e.label, t) && a(e.attributes || void 0, t);
        }),
        (t.isLabelConditionMet = o),
        (t.isAttributeConditionMet = a);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r };
      function o(e, t) {
        const n = t?.label_condition?.label || t?.label;
        return !n || i.default.includes(n, e);
      }
      function a(e, t) {
        const n = t?.attribute_conditions;
        if (!n) return !0;
        const r = Array.isArray(n)
          ? n
          : Object.entries(n).map(([e, t]) => ({ [e]: t }));
        return (
          0 === r.length ||
          (!!e &&
            i.default.every(r, (t) =>
              i.default.some(i.default.keys(t), (n) => {
                const r = t[n],
                  o = e[n];
                return Array.isArray(r) && Array.isArray(o)
                  ? i.default.intersectionBy(r, o, i.default.lowerCase)
                      .length >= 1
                  : Array.isArray(r)
                  ? i.default.includes(
                      i.default.map(r, i.default.lowerCase),
                      i.default.lowerCase(String(o))
                    )
                  : Array.isArray(o)
                  ? i.default.includes(
                      i.default.map(o, i.default.lowerCase),
                      i.default.lowerCase(r)
                    )
                  : i.default.lowerCase(r) === i.default.lowerCase(String(o));
              })
            ))
        );
      }
    },
    20241: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.getAnnotationErrors = function ({
          annotation: e,
          existingIds: t,
          attributeDefinitions: n,
          requiresLabel: r = !0,
          requireLinkedAttributes: c = !0,
          viewport: l,
          allowOutOfViewportVertices: f,
          skipAnnotationAttributeChoiceValidation: d,
          isGISAssignment: h,
          annotationFlags: p,
        }) {
          if (r && !e.label) return ["is missing a Label"];
          const g = e.uuid && p?.[e.uuid];
          if (g && !g.confirmed) return ["flag has not been confirmed"];
          const m = g && u.getFirstUnconfirmedAttributeFlag(g, e.attributes, n);
          if (m) return [`attribute flag "${m}" has not been confirmed`];
          if (l && !f && !a.annotationInFrame(e, l))
            return ["is outside the frame"];
          const y = a.annotationHasValidDimensions(e);
          if (!y.valid && !h)
            return [` has duplicate points at x: ${y.x}, y: ${y.y}`];
          const b = e.attributes || {},
            v = i.default.find(
              i.default.keys(b),
              (e) =>
                n?.[e]?.type === s.AnnotationAttributeType.Linked &&
                !!b[e] &&
                !t?.has(b[e])
            );
          if (v) return [`has an invalid link ${v}`];
          const _ = o.requiredAttributesForAnnotation({
            annotation: e,
            attributeDefinitions: n,
            requireLinkedAttributes: c,
          });
          if (i.default.isEmpty(_)) return [];
          return Object.keys(_)
            .filter((t) => !o.validateAttribute(b[t], n[t], e, d))
            .map((e) => `is missing or has invalid value for ${e}`);
        });
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(808704),
        a = n(96372),
        s = n(599789),
        u = n(707814);
    },
    628406: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.getLinkedAttributeKeys = void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(599789);
      t.getLinkedAttributeKeys = (e) =>
        i.default.keys(
          i.default.pickBy(
            e,
            (e) => e.type === o.AnnotationAttributeType.Linked
          )
        );
    },
    608837: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.requiredAttributesForAnnotation = function ({
          annotation: e,
          attributeDefinitions: t,
          requireLinkedAttributes: n = !0,
        }) {
          return i.default.pickBy(t, (t) =>
            (function (e, t, n = !0) {
              if (a.isDerivedAttribute(t)) return !1;
              if (
                t.type === o.AnnotationAttributeType.Linked &&
                !n &&
                !t.required
              )
                return !1;
              if (e.isGlobal && !t.conditions) return !1;
              if (!t.conditions) return !0;
              return s.checkAttributeCondition(e, t.conditions);
            })(e, t, n)
          );
        });
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(599789),
        a = n(602801),
        s = n(284167);
    },
    602801: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isDerivedAttribute = function (e) {
          return !!i.default.get(e, "derived");
        });
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r };
    },
    904882: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.validateAttribute = function (e, t, n, r) {
          if (i.default.isEmpty(e) && t.optional) return !0;
          if (r) return !i.default.isNil(e);
          if (t.type === o.AnnotationAttributeType.Number && !u(e, t))
            return !1;
          if (t.type === o.AnnotationAttributeType.NumberArray && !u(e, t))
            return !1;
          if (t.type === o.AnnotationAttributeType.XLine && e > a.getWidth(n))
            return !1;
          if (t.type === o.AnnotationAttributeType.YLine && e > a.getHeight(n))
            return !1;
          if (t.type === o.AnnotationAttributeType.Linked)
            return !i.default.isNil(e);
          if (t.type === o.AnnotationAttributeType.Category)
            return i.default.isArray(e) && t.allow_multiple
              ? !i.default.isEmpty(e) &&
                  e.every((e) =>
                    s.getAllChoiceDescendants(t.choices).includes(e)
                  )
              : t.per_frame
              ? i.default.isArray(e) &&
                !i.default.isEmpty(e) &&
                e.every(
                  (e) => e && s.getAllChoiceDescendants(t.choices).includes(e)
                )
              : s.getAllChoiceDescendants(t.choices).includes(e);
          if (t.allow_multiple && t.choices)
            return (
              !i.default.isEmpty(e) &&
              e.every((e) => s.getAllChoiceDescendants(t.choices).includes(e))
            );
          return !i.default.isNil(e) && "" !== e;
        });
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(599789),
        a = n(587731),
        s = n(19161);
      function u(e, t) {
        const n = t.step || 1,
          { min: r, max: i } = t;
        return (
          (void 0 === r || (e - r) % n === 0) &&
          !((void 0 !== r && e < r) || (void 0 !== i && e > i))
        );
      }
    },
    587731: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.getBoxPoints = function (e) {
          return [
            { x: Number(e.left ?? e.x), y: Number(e.top ?? e.y) },
            {
              x: Number(e.left ?? e.x) + Number(e.width),
              y: Number(e.top ?? e.y),
            },
            {
              x: Number(e.left ?? e.x) + Number(e.width),
              y: Number(e.top ?? e.y) + Number(e.height),
            },
            {
              x: Number(e.left ?? e.x),
              y: Number(e.top ?? e.y) + Number(e.height),
            },
            { x: Number(e.left ?? e.x), y: Number(e.top ?? e.y) },
          ];
        }),
        (t.getWidth = function (e) {
          let t = e;
          e.currentFrame && (t = e.currentFrame);
          if (i.default.get(t, "width")) return t.width;
          if (i.default.get(t, "face")) return t.face.x2 - t.face.x1;
          return 0;
        }),
        (t.getHeight = function (e) {
          if (i.default.get(e, "height")) return e.height;
          if (i.default.get(e, "face")) return e.face.y2 - e.face.y1;
          return 0;
        }),
        (t.boxIntersectsGeometry =
          t.lineIntersectsBox =
          t.lineIntersects =
          t.boxIntersectsBox =
          t.boxContainsPoint =
          t.generateConnectionLines =
          t.shouldHaveConnection =
          t.getBoundingBoxFromVertices =
            void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(308408);
      t.getBoundingBoxFromVertices = (e) => {
        const t = i.default.minBy(e, (e) => e.y).y,
          n = i.default.maxBy(e, (e) => e.y).y - t,
          r = i.default.minBy(e, (e) => e.x).x;
        return {
          width: i.default.maxBy(e, (e) => e.x).x - r,
          height: n,
          top: t,
          left: r,
        };
      };
      const a = (e, t, n) => {
        let r = !1;
        return (
          n.forEach((n) => {
            const { pair: o, connection_attribute: a } = n;
            i.default.isNil(e.attributes?.[a]) ||
              i.default.isNil(t.attributes?.[a]) ||
              i.default.isNil(e.label) ||
              i.default.isNil(t.label) ||
              (e.attributes[a] === t.attributes[a] &&
                ((e.label === o[0] && t.label === o[1]) ||
                  (e.label === o[1] && t.label === o[0])) &&
                (r = !0));
          }),
          r
        );
      };
      t.shouldHaveConnection = a;
      t.generateConnectionLines = (e, t) => {
        const n = [];
        for (let r = 0; r < e.length; r++)
          for (let i = r + 1; i < e.length; i++)
            a(e[r], e[i], t) && n.push([e[r], e[i]]);
        return n;
      };
      const s = (e, t) => {
        const { x: n, y: r, width: i, height: o } = e;
        return n < t.x && t.x < n + i && r < t.y && t.y < r + o;
      };
      t.boxContainsPoint = s;
      const u = (e, t) => {
        const { x: n, y: r, width: i, height: o } = e;
        return (
          n < t.x + t.width && n + i > t.x && r < t.y + t.height && r + o > t.y
        );
      };
      t.boxIntersectsBox = u;
      const c = (e, t) => {
        const [{ x: n, y: r }, { x: i, y: o }] = e,
          [{ x: a, y: s }, { x: u, y: c }] = t,
          l = (i - n) * (c - s) - (u - a) * (o - r);
        if (0 === l) return !1;
        const f = ((c - s) * (u - n) + (a - u) * (c - r)) / l,
          d = ((r - o) * (u - n) + (i - n) * (c - r)) / l;
        return f > 0 && f < 1 && d > 0 && d < 1;
      };
      t.lineIntersects = c;
      const l = (e, t) => {
        const { x: n, y: r, width: o, height: a } = t,
          [s, u, l, f] = [
            { x: n, y: r },
            { x: n + o, y: r },
            { x: n, y: r + a },
            { x: n + o, y: r + a },
          ];
        return i.default.some([
          c(e, [s, u]),
          c(e, [s, l]),
          c(e, [u, f]),
          c(e, [l, f]),
        ]);
      };
      t.lineIntersectsBox = l;
      t.boxIntersectsGeometry = (e, t) => {
        switch (t.geometry) {
          case o.AnnotationGeometry.Box:
            return u(e, t);
          case o.AnnotationGeometry.Polygon: {
            const n = t;
            for (const [t, r] of n.vertices.entries())
              if (s(e, r) || l([n.vertices[(t + 1) % n.vertices.length], r], e))
                return !0;
            break;
          }
          case o.AnnotationGeometry.Point:
            return s(e, t);
          case o.AnnotationGeometry.Ellipse: {
            const { center: n, width: r, height: i } = t,
              o = n[0] - r / 2,
              a = n[1] - i / 2;
            return u(e, { x: o, y: a, width: r, height: i });
          }
          case o.AnnotationGeometry.Line: {
            const n = t;
            for (const [t, r] of n.vertices.entries())
              if (s(e, r) || (t > 0 && l([n.vertices[t - 1], r], e))) return !0;
            break;
          }
        }
        return !1;
      };
    },
    343388: function (e, t) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default = function (e) {
          if (void 0 === e) return "unknown uuid";
          return e.length > 20 ? e.slice(-4) : e;
        });
    },
    808704: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        Object.defineProperty(t, "getFriendlyAnnotationId", {
          enumerable: !0,
          get: function () {
            return o.default;
          },
        }),
        Object.defineProperty(t, "getAllChoiceDescendants", {
          enumerable: !0,
          get: function () {
            return a.getAllChoiceDescendants;
          },
        }),
        Object.defineProperty(t, "getAllChoices", {
          enumerable: !0,
          get: function () {
            return a.getAllChoices;
          },
        }),
        Object.defineProperty(t, "trimAllLabelNames", {
          enumerable: !0,
          get: function () {
            return a.trimAllLabelNames;
          },
        }),
        Object.defineProperty(t, "requiredAttributesForAnnotation", {
          enumerable: !0,
          get: function () {
            return s.requiredAttributesForAnnotation;
          },
        }),
        Object.defineProperty(t, "areGlobalAttributesDone", {
          enumerable: !0,
          get: function () {
            return u.areGlobalAttributesDone;
          },
        }),
        Object.defineProperty(t, "getGlobalAttributes", {
          enumerable: !0,
          get: function () {
            return u.getGlobalAttributes;
          },
        }),
        Object.defineProperty(t, "checkAttributeCondition", {
          enumerable: !0,
          get: function () {
            return c.checkAttributeCondition;
          },
        }),
        Object.defineProperty(t, "getLinkedAttributeKeys", {
          enumerable: !0,
          get: function () {
            return l.getLinkedAttributeKeys;
          },
        }),
        Object.defineProperty(t, "validateAttribute", {
          enumerable: !0,
          get: function () {
            return f.validateAttribute;
          },
        }),
        Object.defineProperty(t, "getBoxPoints", {
          enumerable: !0,
          get: function () {
            return d.getBoxPoints;
          },
        }),
        Object.defineProperty(t, "getWidth", {
          enumerable: !0,
          get: function () {
            return d.getWidth;
          },
        }),
        Object.defineProperty(t, "getHeight", {
          enumerable: !0,
          get: function () {
            return d.getHeight;
          },
        }),
        Object.defineProperty(t, "getAnnotationErrors", {
          enumerable: !0,
          get: function () {
            return h.getAnnotationErrors;
          },
        });
      var r,
        i = {
          getFriendlyAnnotationId: !0,
          getAllChoiceDescendants: !0,
          getAllChoices: !0,
          trimAllLabelNames: !0,
          requiredAttributesForAnnotation: !0,
          areGlobalAttributesDone: !0,
          getGlobalAttributes: !0,
          checkAttributeCondition: !0,
          getLinkedAttributeKeys: !0,
          validateAttribute: !0,
          getBoxPoints: !0,
          getWidth: !0,
          getHeight: !0,
          getAnnotationErrors: !0,
        },
        o = (r = n(343388)) && r.__esModule ? r : { default: r },
        a = n(19161),
        s = n(608837),
        u = n(185008),
        c = n(284167),
        l = n(628406),
        f = n(904882),
        d = n(587731),
        h = n(20241),
        p = (function (e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (null != e)
            for (var n in e)
              if (Object.prototype.hasOwnProperty.call(e, n)) {
                var r =
                  Object.defineProperty && Object.getOwnPropertyDescriptor
                    ? Object.getOwnPropertyDescriptor(e, n)
                    : {};
                r.get || r.set ? Object.defineProperty(t, n, r) : (t[n] = e[n]);
              }
          return (t.default = e), t;
        })(n(214811));
      Object.keys(p).forEach(function (e) {
        "default" !== e &&
          "__esModule" !== e &&
          (Object.prototype.hasOwnProperty.call(i, e) ||
            (e in t && t[e] === p[e]) ||
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function () {
                return p[e];
              },
            }));
      });
    },
    19161: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.getAllChoices = a),
        (t.getAllChoiceDescendants = function e(
          t,
          n = i.default.identity,
          r = !1
        ) {
          if (!t) return [];
          let a = [];
          for (const i of t)
            !o.isNestedLabelChoice(i) || (r && !n(i))
              ? n(i) && a.push(o.getLabelChoiceValue(i))
              : (a = a.concat(e(i.subchoices)));
          return a;
        }),
        (t.getFirstLeafLabel = function e(t) {
          if (!t) return;
          for (const n of t) {
            if (!o.isNestedLabelChoice(n)) return o.getLabelChoiceValue(n);
            {
              const t = e(n.subchoices);
              if (t) return t;
            }
          }
          return;
        }),
        (t.trimAllLabelNames = function e(t) {
          return (
            t.forEach((n, r) => {
              o.isNestedLabelChoice(n)
                ? ((n.choice = n.choice.trim()), e(n.subchoices))
                : "string" === typeof n
                ? (t[r] = n.trim())
                : i.default.isNil(n) || (n.choice = n.choice.trim());
            }),
            t
          );
        }),
        (t.hasSubchoices =
          t.displayChoice =
          t.stringifyChoice =
          t.getChoice =
          t.generateChildToParentChoiceMapping =
            void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(335855);
      function a(e, t = !1) {
        if (!e) return [];
        const n = [];
        for (const r of e)
          o.isNestedLabelChoice(r)
            ? (t && n.push(r), n.push(...a(r.subchoices, t)))
            : n.push(r);
        return n;
      }
      const s = (e, t) => {
        const n = new Map();
        return e
          ? (e.forEach((e) => {
              if ((n.set(e, t), o.isNestedLabelChoice(e))) {
                const t = s(e.subchoices, e);
                for (const [e, r] of t.entries()) n.set(e, r);
              }
            }),
            n)
          : n;
      };
      t.generateChildToParentChoiceMapping = s;
      t.getChoice = (e, t, n) => {
        if (!i.default.isNil(t))
          return a(e, !0).find((e) =>
            n ? i.default.isEqual(t, e) : t === u(e)
          );
      };
      const u = (e) =>
        i.default.isNil(e) ? "" : i.default.isString(e) ? e : e.choice;
      t.stringifyChoice = u;
      t.displayChoice = (e) =>
        i.default.isNil(e)
          ? ""
          : i.default.isString(e)
          ? e
          : e.display ?? e.choice;
      t.hasSubchoices = (e) =>
        !i.default.isNil(e) && !i.default.isString(e) && !!e.subchoices;
    },
    96372: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.annotationHasValidDimensions =
          t.annotationInFrame =
          t.pointInFrame =
          t.isPolygon =
          t.isLine =
            void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(308408);
      t.isLine = (e) => e.geometry === o.AnnotationGeometry.Line;
      t.isPolygon = (e) => e.geometry === o.AnnotationGeometry.Polygon;
      const a = (e, t) =>
        i.default.isNumber(e.x) &&
        i.default.isNumber(e.y) &&
        e.x >= t.left &&
        e.x <= t.width &&
        e.y >= t.top &&
        e.y <= t.height;
      t.pointInFrame = a;
      const s = (e, t) => e.vertices.every((e) => a(e, t));
      t.annotationInFrame = (e, t) => {
        switch (e.geometry) {
          case o.AnnotationGeometry.Box:
            return ((e, t) =>
              i.default.isNumber(e.x) &&
              i.default.isNumber(e.y) &&
              i.default.isNumber(e.width) &&
              i.default.isNumber(e.height) &&
              e.x >= t.left &&
              e.x + e.width <= t.width &&
              e.y >= t.top &&
              e.y + e.height <= t.height &&
              e.width > 0 &&
              e.height > 0)(e, t);
          case o.AnnotationGeometry.Point:
            return a(e, t);
          case o.AnnotationGeometry.Line:
          case o.AnnotationGeometry.Polygon:
            return s(e, t);
          case o.AnnotationGeometry.Ellipse:
            return ((e, t) => {
              const { center: n, width: r, height: o } = e;
              if (
                !i.default.isNumber(n[0]) ||
                !i.default.isNumber(n[1]) ||
                !i.default.isNumber(r) ||
                !i.default.isNumber(o)
              )
                return !1;
              const a = n[0] - r / 2,
                s = n[1] - o / 2;
              return (
                a >= t.left &&
                a + r <= t.width &&
                s >= t.top &&
                s + o <= t.height &&
                r > 0 &&
                o > 0
              );
            })(e, t);
        }
        return !0;
      };
      const u = (e, t = 3) => {
        if (e.vertices.length < t)
          return {
            valid: !1,
            x: e?.vertices?.[0]?.x ?? 0,
            y: e?.vertices?.[0]?.y ?? 0,
          };
        for (let n = 0; n < e.vertices.length - 1; n++) {
          const t = e.vertices[n],
            r = e.vertices[n + 1];
          if (r && t.x === r.x && t.y === r.y)
            return { valid: !1, x: t.x, y: t.y };
        }
        return { valid: !0 };
      };
      t.annotationHasValidDimensions = (e) => {
        switch (e.geometry) {
          case o.AnnotationGeometry.Box:
            return (n = e).width > 0 && n.height > 0
              ? { valid: !0 }
              : { valid: !1, x: n.x, y: n.y };
          case o.AnnotationGeometry.Point:
            return { valid: !0 };
          case o.AnnotationGeometry.Line:
            return u(e, 2);
          case o.AnnotationGeometry.Polygon:
            return u(e);
          case o.AnnotationGeometry.Ellipse:
            return (t = e).width > 0 && t.height > 0
              ? { valid: !0 }
              : { valid: !1, x: t.center[0], y: t.center[1] };
        }
        var t, n;
        return { valid: !0 };
      };
    },
    320716: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        Object.defineProperty(t, "CameraModel", {
          enumerable: !0,
          get: function () {
            return o.CameraModel;
          },
        }),
        (t.getProjectionFunction = function (
          e,
          { skipDistortion: t = !1 } = {}
        ) {
          const n = e.imageHeight * (e.scale_factor || 1),
            i = e.imageWidth * (e.scale_factor || 1);
          switch (e.camera_model) {
            case o.CameraModel.ModEquiFish:
            case o.CameraModel.ModKannala:
            case o.CameraModel.BrownConrady:
            case o.CameraModel.Fisheye:
            case o.CameraModel.Omnidirectional:
            case o.CameraModel.Ftheta:
            case o.CameraModel.FisheyeRadialCustom:
            case void 0:
            case null: {
              const s = (function (e) {
                  const t = new r.Matrix4();
                  if (e.useKitti && e.kittiNormalizedCoordinates) t.copy(l);
                  else {
                    const n = e.useKitti
                        ? l
                        : h(e.fx, e.fy, e.cx, e.cy, e.skew || 0),
                      r = d(e.position, e.heading);
                    t.multiplyMatrices(n, r);
                  }
                  return t;
                })(e),
                u = !e.useKitti,
                c = d(e.position, e.heading),
                p = h(e.fx, e.fy, e.cx, e.cy, e.skew || 0),
                g = {};
              return (l, d = 1) => {
                const h = new r.Vector4(l.x, l.y, l.z, 1),
                  y = new r.Vector4(l.x, l.y, l.z, 1);
                e.camera_model === o.CameraModel.Omnidirectional && e.xi
                  ? (h.applyMatrix4(c),
                    h.setW(0),
                    h.normalize(),
                    (h.z += e.xi),
                    h.setW(1),
                    h.applyMatrix4(p))
                  : h.applyMatrix4(s),
                  y.applyMatrix4(c);
                const v = a.distance(l, e.position) < 170,
                  _ = h.w > 0;
                if (!_)
                  return {
                    distortPosition: null,
                    preDistortPosition: null,
                    distortGood: !1,
                    visible: !1,
                    projectionValid: _,
                    withinRange: !1,
                  };
                h.multiplyScalar(d / h.w);
                const x = n * d,
                  T = i * d,
                  M = h.clone();
                let w, A, k;
                if (t) (w = null), (A = _ && f(M, T, x)), (k = !1);
                else {
                  try {
                    (w = u ? m(h, e) : M.clone()),
                      (A = _ && f(w, T, x)),
                      (k = u ? b(h, e, g) : A);
                  } catch (E) {
                    (w = u ? m(h, e) : M.clone()),
                      (A = _ && f(w, T, x)),
                      (k = u ? b(h, e, g) : A);
                  }
                  e.scale_factor &&
                    (w.multiplyScalar(1 / e.scale_factor),
                    M.multiplyScalar(1 / e.scale_factor));
                }
                return {
                  distortPosition: w,
                  preDistortPosition: M,
                  projectionValid: _,
                  distortGood: k,
                  visible: A,
                  withinRange: v,
                };
              };
            }
            case o.CameraModel.Cylindrical: {
              const t = d(e.position, e.heading);
              return (o, s = 1, u = !1) => {
                const c = new r.Vector4(o.x, o.y, o.z, 1);
                c.applyMatrix4(t);
                const l = a.distance(o, e.position) < 170,
                  d = Math.atan2(c.x, c.z),
                  h = Math.hypot(c.x, c.z),
                  p = d * e.fx + e.cx,
                  g = (c.y / h) * e.fy + e.cy,
                  m = new r.Vector4(p, g, 0, 1);
                m.multiplyScalar(s);
                const y = f(m, i * s, n * s);
                e.scale_factor && m.multiplyScalar(1 / e.scale_factor);
                let b = !0;
                return (
                  u && (b = c.z > -6),
                  {
                    distortPosition: m,
                    preDistortPosition: m,
                    projectionValid: b,
                    distortGood: b,
                    visible: y,
                    withinRange: l,
                  }
                );
              };
            }
            case o.CameraModel.Equirectangular: {
              const t = d(e.position, e.heading);
              return (o, s = 1) => {
                const u = new r.Vector4(o.x, o.y, o.z, 1);
                u.applyMatrix4(t);
                const c = a.distance(o, e.position) < 170,
                  l = Math.hypot(u.x, u.z),
                  d = Math.atan2(u.z, u.x),
                  h = Math.acos(u.x / l),
                  p = d * e.fx + e.cx,
                  g = h * e.fy + e.cy,
                  m = new r.Vector4(p, g, 0, 1);
                m.multiplyScalar(s);
                const y = f(m, i * s, n * s);
                return (
                  e.scale_factor && m.multiplyScalar(1 / e.scale_factor),
                  {
                    distortPosition: m,
                    preDistortPosition: m,
                    projectionValid: !0,
                    distortGood: !0,
                    visible: y,
                    withinRange: c,
                  }
                );
              };
            }
            default:
              throw new Error(`Unknown model ${e.camera_model}`);
          }
        }),
        (t.createWorldToCamera = d),
        (t.createCameraToProjection = h),
        (t.KITTIProjectionMatrix = t.CAMERA_MODELS_TO_PARAMS = void 0);
      var r = (function (e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (null != e)
            for (var n in e)
              if (Object.prototype.hasOwnProperty.call(e, n)) {
                var r =
                  Object.defineProperty && Object.getOwnPropertyDescriptor
                    ? Object.getOwnPropertyDescriptor(e, n)
                    : {};
                r.get || r.set ? Object.defineProperty(t, n, r) : (t[n] = e[n]);
              }
          return (t.default = e), t;
        })(n(814412)),
        i = u(n(844955)),
        o = n(167469),
        a = n(141862),
        s = u(n(298784));
      function u(e) {
        return e && e.__esModule ? e : { default: e };
      }
      const c = Object.freeze({
        [o.CameraModel.BrownConrady]: {
          required: ["fx", "fy", "cx", "cy"],
          optional: [
            "skew",
            "k1",
            "k2",
            "k3",
            "k4",
            "k5",
            "k6",
            "p1",
            "p2",
            "lx",
            "ly",
            "rSqThresh",
          ],
        },
        [o.CameraModel.ModEquiFish]: {
          required: ["fx", "fy", "cx", "cy"],
          optional: ["skew", "k2", "k3", "k4"],
        },
        [o.CameraModel.ModKannala]: {
          required: ["fx", "fy", "cx", "cy"],
          optional: ["skew", "k1", "k2", "k3", "k4"],
        },
        [o.CameraModel.Fisheye]: {
          required: ["fx", "fy", "cx", "cy"],
          optional: ["skew", "k1", "k2", "k3", "k4"],
        },
        [o.CameraModel.Cylindrical]: {
          required: ["fx", "fy", "cx", "cy"],
          optional: ["skew"],
        },
        [o.CameraModel.Equirectangular]: {
          required: ["fx", "fy", "cx", "cy"],
          optional: [],
        },
        [o.CameraModel.Omnidirectional]: {
          required: ["fx", "fy", "cx", "cy"],
          optional: ["skew", "k1", "k2", "k3", "p1", "p2", "lx", "ly", "xi"],
        },
        [o.CameraModel.Ftheta]: {
          required: ["fx", "fy", "cx", "cy"],
          optional: ["skew", "k1", "k2", "k3", "k4", "k5"],
        },
        [o.CameraModel.FisheyeRadialCustom]: {
          required: ["fx", "fy", "cx", "cy"],
          optional: [
            "skew",
            "k1",
            "k2",
            "k3",
            "k4",
            "k5",
            "k6",
            "p1",
            "p2",
            "dcx",
            "dcy",
          ],
        },
      });
      t.CAMERA_MODELS_TO_PARAMS = c;
      const l = new r.Matrix4();
      function f(e, t, n) {
        return e.y >= 0 && e.y < n && e.x >= 0 && e.x < t;
      }
      function d(e, t) {
        const n = new r.Vector3(e.x, e.y, e.z),
          i = new r.Quaternion(t.x, t.y, t.z, t.w),
          o = new r.Matrix4(),
          a = new r.Matrix4(),
          s = new r.Matrix4();
        return (
          i.invert(),
          n.multiplyScalar(-1),
          o.makeTranslation(n.x, n.y, n.z),
          a.makeRotationFromQuaternion(i),
          s.multiplyMatrices(a, o),
          s
        );
      }
      function h(e, t, n, i, o) {
        const a = new r.Matrix4();
        return a.set(e, o, n, 0, 0, t, i, 0, 0, 0, 0, 0, 0, 0, 1, 0), a;
      }
      function p(e, t, n, r, i, o, a) {
        return [(e / n - r) / o, (t / n - i) / a];
      }
      function g(e, ...t) {
        let n = 0,
          r = 1;
        for (const i of t) (n += i * r), (r *= e);
        return n;
      }
      function m(e, t) {
        switch (t.camera_model) {
          case o.CameraModel.ModEquiFish:
            return (function (e, t) {
              const [n, i] = p(e.x, e.y, e.w, t.cx, t.cy, t.fx, t.fy),
                [o, a, s] = [t.k2 || 0, t.k3 || 0, t.k4 || 0],
                u = Math.sqrt(n * n + i * i),
                c = Math.atan(u),
                l = u < 1e-5 ? 1 : c / u,
                f = c * c * (o + c * (a + c * s)) + 1,
                d = new r.Vector4(0, 0, e.z, e.w);
              return (
                (d.x = t.fx * l * n * f + t.cx),
                (d.y = t.fy * l * i * f + t.cy),
                (d.x *= d.w),
                (d.y *= d.w),
                d
              );
            })(e, t);
          case o.CameraModel.ModKannala:
            return (function (e, t) {
              const [n, i] = p(e.x, e.y, e.w, t.cx, t.cy, t.fx, t.fy),
                [o, a, s, u] = [t.k1 || 0, t.k2 || 0, t.k3 || 0, t.k4 || 0],
                c = Math.sqrt(n * n + i * i),
                l = Math.atan(c),
                f = Math.atan(l),
                d = f * f,
                h = f * (1 + d * (o + d * (a + d * (s + u * d)))),
                g = c > 1e-5 ? Math.tan(h) / c : 1,
                m = new r.Vector4(0, 0, e.z, e.w);
              return (
                (m.x = t.fx * n * g + t.cx),
                (m.y = t.fy * i * g + t.cy),
                (m.x *= m.w),
                (m.y *= m.w),
                m
              );
            })(e, t);
          case o.CameraModel.Fisheye:
            return (function (e, t) {
              const [n, i] = p(e.x, e.y, e.w, t.cx, t.cy, t.fx, t.fy),
                [o, a, s, u] = [t.k1 || 0, t.k2 || 0, t.k3 || 0, t.k4 || 0],
                c = Math.sqrt(n * n + i * i),
                l = Math.atan(c),
                f = c < 1e-5 ? 1 : l / c,
                d = l * l,
                h = d * (o + d * (a + d * (s + d * u))) + 1,
                g = new r.Vector4(0, 0, e.z, e.w);
              return (
                (g.x = t.fx * f * n * h + t.cx),
                (g.y = t.fy * f * i * h + t.cy),
                (g.x *= g.w),
                (g.y *= g.w),
                g
              );
            })(e, t);
          case o.CameraModel.Ftheta:
            return (function (e, t) {
              const [n, i] = p(e.x, e.y, e.w, t.cx, t.cy, t.fx, t.fy),
                [o, a, s, u, c] = [
                  t.k1 || 0,
                  t.k2 || 0,
                  t.k3 || 0,
                  t.k4 || 0,
                  t.k5 || 0,
                ],
                l = Math.sqrt(n * n + i * i),
                f = l < 1e-5 ? 1 : 1 / l,
                d = g(Math.atan(l), 0, o, a, s, u, c),
                h = new r.Vector4(0, 0, e.z, e.w);
              return (
                (h.x = t.fx * f * n * d + t.cx),
                (h.y = t.fy * f * i * d + t.cy),
                (h.x *= h.w),
                (h.y *= h.w),
                h
              );
            })(e, t);
          case o.CameraModel.FisheyeRadialCustom:
            return (function (e, t) {
              const [n, i, o, a, s, u] = [
                  t.k1 || 0,
                  t.k2 || 0,
                  t.k3 || 0,
                  t.k4 || 0,
                  t.k5 || 0,
                  t.k6 || 0,
                ],
                [c, l] = [t.p1 || 0, t.p2 || 0],
                [f, d] = [t.dcx || 0, t.dcy || 0],
                [h, m] = p(e.x, e.y, e.w, t.cx, t.cy, t.fx, t.fy),
                y = h - f,
                b = m - d,
                v = y * y + b * b,
                _ = Math.sqrt(v);
              let x = _ < 1e-5 ? 1 : 1 / _;
              (x *= g(Math.atan(_), 0, 1, n, i, o, a, s, u)),
                (x *= g(v * x * x, 1, c, l));
              const T = (t.fx * (y * x + f) + t.cx) * e.w,
                M = (t.fy * (b * x + d) + t.cy) * e.w;
              return new r.Vector4(T, M, e.z, x < 0 ? -1 : e.w);
            })(e, t);
          case o.CameraModel.BrownConrady:
          case o.CameraModel.Omnidirectional:
          case void 0:
          case null:
            return (function (e, t) {
              let [n, i] = p(e.x, e.y, e.w, t.cx, t.cy, t.fx, t.fy);
              const o = n * n + i * i,
                [a, s, u, c, l, f, d, h, g, m] = [
                  t.k1 || 0,
                  t.k2 || 0,
                  t.k3 || 0,
                  t.k4 || 0,
                  t.k5 || 0,
                  t.k6 || 0,
                  t.p1 || 0,
                  t.p2 || 0,
                  t.lx || 0,
                  t.ly || 0,
                ];
              (n += g), (i += m);
              const y =
                  (1 + o * (a + o * (s + o * u))) /
                  (1 + o * (c + o * (l + o * f))),
                b = new r.Vector4(0, 0, e.z, e.w);
              return (
                (b.x =
                  t.cx + t.fx * (n * y + d * (o + 2 * n * n) + 2 * h * n * i)),
                (b.y =
                  t.cy + t.fy * (i * y + h * (o + 2 * i * i) + 2 * d * n * i)),
                (b.x *= b.w),
                (b.y *= b.w),
                b
              );
            })(e, t);
          default:
            throw new Error(`Unknown model ${t.camera_model}`);
        }
      }
      (t.KITTIProjectionMatrix = l),
        l.set(
          609.695409,
          180.384202,
          0,
          0.999945389,
          -721.421597,
          7.64479802,
          0,
          0.000124365378,
          -1.25125855,
          -719.651474,
          0,
          0.010451303,
          -123.041806,
          -101.016688,
          384.38148,
          -0.269386912
        ),
        l.transpose();
      const y = (e) => Math.abs(e) > 1e-4;
      function b(e, t, n) {
        const [r, a] = p(e.x, e.y, e.w, t.cx, t.cy, t.fx, t.fy);
        switch (t.camera_model) {
          case o.CameraModel.ModEquiFish: {
            n.thetaThresh ||
              (n.thetaThresh = (function (e) {
                const [t, n, r] = [e.k2 || 0, e.k3 || 0, e.k4 || 0],
                  o = i.default
                    .allRoots([5 * r, 4 * n, 3 * t, 0, 1])
                    .filter((e) => e > 0);
                return o.sort((e, t) => e - t), o[0] || 1 / 0;
              })(t));
            const e = Math.sqrt(r * r + a * a);
            return Math.atan(e) < n.thetaThresh;
          }
          case o.CameraModel.ModKannala: {
            n.thetaThresh || (n.thetaThresh = Math.PI / 2);
            const e = Math.sqrt(r * r + a * a);
            return Math.atan(e) < n.thetaThresh;
          }
          case o.CameraModel.Fisheye: {
            n.thetaSqThresh ||
              (n.thetaSqThresh = (function (e) {
                const [t, n, r, o] = [
                    e.k1 || 0,
                    e.k2 || 0,
                    e.k3 || 0,
                    e.k4 || 0,
                  ],
                  a = i.default
                    .allRoots([9 * o, 7 * r, 5 * n, 3 * t, 1])
                    .filter((e) => e > 0);
                return a.sort((e, t) => e - t), a[0] || 1 / 0;
              })(t));
            const e = Math.sqrt(r * r + a * a),
              o = Math.atan(e);
            return o * o < n.thetaSqThresh;
          }
          case o.CameraModel.FisheyeRadialCustom:
            return e.w > 0;
          case o.CameraModel.BrownConrady:
          case o.CameraModel.Omnidirectional:
          case o.CameraModel.Ftheta:
          case void 0:
          case null:
            n.rSqThresh ||
              (n.rSqThresh = (function (e) {
                if ("rSqThresh" in e && !s.default.isNil(e.rSqThresh))
                  return e.rSqThresh;
                const [t, n, r, o, a, u] = [
                  e.k1,
                  e.k2,
                  e.k3,
                  e.k4,
                  e.k5,
                  e.k6,
                ].map((e) => e || 0);
                if (y(o) || y(a) || y(u)) return 1 / 0;
                const c = i.default
                  .allRoots([7 * r, 5 * n, 3 * t, 1])
                  .filter((e) => e > 0);
                return c.sort((e, t) => e - t), c[0] || 1 / 0;
              })(t));
            return r * r + a * a < n.rSqThresh;
          default:
            throw new Error(`Unknown model ${t.camera_model}`);
        }
      }
    },
    844162: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t._getOriginalTcFieldId = function (e) {
          const t = e.split(a.FIELD_ID_DELIMITER);
          if (2 === t.length) return t[1];
          return e;
        }),
        (t.default = void 0);
      var r,
        i = n(167469),
        o = n(991984),
        a = n(227267),
        s = n(513254),
        u = n(963494),
        c = n(222357),
        l = n(896135),
        f = (r = n(298784)) && r.__esModule ? r : { default: r };
      const d = (e, t) =>
          (e && "processsupervision" === e.chatGraderAnnotationType) ||
          (t && "processsupervision" === t.chatGraderAnnotationType),
        h = (e, t, n, r, i) => {
          const { responseIndex: o, stepParams: a } = e,
            { responseIndex: s, stepParams: u } = t,
            { stepIndicesToGradeOnly: c } = n || void 0;
          return (
            !(
              void 0 !== o &&
              void 0 !== s &&
              o === s &&
              void 0 !== c &&
              !c.includes(o)
            ) &&
            !(
              "model-response-selector" === r &&
              "model-response-selector" === i &&
              ((!f.default.isNil(a) &&
                !f.default.isNil(a?.params) &&
                a.params.skip_selection) ||
                (!f.default.isNil(u) &&
                  !f.default.isNil(u?.params) &&
                  u.params.skip_selection))
            )
          );
        },
        p = ({
          chatTaskAnnotationMetadata: e,
          fieldIdsToGradeOnly: t,
          stepIndicesToGradeOnly: n,
          textCollectionPerResponseCandidateIndexToGradeOnly: r,
        }) => {
          const { originalFieldId: i, candidateIndex: o, responseIndex: a } = e;
          return (
            void 0 === t ||
            void 0 === i ||
            (!!t.includes(i) &&
              !(void 0 !== n && void 0 !== a && !n.includes(a)) &&
              (void 0 === r || void 0 === o || r.includes(o)))
          );
        };
      var g = Object.freeze({
        chatTextCollection: {
          taskTypes: [i.TaskType.Chat],
          title: "chat text collection",
          graderFn: o.gradePerFrame((e, t, n, r) => ({
            textCollection: d(e, t)
              ? { correctWork: 0, totalWork: 0 }
              : o.gradeIfNotMissing(
                  (e, t) =>
                    "textcollection" === e.chatGraderAnnotationType &&
                    "textcollection" === t.chatGraderAnnotationType &&
                    p({
                      chatTaskAnnotationMetadata: e.chatTaskAnnotationMetadata,
                      fieldIdsToGradeOnly: r?.fieldIdsToGradeOnly,
                      stepIndicesToGradeOnly: r?.stepIndicesToGradeOnly,
                      textCollectionPerResponseCandidateIndexToGradeOnly:
                        r?.textCollectionPerResponseCandidateIndexToGradeOnly,
                    })
                      ? s.gradeByMatchingResult(s.singleGraderFn, r)(e, t)
                      : { correctWork: 0, totalWork: 0 },
                  e,
                  t
                ),
          })),
        },
        chatTextCollectionCategoryDistance: {
          taskTypes: [i.TaskType.Chat],
          title: "chat text collection - category distance",
          graderFn: o.gradePerFrame((e, t, n, r) => ({
            categoryDistance: d(e, t)
              ? { correctWork: 0, totalWork: 0 }
              : o.gradeIfNotMissing(
                  (e, t) =>
                    "textcollection" === e.chatGraderAnnotationType &&
                    "textcollection" === t.chatGraderAnnotationType &&
                    [
                      u.TextCollectionFieldType.Category,
                      u.TextCollectionFieldType.Number,
                      u.TextCollectionFieldType.Autocomplete,
                    ].includes(t.type) &&
                    p({
                      chatTaskAnnotationMetadata: e.chatTaskAnnotationMetadata,
                      fieldIdsToGradeOnly: r?.fieldIdsToGradeOnly,
                      stepIndicesToGradeOnly: r?.stepIndicesToGradeOnly,
                      textCollectionPerResponseCandidateIndexToGradeOnly:
                        r?.textCollectionPerResponseCandidateIndexToGradeOnly,
                    })
                      ? {
                          correctWork: f.default.sum(
                            e.response.map((e) =>
                              e.result === c.GraderResult.Correct
                                ? 1
                                : e.result === c.GraderResult.Incorrect
                                ? t.type === u.TextCollectionFieldType.Category
                                  ? s.getCategoryScoreByDistance(
                                      e.expected,
                                      e.given,
                                      r
                                    )
                                  : s.getCategoryScoreByDistance(
                                      [e.expected],
                                      [e.given],
                                      r
                                    )
                                : 0
                            )
                          ),
                          totalWork: t.response.length,
                        }
                      : { correctWork: 0, totalWork: 0 },
                  e,
                  t
                ),
          })),
        },
        chatModelResponseSelector: {
          taskTypes: [i.TaskType.Chat],
          title: "model response selector",
          graderFn: o.gradePerFrame((e, t, n, r) => ({
            modelResponseSelector: d(e, t)
              ? { correctWork: 0, totalWork: 0 }
              : o.gradeIfNotMissing(
                  (e, t) => {
                    if (
                      !h(
                        e.chatTaskAnnotationMetadata,
                        t.chatTaskAnnotationMetadata,
                        r,
                        e.chatGraderAnnotationType,
                        t.chatGraderAnnotationType
                      )
                    )
                      return { correctWork: 0, totalWork: 0 };
                    if (
                      "model-response-selector" ===
                        e.chatGraderAnnotationType &&
                      "model-response-selector" === t.chatGraderAnnotationType
                    ) {
                      if (r?.useLikert) {
                        const n = r.steps || [1],
                          i = Math.abs(e.likertValueRaw - t.likertValueRaw);
                        return {
                          correctWork: i < n.length ? n[i] : 0,
                          totalWork: 1,
                        };
                      }
                      return {
                        correctWork: e.selectedId === t.selectedId ? 1 : 0,
                        totalWork: 1,
                      };
                    }
                    return { correctWork: 0, totalWork: 0 };
                  },
                  e,
                  t
                ),
          })),
        },
        chatNerLabels: {
          taskTypes: [i.TaskType.Chat],
          title: "chat ner labels",
          graderFn: l.gradePerFrameForAnnotations((e, t, n) => ({
            nerLabels: d(e, t)
              ? { correctWork: 0, totalWork: 0 }
              : o.gradeIfNotMissing(
                  (e, t) =>
                    "namedentityrecognition" === t?.chatGraderAnnotationType
                      ? l.nerLabelsGrader(e, t).nerLabels
                      : { correctWork: 0, totalWork: 0 },
                  e,
                  t
                ),
          })),
        },
        chatProcessSupervision: {
          taskTypes: [i.TaskType.Chat],
          title: "chat process supervision",
          graderFn: l.gradePerFrameForAnnotations((e, t, n) => {
            return {
              processSupervisionLabels:
                ((r = e),
                (i = t),
                "processsupervision" === i?.chatGraderAnnotationType &&
                "processsupervision" === r?.chatGraderAnnotationType
                  ? r.rating === i.rating
                    ? { correctWork: 1, totalWork: 1 }
                    : { correctWork: 0, totalWork: 1 }
                  : { correctWork: 0, totalWork: 0 }),
            };
            var r, i;
          }),
        },
        chatModelResponseRanking: {
          taskTypes: [i.TaskType.Chat],
          title: "chat model response ranking",
          graderFn: l.gradePerFrameForAnnotations((e, t, n, r) => ({
            modelResponseRankingLabels: d(e, t)
              ? { correctWork: 0, totalWork: 0 }
              : o.gradeIfNotMissing(
                  (e, t) => {
                    if (
                      !h(
                        e.chatTaskAnnotationMetadata,
                        t.chatTaskAnnotationMetadata,
                        r,
                        e.chatGraderAnnotationType,
                        t.chatGraderAnnotationType
                      )
                    )
                      return { correctWork: 0, totalWork: 0 };
                    if (
                      "model-response-ranking" === t.chatGraderAnnotationType &&
                      "model-response-ranking" === e.chatGraderAnnotationType &&
                      e.rankings.length === t?.rankings.length
                    ) {
                      let n = 0,
                        r = 0;
                      for (let i = 0; i < e.rankings.length; i++) {
                        const o = e.rankings[i];
                        for (const e of o)
                          f.default.includes(t.rankings[i], e) && (n += 1),
                            (r += 1);
                      }
                      return { correctWork: n / r, totalWork: 1 };
                    }
                    return { correctWork: 0, totalWork: 0 };
                  },
                  e,
                  t
                ),
          })),
        },
      });
      t.default = g;
    },
    227267: function (e, t) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.FIELD_ID_DELIMITER = void 0);
      t.FIELD_ID_DELIMITER = "___FIELD_ID_DELIMITER___";
    },
    763081: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default = t.chatV2Graders = void 0);
      var r,
        i = n(167469),
        o = n(894815),
        a = n(991984),
        s = (r = n(298784)) && r.__esModule ? r : { default: r },
        u = n(513254),
        c = n(963494);
      const l = (e, t, n, r, i, o) => ({
          simpleChatLiteGrader: f(e, t, r, o)
            ? a.gradeIfNotMissing(
                (e, t) => {
                  const { response: n } = e,
                    { response: r } = t;
                  return {
                    correctWork: s.default.isEqual(n, r) ? 1 : 0,
                    totalWork: 1,
                  };
                },
                e,
                t
              )
            : { correctWork: 0, totalWork: 0 },
        }),
        f = (e, t, n, r) => d(e, n, r) && d(t, n, r),
        d = (e, t, n) => {
          if (void 0 === e) return !0;
          if (void 0 === t?.whitelistedFields) return !0;
          const {
            turnId: r,
            stepId: i,
            responseId: o,
            fieldId: a,
            responseIndex: u,
          } = e.fieldMatcher;
          return !!s.default.some(
            t.whitelistedFields,
            (e) =>
              (void 0 === e.turnId || e.turnId === r) &&
              (void 0 === e.stepId || e.stepId === i) &&
              (void 0 === e.fieldId || e.fieldId === a) &&
              (void 0 === e.responseId || e.responseId === o) &&
              (void 0 === e.responseIndex || e.responseIndex === u)
          );
        },
        h = (e, t, n, r, i, o) => ({
          chatLiteDistanceGrader: f(e, t, r, o)
            ? a.gradeIfNotMissing(
                (e, t) => {
                  const { response: n } = e,
                    { response: i } = t;
                  if (Array.isArray(n)) return { correctWork: 0, totalWork: 0 };
                  {
                    let e, t;
                    (e = "boolean" === typeof n ? n.toString() : n),
                      (t = "boolean" === typeof i ? i.toString() : i);
                    return {
                      correctWork: u.getCategoryScoreByDistance([e], [t], r),
                      totalWork: 1,
                    };
                  }
                },
                e,
                t
              )
            : { correctWork: 0, totalWork: 0 },
        }),
        p = (e, t, n, r, i, o) => ({
          ChatV2FreeTextGrader: f(e, t, r, o)
            ? a.gradeIfNotMissing(
                (e, t) => {
                  const { response: n } = e,
                    { response: i } = t;
                  return Array.isArray(n)
                    ? { correctWork: 0, totalWork: 0 }
                    : s.default.isString(n) && s.default.isString(i)
                    ? a.gradeFreeText(
                        n,
                        i,
                        r?.comparisonMethod ||
                          a.TextComparisonMethod.NormalizedLevenshtein
                      )
                    : { correctWork: 0, totalWork: 0 };
                },
                e,
                t
              )
            : { correctWork: 0, totalWork: 0 },
        }),
        g = { maxAcceptableDistance: 3, decayFunction: u.DecayFunction.Linear },
        m = Object.freeze({
          genericChatLiteGrader: {
            taskTypes: [i.TaskType.ChatExperimental, i.TaskType.ChatV2],
            title: "Generic ChatV2 grader",
            description:
              "Opinionated grader which grades annotations with annotation type specific graders",
            graderFn: a.gradePerFrame((e, t, n, r, i, d) => {
              if (!f(e, t, r, d))
                return {
                  genericChatLiteGrader: { correctWork: 0, totalWork: 0 },
                };
              if (t) {
                const n = (r?.perFieldGraderParams ?? []).find((e) => {
                  const { turnId: n, stepId: r, fieldId: i } = t.fieldMatcher,
                    { matcher: o } = e;
                  return (
                    (void 0 === o.turnId || o.turnId === n) &&
                    (void 0 === o.stepId || o.stepId === r) &&
                    (void 0 === o.fieldId || o.fieldId === i)
                  );
                });
                if (n) {
                  const { graderType: r, graderParams: i } = n;
                  let a;
                  if (
                    (r === o.ChatV2GraderType.ChatV2CategoryDistanceGrader &&
                      (a = h(e, t, 0, i)),
                    r === o.ChatV2GraderType.ChatV2FreeTextGrader &&
                      (a = p(e, t, 0, i)),
                    r === o.ChatV2GraderType.ChatV2SimpleGrader &&
                      (a = l(e, t, 0, i)),
                    void 0 !== a)
                  )
                    return {
                      genericChatLiteGrader: {
                        correctWork: a[r].correctWork,
                        totalWork: a[r].totalWork,
                      },
                    };
                }
              }
              return {
                genericChatLiteGrader: a.gradeIfNotMissing(
                  (e, t) => {
                    let n = 0,
                      r = 0;
                    const { response: i } = e,
                      { response: l } = t,
                      f = t.textCollectionField?.type;
                    if (
                      f === c.TextCollectionFieldType.Text &&
                      s.default.isString(i) &&
                      s.default.isString(l)
                    )
                      ({ correctWork: n, totalWork: r } = a.gradeFreeText(
                        i,
                        l,
                        a.TextComparisonMethod.NormalizedLevenshtein
                      ));
                    else {
                      if (
                        (f !== c.TextCollectionFieldType.Number &&
                          t.fieldMatcher.fieldId !==
                            o.PREFERENCE_LIKERT_FIELD_ID) ||
                        !s.default.isNumber(i) ||
                        !s.default.isNumber(l)
                      ) {
                        return {
                          correctWork: s.default.isEqual(i, l) ? 1 : 0,
                          totalWork: 1,
                        };
                      }
                      (n = u.getCategoryScoreByDistance([i], [l], g)), (r = 1);
                    }
                    return { correctWork: n, totalWork: r };
                  },
                  e,
                  t
                ),
              };
            }),
          },
          simpleChatLiteGrader: {
            taskTypes: [i.TaskType.ChatExperimental, i.TaskType.ChatV2],
            title: "Simple ChatV2 grader",
            description: "Grade annotations by exact match",
            graderFn: a.gradePerFrame(l),
          },
          chatLiteDistanceGrader: {
            taskTypes: [i.TaskType.ChatExperimental, i.TaskType.ChatV2],
            title: "ChatV2 distance grader",
            description: "Grade annotations by distance",
            graderFn: a.gradePerFrame(h),
          },
          ChatV2FreeTextGrader: {
            taskTypes: [i.TaskType.ChatExperimental, i.TaskType.ChatV2],
            title: "ChatV2 free text (levenshtein) distance grader",
            description:
              "Grade free text annotations by levenshtein distance or configurable grading method",
            graderFn: a.gradePerFrame(p),
          },
        });
      t.chatV2Graders = m;
      var y = m;
      t.default = y;
    },
    894815: function (e, t) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.ChatV2GraderType =
          t.PREFERENCE_LIKERT_FIELD_ID =
          t._PREFERENCE_LIKERT_FIELD_ID =
          t.INTERNAL_FIELD_ID_PREFIX =
            void 0);
      const n = "__internal__";
      t.INTERNAL_FIELD_ID_PREFIX = n;
      const r = "preferenceLikert";
      t._PREFERENCE_LIKERT_FIELD_ID = r;
      var i;
      (t.PREFERENCE_LIKERT_FIELD_ID = "__internal__preferenceLikert"),
        (t.ChatV2GraderType = i),
        (function (e) {
          (e.ChatV2SimpleGrader = "simpleChatLiteGrader"),
            (e.ChatV2CategoryDistanceGrader = "chatLiteDistanceGrader"),
            (e.ChatV2FreeTextGrader = "chatLiteFreeTextGrader");
        })(i || (t.ChatV2GraderType = i = {}));
    },
    244853: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.MaterialA400HexStringOrdered =
          t.MaterialA400Ordered =
          t.hslToRgb =
          t.MaterialA400HexString =
          t.MaterialA400 =
            void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(903279);
      const a = {
        red: 16717636,
        pink: 16056407,
        purple: 13959417,
        deeppurple: 6627327,
        indigo: 4020990,
        blue: 2718207,
        lightblue: 45311,
        cyan: 58879,
        teal: 1960374,
        green: 58998,
        limegreen: 7798531,
        lime: 13041408,
        yellow: 16771584,
        amber: 16761856,
        orange: 16748800,
        deeporange: 16727296,
      };
      t.MaterialA400 = a;
      const s = {
        red: "#ff1744",
        pink: "#f50057",
        purple: "#d500f9",
        deeppurple: "#651fff",
        indigo: "#3d5afe",
        blue: "#2979ff",
        lightblue: "#00b0ff",
        cyan: "#00e5ff",
        teal: "#1de9b6",
        green: "#00e676",
        limegreen: "#76ff03",
        lime: "#c6ff00",
        yellow: "#ffea00",
        amber: "#ffc400",
        orange: "#ff9100",
        deeporange: "#ff3d00",
      };
      t.MaterialA400HexString = s;
      const u = [
          "orange",
          "purple",
          "green",
          "cyan",
          "lime",
          "deeppurple",
          "yellow",
          "limegreen",
          "teal",
          "indigo",
        ],
        c = (e, t, n) => (
          n < 0 && (n += 1),
          n > 1 && (n -= 1),
          n < 1 / 6
            ? e + 6 * (t - e) * n
            : n < 0.5
            ? t
            : n < 2 / 3
            ? e + (t - e) * (2 / 3 - n) * 6
            : e
        );
      t.hslToRgb = (e, t, n) => {
        let r, i, o;
        if (0 === t) (r = 1), (i = 1), (o = n);
        else {
          const a = n < 0.5 ? n * (1 + t) : n + t - n * t,
            s = 2 * n - a;
          (r = c(s, a, e + 1 / 3)), (i = c(s, a, e)), (o = c(s, a, e - 1 / 3));
        }
        return [Math.floor(255 * r), Math.floor(255 * i), Math.floor(255 * o)];
      };
      const l = u.map((e) => a[e]);
      t.MaterialA400Ordered = l;
      const f = u.map((e) => s[e]);
      t.MaterialA400HexStringOrdered = f;
      for (const h in s) i.default.includes(u, h) || f.push(s[h]);
      const d = ["purple", "deeppurple", "indigo"].map((e) => s[e]);
      o.isFederal() && i.default.remove(f, (e) => d.includes(e));
    },
    368242: function (e, t) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.LABEL_Z_INDEX_MAP = t.LABEL_COLOR_MAP = void 0);
      t.LABEL_COLOR_MAP = {
        "road boundary": "#ff9100",
        "road boundary (polygon)": "#ff9100",
        "solid sdot": "#f8dbfc",
        "bicycle lane": "#a63bff",
        "Lane Segment": "#0033FF",
        "Delete Polygon": "#808080",
      };
      t.LABEL_Z_INDEX_MAP = { driveway: 1 };
    },
    798451: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.getBoundingBoxIoU = function (e, t) {
          const n = a(e, t);
          if (!n) return 0;
          const r = o(n),
            i = o(e),
            s = o(t);
          return r / (i + s - r);
        }),
        (t.getBoundingBoxOverlap = function (e, t) {
          const n = a(e, t);
          if (!n) return 0;
          const r = o(n),
            i = o(e),
            s = o(t);
          if (0 === i || 0 === s) return 1;
          return Math.max(r / i, r / s);
        }),
        (t.getBoundingBoxArea = o),
        (t.getBoundingBoxIntersect = a),
        (t.getBoundingBoxCenterPoint = function (e) {
          return { x: e.left + e.width / 2, y: e.top + e.height / 2 };
        }),
        (t.getBoundingBoxClosestPointToLeft = function (e, t) {
          if (e.length > 0) {
            let n = { x: e[0].left, y: e[0].top },
              r = i.distance(t, n);
            for (const o of e) {
              const e = i.distance(t, { x: o.left, y: o.top }),
                a = i.distance(t, { x: o.left, y: o.top + o.height });
              e < r && ((n = { x: o.left, y: o.top }), (r = e)),
                a < r && ((n = { x: o.left, y: o.top + o.height }), (r = a));
            }
            return n;
          }
          return { x: 0, y: 0 };
        }),
        (t.isBoundingBoxInMargin = function (e, t, n, r) {
          return [
            t.top - e.top,
            t.left - e.left,
            e.top + e.height - (t.top + t.height),
            e.left + e.width - (t.left + t.width),
          ].every((e) => e >= -n && e <= r);
        }),
        (t.mergeBoundingBoxes = function (e, t) {
          const n = Math.min(e.top, t.top),
            i = Math.min(e.left, t.left),
            o = Math.max(e.left + e.width, t.left + t.width),
            a = Math.max(e.top + e.height, t.top + t.height);
          return {
            type: r.GeometryType.BoundingBox,
            top: n,
            left: i,
            width: o - i,
            height: a - n,
          };
        }),
        (t.expandBoundingBox = function (e, t) {
          return {
            type: e.type,
            top: e.top - t,
            left: e.left - t,
            width: e.width + 2 * t,
            height: e.height + 2 * t,
          };
        }),
        (t.isBoundingBoxFullyContained = function (e, t, n) {
          return (
            e.top - n - t.top <= 0 &&
            e.left - n - t.left <= 0 &&
            e.top + e.height + n - (t.top + t.height) >= 0 &&
            e.left + e.width + n - (t.left + t.width) >= 0
          );
        }),
        (t.scaleBoundingBox = function (e, t, n) {
          const r = n.width / t.width,
            i = n.height / t.height;
          return {
            type: e.type,
            left: e.left * r,
            top: e.top * i,
            width: e.width * r,
            height: e.height * i,
          };
        }),
        (t.ocrBoxToBoundingBox = function (e, t) {
          return {
            type: r.GeometryType.BoundingBox,
            left: e.Left * t.width,
            top: e.Top * t.height,
            width: e.Width * t.width,
            height: e.Height * t.height,
          };
        }),
        (t.boundingBoxToOcrBox = function (e, t) {
          return {
            Left: e.left / t.width,
            Top: e.top / t.height,
            Width: e.width / t.width,
            Height: e.height / t.height,
          };
        });
      var r = n(116615),
        i = n(141862);
      function o(e) {
        return e.width * e.height;
      }
      function a(e, t) {
        const n = Math.max(e.left, t.left),
          i = Math.max(e.top, t.top),
          o = Math.min(e.left + e.width, t.left + t.width) - n,
          a = Math.min(e.top + e.height, t.top + t.height) - i;
        return o <= 0 || a <= 0
          ? null
          : {
              type: r.GeometryType.BoundingBox,
              top: i,
              left: n,
              width: o,
              height: a,
            };
      }
    },
    525277: function (e, t) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isLineSegmentIntersect =
          t.getPointPixels =
          t.getPointPercent =
            void 0);
      t.getPointPercent = (e, { offsetWidth: t, offsetHeight: n }) => ({
        x: e.x / t,
        y: e.y / n,
      });
      t.getPointPixels = (e, { offsetWidth: t, offsetHeight: n }) => ({
        x: e.x * t,
        y: e.y * n,
      });
      t.isLineSegmentIntersect = (e, t, r, i) =>
        n(e, r, i) !== n(t, r, i) && n(e, t, r) !== n(e, t, i);
      const n = (e, t, n) =>
        (n.y - e.y) * (t.x - e.x) > (t.y - e.y) * (n.x - e.x);
    },
    247740: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.getPolygonIoU = function (e, t) {
          const n = h(e, t);
          if (!n) return 0;
          const r = d(e, t);
          if (!r) return 0;
          const i = l(n),
            o = l(r);
          if (0 === o) return 0;
          return i / o;
        }),
        (t.getPolygonOverlap = function (e, t) {
          const n = h(e, t);
          if (!n) return 0;
          const r = l(n),
            i = l(e),
            o = l(e);
          if (0 === i || 0 === o) return 1;
          return Math.max(r / i, r / o);
        }),
        (t.getPolygonArea = l),
        (t.isPolygonClockwise = f),
        (t.resetPolygonClockwise = function (e) {
          if (f(e)) return e;
          return {
            type: e.type,
            vertices: [
              e.vertices[1],
              e.vertices[0],
              e.vertices[3],
              e.vertices[2],
            ],
          };
        }),
        (t.getPolygonUnion = d),
        (t.getPolygonIntersect = h),
        (t.getQuadrilateralCenterPoint = function (e) {
          let t = 0,
            n = 0;
          for (const r of e) (t += r.x), (n += r.y);
          return { x: t / e.length, y: n / e.length };
        }),
        (t.getPolygonClosestPointToLeft = function (e, t) {
          if (e.length > 0) {
            const n = s.default.flatten(e);
            let r = { x: n[0].x, y: n[0].y },
              i = o.distance(t, r);
            for (const e of n) {
              const n = o.distance(t, e);
              n < i && ((r = e), (i = n));
            }
            return r;
          }
          return { x: 0, y: 0 };
        }),
        (t.checkFastPolygonIntersect = function (e, t) {
          for (let n = 0; n < 4; n++)
            for (let r = 0; r < 4; r++) {
              const i = e.vertices[n],
                o = e.vertices[(n + 1) % 4],
                s = t.vertices[r],
                u = t.vertices[(r + 1) % 4];
              if (a.isLineSegmentIntersect(i, o, s, u)) return !0;
            }
          return m(e, t.vertices[0]) || m(t, e.vertices[0]);
        }),
        (t.isPolygonInMargin = function (e, t, n, r) {
          const i = Math.min(n, r);
          return [0, 1, 2, 3].every(
            (n) =>
              ((e, t) => {
                const n = e.x - t.x,
                  r = e.y - t.y;
                return Math.sqrt(n * n + r * r);
              })(e.vertices[n], t.vertices[n]) <= i
          );
        }),
        (t.getLocationPolygon = function (e) {
          if (e.type === i.GeometryType.BoundingBox)
            return {
              type: i.GeometryType.Polygon,
              vertices: [
                { x: e.left, y: e.top },
                { x: e.left + e.width, y: e.top },
                { x: e.left + e.width, y: e.top + e.height },
                { x: e.left, y: e.top + e.height },
              ],
            };
          if (e.type === i.GeometryType.Polygon) return e;
          u.assertNever(e);
        }),
        (t.ocrPolygonToPolygon = function (e, t) {
          return {
            type: i.GeometryType.Polygon,
            vertices: (e ?? []).map((e) => ({
              x: e.X * t.width,
              y: e.Y * t.height,
            })),
          };
        }),
        (t.scalePolygon = function (e, t, n) {
          return {
            ...e,
            vertices: e.vertices.map((e) => ({
              x: (e.x / t.width) * n.width,
              y: (e.y / t.height) * n.height,
            })),
          };
        }),
        (t.isPointInTriangle = t.isPointInQuadrilateral = void 0);
      var r = c(n(373291)),
        i = n(116615),
        o = n(141862),
        a = n(525277),
        s = c(n(298784)),
        u = n(810755);
      function c(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function l(e) {
        let t = 0,
          n = e.vertices.length - 1;
        for (let r = 0; r < e.vertices.length; r++) {
          const { x: i, y: o } = e.vertices[r],
            { x: a, y: s } = e.vertices[n];
          (t += (a + i) * (s - o)), (n = r);
        }
        return Math.abs(t) / 2;
      }
      function f(e) {
        let t = 0,
          n = e.vertices.length - 1;
        for (let r = 0; r < e.vertices.length; r++) {
          const { x: i, y: o } = e.vertices[r],
            { x: a, y: s } = e.vertices[n];
          (t += (a - i) * (s + o)), (n = r);
        }
        return t > 0;
      }
      function d(e, t) {
        const n = r.default.union(p(e), p(t));
        return 1 !== n.regions.length ? null : g(n);
      }
      function h(e, t) {
        const n = r.default.intersect(p(e), p(t));
        return 1 !== n.regions.length ? null : g(n);
      }
      function p(e) {
        return {
          regions: [
            e.vertices.map((e) => [
              s.default.round(e.x, 5),
              s.default.round(e.y, 5),
            ]),
          ],
          inverted: !1,
        };
      }
      function g(e) {
        return {
          type: i.GeometryType.Polygon,
          vertices: e.regions[0].map((e) => ({ x: e[0], y: e[1] })),
        };
      }
      const m = (e, t) =>
        y(e.vertices[0], e.vertices[1], e.vertices[2], t) ||
        y(e.vertices[2], e.vertices[3], e.vertices[0], t);
      t.isPointInQuadrilateral = m;
      const y = (e, t, n, r) => {
        const i = r.x - e.x,
          o = r.y - e.y,
          a = (t.x - e.x) * o - (t.y - e.y) * i > 0;
        return (
          (n.x - e.x) * o - (n.y - e.y) * i > 0 !== a &&
          (n.x - t.x) * (r.y - t.y) - (n.y - t.y) * (r.x - t.x) > 0 === a
        );
      };
      t.isPointInTriangle = y;
    },
    43356: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.getDims = void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(308408);
      const a = (e) => {
          const t = {},
            { vertices: n } = e;
          if (!n || 0 === n.length) return null;
          const r = n.reduce(
            (e, t) => ({
              minX: Math.min(e.minX, t.x),
              maxX: Math.max(e.maxX, t.x),
              minY: Math.min(e.minY, t.y),
              maxY: Math.max(e.maxY, t.y),
            }),
            { minX: n[0].x, maxX: n[0].x, minY: n[0].y, maxY: n[0].y }
          );
          return (
            (t.x = ((r.minX + r.maxX) / 2).toFixed(0)),
            (t.y = ((r.minY + r.maxY) / 2).toFixed(0)),
            (t.w = (r.maxX - r.minX).toFixed(0)),
            (t.h = (r.maxY - r.minY).toFixed(0)),
            t
          );
        },
        s = {
          [o.AnnotationGeometry.Point]: (e) => {
            const t = {},
              { x: n, y: r } = e;
            return i.default.isNil(n) || i.default.isNil(r)
              ? null
              : ((t.x = n.toFixed(0)), (t.y = r.toFixed(0)), t);
          },
          [o.AnnotationGeometry.Line]: (e) => {
            const t = a(e),
              { vertices: n } = e;
            return n && 0 !== n.length
              ? ((t.l = n
                  .slice(1)
                  .reduce(
                    (e, t) => ({
                      dist:
                        e.dist +
                        Math.sqrt((e.prevX - t.x) ** 2 + (e.prevY - t.y) ** 2),
                      prevX: t.x,
                      prevY: t.y,
                    }),
                    { dist: 0, prevX: n[0].x, prevY: n[0].y }
                  )
                  .dist.toFixed(0)),
                t)
              : null;
          },
          [o.AnnotationGeometry.Box]: (e) => {
            const t = {},
              { x: n, y: r, width: o, height: a } = e;
            return i.default.isNil(n) ||
              i.default.isNil(r) ||
              i.default.isNil(o) ||
              i.default.isNil(a)
              ? null
              : ((t.x = (n + o / 2).toFixed(0)),
                (t.y = (r + a / 2).toFixed(0)),
                (t.w = o.toFixed(0)),
                (t.h = a.toFixed(0)),
                t);
          },
          [o.AnnotationGeometry.Ellipse]: (e) => {
            const t = {},
              { center: n, width: r, height: o } = e;
            return !n || i.default.isNil(r) || i.default.isNil(o)
              ? null
              : ((t.w = r.toFixed(0)),
                (t.h = o.toFixed(0)),
                (t.x = n[0].toFixed(0)),
                (t.y = n[1].toFixed(0)),
                t);
          },
          [o.AnnotationGeometry.ExtremalPoints]: a,
          [o.AnnotationGeometry.Cuboid]: (e) => {
            const t = {},
              { face: n } = e;
            return n
              ? ((t.w = (n.x2 - n.x1).toFixed(0)),
                (t.h = (n.y2 - n.y1).toFixed(0)),
                (t.x = ((n.x1 + n.x2) / 2).toFixed(0)),
                (t.y = ((n.y1 + n.y2) / 2).toFixed(0)),
                t)
              : null;
          },
          [o.AnnotationGeometry.Polygon]: a,
        };
      t.getDims = s;
    },
    60271: function (e, t) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.orderedPointArraysEqual =
          t.getRotatedVertices =
          t.resizeRotatedBox =
            void 0);
      const n = (e) => [Math.cos(e), 1 * Math.sin(e)],
        r = (e) => [-1 * Math.sin(e), Math.cos(e)];
      t.resizeRotatedBox = ({
        width: e,
        height: t,
        center: i,
        rotation: o,
        diff: a,
        sign: s,
      }) => {
        const u = a[0] * n(o)[0] + a[1] * n(o)[1],
          c = Math.abs(e + s[0] * u),
          l = a[0] * r(o)[0] + a[1] * r(o)[1],
          f = Math.abs(t + s[1] * l);
        let d, h;
        0 === s[0]
          ? ((d = ((s[1] * (f - t)) / 2) * Math.sin(-o)),
            (h = ((s[1] * (f - t)) / 2) * Math.cos(-o)))
          : 0 === s[1]
          ? ((d = ((s[0] * (c - e)) / 2) * Math.cos(o)),
            (h = ((s[0] * (c - e)) / 2) * Math.sin(o)))
          : ((d = a[0] / 2), (h = a[1] / 2));
        return { center: { x: i.x + d, y: i.y + h }, width: c, height: f };
      };
      t.getRotatedVertices = ({
        width: e,
        height: t,
        center: n,
        rotation: r,
        returnMidpoints: i,
      }) => {
        let o;
        o = i
          ? [
              { x: 0, y: (-1 * t) / 2 },
              { x: e / 2, y: 0 },
              { x: 0, y: t / 2 },
              { x: (-1 * e) / 2, y: 0 },
            ]
          : [
              { x: (-1 * e) / 2, y: (-1 * t) / 2 },
              { x: e / 2, y: (-1 * t) / 2 },
              { x: e / 2, y: t / 2 },
              { x: (-1 * e) / 2, y: t / 2 },
            ];
        const a = r,
          s = [Math.cos(a), -1 * Math.sin(a)],
          u = [1 * Math.sin(a), Math.cos(a)];
        return o.map((e) => {
          const t = s[0] * e.x + s[1] * e.y,
            r = u[0] * e.x + u[1] * e.y;
          return { x: t + n.x, y: r + n.y };
        });
      };
      t.orderedPointArraysEqual = (e, t) => {
        if (e.length !== t.length) return !1;
        for (let n = 0; n < e.length; n++) {
          const r = e[n],
            i = t[n];
          if (
            Math.round(r.x) !== Math.round(i.x) ||
            Math.round(r.y) !== Math.round(i.y)
          )
            return !1;
        }
        return !0;
      };
    },
    950382: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.shiftAnnotation = function (e, t, n) {
          if (e.type === i.AnnotationGeometry.Point) {
            const r = e;
            return { ...r, x: r.x + t, y: r.y + n };
          }
          {
            const r = e.vertices.map((e) => ({ ...e, x: e.x + t, y: e.y + n }));
            return { ...e, vertices: r };
          }
        }),
        (t.freezeAllSeamVertices = f),
        (t.removeAllSeams = function (e) {
          return e.map((e) =>
            e.type === i.AnnotationGeometry.Line ||
            e.type === i.AnnotationGeometry.Polygon
              ? {
                  ...e,
                  vertices: e.vertices.map((e) => s.default.omit(e, "seamId")),
                }
              : e
          );
        }),
        (t.unfreezeAnnotation = d),
        (t.lockLabelAndAttributesAnnotation = h),
        (t.unlockLabelAndAttributesAnnotation = p),
        (t.onlyLockLabelAndAttributesCuboidAnnotationsBasedOnLabel = function (
          e
        ) {
          const t = a.BEE_LABELS_KEEP_LOCKED;
          return e.map((e) => (t.includes(e.label ?? "") ? h(e) : p(e)));
        }),
        (t.lockLabelAndAttributesAnnotations = function (e) {
          return e.map(h);
        }),
        (t.unlockLabelAndAttributesAnnotations = function (e) {
          return e.map(p);
        }),
        (t.transformDerivedToPolygonAnnotations = function (e) {
          return e.map(g);
        }),
        (t.transformDerivedToPolygonAnnotation = g),
        (t.unfreezeAnnotationsInsideAR = function (e) {
          return e.map((e) => {
            const t = e.metadata,
              n = a.BEE_LABELS_KEEP_LOCKED;
            return t?.isOutsideAR || n.includes(e.label ?? "") ? m(e) : f(d(e));
          });
        }),
        (t.freezeFrontendPathAnnotation = function (e) {
          return {
            ...e,
            vertices: e.vertices.map((t, n) => ({
              ...t,
              anchored: !0,
              ...(n < e.vertices.length - 1 ||
              e.type === i.AnnotationGeometry.Polygon
                ? { anchoredSegment: !0 }
                : {}),
            })),
          };
        }),
        (t.freezeAnnotation = m),
        (t.freezeAnnotations = function (e) {
          return e.map(m);
        }),
        (t.mapBeeInsideAnnotationsAsDeletable = function (e) {
          return e.map((e) =>
            b(e) && !a.BEE_LABELS_KEEP_LOCKED.includes(e.label ?? "")
              ? { ...e, metadata: { ...e.metadata, isUndeletable: !1 } }
              : e
          );
        }),
        (t.isClockwiseOrder = function (e) {
          if (e.length < 2)
            throw Error(
              "The input edge contains less than 2 vertices; directionality cannot be determined"
            );
          let t = e;
          l(e[0], e[e.length - 1], 0) || (t = [...t, e[0]]);
          return c(t) < 0;
        }),
        (t.chooseInsideAnnotationFilter = function (e) {
          const t = e.base_annotations?.options?.remove_bordering_annotations;
          return t ? v : b;
        }),
        (t.isInsideAnnotationOrHasSeamId = b),
        (t.isAnnotationStrictlyOutside = function (e) {
          const t = e.vertices?.some((e) => !!e.seamId);
          return y(e) && !t;
        }),
        (t.isAnnotationStrictlyInside = v),
        (t.isPreviousDerivedAnnotation =
          t.isAnnotationOutsideAr =
          t.isSameSegment =
          t.samePoint =
          t.signedArea =
          t.DEFAULT_EPSILON =
            void 0);
      var r,
        i = n(308408),
        o = n(492027),
        a = n(281652),
        s = (r = n(298784)) && r.__esModule ? r : { default: r };
      const u = 1e-4;
      t.DEFAULT_EPSILON = u;
      const c = (e) => {
        let t = 0;
        for (let n = 0, r = 1; n < e.length; n++, r++)
          (r %= e.length), (t += e[n].x * e[r].y - e[r].x * e[n].y);
        return t;
      };
      t.signedArea = c;
      const l = (e, t, n) => {
        const r = n ?? u;
        return (
          Math.abs(e.x - t.x) +
            Math.abs(e.y - t.y) +
            Math.abs((e.worldZ ?? 0) - (t.worldZ ?? 0)) <=
          r / 2
        );
      };
      t.samePoint = l;
      function f(e) {
        return e.type === i.AnnotationGeometry.Point
          ? e
          : e.type === i.AnnotationGeometry.Line
          ? {
              ...e,
              vertices: e.vertices.map((e) => ({ ...e, anchored: !!e.seamId })),
            }
          : e.type === i.AnnotationGeometry.Polygon
          ? {
              ...e,
              vertices: s.default.map(e.vertices, (e, t, n) => {
                const r = n[0 === t ? n.length - 1 : t - 1];
                return {
                  ...e,
                  anchored: !!e.seamId || !!r.seamId,
                  anchoredSegment: !!e.seamId,
                };
              }),
            }
          : e;
      }
      function d(e) {
        return e.type === i.AnnotationGeometry.Point
          ? e
          : {
              ...e,
              vertices: e.vertices.map((t, n) => ({
                ...t,
                anchored: !1,
                ...(n < e.vertices.length - 1 ? { anchoredSegment: !1 } : {}),
              })),
            };
      }
      function h(e) {
        const t = { ...e.metadata, lockLabelAndAttributes: !0 };
        return { ...e, metadata: t };
      }
      function p(e) {
        const t = { ...e.metadata, lockLabelAndAttributes: !1 };
        return { ...e, metadata: t };
      }
      function g(e) {
        const t = { ...e.metadata };
        if ((delete t.derivedMetadata, e.type === i.AnnotationGeometry.Point))
          return { ...e, metadata: t };
        const n = e.vertices.map((e) => {
          const t = { ...e };
          return delete t.layer1VertexId, delete t.layer2VertexId, t;
        });
        return { ...e, vertices: n, metadata: t };
      }
      function m(e) {
        return e.type === i.AnnotationGeometry.Point
          ? ((e.anchored = !0), e)
          : {
              ...e,
              vertices: e.vertices.map((t, n) => ({
                ...t,
                anchored: !0,
                ...(n < e.vertices.length - 1 ||
                e.type === i.AnnotationGeometry.Polygon
                  ? { anchoredSegment: !0 }
                  : {}),
              })),
            };
      }
      t.isSameSegment = (e, t, n) => {
        if (e.length !== t.length) return !1;
        const r = s.default.range(e.length).every((r) => {
            const i = e[r],
              o = t[r];
            return l(i, o, n);
          }),
          i = s.default.range(e.length).every((r) => {
            const i = e[r],
              o = t[t.length - 1 - r];
            return l(i, o, n);
          });
        return r || i;
      };
      const y = (e) => e.metadata && e.metadata.isOutsideAR;
      function b(e) {
        const t = e.vertices?.some((e) => !!e.seamId);
        return !y(e) || t || o.isDerivedAnnotation(e);
      }
      function v(e) {
        return !y(e) || o.isDerivedAnnotation(e);
      }
      t.isAnnotationOutsideAr = y;
      t.isPreviousDerivedAnnotation = (e) =>
        !!e.metadata?.previousDerivedMetadata;
    },
    281652: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.BEE_LABELS_KEEP_LOCKED = t.BEE_CUBOID_LABELS = void 0);
      var r = n(143986);
      const i = [
        "Road Sign",
        "Traffic Light",
        "Pedestrian Crossing Light",
        "Bicycle Crossing Light",
        "Highway Metering Light",
        "Railroad Crossing Light",
        "Lane Control Signal",
        "Uncommon Traffic Light",
        "Traffic Light Can't Tell",
        "Pedestrian Hybrid Beacon",
        "Emergency Vehicle Hybrid Beacon",
        "Traffic Light Ignore",
        "Roadway Gate",
        "Gate",
        "Delete Cuboid",
      ];
      t.BEE_CUBOID_LABELS = i;
      const o = i.concat([r.ANNOTATABLE_REGION, r.NO_DATA_ZONE]);
      t.BEE_LABELS_KEEP_LOCKED = o;
    },
    297393: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.getPointIntersections = function (e) {
          if (!e)
            throw new Error(
              "Computing point intersections with undefined context"
            );
          e.pointIntersections || (e.pointIntersections = s(e));
          return e.pointIntersections;
        }),
        (t.getPointIntersectionsWeighted = async function (e) {
          if (!e)
            throw new Error(
              "Computing point intersections with undefined context"
            );
          e.distanceWeightedPointIntersections ||
            (e.distanceWeightedPointIntersections = await s(e, !0));
          return e.distanceWeightedPointIntersections;
        });
      var r = a(n(298784)),
        i = n(168212),
        o = a(n(138385));
      function a(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e, t) {
        const n = new Map(),
          a = Array.from(e.clusteredSegmentations.keys()).sort(),
          s = [[a[0], a[1]]];
        a[2] && s.push([a[0], a[2]], [a[1], a[2]]);
        const u = e.isSceneFlattened
          ? 1
          : e.clusteredSegmentations.get(a[0]).length;
        function c(t, r) {
          for (const [o, a] of s) {
            const s = e.clusteredSegmentations.get(o)[t],
              u = e.clusteredSegmentations.get(a)[t];
            i.buildLSSCounts({
              startSource: o,
              endSource: a,
              startLabels: s,
              endLabels: u,
              frame: t,
              intersectionMap: n,
              pointWeights: r,
            });
          }
        }
        if (t) {
          const t = (function (e) {
            if (!e.devicePositions)
              throw new Error("No device positions in context");
            const t = r.default
              .sortBy(r.default.entries(e.devicePositions), ([e]) =>
                r.default.toNumber(e)
              )
              .map(([, e]) => e);
            if (!t.length) return;
            const n = e.weightingByDistance;
            if (r.default.isEmpty(n)) return;
            const i = new Map(
                r.default.map(n, (e, t) => [r.default.toNumber(t) ** 2, e])
              ),
              a = r.default.sortBy(Array.from(i.keys())),
              s = o.default.fromAxes([
                t.map((e) => e.x),
                t.map((e) => e.y),
                t.map((e) => e.z),
              ]);
            return async (e) => {
              const n = [],
                o = i.get(r.default.last(a));
              for (let r = 0; r < e.length; r += 3) {
                r % 1e4 === 0 && (await new Promise(setImmediate));
                const u = e.slice(r, r + 3),
                  c = t[s.nearestNeighbor(u)],
                  l = (c.x - u[0]) ** 2 + (c.y - u[1]) ** 2 + (c.z - u[2]) ** 2;
                let f = o;
                for (const e of a)
                  if (e > l) {
                    f = i.get(e);
                    break;
                  }
                n.push(f);
              }
              return n;
            };
          })(e);
          return (async () => {
            for (let n = 0; n < u; n++) c(n, await t?.(e.pointData[n]));
            return n;
          })();
        }
        for (let r = 0; r < u; r++) c(r);
        return n;
      }
    },
    205308: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default = void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(599789),
        a = n(991984),
        s = n(440169);
      const u = (e, t, n) => {
          let r;
          const i = n?.attributeTypes?.[e];
          switch (i) {
            case o.AnnotationAttributeType.Angle:
              r = l;
              break;
            case o.AnnotationAttributeType.XLine:
              r = f;
              break;
            case o.AnnotationAttributeType.YLine:
              r = d;
              break;
            default:
              r = c;
          }
          return (n, i) => r(e, n, i, t);
        },
        c = (e, t, n, r) => {
          const o = t?.attributes?.[e],
            a = n?.attributes?.[e];
          return (r.ltdPerFrameKeys ?? []).includes(e)
            ? {
                correctWork:
                  Array.isArray(o) &&
                  Array.isArray(a) &&
                  o.length === a.length &&
                  a.length > 0
                    ? a.filter((e, t) => e === o[t]).length / a.length
                    : 0,
                totalWork: 1,
                intermediates: { attrKey: e, correct: a, original: o },
              }
            : (Array.isArray(o) && Array.isArray(a) && (o.sort(), a.sort()),
              {
                correctWork: +i.default.isEqual(o, a),
                totalWork: 1,
                intermediates: { attrKey: e, correct: a, original: o },
              });
        },
        l = (e, t, n, r) => {
          const i = +(t?.attributes?.[e] || 0),
            o = +(n?.attributes?.[e] || 0),
            a = r.angleDiffThresholdDegrees || 45,
            s = Math.min(Math.abs(i - o), Math.abs(i - o - 360));
          return {
            correctWork: s < a ? 1 : 0,
            totalWork: 1,
            intermediates: { angleDiff: s },
          };
        },
        f = (e, t, n, r) => {
          let i,
            o,
            a = 0;
          const u = +(t?.attributes?.[e] || 0),
            c = +(n?.attributes?.[e] || 0);
          if (t.width) (a = n.width), (i = t.left + u), (o = n.left + c);
          else {
            if (!t.edges)
              throw new Error(
                `Annotation with type ${
                  t?.type || t?.geometry
                } does not support the yline attribute.`
              );
            {
              const e = s.getCuboidFrontFaceAsBox(s.formatCuboidAnnotation(t)),
                r = s.getCuboidFrontFaceAsBox(s.formatCuboidAnnotation(n));
              (a = r.width), (i = e.left + u), (o = r.left + c);
            }
          }
          const l = r.xlineDiffThresholdFraction || 0.1,
            f = Math.abs(i - o);
          return {
            correctWork: f < a * l ? 1 : 0,
            totalWork: 1,
            intermediates: { xlineDiff: f },
          };
        },
        d = (e, t, n, r) => {
          let i,
            o,
            a = 0;
          const u = +(t?.attributes?.[e] || 0),
            c = +(n?.attributes?.[e] || 0);
          if (t.height) (a = n.height), (i = t.top + u), (o = n.top + c);
          else {
            if (!t.edges)
              throw new Error(
                `Annotation with type ${
                  t?.type || t?.geometry
                } does not support the yline attribute.`
              );
            {
              const e = s.getCuboidFrontFaceAsBox(s.formatCuboidAnnotation(t)),
                r = s.getCuboidFrontFaceAsBox(s.formatCuboidAnnotation(n));
              (a = r.height), (i = e.top + u), (o = r.top + c);
            }
          }
          const l = r.ylineDiffThresholdFraction || 0.1,
            f = Math.abs(i - o);
          return {
            correctWork: f < a * l ? 1 : 0,
            totalWork: 1,
            intermediates: { ylineDiff: f },
          };
        },
        h = (e) => (t, n) => {
          const r = t?.attributes?.[e] ?? "",
            i = n?.attributes?.[e] ?? "";
          return a.gradeFreeText(r, i);
        };
      var p = (e, t, n, r, o, s) => {
        o || (o = {});
        const c = s,
          l = o.textAttributeKeys || c.textAttributeKeys || [],
          f = t?.frames?.[e],
          d = n?.frames?.[e],
          p = i.default.keys(d?.attributes || f?.attributes),
          g =
            i.default.isArray(o.enabledAttributeKeys) &&
            !i.default.isEmpty(o.enabledAttributeKeys)
              ? o.enabledAttributeKeys
              : void 0,
          m = {};
        return (
          i.default.forEach(p, (e) => {
            if ("scenarioParams" === e) return;
            if (g && !g.includes(e)) return;
            const t = l.includes(e) ? h(e) : u(e, o, c);
            m[`attributes_${e}`] = a.gradeIfNotMissing(t, f, d);
          }),
          m
        );
      };
      t.default = p;
    },
    51514: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.beeMappingAttributeGrader =
          t.defaultAttributeGraderFn =
          t.attributeGrader =
            void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(599789),
        a = n(991984),
        s = n(691289);
      const u = (e, t, n, r, u, l) => {
        u || (u = {});
        const f = t?.frames?.[e],
          d = n?.frames?.[e],
          h = i.default.keys(d?.attributes || f?.attributes),
          p = i.default.filter(
            h,
            (e) =>
              l?.attributeTypes?.[e] !== o.AnnotationAttributeType.Linked &&
              !s.BANNED_ATTRIBUTE_TYPES.includes(e) &&
              !s.toLinkingAttributeKeyBase(e)
          ),
          g = {};
        return (
          i.default.forEach(p, (e) => {
            const t = c(e, u);
            g[`attribute_${e}`] = a.gradeIfNotMissing(t, f, d);
          }),
          g
        );
      };
      t.attributeGrader = u;
      const c = (e, t) => (n, r) => l(e, n, r, t),
        l = (e, t, n) => {
          let r = t?.attributes?.[e],
            o = n?.attributes?.[e];
          return (
            Array.isArray(r) &&
              Array.isArray(o) &&
              ((r = i.default.sortBy(r)), (o = i.default.sortBy(o))),
            { correctWork: +i.default.isEqual(r, o), totalWork: 1 }
          );
        };
      t.defaultAttributeGraderFn = l;
      const f = {
        taskTypes: o.twoDTypes,
        title: "Bee GIS Attribute Grader",
        graderFn: a.gradePerFrameWithContext(u, !1),
      };
      t.beeMappingAttributeGrader = f;
    },
    119426: function (e, t) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.INFINITY = void 0);
      t.INFINITY = 1e15;
    },
    15455: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.beeMappingLinkingGrader =
          t.calculateCorrectAndTotalWork =
          t.getLinkedAttributeToAnnotations =
          t.fromAnnotationLabelChangedLinkingGraderGenerator =
          t.toAnnotationMissingOrLabelChangedLinkingGraderGenerator =
          t.toAndFromAnnotationExistLinkingGraderGenerator =
          t.linkingGrader =
            void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(599789),
        a = n(991984),
        s = n(691289);
      const u = (e, t, n, r, u, d) => {
        const h = t?.frames?.[e],
          p = n?.frames?.[e],
          g = i.default.union(
            i.default.keys(p?.attributes),
            i.default.keys(h?.attributes)
          ),
          m = d?.matchedAnnotationsListContext,
          { attributeTypes: y, linkTypes: b } = d,
          v = b ? Object.keys(b) : [],
          _ = i.default.filter(
            g,
            (e) =>
              !!s.toLinkingAttributeKeyBase(e, v) ||
              y?.[e] === o.AnnotationAttributeType.Linked
          ),
          x = i.default.compact(
            i.default.map(_, (e) => s.toLinkingAttributeKeyBase(e, v))
          ),
          T = [...new Set(x)],
          M = {};
        return (
          T.forEach((e) => {
            const t = c(e, m),
              n = l(e, m),
              r = f(e, m);
            (M[`linking_${e}`] = a.gradeIfNotMissing(t, h, p)),
              (M[`linking_${e}_UNMATCHED_TO_ANN`] = a.gradeIfNotMissing(
                n,
                h,
                p
              )),
              (M[`linking_${e}_FROM_LABELS_DIFFERENT`] = a.gradeIfNotMissing(
                r,
                h,
                p
              ));
          }),
          M
        );
      };
      t.linkingGrader = u;
      const c = (e, t) => (n, r) => {
        const i = n?.label,
          o = r?.label;
        if (i !== o) return { correctWork: 0, totalWork: 0 };
        const { originalToAnnotations: a, correctToAnnotations: s } = d(
            e,
            n,
            r,
            t
          ),
          u = a.filter(
            (e) =>
              e?.correctAnnotation &&
              e?.correctAnnotation?.props.label ===
                e?.currentAnnotation?.props.label
          ),
          c = s.filter(
            (e) =>
              e?.correctAnnotation &&
              e?.correctAnnotation?.props.label ===
                e?.currentAnnotation?.props.label
          ),
          { correctWork: l, totalWork: f, intermediates: p } = h(u, c);
        return { correctWork: l, totalWork: f, intermediates: p };
      };
      t.toAndFromAnnotationExistLinkingGraderGenerator = c;
      const l = (e, t) => (n, r) => {
        const i = n?.label,
          o = r?.label;
        if (i !== o) return { correctWork: 0, totalWork: 0 };
        const { originalToAnnotations: a, correctToAnnotations: s } = d(
            e,
            n,
            r,
            t
          ),
          u = a.filter(
            (e) =>
              !e?.correctAnnotation ||
              e.correctAnnotation?.props.label !==
                e.currentAnnotation?.props.label
          ),
          c = s.filter(
            (e) =>
              !e?.correctAnnotation ||
              e.correctAnnotation?.props.label !==
                e.currentAnnotation?.props.label
          ),
          { correctWork: l, totalWork: f } = h(u, c);
        return { correctWork: l, totalWork: f };
      };
      t.toAnnotationMissingOrLabelChangedLinkingGraderGenerator = l;
      const f = (e, t) => (n, r) => {
        const i = n?.label,
          o = r?.label;
        if (i === o) return { correctWork: 0, totalWork: 0 };
        const { originalToAnnotations: a, correctToAnnotations: s } = d(
            e,
            n,
            r,
            t
          ),
          { totalWork: u } = h(a, s);
        return { correctWork: 0, totalWork: u };
      };
      t.fromAnnotationLabelChangedLinkingGraderGenerator = f;
      const d = (e, t, n, r) => {
        const o = t?.attributes,
          a = n?.attributes,
          s = Object.values(i.default.pickBy(o, (t, n) => n.includes(e))),
          u = Object.values(i.default.pickBy(a, (t, n) => n.includes(e)));
        return {
          originalToAnnotations: s.map((e) =>
            r?.find((t) => t.correctAnnotation?.props?.id === e)
          ),
          correctToAnnotations: u.map((e) =>
            r?.find((t) => t.correctAnnotation?.props?.id === e)
          ),
        };
      };
      t.getLinkedAttributeToAnnotations = d;
      const h = (e, t) => {
        const n = e.map((e) => e?.correctAnnotation?.props?.id),
          r = t.map((e) => e?.correctAnnotation?.props?.id);
        return {
          correctWork: i.default.intersectionBy(n, r).length,
          totalWork: Math.max(e.length, t.length),
          intermediates: {
            extraneous: i.default.difference(n, r),
            missing: i.default.difference(r, n),
          },
        };
      };
      t.calculateCorrectAndTotalWork = h;
      const p = {
        taskTypes: o.twoDTypes,
        title: "Bee GIS Linking Grader",
        graderFn: a.gradePerFrameWithContext(u, !1, !1, !1),
      };
      t.beeMappingLinkingGrader = p;
    },
    171665: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.beeMappingLinterDismissalGrader =
          t.beeMappingLinterDismissalGraderFn =
            void 0);
      var r = n(599789),
        i = n(971599),
        o = n(991984);
      const a = (e) =>
          e?.lintDismissal.dismissalType === i.LintDismissalType.Rejected,
        s = (e, t) => ({
          beeMappingLinterDismissal: o.ignoreIfMissing(
            (e, t) => {
              const n = [];
              e.metadata?.lintMetadata?.lintDismissals.forEach((e) => {
                const r = t.metadata?.lintMetadata?.lintDismissals.find(
                  (t) => t.lintErrorId === e.lintErrorId
                );
                n.push({ actual: e, expected: r });
              }),
                t.metadata?.lintMetadata?.lintDismissals.forEach((e) => {
                  n.find((t) => t.expected?.lintErrorId === e.lintErrorId) ||
                    n.push({ actual: void 0, expected: e });
                });
              return {
                correctWork: n.filter((e) => a(e.actual) === a(e.expected))
                  .length,
                totalWork: n.length,
              };
            },
            e,
            t
          ),
        });
      t.beeMappingLinterDismissalGraderFn = s;
      const u = {
        taskTypes: r.twoDTypes,
        title: "Bee GIS Linter Dismissal Grader",
        graderFn: o.gradePerFrame(s),
      };
      t.beeMappingLinterDismissalGrader = u;
    },
    60738: function (e, t) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.defaultBeeMappingParams = void 0);
      t.defaultBeeMappingParams = {
        splitTolerance: 0.1,
        segmentLinkTolerance: 0.001,
        crossSubdivisionThreshold: 5,
        segmentLinkCandidateFcdThreshold: 5,
        maximumSplitSegmentLength: 10.3,
      };
    },
    438292: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.makeGlobalBeeMappingGraderFn = d),
        (t.makeGlobalBeeMappingMatcherFn = g),
        (t.globalGrader = void 0);
      var r,
        i = n(167469),
        o = (r = n(298784)) && r.__esModule ? r : { default: r },
        a = n(45834),
        s = n(972281),
        u = n(114861),
        c = n(691289),
        l = n(991984),
        f = n(60738);
      function d(e) {
        return l.globalGradePerFrame(async (t, n) => {
          const r = (
              await a.mapLimit(
                c.ALL_LABELS,
                async (r) => {
                  const i = t.filter((e) => e.label === r),
                    o = n.filter((e) => e.label === r),
                    { subdividedSegmentsA: a, subdividedSegmentsB: c } =
                      await s.computeCrossDivision(i, o, e);
                  return s
                    .getSegmentMatches(a, c, e)
                    .map((e) => u.scoreSegmentMatch(e, r));
                },
                1
              )
            ).flat(),
            i = o.default.flatMap(c.ALL_LABELS, (e) =>
              c.ALL_ERROR_TYPES.map((t) => {
                const n = r.filter((t) => t.label === e);
                return u.transformScoresToGlobalScore(n, t, {
                  label: e,
                  graderType: "beeMapppingGlobal",
                  key: `${e}::${t}`,
                });
              })
            );
          return o.default.fromPairs(i.map((e) => [e.key, e]));
        });
      }
      const h = (e) => {
          const t = {
              type: "polyline-fragments",
              currentId: e.currentId,
              correctId: e.correctId,
              props: { label: e.label },
              rawScoredSegmentMatches: e.scoredSegmentMatches,
            },
            n =
              e.currentAnn && e.correctAnn
                ? "Precision"
                : e.currentAnn
                ? "FalsePositive"
                : "FalseNegative",
            r = o.default.map(e.scoredSegmentMatches, "score"),
            i = u.transformScoresToGlobalScore(r, n, {
              graderType: "beeMapppingGlobal",
              label: e.label,
              key: n,
            });
          return {
            metadata: t,
            currentAnnotation: e.currentAnn,
            correctAnnotation: e.correctAnn,
            scores: [i],
            numFalseNegativeFrames: 0,
            numFalsePositiveFrames: 0,
            numIncorrectTruePositiveFrames: 0,
            numTotalTruePositiveFrames: 0,
          };
        },
        p = (e, t) => (e ? `${t}-${e.uuid}` : `${t}-none`);
      function g(e) {
        return async (t, n) => {
          const r = new Map([...t, ...n].map((e) => [e.frames[0], e]));
          r.set(void 0, void 0);
          const i = t.map((e) => e.frames[0]),
            l = n.map((e) => e.frames[0]),
            f = (
              await a.mapLimit(
                c.ALL_LABELS,
                async (t) => {
                  const n = i.filter((e) => e.label === t),
                    a = l.filter((e) => e.label === t),
                    {
                      subdividedSegmentsA: c,
                      subdividedSegmentsB: f,
                      segmentToAnnotationMap: d,
                    } = await s.computeCrossDivision(n, a, e),
                    h = s
                      .getSegmentMatches(c, f, e)
                      .map((e) => ({
                        score: u.scoreSegmentMatch(e, t),
                        segmentMatch: e,
                      })),
                    g = new Map([
                      ...n.map((e) => [p(e, "a"), e]),
                      ["a-none", void 0],
                      ...a.map((e) => [p(e, "b"), e]),
                      ["b-none", void 0],
                    ]),
                    m = o.default.groupBy(h, ({ segmentMatch: e }) => {
                      const n = e.currentSegment
                          ? d.get(e.currentSegment)
                          : void 0,
                        r = e.correctSegment ? d.get(e.correctSegment) : void 0;
                      return JSON.stringify({
                        currentId: p(n, "a"),
                        correctId: p(r, "b"),
                        label: t,
                      });
                    });
                  return o.default.map(m, (e, t) => {
                    const {
                      currentId: n,
                      correctId: i,
                      label: o,
                    } = JSON.parse(t);
                    return {
                      currentId: n,
                      correctId: i,
                      currentAnn: r.get(g.get(n)),
                      correctAnn: r.get(g.get(i)),
                      label: o,
                      scoredSegmentMatches: e,
                    };
                  });
                },
                1
              )
            ).flat();
          return a.mapLimit(f, h, 1);
        };
      }
      const m = {
        taskTypes: [i.TaskType.LineAnnotation],
        title: "(Bee GIS Global) Per-class bag-of-segments Line Grader",
        graderFn: d(f.defaultBeeMappingParams),
        matcherFn: g(f.defaultBeeMappingParams),
        global: !0,
      };
      t.globalGrader = m;
    },
    487714: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        Object.defineProperty(t, "beeMappingGlobal", {
          enumerable: !0,
          get: function () {
            return r.globalGrader;
          },
        }),
        Object.defineProperty(t, "beeMappingLinkingGrader", {
          enumerable: !0,
          get: function () {
            return i.beeMappingLinkingGrader;
          },
        }),
        Object.defineProperty(t, "beeMappingAttributeGrader", {
          enumerable: !0,
          get: function () {
            return o.beeMappingAttributeGrader;
          },
        }),
        Object.defineProperty(t, "beeMappingLinterDismissalGrader", {
          enumerable: !0,
          get: function () {
            return a.beeMappingLinterDismissalGrader;
          },
        });
      var r = n(438292),
        i = n(15455),
        o = n(51514),
        a = n(171665);
    },
    972281: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.computeCrossDivision = t.getSegmentMatches = void 0);
      var r = n(45834),
        i = c(n(298784)),
        o = c(n(289624)),
        a = n(119426),
        s = c(n(540742)),
        u = n(490503);
      function c(e) {
        return e && e.__esModule ? e : { default: e };
      }
      const l = ([{ x: e, y: t }, { x: n, y: r }], i) => ({
        x: (1 - i) * e + i * n,
        y: (1 - i) * t + i * r,
      });
      function f(e, t) {
        const n = [];
        for (let r = 0; r < e.length - 1; r++) {
          const i = [e[r], e[r + 1]],
            o = u.computeSegmentLength(i),
            a = Math.ceil(o / t);
          let s = i[0];
          for (let e = 0; e < a; e++) {
            const t = l(i, (e + 1) / a);
            n.push([s, t]), (s = t);
          }
        }
        return n;
      }
      const d = (e, t, n) => {
        function r(e) {
          const t = i.default.min(e.map((e) => e.x)),
            n = i.default.min(e.map((e) => e.y)),
            r = i.default.max(e.map((e) => e.x)),
            o = i.default.max(e.map((e) => e.y));
          return i.default.flatMap(
            i.default.range(Math.floor(t / 32), Math.floor(r / 32) + 1),
            (e) =>
              i.default
                .range(Math.floor(n / 32), Math.floor(o / 32) + 1)
                .map((t) => 640 * e + t)
          );
        }
        function o(e) {
          return i.default
            .range(3)
            .flatMap((t) =>
              i.default.range(3).map((n) => e + 640 * (t - 1) + (n - 1))
            );
        }
        const a = e.map(r),
          c = t.map(r),
          l = new Map();
        a.forEach((e, t) => {
          e.forEach((e) => {
            l.has(e) || l.set(e, new Set()), l.get(e).add(t);
          });
        });
        const f = i.default.size(e),
          d = i.default.size(t),
          h = [];
        c.forEach((r, a) => {
          const s = new Set();
          i.default.flatMap(r, o).forEach((e) => {
            if (l.has(e)) for (const t of l.get(e)) s.add(t);
          });
          for (const i of s)
            u.computeFCD(e[i], t[a]) <=
              n.segmentLinkCandidateFcdThreshold + n.segmentLinkTolerance &&
              h.push([i, f + a]);
        });
        const p = ((e, t) => {
          const n = new s.default(e);
          for (const [r, i] of t) n.union(r, i);
          return n.compile();
        })(f + d, h);
        return p.map((e) => ({
          indicesA: e.filter((e) => e < f),
          indicesB: e.filter((e) => e >= f).map((e) => e - f),
        }));
      };
      t.getSegmentMatches = (e, t, n) => {
        if (i.default.isEmpty(e) && i.default.isEmpty(t)) return [];
        const r = d(e, t, n),
          s = [];
        r.forEach((r) => {
          const c = r.indicesA.map((t) => e[t]),
            l = r.indicesB.map((e) => t[e]),
            f = ((e, t) => e.map((e) => t.map((t) => u.computeFCD(e, t))))(
              c,
              l
            ),
            d = ((e, t, n, r) =>
              e
                .map((e, o) =>
                  t.map((t, a) => {
                    const s = u.computeSegmentLength(e),
                      c = u.computeSegmentLength(t),
                      l = e[1].x - e[0].x,
                      f = e[1].y - e[0].y,
                      d = t[1].x - t[0].x,
                      h = t[1].y - t[0].y,
                      p = Math.abs((l * d + f * h) / (s * c));
                    return n[o][a] >
                      r.segmentLinkCandidateFcdThreshold +
                        r.segmentLinkTolerance
                      ? 0
                      : i.default.min([s, c]) *
                          p *
                          Math.exp(
                            -n[o][a] / r.segmentLinkCandidateFcdThreshold
                          );
                  })
                )
                .map((e) =>
                  e.map((e) => (i.default.isFinite(e) ? a.INFINITY - e : 0))
                ))(c, l, f, n),
            h =
              d.length > 0 && d[0].length > 0
                ? ((e) => (e.length ? o.default(e) : []))(d).filter(
                    ([e, t]) => d[e][t] < a.INFINITY
                  )
                : [];
          s.push(...h.map(([e, t]) => [r.indicesA[e], r.indicesB[t]]));
        });
        const c = i.default.times(e.length, () => !1),
          l = i.default.times(t.length, () => !1);
        for (const [i, o] of s) c[i] = l[o] = !0;
        return [
          ...s.map(([n, r]) => ({
            currentSegment: e[n],
            correctSegment: t[r],
            fcd: u.computeFCD(e[n], t[r]),
          })),
          ...e.filter((e, t) => !c[t]).map((e) => ({ currentSegment: e })),
          ...t.filter((e, t) => !l[t]).map((e) => ({ correctSegment: e })),
        ];
      };
      t.computeCrossDivision = async (e, t, n) => {
        const o = [
          ...i.default.flatMap(e, (e) => e.vertices),
          ...i.default.flatMap(t, (e) => e.vertices),
        ];
        let a = 0;
        const s = () => (a++ % 20 === 0 ? new Promise(setImmediate) : null),
          c = await r.mapLimit(
            e,
            async (e) => (
              await s(),
              f(
                u.projectVerticesOntoPolyline(
                  e.vertices,
                  o,
                  n.crossSubdivisionThreshold,
                  n.splitTolerance
                ),
                n.maximumSplitSegmentLength
              )
            ),
            1
          ),
          l = await r.mapLimit(
            t,
            async (e) => (
              await s(),
              f(
                u.projectVerticesOntoPolyline(
                  e.vertices,
                  o,
                  n.crossSubdivisionThreshold,
                  n.splitTolerance
                ),
                n.maximumSplitSegmentLength
              )
            ),
            1
          );
        return {
          segmentToAnnotationMap: new Map([
            ...i.default.flatMap(c, (t, n) => t.map((t) => [t, e[n]])),
            ...i.default.flatMap(l, (e, n) => e.map((e) => [e, t[n]])),
          ]),
          subdividedSegmentsA: i.default.flatten(c),
          subdividedSegmentsB: i.default.flatten(l),
        };
      };
    },
    114861: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.transformScoresToGlobalScore = t.scoreSegmentMatch = void 0);
      var r,
        i = n(691289),
        o = n(490503),
        a = (r = n(298784)) && r.__esModule ? r : { default: r };
      t.scoreSegmentMatch = (e, t) => {
        if (!i.isLabel(t)) throw new Error("unknown label: " + t);
        const { currentSegment: n, correctSegment: r, fcd: a } = e;
        return {
          label: t,
          currentLength: n ? o.computeSegmentLength(n) : 0,
          correctLength: r ? o.computeSegmentLength(r) : 0,
          isMatch: !!n && !!r,
          isCorrect: !!n && !!r && a <= 5,
        };
      };
      t.transformScoresToGlobalScore = (e, t, n) => {
        const r = a.default.sumBy(e, "currentLength"),
          i = a.default.sumBy(e, "correctLength"),
          o = a.default.sumBy(a.default.filter(e, "isMatch"), "currentLength"),
          s = a.default.sumBy(a.default.filter(e, "isMatch"), "correctLength"),
          u = a.default.sumBy(
            a.default.filter(e, "isCorrect"),
            "currentLength"
          );
        let c, l;
        if ("FalseNegative" === t) (c = s), (l = i);
        else if ("FalsePositive" === t) (c = o), (l = r);
        else {
          if ("Precision" !== t) throw new Error(`Unknown error type ${t}`);
          (c = u), (l = o);
        }
        return {
          ...n,
          errorType: t,
          numIncorrectFrames: 0,
          numTotalFrames: 0,
          correctWork: c,
          totalWork: l,
        };
      };
    },
    691289: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isScoredPolylineSegmentsMatchedAnnotations = function (e) {
          return "polyline-fragments" === e?.metadata?.type;
        }),
        (t.toLinkingAttributeKeyBase =
          t.ALL_ERROR_TYPES =
          t.ALL_SEVERITIES =
          t.isLabel =
          t.BANNED_ATTRIBUTE_TYPES =
          t.ALL_LINKING_ATTRIBUTE_KEY_BASES =
          t.ALL_LABELS =
            void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r };
      const o = [
        "Vehicle Lane Center",
        "Bicycle Lane Center",
        "Parking Lane Center",
        "Pedestrian Lane Center",
        "Other Lane Center",
        "Transition",
        "Double-Dashed-Solid",
        "Double-Solid-Dashed",
        "Single-Dotted",
        "Single-Dashed",
        "Single-Solid",
        "Double-Dotted",
        "Double-Dashed",
        "Double-Solid",
        "Double-Dashed-Solid",
        "Double-Solid-Dashed",
        "Virtual Lane Line",
        "Other Lane Line",
        "Stop Line",
        "Yield Line",
        "Speed Line",
        "School Zone Line",
        "Other Sign Line",
        "Vehicle Lane Center",
        "Bicycle Lane Center",
        "Parking Lane Center",
        "Pedestrian Lane Center",
        "Other Lane Center",
        "Curb",
        "Barrier",
        "Other Driveable Region Edge",
        "Transition",
        "Connection",
      ];
      t.ALL_LABELS = o;
      const a = [
        "Road Sign to Line",
        "Road Sign to Point",
        "Road Sign to Polygon",
        "Road Surface Marker to Line",
        "Road Surface Marker to Point",
        "Road Surface Marker to Polygon",
        "VLC Neighbor",
        "Permeability None VLC to VLC",
        "Permeability Free VLC to VLC",
        "Sign Line to VLC",
        "Merge Or Split Point to Line",
        "Bike Lane Painted to VLC",
        "Bus Or Taxi Lane Painted to VLC",
        "Buffer Zone to Line Neighbor",
        "Yield Shark's Teeth to VLC",
        "Cul-de-sac to VLC",
        "Crosswalk to VLC",
        "Speed Bump to VLC",
        "Speed Dip to VLC",
        "Traffic Light to VLC",
        "Pedestrian Crossing Light to VLC",
        "Pedestrian Crossing Light to Crosswalk",
        "Bicycle Crossing Light to VLC",
        "Highway Metering Light to VLC",
        "Railroad Crossing Light to VLC",
        "Lane Control Signal to VLC",
        "Uncommon Traffic Light to VLC",
        "Railroad Crossing to VLC",
        "Roadway Gate to Railroad Crossing",
        "Other Relationship",
        "Road Sign Links",
        "Road Surface Marker Links",
        "VLC Links",
        "Neighbor Links",
        "Merge Or Split Point Links",
        "Misc Links",
        "VLC to VLC attributes-Permeability-Not Permeable",
        "VLC to VLC attributes-Permeability-Permeable",
      ];
      t.ALL_LINKING_ATTRIBUTE_KEY_BASES = a;
      t.BANNED_ATTRIBUTE_TYPES = [
        "change_id",
        "relationship_change_id",
        "Reference Map UIDs",
      ];
      t.isLabel = (e) => o.includes(e);
      t.ALL_SEVERITIES = ["Critical", "Severe", "Moderate"];
      t.ALL_ERROR_TYPES = ["FalseNegative", "FalsePositive", "Precision"];
      t.toLinkingAttributeKeyBase = (e, t) => {
        const n = i.default.sortBy((t ?? []).concat(a), (e) => -e.length);
        return i.default.find(n, (t) => e.includes(t));
      };
    },
    362714: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default =
          t.gradeRotation =
          t.gradeDistance =
          t.boxDimensionsGrader =
          t.gradeWidth =
          t.gradeHeight =
          t.iouGrader =
          t.edgeGrader =
          t.DEFAULT_BOX_ROTATION_THRESHOLD_DEGS =
          t.DEFAULT_BOX_POSITION_THRESHOLD_PX =
          t.DEFAULT_BOX_DIMENSION_THRESHOLD_PX =
          t.DEFAULT_MAX_THRESHOLD_PX =
          t.DEFAULT_MIN_THRESHOLD_PX =
          t.DEFAULT_IOU_THRESHOLD =
          t.DEFAULT_EDGE_THRESHOLD =
          t.BOX_DISTANCE_LABEL_BIAS =
          t.BOX_DISTANCE_IOU_THRESHOLD =
            void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(167469),
        a = n(440169),
        s = n(991984);
      t.BOX_DISTANCE_IOU_THRESHOLD = 0.2;
      t.BOX_DISTANCE_LABEL_BIAS = 0.075;
      const u = 0.05;
      t.DEFAULT_EDGE_THRESHOLD = u;
      const c = 0.75;
      t.DEFAULT_IOU_THRESHOLD = c;
      t.DEFAULT_MIN_THRESHOLD_PX = 5;
      t.DEFAULT_MAX_THRESHOLD_PX = 15;
      t.DEFAULT_BOX_DIMENSION_THRESHOLD_PX = 5;
      t.DEFAULT_BOX_POSITION_THRESHOLD_PX = 5;
      t.DEFAULT_BOX_ROTATION_THRESHOLD_DEGS = 15;
      const l = (e, t) => e?.sensor_id === t?.sensor_id,
        f = { correctWork: 0, totalWork: 0 },
        d = (
          e,
          t,
          n,
          {
            threshold: r = 0.05,
            leftThreshold: o = r,
            rightThreshold: a = r,
            topThreshold: u = r,
            bottomThreshold: c = r,
            minThresholdPx: d = 5,
            maxThresholdPx: h = 15,
            useBoundedThresholds: p = !1,
          }
        ) =>
          l(e, t)
            ? {
                left: s.gradeIfNotMissing(
                  (e, t) => {
                    let n = o * t.width;
                    p && (n = i.default.clamp(n, d, h));
                    const r = Math.abs(e.left - t.left) / t.width,
                      a = { leftDiff: r };
                    return {
                      correctWork: +(r * t.width < n),
                      totalWork: 1,
                      intermediates: a,
                    };
                  },
                  e,
                  t
                ),
                right: s.gradeIfNotMissing(
                  (e, t) => {
                    let n = a * t.width;
                    p && (n = i.default.clamp(n, d, h));
                    const r =
                        Math.abs(e.left + e.width - (t.left + t.width)) /
                        t.width,
                      o = { rightDiff: r };
                    return {
                      correctWork: +(r * t.width < n),
                      totalWork: 1,
                      intermediates: o,
                    };
                  },
                  e,
                  t
                ),
                top: s.gradeIfNotMissing(
                  (e, t) => {
                    let n = u * t.height;
                    p && (n = i.default.clamp(n, d, h));
                    const r = Math.abs(e.top - t.top) / t.height,
                      o = { topDiff: r };
                    return {
                      correctWork: +(r * t.height < n),
                      totalWork: 1,
                      intermediates: o,
                    };
                  },
                  e,
                  t
                ),
                bottom: s.gradeIfNotMissing(
                  (e, t) => {
                    let n = c * t.height;
                    p && (n = i.default.clamp(n, d, h));
                    const r =
                        Math.abs(e.top + e.height - (t.top + t.height)) /
                        t.height,
                      o = { bottomDiff: r };
                    return {
                      correctWork: +(r * t.height < n),
                      totalWork: 1,
                      intermediates: o,
                    };
                  },
                  e,
                  t
                ),
              }
            : { left: f, right: f, top: f, bottom: f };
      t.edgeGrader = d;
      const h = (e, t, n, { threshold: r = 0.75 }) =>
        l(e, t)
          ? {
              iou: s.gradeIfNotMissing(
                (e, t) => {
                  const n = a.boxIou(e, t);
                  return {
                    correctWork: +(n > r),
                    totalWork: 1,
                    intermediates: { iou: n },
                  };
                },
                e,
                t
              ),
            }
          : { iou: f };
      t.iouGrader = h;
      const p = (e, t, n) => {
        const r = void 0 !== e.rotation || void 0 !== t.rotation,
          i = r && e.width < e.height ? e.width : e.height,
          o = r && t.width < t.height ? t.width : t.height,
          a = Math.abs(i - o);
        return {
          correctWork: +(a < n),
          totalWork: 1,
          intermediates: { diff: a },
        };
      };
      t.gradeHeight = p;
      const g = (e, t, n) => {
        const r = void 0 !== e.rotation || void 0 !== t.rotation,
          i = r && e.width < e.height ? e.height : e.width,
          o = r && t.width < t.height ? t.height : t.width,
          a = Math.abs(i - o);
        return {
          correctWork: +(a < n),
          totalWork: 1,
          intermediates: { diff: a },
        };
      };
      t.gradeWidth = g;
      const m = (
        e,
        t,
        n,
        { threshold: r = 5, heightThreshold: i = r, widthThreshold: o = r }
      ) =>
        l(e, t)
          ? {
              height: s.gradeIfNotMissing((e, t) => p(e, t, i), e, t),
              width: s.gradeIfNotMissing((e, t) => g(e, t, o), e, t),
            }
          : { height: f, width: f };
      t.boxDimensionsGrader = m;
      const y = (e) => ({ x: e.left + e.width / 2, y: e.top + e.height / 2 }),
        b = (e, t, n) => {
          const r = y(e),
            i = y(t),
            o = a.findDistance(a.vertexToArr(r), a.vertexToArr(i));
          return {
            correctWork: +(o <= n),
            totalWork: 1,
            intermediates: { distance: o },
          };
        };
      t.gradeDistance = b;
      const v = (e, t, n) => {
        let r = e.rotation ?? 0,
          i = t.rotation ?? 0;
        e.width < e.height && (r = a.addRadians(r, Math.PI / 2)),
          t.width < t.height && (i = a.addRadians(i, Math.PI / 2)),
          r < 0 && (r += Math.PI),
          i < 0 && (i += Math.PI);
        return {
          correctWork: +(a.radianDifference(r, i) <= n * (Math.PI / 180)),
          totalWork: 1,
        };
      };
      t.gradeRotation = v;
      var _ = {
        edges: {
          taskTypes: [o.TaskType.VideoBoxAnnotation, o.TaskType.Annotation],
          title: "Edge positions",
          graderFn: s.gradePerFrame(d),
          paramConfigs: [
            {
              name: "threshold",
              label: "Default Edge Threshold",
              type: "number",
              defaultValue: u,
            },
            {
              name: "leftThreshold",
              label: "Left Threshold",
              type: "number",
              defaultValue: u,
            },
            {
              name: "rightThreshold",
              label: "Right Threshold",
              type: "number",
              defaultValue: u,
            },
            {
              name: "bottomThreshold",
              label: "Bottom Threshold",
              type: "number",
              defaultValue: u,
            },
            {
              name: "topThreshold",
              label: "Top Threshold",
              type: "number",
              defaultValue: u,
            },
            {
              name: "maxThresholdPx",
              label: "Maximum Edge Threshold",
              type: "number",
              defaultValue: 15,
            },
            {
              name: "minThresholdPx",
              label: "Minimum Edge Threshold",
              type: "number",
              defaultValue: 5,
            },
            {
              name: "useBoundedThresholds",
              label: "Whether to bound thresholds",
              type: "boolean",
              defaultValue: !1,
            },
          ],
        },
        iou: {
          taskTypes: [
            o.TaskType.VideoBoxAnnotation,
            o.TaskType.Annotation,
            o.TaskType.VideoPlaybackAnnotation,
          ],
          title: "Box size and position",
          graderFn: s.gradePerFrame(h),
          paramConfigs: [
            {
              name: "threshold",
              label: "IOU Threshold",
              type: "number",
              defaultValue: c,
            },
          ],
        },
        adjustmentDistance: {
          taskTypes: [
            o.TaskType.VideoBoxAnnotation,
            o.TaskType.VideoPlaybackAnnotation,
          ],
          title: "Adjustment Distance Grader",
          graderFn: s.gradePerFrame((e, t, n, { threshold: r = 10 }) =>
            l(e, t)
              ? {
                  adjustmentDistance: s.gradeIfNotMissing(
                    (e, t) => {
                      const n = Math.pow(e.top - t.top, 2),
                        i = Math.pow(e.top + e.height - (t.top + t.height), 2),
                        o = Math.pow(e.left + e.width - (t.left + t.width), 2),
                        a = Math.pow(e.left - t.left, 2),
                        s = Math.sqrt(n + i + o + a);
                      return {
                        correctWork: +(s < r),
                        totalWork: 1,
                        intermediates: {
                          topDiff: n,
                          bottomDiff: i,
                          rightDiff: o,
                          leftDiff: a,
                          result: s,
                          threshold: r,
                        },
                      };
                    },
                    e,
                    t
                  ),
                }
              : { adjustmentDistance: f }
          ),
          paramConfigs: [
            {
              name: "threshold",
              label: "Error Threshold",
              type: "number",
              defaultValue: 10,
            },
          ],
        },
        boxDimensions: {
          taskTypes: [
            o.TaskType.VideoBoxAnnotation,
            o.TaskType.Annotation,
            o.TaskType.VideoPlaybackAnnotation,
          ],
          title: "Box Dimensions grader",
          graderFn: s.gradePerFrame(m),
          paramConfigs: [
            {
              name: "threshold",
              label: "Default Dimension Threshold",
              type: "number",
              defaultValue: 5,
            },
            {
              name: "heightThreshold",
              label: "Height Threshold",
              type: "number",
              defaultValue: 5,
            },
            {
              name: "widthThreshold",
              label: "Width Threshold",
              type: "number",
              defaultValue: 5,
            },
          ],
        },
        boxRotation: {
          taskTypes: [
            o.TaskType.VideoBoxAnnotation,
            o.TaskType.Annotation,
            o.TaskType.VideoPlaybackAnnotation,
          ],
          title: "Box Rotation grader",
          graderFn: s.gradePerFrame((e, t, n, { threshold: r = 15 }) =>
            l(e, t)
              ? { rotation: s.gradeIfNotMissing((e, t) => v(e, t, r), e, t) }
              : { rotation: f }
          ),
          paramConfigs: [
            {
              name: "rotationThreshold",
              label: "Rotation Threshold (degrees)",
              type: "number",
              defaultValue: 15,
            },
          ],
        },
        boxPosition: {
          taskTypes: [
            o.TaskType.VideoBoxAnnotation,
            o.TaskType.Annotation,
            o.TaskType.VideoPlaybackAnnotation,
          ],
          title: "Box Position grader",
          graderFn: s.gradePerFrame((e, t, n, { threshold: r = 5 }) =>
            l(e, t)
              ? { position: s.gradeIfNotMissing((e, t) => b(e, t, r), e, t) }
              : { position: f }
          ),
          paramConfigs: [
            {
              name: "threshold",
              label: "Default Position Threshold",
              type: "number",
              defaultValue: 5,
            },
          ],
        },
      };
      t.default = _;
    },
    152672: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default =
          t.unifyAnswers =
          t.checkSingleQuestion =
          t.responseIOUScore =
            void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(167469),
        a = n(991984);
      const s = (e, t) =>
        0 === e.length
          ? +(0 === t.length)
          : i.default.intersection(e, t).length / i.default.union(e, t).length;
      t.responseIOUScore = s;
      const u = (e, t) => s(e, t);
      t.checkSingleQuestion = u;
      const c = (e) => (i.default.isArray(e) ? e : [e]);
      t.unifyAnswers = c;
      var l = Object.freeze({
        correctChoices: {
          taskTypes: [o.TaskType.Categorization],
          title: "categorization choices",
          graderFn: a.gradePerFrame((e, t, n) => {
            const r = (e, t) => {
              const n = c(e.choices),
                r = c(t.choices);
              return {
                choices: {
                  correctWork: u(n, r),
                  totalWork: 1,
                  intermediates: { originalAnswers: n, correctAnswers: r },
                },
              };
            };
            if (i.default.isEmpty(t)) {
              return { choices: { correctWork: 0, totalWork: 0 } };
            }
            if (i.default.isEmpty(e)) {
              return {
                choices: {
                  correctWork: +(
                    i.default.findIndex(
                      t.acceptedAnnotations,
                      ({ annotation: e }) => !e
                    ) >= 0
                  ),
                  totalWork: 1,
                },
              };
            }
            return a.gradeForAcceptedAnnotations(
              e,
              t,
              r,
              n && n.acceptedAnnotationMatchIndexes
            );
          }),
        },
      });
      t.default = l;
    },
    674291: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.covariantAttributeGrader =
          t.defaultAttributeGraderFn =
          t.attributeGrader =
            void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(599789),
        a = n(991984),
        s = n(800259);
      const u = (e, t, n, r, u, l) => {
        u || (u = {});
        const f = t?.frames?.[e],
          d = n?.frames?.[e],
          h = i.default.keys(d?.attributes || f?.attributes),
          p = i.default.filter(
            h,
            (e) =>
              l?.attributeTypes?.[e] !== o.AnnotationAttributeType.Linked &&
              !s.toLinkingAttributeKeyBase(e)
          ),
          g = {};
        return (
          i.default.forEach(p, (e) => {
            const t = c(e, u);
            g[`attribute_${e}`] = a.gradeIfNotMissing(t, f, d);
          }),
          g
        );
      };
      t.attributeGrader = u;
      const c = (e, t) => (n, r) => l(e, n, r, t),
        l = (e, t, n) => {
          let r = t?.attributes?.[e],
            o = n?.attributes?.[e];
          return (
            Array.isArray(r) &&
              Array.isArray(o) &&
              ((r = i.default.sortBy(r)), (o = i.default.sortBy(o))),
            { correctWork: +i.default.isEqual(r, o), totalWork: 1 }
          );
        };
      t.defaultAttributeGraderFn = l;
      const f = {
        taskTypes: o.twoDTypes,
        title: "Covariant Attribute Grader",
        graderFn: a.gradePerFrameWithContext(u, !1),
      };
      t.covariantAttributeGrader = f;
    },
    34038: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.covariantLinkingGrader =
          t.calculateCorrectAndTotalWork =
          t.getLinkedAttributeToAnnotations =
          t.fromAnnotationLabelChangedLinkingGraderGenerator =
          t.toAnnotationMissingOrLabelChangedLinkingGraderGenerator =
          t.toAndFromAnnotationExistLinkingGraderGenerator =
          t.linkingGrader =
            void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(599789),
        a = n(991984),
        s = n(800259);
      const u = (e, t, n, r, u, d) => {
        const h = t?.frames?.[e],
          p = n?.frames?.[e],
          g = i.default.union(
            i.default.keys(p?.attributes),
            i.default.keys(h?.attributes)
          ),
          m = d?.matchedAnnotationsListContext,
          y = i.default.filter(g, (e) => {
            const t = d?.attributeTypes;
            return (
              !!s.toLinkingAttributeKeyBase(e) ||
              t?.[e] === o.AnnotationAttributeType.Linked
            );
          }),
          b = i.default.compact(
            i.default.map(y, (e) => s.toLinkingAttributeKeyBase(e))
          ),
          v = [...new Set(b)],
          _ = {};
        return (
          v.forEach((e) => {
            const t = c(e, m),
              n = l(e, m),
              r = f(e, m);
            (_[`linking_${e}`] = a.gradeIfNotMissing(t, h, p)),
              (_[`linking_${e}_UNMATCHED_TO_ANN`] = a.gradeIfNotMissing(
                n,
                h,
                p
              )),
              (_[`linking_${e}_FROM_LABELS_DIFFERENT`] = a.gradeIfNotMissing(
                r,
                h,
                p
              ));
          }),
          _
        );
      };
      t.linkingGrader = u;
      const c = (e, t) => (n, r) => {
        const i = n?.label,
          o = r?.label;
        if (i !== o) return { correctWork: 0, totalWork: 0 };
        const { originalToAnnotations: a, correctToAnnotations: s } = d(
            e,
            n,
            r,
            t
          ),
          u = a.filter(
            (e) =>
              e?.correctAnnotation &&
              e?.correctAnnotation?.props.label ===
                e?.currentAnnotation?.props.label
          ),
          c = s.filter(
            (e) =>
              e?.correctAnnotation &&
              e?.correctAnnotation?.props.label ===
                e?.currentAnnotation?.props.label
          ),
          { correctWork: l, totalWork: f, intermediates: p } = h(u, c);
        return { correctWork: l, totalWork: f, intermediates: p };
      };
      t.toAndFromAnnotationExistLinkingGraderGenerator = c;
      const l = (e, t) => (n, r) => {
        const i = n?.label,
          o = r?.label;
        if (i !== o) return { correctWork: 0, totalWork: 0 };
        const { originalToAnnotations: a, correctToAnnotations: s } = d(
            e,
            n,
            r,
            t
          ),
          u = a.filter(
            (e) =>
              !e?.correctAnnotation ||
              e.correctAnnotation?.props.label !==
                e.currentAnnotation?.props.label
          ),
          c = s.filter(
            (e) =>
              !e?.correctAnnotation ||
              e.correctAnnotation?.props.label !==
                e.currentAnnotation?.props.label
          ),
          { correctWork: l, totalWork: f } = h(u, c);
        return { correctWork: l, totalWork: f };
      };
      t.toAnnotationMissingOrLabelChangedLinkingGraderGenerator = l;
      const f = (e, t) => (n, r) => {
        const i = n?.label,
          o = r?.label;
        if (i === o) return { correctWork: 0, totalWork: 0 };
        const { originalToAnnotations: a, correctToAnnotations: s } = d(
            e,
            n,
            r,
            t
          ),
          { totalWork: u } = h(a, s);
        return { correctWork: 0, totalWork: u };
      };
      t.fromAnnotationLabelChangedLinkingGraderGenerator = f;
      const d = (e, t, n, r) => {
        const o = t?.attributes,
          a = n?.attributes,
          s = Object.values(i.default.pickBy(o, (t, n) => n.includes(e))),
          u = Object.values(i.default.pickBy(a, (t, n) => n.includes(e)));
        return {
          originalToAnnotations: s.map((e) =>
            r?.find((t) => t.currentAnnotation?.props?.id === e)
          ),
          correctToAnnotations: u.map((e) =>
            r?.find((t) => t.correctAnnotation?.props?.id === e)
          ),
        };
      };
      t.getLinkedAttributeToAnnotations = d;
      const h = (e, t) => {
        const n = e.map((e) => e?.correctAnnotation?.props?.id),
          r = t.map((e) => e?.correctAnnotation?.props?.id);
        return {
          correctWork: i.default.intersectionBy(n, r).length,
          totalWork: Math.max(e.length, t.length),
          intermediates: {
            extraneous: i.default.difference(n, r),
            missing: i.default.difference(r, n),
          },
        };
      };
      t.calculateCorrectAndTotalWork = h;
      const p = {
        taskTypes: o.twoDTypes,
        title: "Covariant Linking Grader",
        graderFn: a.gradePerFrameWithContext(u, !1, !1, !1),
      };
      t.covariantLinkingGrader = p;
    },
    388746: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        Object.defineProperty(t, "covariantLinkingGrader", {
          enumerable: !0,
          get: function () {
            return r.covariantLinkingGrader;
          },
        }),
        Object.defineProperty(t, "covariantAttributeGrader", {
          enumerable: !0,
          get: function () {
            return i.covariantAttributeGrader;
          },
        });
      var r = n(34038),
        i = n(674291);
    },
    800259: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.toLinkingAttributeKeyBase = t.ALL_LINKING_ATTRIBUTE_KEY_BASES =
          void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r };
      const o = ["Object Occlusion Links", "Is Hole For"];
      t.ALL_LINKING_ATTRIBUTE_KEY_BASES = o;
      t.toLinkingAttributeKeyBase = (e) => {
        const t = i.default.sortBy(o, (e) => -e.length);
        return i.default.find(t, (t) => e.includes(t));
      };
    },
    278127: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default =
          t.FRACTION_STEP =
          t.DEFAULT_IOU_THRESHOLD =
          t.DEFAULT_PARALLAX_POINT_THRESHOLD =
          t.DEFAULT_SIDE_EDGE_THRESHOLD =
          t.DEFAULT_MAX_FRONT_EDGE_THRESHOLD_PX =
          t.DEFAULT_MIN_FRONT_EDGE_THRESHOLD_PX =
          t.DEFAULT_FRONT_EDGE_THRESHOLD =
          t.CUBOID_DISTANCE_IOU_THRESHOLD =
            void 0);
      var r,
        i = n(167469),
        o = (r = n(298784)) && r.__esModule ? r : { default: r },
        a = n(991984),
        s = n(440169);
      t.CUBOID_DISTANCE_IOU_THRESHOLD = 0.2;
      const u = 0.05;
      t.DEFAULT_FRONT_EDGE_THRESHOLD = u;
      t.DEFAULT_MIN_FRONT_EDGE_THRESHOLD_PX = 5;
      t.DEFAULT_MAX_FRONT_EDGE_THRESHOLD_PX = 15;
      const c = 0.05;
      t.DEFAULT_SIDE_EDGE_THRESHOLD = c;
      t.DEFAULT_PARALLAX_POINT_THRESHOLD = 0.1;
      t.DEFAULT_IOU_THRESHOLD = 0.9;
      const l = 0.01;
      t.FRACTION_STEP = l;
      var f = {
        cuboidFrontEdges: {
          taskTypes: [
            i.TaskType.CuboidAnnotation,
            i.TaskType.VideoCuboidAnnotation,
          ],
          title: "2D Cuboid Front Face Edge Positions",
          graderFn: a.gradePerFrame(
            (
              e,
              t,
              n,
              {
                threshold: r = 0.05,
                leftThreshold: i = r,
                rightThreshold: u = r,
                topThreshold: c = r,
                bottomThreshold: l = r,
                minThresholdPx: f = 5,
                maxThresholdPx: d = 15,
                useBoundedThresholds: h = !1,
              }
            ) => ({
              edgeFaceTop: a.gradeIfNotMissing(
                (e, t) => {
                  const n = s.formatCuboidAnnotation(e),
                    r = s.formatCuboidAnnotation(t),
                    i =
                      Math.abs(n.edges.faceTop.y1 - r.edges.faceTop.y1) /
                      r.height,
                    a = { faceTopDiff: i };
                  let u = c * r.height;
                  return (
                    h && (u = o.default.clamp(u, f, d)),
                    {
                      correctWork: +(i * r.height < u),
                      totalWork: 1,
                      intermediates: a,
                    }
                  );
                },
                e,
                t
              ),
              edgeFaceRight: a.gradeIfNotMissing(
                (e, t) => {
                  const n = s.formatCuboidAnnotation(e),
                    r = s.formatCuboidAnnotation(t),
                    i =
                      Math.abs(n.edges.faceRight.x2 - r.edges.faceRight.x2) /
                      r.width,
                    a = { faceRightDiff: i };
                  let c = u * r.width;
                  return (
                    h && (c = o.default.clamp(c, f, d)),
                    {
                      correctWork: +(i * r.width < c),
                      totalWork: 1,
                      intermediates: a,
                    }
                  );
                },
                e,
                t
              ),
              edgeFaceBottom: a.gradeIfNotMissing(
                (e, t) => {
                  const n = s.formatCuboidAnnotation(e),
                    r = s.formatCuboidAnnotation(t),
                    i =
                      Math.abs(n.edges.faceBottom.y2 - r.edges.faceBottom.y2) /
                      r.height,
                    a = { faceTopDiff: i };
                  let u = l * r.height;
                  return (
                    h && (u = o.default.clamp(u, f, d)),
                    {
                      correctWork: +(i * r.height < u),
                      totalWork: 1,
                      intermediates: a,
                    }
                  );
                },
                e,
                t
              ),
              edgeFaceLeft: a.gradeIfNotMissing(
                (e, t) => {
                  const n = s.formatCuboidAnnotation(e),
                    r = s.formatCuboidAnnotation(t),
                    a =
                      Math.abs(n.edges.faceLeft.x1 - r.edges.faceLeft.x1) /
                      r.width,
                    u = { faceLeftDiff: a };
                  let c = i * r.width;
                  return (
                    h && (c = o.default.clamp(c, f, d)),
                    {
                      correctWork: +(a * r.width < c),
                      totalWork: 1,
                      intermediates: u,
                    }
                  );
                },
                e,
                t
              ),
            })
          ),
          paramConfigs: [
            {
              name: "threshold",
              label:
                "Front Edge Threshold (Fraction of Correct Width or Height)",
              type: "number",
              defaultValue: u,
              min: 0,
              step: l,
            },
            {
              name: "leftThreshold",
              label: "Left Threshold",
              type: "number",
              defaultValue: u,
              min: 0,
              step: l,
            },
            {
              name: "rightThreshold",
              label: "Right Threshold",
              type: "number",
              defaultValue: u,
              min: 0,
              step: l,
            },
            {
              name: "bottomThreshold",
              label: "Bottom Threshold",
              type: "number",
              defaultValue: u,
              min: 0,
              step: l,
            },
            {
              name: "topThreshold",
              label: "Top Threshold",
              type: "number",
              defaultValue: u,
              min: 0,
              step: l,
            },
            {
              name: "maxThresholdPx",
              label: "Maximum Edge Threshold",
              type: "number",
              defaultValue: 15,
              min: 0,
            },
            {
              name: "minThresholdPx",
              label: "Minimum Edge Threshold",
              type: "number",
              defaultValue: 5,
              min: 0,
            },
            {
              name: "useBoundedThresholds",
              label: "Whether to bound thresholds",
              type: "boolean",
              defaultValue: !1,
            },
          ],
        },
        cuboidSideEdges: {
          taskTypes: [
            i.TaskType.CuboidAnnotation,
            i.TaskType.VideoCuboidAnnotation,
          ],
          title: "2D Cuboid Side Face Edge Positions",
          graderFn: a.gradePerFrame((e, t, n, { threshold: r = 0.05 }) => ({
            edgeSideTop: a.gradeIfNotMissing(
              (e, t) => {
                const n = s.formatCuboidAnnotation(e),
                  i = s.formatCuboidAnnotation(t),
                  a =
                    s.getExtendedCuboidDirection(i) ||
                    s.getExtendedCuboidDirection(n) ||
                    "faceLeft",
                  u = n.edges.sideBack || o.default.get(n.edges, a),
                  c = i.edges.sideBack || o.default.get(n.edges, a),
                  l = Math.abs(u.y1 - c.y1) / i.sideHeight;
                return {
                  correctWork: +(l < r),
                  totalWork: 1,
                  intermediates: { sideTopDiff: l },
                };
              },
              e,
              t
            ),
            edgeSideBack: a.gradeIfNotMissing(
              (e, t) => {
                const n = s.formatCuboidAnnotation(e),
                  i = s.formatCuboidAnnotation(t),
                  a =
                    s.getExtendedCuboidDirection(i) ||
                    s.getExtendedCuboidDirection(n) ||
                    "faceLeft",
                  u = n.edges.sideBack || o.default.get(n.edges, a),
                  c = i.edges.sideBack || o.default.get(n.edges, a),
                  l = s.midpoint(
                    i.vertices.faceTopleft,
                    i.vertices.faceBottomright
                  ),
                  f = Math.abs(l.x - c.x1),
                  d = Math.abs(u.x1 - c.x1) / f;
                return {
                  correctWork: +(d < r),
                  totalWork: 1,
                  intermediates: { sideBackDiff: d },
                };
              },
              e,
              t
            ),
            edgeSideBottom: a.gradeIfNotMissing(
              (e, t) => {
                const n = s.formatCuboidAnnotation(e),
                  i = s.formatCuboidAnnotation(t),
                  a =
                    s.getExtendedCuboidDirection(i) ||
                    s.getExtendedCuboidDirection(n) ||
                    "faceLeft",
                  u = n.edges.sideBack || o.default.get(n.edges, a),
                  c = i.edges.sideBack || o.default.get(n.edges, a),
                  l = Math.abs(u.y2 - c.y2) / i.sideHeight;
                return {
                  correctWork: +(l < r),
                  totalWork: 1,
                  intermediates: { sideBottomDiff: l },
                };
              },
              e,
              t
            ),
          })),
          paramConfigs: [
            {
              name: "threshold",
              label:
                "Side Edge Threshold (Fraction of Correct Side Height or Distance from Front Face Center to Side)",
              type: "number",
              defaultValue: c,
              min: 0,
              step: l,
            },
          ],
        },
        parallaxPoint: {
          taskTypes: [
            i.TaskType.CuboidAnnotation,
            i.TaskType.VideoCuboidAnnotation,
          ],
          title: "2D Cuboid Projected Point",
          graderFn: a.gradePerFrame((e, t, n, { threshold: r = 0.1 }) => ({
            parallaxPoint: a.gradeIfNotMissing(
              (e, t) => {
                const n = s.formatCuboidAnnotation(e),
                  i = s.formatCuboidAnnotation(t),
                  o = s.projectedPointFromCuboid(n),
                  a = s.projectedPointFromCuboid(i),
                  u = Math.abs(o.y - a.y) / i.sideHeight;
                return {
                  correctWork: +(u < r),
                  totalWork: 1,
                  intermediates: { parallaxPointDiff: u },
                };
              },
              e,
              t
            ),
          })),
          paramConfigs: [
            {
              name: "threshold",
              label:
                "Parallax Point Threshold (Fraction of Correct Side Height)",
              type: "number",
              defaultValue: 0.1,
              min: 0,
              step: l,
            },
          ],
        },
        cuboidIou: {
          taskTypes: [
            i.TaskType.CuboidAnnotation,
            i.TaskType.VideoCuboidAnnotation,
          ],
          title: "2D Cuboid Iou",
          graderFn: a.gradePerFrame((e, t, n, { threshold: r = 0.9 }) => ({
            frontFaceIou: a.gradeIfNotMissing(
              (e, t) => {
                const n = s.formatCuboidAnnotation(e),
                  i = s.formatCuboidAnnotation(t),
                  o = s.getCuboidFrontFaceAsBox(n),
                  a = s.getCuboidFrontFaceAsBox(i),
                  u = s.boxIou(o, a);
                return {
                  correctWork: +(u >= r),
                  totalWork: 1,
                  intermediates: { iou: u },
                };
              },
              e,
              t
            ),
            sideFaceIou: a.gradeIfNotMissing(
              (e, t) => {
                const n = s.formatCuboidAnnotation(e),
                  i = s.formatCuboidAnnotation(t),
                  o = ((e, t) =>
                    e.isExtended || t.isExtended
                      ? e.isExtended && t.isExtended
                        ? null
                        : { correctWork: 0, totalWork: 1 }
                      : { correctWork: 1, totalWork: 1 })(n, i);
                if (o) return o;
                try {
                  const e = s.getCuboidSideFaceVertices(n),
                    t = s.getCuboidSideFaceVertices(i),
                    o = s.genericIou(e, t);
                  return {
                    correctWork: +(o >= r),
                    totalWork: 1,
                    intermediates: { iou: o },
                  };
                } catch (a) {
                  return { correctWork: 0, totalWork: 1 };
                }
              },
              e,
              t
            ),
            cuboidIou: a.gradeIfNotMissing(
              (e, t) => {
                const n = s.formatCuboidAnnotation(e),
                  i = s.formatCuboidAnnotation(t);
                try {
                  const e = s.getCuboidVertices(n),
                    t = s.getCuboidVertices(i),
                    o = s.genericIou(e, t);
                  return {
                    correctWork: +(o >= r),
                    totalWork: 1,
                    intermediates: { iou: o },
                  };
                } catch (o) {
                  return { correctWork: 0, totalWork: 1 };
                }
              },
              e,
              t
            ),
          })),
          paramConfigs: [
            {
              name: "threshold",
              label: "IoU Threshold",
              type: "number",
              defaultValue: 0.9,
              min: 0,
              step: l,
            },
          ],
        },
      };
      t.default = f;
    },
    567208: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default =
          t.linkingIoUScore =
          t.DocumentTranscriptionErrorType =
            void 0);
      var r,
        i,
        o = n(991984),
        a = (r = n(298784)) && r.__esModule ? r : { default: r },
        s = n(167469),
        u = n(116615),
        c = n(798451),
        l = n(247740);
      (t.DocumentTranscriptionErrorType = i),
        (function (e) {
          (e.Missing = "missing"),
            (e.Extraneous = "extraneous"),
            (e.Label = "label"),
            (e.Text = "text"),
            (e.Linking = "linking"),
            (e.Placement = "placement"),
            (e.Date = "date"),
            (e.Money = "money"),
            (e.Checkbox = "checkbox"),
            (e.Select = "select"),
            (e.PageRange = "pageRange");
        })(i || (t.DocumentTranscriptionErrorType = i = {}));
      function f(e, t) {
        return (
          t.includes("trim") && (e = e.trim()),
          t.includes("lowercase") && (e = e.toLowerCase()),
          e
        );
      }
      const d = (e, t) =>
        a.default.intersection(t, e).length / a.default.union(t, e).length;
      t.linkingIoUScore = d;
      const h = (e, t) =>
        0 === t.length
          ? +(0 === e.length)
          : a.default.intersection(e, t).length / a.default.union(e, t).length;
      function p(e, t) {
        return (n, r, i, o) => ({ [t]: e(n, r, i, o) });
      }
      function g(e, t) {
        return (n, r, i, o, s, u) => {
          const c = a.default.get(r?.frames, n),
            l = a.default.get(i?.frames, n);
          return { [t]: e(c, l, o, s, u) };
        };
      }
      var m = Object.freeze({
        documentTranscriptionText: {
          taskTypes: [s.TaskType.DocumentTranscription],
          title: "document transcription text",
          graderFn: o.gradePerFrameWithContext(
            g((e, t, n, r, i) => {
              const a = i,
                s = a?.textProcessing ?? [];
              return o.gradeIfNotMissing(
                (e, t) =>
                  o.gradeFreeText(
                    f(e, s),
                    f(t, s),
                    a?.textComparisonMethod ??
                      o.TextComparisonMethod.Levenshtein
                  ),
                e?.text,
                t?.text
              );
            }, i.Text)
          ),
        },
        documentTranscriptionLinking: {
          taskTypes: [s.TaskType.DocumentTranscription],
          title: "document transcription linking",
          graderFn: o.gradePerFrame((e, t) => ({
            [i.Linking]: o.gradeIfNotMissing(
              (e, t) => ({
                correctWork: d(e, t),
                totalWork: 1,
                intermediates: { actual: e, expected: t },
              }),
              e?.refs,
              t?.refs
            ),
          })),
        },
        documentTranscriptionPlacement: {
          taskTypes: [s.TaskType.DocumentTranscription],
          title: "document transcription placement",
          graderFn: o.gradePerFrameWithContext(
            g((e, t, n, r, i) => {
              const a = i,
                s = r?.underThreshold ?? a?.underThreshold ?? 2,
                f = r?.overThreshold ?? a?.overThreshold ?? 5;
              return o.gradeIfNotMissing(
                (e, t) => {
                  let n = !1;
                  return (
                    e.type === u.GeometryType.BoundingBox &&
                    t.type === u.GeometryType.BoundingBox
                      ? (n = c.isBoundingBoxInMargin(e, t, s, f))
                      : e.type === u.GeometryType.Polygon &&
                        t.type === u.GeometryType.Polygon &&
                        (n = l.isPolygonInMargin(e, t, s, f)),
                    {
                      correctWork: +n,
                      totalWork: 1,
                      intermediates: { actual: e, expected: t },
                    }
                  );
                },
                e?.location,
                t?.location
              );
            }, i.Placement)
          ),
          paramConfigs: [
            {
              name: "underThreshold",
              label: "Clipping Margin Threshold",
              type: "number",
              defaultValue: 2,
            },
            {
              name: "overThreshold",
              label: "Oversizing Margin Threshold",
              type: "number",
              defaultValue: 5,
            },
          ],
        },
        documentTranscriptionDate: {
          taskTypes: [s.TaskType.DocumentTranscription],
          title: "document transcription date",
          graderFn: o.gradePerFrame(
            p(
              (e, t) =>
                o.gradeIfNotMissing(
                  (e, t) => ({
                    correctWork:
                      e.year === t.year &&
                      e.month === t.month &&
                      e.day === t.day
                        ? 1
                        : 0,
                    totalWork: 1,
                    intermediates: { actual: e, expected: t },
                  }),
                  e?.date,
                  t?.date
                ),
              i.Date
            )
          ),
        },
        documentTranscriptionMoney: {
          taskTypes: [s.TaskType.DocumentTranscription],
          title: "document transcription money",
          graderFn: o.gradePerFrame(
            p(
              (e, t) =>
                o.gradeIfNotMissing(
                  (e, t) => ({
                    correctWork: e.amount === t.amount ? 1 : 0,
                    totalWork: 1,
                    intermediates: { actual: e, expected: t },
                  }),
                  e?.money,
                  t?.money
                ),
              i.Money
            )
          ),
        },
        documentTranscriptionCheckbox: {
          taskTypes: [s.TaskType.DocumentTranscription],
          title: "document transcription checkbox",
          graderFn: o.gradePerFrame(
            p(
              (e, t) =>
                ((e, t) => {
                  if (a.default.isNil(e) && a.default.isNil(t))
                    return { correctWork: 0, totalWork: 0 };
                  return {
                    correctWork: !e === !t ? 1 : 0,
                    totalWork: 1,
                    intermediates: { actual: e, expected: t },
                  };
                })(e?.checked, t?.checked),
              i.Checkbox
            )
          ),
        },
        documentTranscriptionSelect: {
          taskTypes: [s.TaskType.DocumentTranscription],
          title: "document transcription select",
          graderFn: o.gradePerFrame(
            p(
              (e, t) =>
                o.gradeIfNotMissing(
                  (e, t) => ({
                    correctWork: h(e, t),
                    totalWork: 1,
                    intermediates: { actual: e, expected: t },
                  }),
                  e?.selected,
                  t?.selected
                ),
              i.Select
            )
          ),
        },
        documentTranscriptionPageRange: {
          taskTypes: [s.TaskType.DocumentTranscription],
          title: "document transcription page range iou",
          graderFn: o.gradePerFrame(
            p(
              (e, t) =>
                o.gradeIfNotMissing(
                  ([n, r], [i, o]) => {
                    const s =
                      (a.default.min([r, o]) - a.default.max([n, i]) + 1) /
                      (a.default.max([r, o]) - a.default.min([n, i]) + 1);
                    return {
                      correctWork: s > 0 ? s : 0,
                      totalWork: 1,
                      intermediates: { actual: e, expected: t },
                    };
                  },
                  e?.pageRange,
                  t?.pageRange
                ),
              i.PageRange
            )
          ),
        },
      });
      t.default = m;
    },
    587005: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default =
          t.ELLIPSE_GRADER_IOU_DIFF_THRESHOLD =
          t.ELLIPSE_DISTANCE_IOU_THRESHOLD =
            void 0);
      var r = n(167469),
        i = n(991984),
        o = n(440169);
      t.ELLIPSE_DISTANCE_IOU_THRESHOLD = 0.6;
      t.ELLIPSE_GRADER_IOU_DIFF_THRESHOLD = 0.9;
      var a = {
        ellipseIou: {
          taskTypes: [r.TaskType.EllipseAnnotation],
          title: "Ellipse Intersection-Over-Union",
          graderFn: i.gradePerFrame((e, t, n, { threshold: r = 0.9 }) => ({
            ellipseIou: i.gradeIfNotMissing(
              (e, t) => {
                try {
                  const n = o.genericIou(e, t);
                  return {
                    correctWork: +(n >= r),
                    totalWork: 1,
                    intermediates: { iou: n },
                  };
                } catch (n) {
                  return { correctWork: 0, totalWork: 1 };
                }
              },
              e,
              t
            ),
          })),
          paramConfigs: [
            { name: "threshold", label: "IoU Threshold", type: "number" },
          ],
        },
      };
      t.default = a;
    },
    464746: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default = t.evaluationProjectGrader = void 0);
      var r = n(167469);
      const i = "evaluationProject",
        o = (e, t, n, r, o, a, s) => {
          const u = s?.evaluationScores,
            c = u?.correctWork || 0,
            l = u?.totalWork || 0;
          return {
            [i]: {
              correctWork: c,
              totalWork: l,
              graderType: i,
              label: i,
              numTotalFrames: 1,
              numIncorrectFrames: Math.max(0, Math.trunc(l) - Math.trunc(c)),
              errorType: i,
            },
          };
        };
      t.evaluationProjectGrader = o;
      var a = Object.freeze({
        [i]: {
          taskTypes: [
            r.TaskType.TextCollection,
            r.TaskType.NamedEntityRecognition,
          ],
          title: "Evaluation project",
          graderFn: o,
          global: !0,
        },
      });
      t.default = a;
    },
    995906: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default =
          t.DEFAULT_POINT_DISTANCE_THRESHOLD =
          t.DEFAULT_BOX_POSITION_THRESHOLD_PX =
          t.DEFAULT_BOX_DIMENSION_THRESHOLD_PX =
          t.DEFAULT_MAX_THRESHOLD_PX =
          t.DEFAULT_MIN_THRESHOLD_PX =
          t.DEFAULT_IOU_THRESHOLD =
          t.DEFAULT_EDGE_THRESHOLD =
          t.BOX_DISTANCE_LABEL_BIAS =
          t.BOX_DISTANCE_IOU_THRESHOLD =
            void 0);
      var r = n(167469),
        i = n(991984),
        o = n(362714),
        a = n(260160),
        s = n(242603);
      t.BOX_DISTANCE_IOU_THRESHOLD = 0.2;
      t.BOX_DISTANCE_LABEL_BIAS = 0.075;
      const u = 0.05;
      t.DEFAULT_EDGE_THRESHOLD = u;
      const c = 0.75;
      t.DEFAULT_IOU_THRESHOLD = c;
      t.DEFAULT_MIN_THRESHOLD_PX = 5;
      t.DEFAULT_MAX_THRESHOLD_PX = 15;
      t.DEFAULT_BOX_DIMENSION_THRESHOLD_PX = 5;
      t.DEFAULT_BOX_POSITION_THRESHOLD_PX = 5;
      t.DEFAULT_POINT_DISTANCE_THRESHOLD = 6;
      const l = [r.TaskType.PolygonAnnotation];
      var f = {
        extremalPointEdges: {
          taskTypes: l,
          title: "Extremal Point Box Edge positions",
          graderFn: i.gradePerFrame(
            (
              e,
              t,
              n,
              {
                threshold: r = 0.05,
                leftThreshold: i = r,
                rightThreshold: s = r,
                topThreshold: u = r,
                bottomThreshold: c = r,
                minThresholdPx: l = 5,
                maxThresholdPx: f = 15,
                useBoundedThresholds: d = !1,
              }
            ) => {
              const h = a.extremalPointAnnotToBoxAnnot(e),
                p = a.extremalPointAnnotToBoxAnnot(t);
              return o.edgeGrader(h, p, n, {
                threshold: r,
                leftThreshold: i,
                rightThreshold: s,
                topThreshold: u,
                bottomThreshold: c,
                minThresholdPx: l,
                maxThresholdPx: f,
                useBoundedThresholds: d,
              });
            }
          ),
          paramConfigs: [
            {
              name: "threshold",
              label: "Default Edge Threshold",
              type: "number",
              defaultValue: u,
            },
            {
              name: "leftThreshold",
              label: "Left Threshold",
              type: "number",
              defaultValue: u,
            },
            {
              name: "rightThreshold",
              label: "Right Threshold",
              type: "number",
              defaultValue: u,
            },
            {
              name: "bottomThreshold",
              label: "Bottom Threshold",
              type: "number",
              defaultValue: u,
            },
            {
              name: "topThreshold",
              label: "Top Threshold",
              type: "number",
              defaultValue: u,
            },
            {
              name: "maxThresholdPx",
              label: "Maximum Edge Threshold",
              type: "number",
              defaultValue: 15,
            },
            {
              name: "minThresholdPx",
              label: "Minimum Edge Threshold",
              type: "number",
              defaultValue: 5,
            },
            {
              name: "useBoundedThresholds",
              label: "Whether to bound thresholds",
              type: "boolean",
              defaultValue: !1,
            },
          ],
        },
        extremalPointIOU: {
          taskTypes: l,
          title: "Extremal Point Box size and position",
          graderFn: i.gradePerFrame((e, t, n, { threshold: r = 0.75 }) => {
            const i = a.extremalPointAnnotToBoxAnnot(e),
              s = a.extremalPointAnnotToBoxAnnot(t);
            return o.iouGrader(i, s, n, { threshold: r });
          }),
          paramConfigs: [
            {
              name: "threshold",
              label: "IOU Threshold",
              type: "number",
              defaultValue: c,
            },
          ],
        },
        extremalPointDimensions: {
          taskTypes: l,
          title: "Extremal Point Box Dimensions grader",
          graderFn: i.gradePerFrame(
            (
              e,
              t,
              n,
              {
                threshold: r = 5,
                heightThreshold: i = r,
                widthThreshold: s = r,
              }
            ) => {
              const u = a.extremalPointAnnotToBoxAnnot(e),
                c = a.extremalPointAnnotToBoxAnnot(t);
              return o.boxDimensionsGrader(u, c, n, {
                threshold: r,
                heightThreshold: i,
                widthThreshold: s,
              });
            }
          ),
          paramConfigs: [
            {
              name: "threshold",
              label: "Default Dimension Threshold",
              type: "number",
              defaultValue: 5,
            },
            {
              name: "heightThreshold",
              label: "Height Threshold",
              type: "number",
              defaultValue: 5,
            },
            {
              name: "widthThreshold",
              label: "Width Threshold",
              type: "number",
              defaultValue: 5,
            },
          ],
        },
        extremalPointDistance: {
          taskTypes: l,
          title: "Extremal Point Distance grader",
          graderFn: i.gradePerFrame((e, t, n, { threshold: r = 6 }) => {
            const i = a.standardizeExtremalPoints(e),
              o = a.standardizeExtremalPoints(t);
            return {
              top: s.distanceGrader(i.top, o.top, n, { threshold: r })
                .pointDistance,
              left: s.distanceGrader(i.left, o.left, n, { threshold: r })
                .pointDistance,
              bottom: s.distanceGrader(i.bottom, o.bottom, n, { threshold: r })
                .pointDistance,
              right: s.distanceGrader(i.right, o.right, n, { threshold: r })
                .pointDistance,
            };
          }),
          paramConfigs: [
            {
              name: "threshold",
              label: "Distance Threshold",
              type: "number",
              defaultValue: 6,
            },
          ],
        },
      };
      t.default = f;
    },
    583456: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default = t.fireflyDirectMatchGrader = void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(167469),
        a = n(991984),
        s = n(222357),
        u = n(963494),
        c = n(513254);
      const l = (e, t, n, r) => {
          if (
            1 !== e.length ||
            1 !== t.length ||
            i.default.isBoolean(e[0]) ||
            i.default.isBoolean(t[0]) ||
            !r
          )
            return 0;
          const o = e[0],
            a = t[0],
            s = Number(o),
            c = Number(a),
            l =
              r.type === u.TextCollectionFieldType.Category
                ? r.choices.length - 1
                : r.options.length - 1,
            f = (e, t) => (e >= 0.8 * t ? 2 : e >= 0.5 * t ? 1 : 0),
            d = f(s, l),
            h = f(c, l);
          return d === h ? 1 : 1 === Math.abs(d - h) ? 0.5 : 0;
        },
        f = (e, t, n, r, o, f) => ({
          fireflyDirectMatch: a.gradeIfNotMissing(
            (e, t) => {
              if (
                [
                  u.TextCollectionFieldType.Category,
                  u.TextCollectionFieldType.Autocomplete,
                ].includes(t.type) &&
                c.shouldGradeField(
                  t.field_id,
                  r?.fieldsWhitelist || f?.fieldsWhitelist,
                  !!e.fieldWasReadOnly
                )
              ) {
                const n = f?.taskFields?.find((e) => e.field_id === t.field_id);
                return {
                  correctWork: i.default.sum(
                    e.response.map((e) =>
                      e.result === s.GraderResult.Correct
                        ? 1
                        : e.result === s.GraderResult.Incorrect
                        ? t.type === u.TextCollectionFieldType.Category
                          ? l(e.expected, e.given, 0, n)
                          : l([e.expected], [e.given], 0, n)
                        : 0
                    )
                  ),
                  totalWork: t.response.length,
                };
              }
              return { correctWork: 0, totalWork: 0 };
            },
            e,
            t
          ),
        });
      t.fireflyDirectMatchGrader = f;
      var d = {
        fireflyDirectMatchGrader: {
          taskTypes: [o.TaskType.TextCollection],
          title: "firefly direct match grader",
          graderFn: a.gradePerFrame(f),
        },
      };
      t.default = d;
    },
    819354: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        Object.defineProperty(t, "marginLineLengthGrader", {
          enumerable: !0,
          get: function () {
            return r.marginLineLengthGrader;
          },
        }),
        Object.defineProperty(t, "zCoordinateMarginLineGrader", {
          enumerable: !0,
          get: function () {
            return i.zCoordinateMarginLineGrader;
          },
        });
      var r = n(40025),
        i = n(362508);
    },
    40025: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.marginLineLengthGrader =
          t.marginLineLength =
          t.LINE_GRADER_MARGIN_THRESHOLD =
            void 0);
      var r = n(167469),
        i = n(440169),
        o = n(991984);
      t.LINE_GRADER_MARGIN_THRESHOLD = 5;
      const a = (e, t, n, { threshold: r = 5 }) => ({
        marginLineLength: o.gradeIfNotMissing(
          (e, t) => {
            const {
              lengthCorrectUserLine: n,
              lengthTotalUserLine: o,
              lengthTotalCorrectLine: a,
            } = i.getLengthOfLineInMargin(e.vertices, t.vertices, r);
            return { correctWork: (n / Math.max(a, o)) * a, totalWork: a };
          },
          e,
          t
        ),
      });
      t.marginLineLength = a;
      const s = {
        taskTypes: [r.TaskType.LineAnnotation],
        title: "GIS Margin Line Length Grader",
        graderFn: o.gradePerFrame(a),
        paramConfigs: [
          {
            name: "threshold",
            label: "Margin Threshold",
            type: "number",
            defaultValue: 5,
          },
        ],
      };
      t.marginLineLengthGrader = s;
    },
    362508: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.zCoordinateMarginLineGrader =
          t.zCoordMarginLineLength =
          t.XY_LINE_GRADER_MARGIN_THRESHOLD =
          t.Z_LINE_GRADER_MARGIN_THRESHOLD =
            void 0);
      var r = n(167469),
        i = n(440169),
        o = n(991984);
      t.Z_LINE_GRADER_MARGIN_THRESHOLD = 0.1;
      t.XY_LINE_GRADER_MARGIN_THRESHOLD = 5;
      const a = (e, t, n, { zthreshold: r = 0.1, xythreshold: a = 5 }) => ({
        zCoordMarginLineLength: o.gradeIfNotMissing(
          (e, t) => {
            const {
              lengthCorrectUserLine: n,
              lengthTotalUserLine: o,
              lengthTotalCorrectLine: s,
            } = i.getLengthOfLineInMarginZCoordinate(
              e.vertices,
              t.vertices,
              r,
              a
            );
            return { correctWork: (n / Math.max(s, o)) * s, totalWork: s };
          },
          e,
          t
        ),
      });
      t.zCoordMarginLineLength = a;
      const s = {
        taskTypes: [r.TaskType.LidarTopdown],
        title: "GIS Margin Z Coordinate Grader",
        graderFn: o.gradePerFrame(a),
        paramConfigs: [
          {
            name: "zthreshold",
            label: "Margin Threshold for z coordinate",
            type: "number",
            defaultValue: 0.1,
          },
          {
            name: "xythreshold",
            label: "Margin Threshold for matching line",
            type: "number",
            defaultValue: 5,
          },
        ],
      };
      t.zCoordinateMarginLineGrader = s;
    },
    401387: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        Object.defineProperty(t, "linksGrader", {
          enumerable: !0,
          get: function () {
            return r.linksGrader;
          },
        }),
        Object.defineProperty(t, "nonLinksAttributeGrader", {
          enumerable: !0,
          get: function () {
            return i.nonLinksAttributeGrader;
          },
        });
      var r = n(682675),
        i = n(424590);
    },
    682675: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.linksGrader =
          t.calculateCorrectAndTotalWork =
          t.getLinkedAttributeToAnnotations =
          t.fromAnnotationLabelChangedLinkingGraderGenerator =
          t.toAnnotationMissingOrLabelChangedLinkingGraderGenerator =
          t.toAndFromAnnotationExistLinkingGraderGenerator =
          t.linksGraderFn =
            void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(599789),
        a = n(991984),
        s = n(942991);
      const u = (e, t, n, r, u, d) => {
        u || (u = {});
        const h = i.default.get(u, "linkKeys", []),
          p = t?.frames?.[e],
          g = n?.frames?.[e],
          m = i.default.union(
            i.default.keys(g?.attributes),
            i.default.keys(p?.attributes)
          ),
          y = d?.matchedAnnotationsListContext,
          b = i.default.filter(m, (e) => {
            const t = d?.attributeTypes;
            return (
              !!s.toLinkingAttributeKeyBase(e, h) ||
              t?.[e] === o.AnnotationAttributeType.Linked
            );
          }),
          v = i.default.compact(
            i.default.map(b, (e) => s.toLinkingAttributeKeyBase(e, h))
          ),
          _ = [...new Set(v)],
          x = {};
        return (
          _.forEach((e) => {
            const t = c(e, y),
              n = l(e, y),
              r = f(e, y);
            (x[`linking_${e}`] = a.gradeIfNotMissing(t, p, g)),
              (x[`linking_${e}_UNMATCHED_TO_ANN`] = a.gradeIfNotMissing(
                n,
                p,
                g
              )),
              (x[`linking_${e}_FROM_LABELS_DIFFERENT`] = a.gradeIfNotMissing(
                r,
                p,
                g
              ));
          }),
          x
        );
      };
      t.linksGraderFn = u;
      const c = (e, t) => (n, r) => {
        const i = n?.label,
          o = r?.label;
        if (i !== o) return { correctWork: 0, totalWork: 0 };
        const { originalToAnnotations: a, correctToAnnotations: s } = d(
            e,
            n,
            r,
            t
          ),
          u = a.filter(
            (e) =>
              e?.correctAnnotation &&
              e?.correctAnnotation?.props.label ===
                e?.currentAnnotation?.props.label
          ),
          c = s.filter(
            (e) =>
              e?.correctAnnotation &&
              e?.correctAnnotation?.props.label ===
                e?.currentAnnotation?.props.label
          ),
          { correctWork: l, totalWork: f, intermediates: p } = h(u, c, !0);
        return { correctWork: l, totalWork: f, intermediates: p };
      };
      t.toAndFromAnnotationExistLinkingGraderGenerator = c;
      const l = (e, t) => (n, r) => {
        const i = n?.label,
          o = r?.label;
        if (i !== o) return { correctWork: 0, totalWork: 0 };
        const { originalToAnnotations: a, correctToAnnotations: s } = d(
            e,
            n,
            r,
            t
          ),
          u = a.filter(
            (e) =>
              !e?.correctAnnotation ||
              e.correctAnnotation?.props.label !==
                e.currentAnnotation?.props.label
          ),
          c = s.filter(
            (e) =>
              !e?.correctAnnotation ||
              e.correctAnnotation?.props.label !==
                e.currentAnnotation?.props.label
          ),
          { correctWork: l, totalWork: f } = h(u, c);
        return { correctWork: l, totalWork: f };
      };
      t.toAnnotationMissingOrLabelChangedLinkingGraderGenerator = l;
      const f = (e, t) => (n, r) => {
        const i = n?.label,
          o = r?.label;
        if (i === o) return { correctWork: 0, totalWork: 0 };
        const { originalToAnnotations: a, correctToAnnotations: s } = d(
            e,
            n,
            r,
            t
          ),
          { totalWork: u } = h(a, s);
        return { correctWork: 0, totalWork: u };
      };
      t.fromAnnotationLabelChangedLinkingGraderGenerator = f;
      const d = (e, t, n, r) => {
        const o = t?.attributes,
          a = n?.attributes,
          s = Object.values(i.default.pickBy(o, (t, n) => n.includes(e))),
          u = Object.values(i.default.pickBy(a, (t, n) => n.includes(e)));
        return {
          originalToAnnotations: s.map((e) =>
            r?.find((t) => t.currentAnnotation?.props?.id === e)
          ),
          correctToAnnotations: u.map((e) =>
            r?.find((t) => t.correctAnnotation?.props?.id === e)
          ),
        };
      };
      t.getLinkedAttributeToAnnotations = d;
      const h = (e, t, n = !1) => {
        const r = e.map((e) => e?.correctAnnotation?.props?.id),
          o = t.map((e) => e?.correctAnnotation?.props?.id),
          a = Math.max(e.length, t.length);
        let s = i.default.intersectionBy(r, o).length;
        const u = i.default.difference(r, o);
        return (
          n && u && u.length > 0 && (s -= u.length),
          {
            correctWork: s,
            totalWork: a,
            intermediates: {
              extraneous: u,
              missing: i.default.difference(o, r),
            },
          }
        );
      };
      t.calculateCorrectAndTotalWork = h;
      const p = {
        taskTypes: o.twoDTypes,
        title: "Links Grader",
        graderFn: a.gradePerFrameWithContext(u, !1, !1, !1),
      };
      t.linksGrader = p;
    },
    424590: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.nonLinksAttributeGrader =
          t.defaultAttributeGraderFn =
          t.attributeGrader =
            void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(599789),
        a = n(991984),
        s = n(942991);
      const u = (e, t, n, r, u, l) => {
        u || (u = {});
        const f = i.default.get(u, "linkKeys", []),
          d = t?.frames?.[e],
          h = n?.frames?.[e],
          p = i.default.keys(h?.attributes || d?.attributes),
          g = i.default.filter(
            p,
            (e) =>
              l?.attributeTypes?.[e] !== o.AnnotationAttributeType.Linked &&
              !s.toLinkingAttributeKeyBase(e, f)
          ),
          m = {};
        return (
          i.default.forEach(g, (e) => {
            const t = c(e, u);
            m[`attribute_${e}`] = a.gradeIfNotMissing(t, d, h);
          }),
          m
        );
      };
      t.attributeGrader = u;
      const c = (e, t) => (n, r) => l(e, n, r, t),
        l = (e, t, n) => {
          let r = t?.attributes?.[e],
            o = n?.attributes?.[e];
          return (
            Array.isArray(r) &&
              Array.isArray(o) &&
              ((r = i.default.sortBy(r)), (o = i.default.sortBy(o))),
            { correctWork: +i.default.isEqual(r, o), totalWork: 1 }
          );
        };
      t.defaultAttributeGraderFn = l;
      const f = {
        taskTypes: o.twoDTypes,
        title: "Non-links Attribute Grader",
        graderFn: a.gradePerFrameWithContext(u, !1),
      };
      t.nonLinksAttributeGrader = f;
    },
    942991: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.toLinkingAttributeKeyBase = void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r };
      t.toLinkingAttributeKeyBase = (e, t) => {
        const n = i.default.sortBy(t, (e) => -e.length);
        return i.default.find(n, (t) => e.includes(t));
      };
    },
    524183: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default =
          t.gradersForTaskType =
          t.calculatePathLength =
          t.extraneousGrader =
            void 0);
      var r = X(n(298784)),
        i = n(599789),
        o = n(167469),
        a = n(308408),
        s = n(19161),
        u = n(991984),
        c = X(n(205308)),
        l = X(n(362714)),
        f = X(n(587005)),
        d = X(n(278127)),
        h = X(n(729493)),
        p = X(n(147368)),
        g = X(n(233193)),
        m = X(n(152672)),
        y = X(n(513254)),
        b = X(n(464746)),
        v = X(n(909452)),
        _ = X(n(896135)),
        x = X(n(242603)),
        T = X(n(355427)),
        M = X(n(216383)),
        w = X(n(642101)),
        A = n(313220),
        k = X(n(63226)),
        E = X(n(567208)),
        P = X(n(30353)),
        C = X(n(272455)),
        L = X(n(875611)),
        I = X(n(944129)),
        S = X(n(247915)),
        O = X(n(835802)),
        N = X(n(798921)),
        F = X(n(856753)),
        D = X(n(197845)),
        R = X(n(580792)),
        G = X(n(995906)),
        B = $(n(68380)),
        W = $(n(487714)),
        j = $(n(190913)),
        z = $(n(819354)),
        U = $(n(388746)),
        H = $(n(401387)),
        V = X(n(410718)),
        q = X(n(583456)),
        Z = X(n(844162)),
        Y = X(n(763081));
      function X(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function $(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var n in e)
            if (Object.prototype.hasOwnProperty.call(e, n)) {
              var r =
                Object.defineProperty && Object.getOwnPropertyDescriptor
                  ? Object.getOwnPropertyDescriptor(e, n)
                  : {};
              r.get || r.set ? Object.defineProperty(t, n, r) : (t[n] = e[n]);
            }
        return (t.default = e), t;
      }
      const K = (e, t, n, i, a, s) => {
        const u = r.default.keys(e && e.frames),
          c = r.default.keys(t && t.frames),
          l = r.default.keys(s && s.frames),
          f = r.default.union(u, c, l),
          d = c.length || u.length || l.length || 1,
          h = r.default.difference(u, c),
          p = r.default.map(f, (a, u) => {
            const c = r.default.get(e, ["frames", a]),
              l = r.default.get(t, ["frames", a]),
              d = r.default.get(s, ["frames", a]),
              h =
                n?.props.overriddenTaskType === o.TaskType.EventAnnotation &&
                !!i?.eventEndpointLeniency &&
                (u < i.eventEndpointLeniency ||
                  u >= f.length - i.eventEndpointLeniency);
            return l || h
              ? {
                  frame: a,
                  correctWork: 0,
                  totalWork: 0,
                  relativeCorrectWork: 0,
                  relativeTotalWork: 0,
                  introducedErrorCorrectWork: 0,
                }
              : c && d
              ? {
                  frame: a,
                  correctWork: -1,
                  totalWork: 0,
                  relativeCorrectWork: 0,
                  relativeTotalWork: 1,
                  introducedErrorCorrectWork: 0,
                  carriedOverWork: 1,
                }
              : c && !d
              ? {
                  frame: a,
                  correctWork: -1,
                  totalWork: 0,
                  relativeCorrectWork: -1,
                  relativeTotalWork: 0,
                  introducedErrorCorrectWork: -1,
                }
              : !c && d
              ? {
                  frame: a,
                  correctWork: 0,
                  totalWork: 0,
                  relativeCorrectWork: 1,
                  relativeTotalWork: 1,
                  introducedErrorCorrectWork: 0,
                }
              : void 0;
          }),
          g = r.default.map(
            r.default.filter(
              p,
              (e) => +(e?.relativeCorrectWork !== e?.relativeTotalWork)
            ),
            "frame"
          ),
          m = g.length,
          y = -r.default.sumBy(p, "correctWork");
        return {
          extraneous: {
            correctWork: r.default.sumBy(p, "correctWork") / d,
            totalWork: 0,
            relativeCorrectWork: r.default.sumBy(p, "relativeCorrectWork") / d,
            relativeTotalWork: r.default.sumBy(p, "relativeTotalWork") / d,
            introducedErrorCorrectWork:
              r.default.sumBy(p, "introducedErrorCorrectWork") / d,
            carriedOverWork:
              r.default.sumBy(p, (e) => e?.carriedOverWork ?? 0) / d,
            incorrectFrames: h,
            relativeIncorrectFrames: g,
            errorType: "extraneous",
            numIncorrectFrames: y,
            numTotalFrames: d,
            numRelativeIncorrectFrames: m,
          },
        };
      };
      t.extraneousGrader = K;
      const Q = (e, t, n, i = 1, o = 1) => {
        const a = [],
          u = [],
          c = s.generateChildToParentChoiceMapping(n);
        let l = s.getChoice(n, e);
        for (; !r.default.isNil(l); ) a.push(l), (l = c.get(l));
        let f = s.getChoice(n, t);
        for (; !r.default.isNil(f); ) u.push(f), (f = c.get(f));
        a.reverse(), u.reverse();
        let d = 0;
        for (; a[d] === u[d] && !r.default.isNil(u[d]); ) d += 1;
        if (0 === d && u.length !== d) return 1e3;
        return o * (u.length - d) + i * (a.length - d);
      };
      t.calculatePathLength = Q;
      const J = r.default.values(o.TaskType),
        ee = {
          missing: {
            taskTypes: J,
            title: "Missing",
            graderFn: u.gradePerFrame(
              (e, t) =>
                r.default.findIndex(
                  t.acceptedAnnotations,
                  ({ annotation: e }) => r.default.isNil(e)
                ) >= 0 && r.default.isEmpty(e)
                  ? { missing: { correctWork: 1, totalWork: 1 } }
                  : {
                      missing: u.gradeIfNotMissing(
                        () => ({ correctWork: 1, totalWork: 1 }),
                        e,
                        t
                      ),
                    },
              !0
            ),
          },
          extraneous: { taskTypes: J, title: "Extraneous", graderFn: K },
          labels: {
            taskTypes: J,
            title: "Labels",
            graderFn: u.gradeSingle((e, t, n, i = {}, o) => {
              const { partialCredit: s, penaltyFactor: u = 0.5 } = i;
              let c = 0;
              if (s) {
                if (
                  e.props.overriddenTaskType === t.props.overriddenTaskType &&
                  !r.default.isNil(e.props.overriddenTaskType)
                ) {
                  const n = a.taskTypeToGeometry[e.props.overriddenTaskType];
                  if (r.default.isNil(n))
                    throw new Error(
                      `No geometry corresponding to task type ${e.props.overriddenTaskType} for original annotation ${e.props.id}`
                    );
                  const i = o.labelChoices?.[n];
                  if (r.default.isNil(i))
                    throw new Error(
                      `No label choices corresponding to geometry ${n} for original annotation ${e.props.id}`
                    );
                  c = +(
                    u **
                    (0.5 * Q(e?.props?.label, t?.props?.label, i))
                  ).toFixed(3);
                }
              } else c = +(e?.props?.label === t?.props?.label);
              return {
                correctWork: c,
                totalWork: 1,
                incorrectFrames:
                  0 === c
                    ? r.default.union(
                        ...[e, t].map((e) => r.default.keys(e?.frames))
                      )
                    : [],
              };
            }, "label"),
            paramConfigs: [
              {
                name: "partialCredit",
                label: "Give partial credit",
                type: "boolean",
                defaultValue: !1,
              },
              {
                name: "penaltyFactor",
                label: "Penalty multiplier for each level",
                type: "number",
              },
            ],
          },
          lenientLabels: {
            taskTypes: J,
            title: "Lenient Labels",
            graderFn: u.gradeSingle((e, t, n, i = {}) => {
              const o = e?.props?.label,
                a = t?.props?.label;
              let s = +(o === a);
              return (
                r.default
                  .get(i, "partialCreditKeysAndValues", [])
                  .forEach((e) => {
                    e.initialLabel === o &&
                      e.expectedLabel === a &&
                      (s = e.partialCredit);
                  }),
                {
                  correctWork: s,
                  totalWork: 1,
                  incorrectFrames:
                    0 === s
                      ? r.default.union(
                          ...[e, t].map((e) => r.default.keys(e?.frames))
                        )
                      : [],
                }
              );
            }, "lenientLabel"),
            paramConfigs: [
              {
                name: "partialCreditKeysAndValues",
                label: "ordered pairs of labels to give partial credit for",
                type: "any",
                defaultValue: [],
              },
            ],
          },
          attributes: {
            taskTypes: [...i.twoDTypes, ...i.lidarTypes],
            title: "Attributes",
            graderFn: u.gradePerFrameWithContext(c.default, !1),
            paramConfigs: [
              {
                name: "angleDiffThresholdDegrees",
                label: "Angle Diff Threshold (Degrees)",
                type: "number",
              },
              {
                name: "xlineDiffThresholdFraction",
                label: "XLine Diff Threshold (Fraction of Correct Width)",
                type: "number",
              },
              {
                name: "ylineDiffThresholdFraction",
                label: "YLine Diff Threshold (Fraction of Correct Height)",
                type: "number",
              },
              {
                name: "enabledKeys",
                label: "Only run graders for these attributes",
                type: "any",
              },
              {
                name: "ltdPerFrameKeys",
                label: "Per Frame LTD Attributes",
                type: "any",
              },
            ],
          },
        },
        te = {
          ...ee,
          linkingUuid: {
            taskTypes: i.lidarLinkingSubtaskTypes,
            title: "Linking Uuid",
            graderFn: u.gradePerFrame(A.linkingUuidGrader),
          },
          ...l.default,
          ...f.default,
          ...d.default,
          ...h.default,
          ...F.default,
          ...D.default,
          ...R.default,
          ...C.default,
          ...p.default,
          ...g.default,
          ...z,
          ...m.default,
          ...y.default,
          ...b.default,
          ...v.default,
          ..._.default,
          ...x.default,
          ...T.default,
          ...M.default,
          ...E.default,
          ...G.default,
          ...V.default,
          ...Z.default,
          ...Y.default,
          ...w.default,
          ...k.default,
          ...L.default,
          ...I.default,
          ...S.default,
          ...O.default,
          ...N.default,
          ...q.default,
          ...B,
          ...W,
          ...j,
          ...P.default,
          ...U,
          ...H,
        },
        ne = {
          [o.TaskType.Annotation]: {
            ...ee,
            ...l.default,
            linkingUuid: te.linkingUuid,
            beeMappingLinkingGrader: W.beeMappingLinkingGrader,
            beeMappingAttributeGrader: W.beeMappingAttributeGrader,
            beeMappingLinterDismissalGrader: W.beeMappingLinterDismissalGrader,
          },
          [o.TaskType.VideoBoxAnnotation]: {
            ...ee,
            ...l.default,
            beeMappingLinkingGrader: W.beeMappingLinkingGrader,
            beeMappingAttributeGrader: W.beeMappingAttributeGrader,
          },
          [o.TaskType.LidarLinking]: { ...ee, ...l.default },
          [o.TaskType.PolygonAnnotation]: {
            ...ee,
            ...T.default,
            ...G.default,
            ...j,
            beeMappingLinkingGrader: W.beeMappingLinkingGrader,
            beeMappingAttributeGrader: W.beeMappingAttributeGrader,
            beeMappingLinterDismissalGrader: W.beeMappingLinterDismissalGrader,
          },
          [o.TaskType.CuboidAnnotation]: {
            ...ee,
            ...d.default,
            beeMappingLinkingGrader: W.beeMappingLinkingGrader,
            beeMappingAttributeGrader: W.beeMappingAttributeGrader,
            beeMappingLinterDismissalGrader: W.beeMappingLinterDismissalGrader,
          },
          [o.TaskType.LineAnnotation]: {
            ...ee,
            ...g.default,
            beeMappingGlobal: W.beeMappingGlobal,
            beeMappingLinkingGrader: W.beeMappingLinkingGrader,
            beeMappingAttributeGrader: W.beeMappingAttributeGrader,
            beeMappingLinterDismissalGrader: W.beeMappingLinterDismissalGrader,
          },
          [o.TaskType.PointAnnotation]: {
            ...ee,
            ...x.default,
            beeMappingLinkingGrader: W.beeMappingLinkingGrader,
            beeMappingAttributeGrader: W.beeMappingAttributeGrader,
            beeMappingLinterDismissalGrader: W.beeMappingLinterDismissalGrader,
          },
        };
      t.gradersForTaskType = ne;
      var re = te;
      t.default = re;
    },
    875611: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default = t.gradeE5 = void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(167469),
        a = n(991984),
        s = n(39083),
        u = n(74909);
      const c = (e) => ({
          E1: { correctWork: i.default.isEmpty(e) ? 0 : 1, totalWork: 1 },
        }),
        l = (e, t) => ({
          E2: a.ignoreIfMissing(
            (e, t) => ({ correctWork: +(e.uuid === t.uuid), totalWork: 1 }),
            e,
            t
          ),
        }),
        f = (e, t, n, { e3Threshold: r = 1.5 }) => ({
          E3: a.ignoreIfMissing(
            (e, t) => {
              const n = Math.abs(s.computeAngleDiff(e.yaw, t.yaw));
              return {
                correctWork: +(n < r),
                totalWork: 1,
                intermediates: { headingDiff: n },
              };
            },
            e,
            t
          ),
        }),
        d = (
          e,
          t,
          n,
          { e4UpperBoundThreshold: r = 0.15, e4LowerBoundThreshold: i = -0.05 }
        ) => ({
          E4: a.ignoreIfMissing(
            (e, t) => {
              const n = t.dimensions.x - e.dimensions.x,
                o = t.dimensions.y - e.dimensions.y,
                a = t.dimensions.z - e.dimensions.z;
              return {
                correctWork: +(
                  n < r &&
                  o < r &&
                  a < r &&
                  n >= i &&
                  o >= i &&
                  a >= i
                ),
                totalWork: 1,
                intermediates: { wDiff: n, lDiff: o, hDiff: a },
              };
            },
            e,
            t
          ),
        }),
        h = (e, t, n, { e5Threshold: r = 0.2 }) => ({
          E5: a.ignoreIfMissing(
            (e, t) => {
              const n = u.naiveDistance(e.position, t.position);
              return {
                correctWork: +(n < r),
                totalWork: 1,
                intermediates: { positionDiff: n },
              };
            },
            e,
            t
          ),
        });
      t.gradeE5 = h;
      const p = (e, t) => ({
          E7: a.ignoreIfMissing(
            (e, t) => {
              const n = e.label;
              return {
                correctWork: +(n === t.label || "UNKNOWN_ZONE" === n),
                totalWork: 1,
              };
            },
            e,
            t
          ),
        }),
        g = (e, t) => ({
          E8: { correctWork: i.default.isEmpty(t) ? 0 : 1, totalWork: 1 },
        });
      var m = {
        E0: {
          taskTypes: [o.TaskType.LidarAnnotation],
          title: "Falcon E0",
          graderFn: a.gradePerFrame((e, t, n, r) => {
            const i = c(e).E1.correctWork,
              o = l(e, t).E2.correctWork,
              a = f(e, t, 0, r).E3.correctWork,
              s = d(e, t, 0, r).E4.correctWork,
              u = h(e, t, 0, r).E5.correctWork,
              m = p(e, t).E7.correctWork,
              y = g(0, t).E8.correctWork;
            return {
              E0: {
                correctWork: i && o && a && s && u && m && y ? 1 : 0,
                totalWork: 1,
              },
            };
          }, !0),
        },
        E1: {
          taskTypes: [o.TaskType.LidarAnnotation],
          title: "Falcon E1",
          graderFn: a.gradePerFrame(c, !0),
        },
        E2: {
          taskTypes: [o.TaskType.LidarAnnotation],
          title: "Falcon E2",
          graderFn: a.gradePerFrame(l, !0),
        },
        E3: {
          taskTypes: [o.TaskType.LidarAnnotation],
          title: "Falcon E3",
          graderFn: a.gradePerFrame(f, !0),
        },
        E4: {
          taskTypes: [o.TaskType.LidarAnnotation],
          title: "Falcon E4",
          graderFn: a.gradePerFrame(d, !0),
        },
        E5: {
          taskTypes: [o.TaskType.LidarAnnotation],
          title: "Falcon E5",
          graderFn: a.gradePerFrame(h, !0),
        },
        E7: {
          taskTypes: [o.TaskType.LidarAnnotation],
          title: "Falcon E7",
          graderFn: a.gradePerFrame(p, !0),
        },
        E8: {
          taskTypes: [o.TaskType.LidarAnnotation],
          title: "Falcon E8",
          graderFn: a.gradePerFrame(g, !0),
        },
      };
      t.default = m;
    },
    580792: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default = void 0);
      var r = n(167469),
        i = n(991984);
      var o = {
        gridSegmentationMatrixDifference: {
          taskTypes: [r.TaskType.GridSegmentation],
          title: "Grader for Grid Segmentation matrix difference",
          graderFn: i.gradePerFrame((e, t) => ({
            gridSegmentationMatrixDifference: i.gradeIfNotMissing(
              (e, t) => {
                if (
                  e.values.length !== t.values.length ||
                  e.width !== t.width ||
                  e.height !== t.height ||
                  e.values.length !== e.width * e.height
                )
                  throw new Error(
                    "Grid Segmentation values must have the same shape."
                  );
                const n = e.width * e.height;
                let r = 0,
                  i = 0,
                  o = 0;
                for (let a = 0; a < n; a++)
                  (i = e.values[a]), (o = t.values[a]), (r += i !== o ? 1 : 0);
                return {
                  correctWork: 1 - r / n,
                  totalWork: 1,
                  intermediates: {
                    differentValuesCount: r,
                    totalNumbersCount: n,
                  },
                };
              },
              e,
              t
            ),
          })),
        },
      };
      t.default = o;
    },
    729493: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default =
          t.PARAMS_WITH_FRONTEND_VIS =
          t.typedLidarGraders =
          t.sizeGrader =
          t.positionGrader =
          t.headingGrader =
          t.DEFAULT_FACE_POSITION_GRADER_CONFIG =
          t.DEFAULT_GROUP_IOU_THRESHOLD =
          t.DEFAULT_FACE_POSITION_OUTER_THRESHOLD =
          t.DEFAULT_FACE_POSITION_INNER_THRESHOLD =
          t.DEFAULT_PITCH_THRESHOLD =
          t.DEFAULT_BANK_THRESHOLD =
          t.DEFAULT_WEAK_HEADING_THRESHOLD =
          t.DEFAULT_HEADING_THRESHOLD =
          t.DEFAULT_STRICT_Z_THRESHOLD =
          t.DEFAULT_WEAK_Z_THRESHOLD =
          t.DEFAULT_IOU_THRESHOLD =
          t.DEFAULT_DIMENSIONS_THRESHOLD =
          t.DEFAULT_SIZE_THRESHOLD =
          t.DEFAULT_SINGLE_AXIS_POSITION_THRESHOLD =
          t.DEFAULT_POSITION_THRESHOLD =
            void 0);
      var r = n(167469),
        i = f(n(298784)),
        o = n(74909),
        a = n(39083),
        s = n(825555),
        u = n(108040),
        c = f(n(141862)),
        l = n(991984);
      function f(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.DEFAULT_POSITION_THRESHOLD = 0.6;
      t.DEFAULT_SINGLE_AXIS_POSITION_THRESHOLD = 0.2;
      t.DEFAULT_SIZE_THRESHOLD = 0.6;
      const d = 0.25;
      t.DEFAULT_DIMENSIONS_THRESHOLD = d;
      t.DEFAULT_IOU_THRESHOLD = 0.6;
      t.DEFAULT_WEAK_Z_THRESHOLD = 0.2;
      t.DEFAULT_STRICT_Z_THRESHOLD = 0.02;
      const h = 0.17;
      t.DEFAULT_HEADING_THRESHOLD = h;
      t.DEFAULT_WEAK_HEADING_THRESHOLD = 0.78;
      t.DEFAULT_BANK_THRESHOLD = 0.17;
      t.DEFAULT_PITCH_THRESHOLD = 0.17;
      const p = 0.025;
      t.DEFAULT_FACE_POSITION_INNER_THRESHOLD = p;
      const g = 0.1;
      t.DEFAULT_FACE_POSITION_OUTER_THRESHOLD = g;
      t.DEFAULT_GROUP_IOU_THRESHOLD = 0.5;
      const m = () =>
          new s.ParamConfig(s.MULTI_FRAME_PARAM_CONFIG_FLAG, !1, {
            label:
              "Parameterize per-frame. Unchecking will reset all multi-frame parameterization.",
          }),
        y = Object.freeze({
          innerThreshold: p,
          outerThreshold: g,
          rightInnerThreshold: p,
          rightOuterThreshold: g,
          leftInnerThreshold: p,
          leftOuterThreshold: g,
          frontInnerThreshold: p,
          frontOuterThreshold: g,
          backInnerThreshold: p,
          backOuterThreshold: g,
          topInnerThreshold: p,
          topOuterThreshold: g,
          bottomInnerThreshold: p,
          bottomOuterThreshold: g,
        });
      t.DEFAULT_FACE_POSITION_GRADER_CONFIG = y;
      const b =
        (e, t) =>
        (n, r, o, { yawThreshold: s = t, useRadians: u = !0 }) => {
          const f = (u ? s : c.default.deg2rad(s)) % Math.PI;
          return {
            [`${e}${e && "-"}heading`]: l.gradeIfNotMissing(
              (e, t) => {
                const n = Math.abs(a.computeAngleDiff(e.yaw, t.yaw)),
                  r = { headingDiff: n };
                return i.default.includes(
                  ["no label zone", "no label"],
                  i.default.toLower(t.label)
                )
                  ? { correctWork: 1, totalWork: 1, intermediates: r }
                  : { correctWork: +(n < f), totalWork: 1, intermediates: r };
              },
              n,
              r
            ),
          };
        };
      t.headingGrader = b;
      const v = (e, t, n, { threshold: r = 0.6 }) => ({
        position: l.gradeIfNotMissing(
          (e, t) => {
            const n = o.naiveDistance(e.position, t.position);
            return {
              correctWork: +(n < r),
              totalWork: 1,
              intermediates: { positionDiff: n },
            };
          },
          e,
          t
        ),
      });
      t.positionGrader = v;
      const _ = (e, t, n, { threshold: r = 0.6 }) => ({
        size: l.gradeIfNotMissing(
          (e, t) => {
            const n = o.naiveDistance(e.dimensions, t.dimensions);
            return {
              correctWork: +(n < r),
              totalWork: 1,
              intermediates: { sizeDiff: n },
            };
          },
          e,
          t
        ),
      });
      t.sizeGrader = _;
      const x =
          (e, t) =>
          (n, r, i, { threshold: o = t }) => ({
            [`${e}-Z`]: l.gradeIfNotMissing(
              (e, t) => {
                const n = (e) => e.position.z - e.dimensions.z / 2,
                  r = e ? n(e) - n(t) : 0,
                  i = { zDiff: r };
                return {
                  correctWork: +(Math.abs(r) < o),
                  totalWork: 1,
                  intermediates: i,
                };
              },
              n,
              r
            ),
          }),
        T = { precision: 5 },
        M = {
          ...T,
          type: "Number",
          min: 0.001,
          step: 1e-4,
          supportMultiFrameParameterization: !0,
        },
        w = ["innerThreshold", "outerThreshold"],
        A = [
          m(),
          ...i.default
            .keys(y)
            .filter((e) => !w.includes(e))
            .map((e) => {
              const [t, n] = i.default.startCase(e).split(" ");
              return new s.ParamConfig(e, y[e], { label: `${t} (${n})`, ...M });
            }),
        ],
        k = [
          m(),
          ...i.default.map(
            u.Axis,
            (e) =>
              new s.ParamConfig(`${e}Threshold`, 0.2, {
                label: `${e.toUpperCase()} Threshold`,
                min: 0,
                supportMultiFrameParameterization: !0,
                ...T,
              })
          ),
        ],
        E = [
          m(),
          new s.ParamConfig(
            "yawThreshold",
            i.default.round(c.default.rad2deg(h), 3),
            {
              ...T,
              label: "Heading Threshold",
              min: 0,
              supportMultiFrameParameterization: !0,
            }
          ),
          new s.ParamConfig("useRadians", !1, {
            label: "Use Radians",
            type: "boolean",
          }),
        ],
        P = {
          iou_lidar: {
            taskTypes: [
              r.TaskType.LidarAnnotation,
              r.TaskType.LidarCuboidPlane,
            ],
            title: "IOU",
            graderFn: l.gradePerFrame((e, t, n, { threshold: r = 0.6 }) => ({
              iou: l.gradeIfNotMissing(
                (e, t) => {
                  const n = a.computeIOU(
                    e.position,
                    e.dimensions,
                    e.yaw,
                    t.position,
                    t.dimensions,
                    t.yaw
                  );
                  return {
                    correctWork: +(n > r),
                    totalWork: 1,
                    intermediates: { iou: n },
                  };
                },
                e,
                t
              ),
            })),
            paramConfigs: [
              new s.ParamConfig("threshold", 0.6, {
                ...T,
                label: "IOU Threshold",
              }),
            ],
          },
          size: {
            taskTypes: [
              r.TaskType.LidarAnnotation,
              r.TaskType.LidarCuboidPlane,
            ],
            title: "Size",
            graderFn: l.gradePerFrame(_),
            paramConfigs: [new s.ParamConfig("threshold", 0.6, T)],
          },
          dimensions: {
            taskTypes: [r.TaskType.LidarAnnotation],
            title: "Dimensions",
            graderFn: l.gradePerFrame(
              (
                e,
                t,
                n,
                {
                  wThreshold: r = 0.25,
                  lThreshold: o = 0.25,
                  hThreshold: a = 0.25,
                  partialScore: s = !1,
                }
              ) => ({
                dimensions: l.gradeIfNotMissing(
                  (e, t) => {
                    const n = Math.abs(e.dimensions.x - t.dimensions.x),
                      u = Math.abs(e.dimensions.y - t.dimensions.y),
                      c = Math.abs(e.dimensions.z - t.dimensions.z),
                      l = [n < r, u < o, c < a].map((e) => +e),
                      f = { wDiff: n, lDiff: u, hDiff: c, dimensionScores: l };
                    return {
                      correctWork: s
                        ? i.default.sum(l) / 3
                        : +i.default.every(l),
                      totalWork: 1,
                      intermediates: f,
                    };
                  },
                  e,
                  t
                ),
              })
            ),
            paramConfigs: [
              new s.ParamConfig("wThreshold", d, {
                ...T,
                label: "Width Dimension Threshold",
              }),
              new s.ParamConfig("hThreshold", d, {
                ...T,
                label: "Height Dimension Threshold",
              }),
              new s.ParamConfig("lThreshold", d, {
                ...T,
                label: "Length Dimension Threshold",
              }),
              new s.ParamConfig("partialScore", !1, {
                label: "Points for Partial Work",
              }),
            ],
          },
          segmentedDimensions: {
            taskTypes: [
              r.TaskType.LidarAnnotation,
              r.TaskType.LidarCuboidPlane,
            ],
            title: "Segmented Dimensions",
            graderFn: l.gradePerFrame(
              (
                e,
                t,
                n,
                {
                  wThreshold: r = 0.25,
                  lThreshold: i = 0.25,
                  hThreshold: o = 0.25,
                }
              ) => ({
                width: l.gradeIfNotMissing(
                  (e, t) => {
                    const n = Math.abs(e.dimensions.x - t.dimensions.x);
                    return {
                      correctWork: +(n < r),
                      totalWork: 1,
                      intermediates: { diff: n },
                    };
                  },
                  e,
                  t
                ),
                length: l.gradeIfNotMissing(
                  (e, t) => {
                    const n = Math.abs(e.dimensions.y - t.dimensions.y);
                    return {
                      correctWork: +(n < i),
                      totalWork: 1,
                      intermediates: { diff: n },
                    };
                  },
                  e,
                  t
                ),
                height: l.gradeIfNotMissing(
                  (e, t) => {
                    const n = Math.abs(e.dimensions.z - t.dimensions.z);
                    return {
                      correctWork: +(n < o),
                      totalWork: 1,
                      intermediates: { diff: n },
                    };
                  },
                  e,
                  t
                ),
              })
            ),
            paramConfigs: [
              new s.ParamConfig("wThreshold", d, {
                ...T,
                label: "Width Dimension Threshold",
              }),
              new s.ParamConfig("hThreshold", d, {
                ...T,
                label: "Height Dimension Threshold",
              }),
              new s.ParamConfig("lThreshold", d, {
                ...T,
                label: "Length Dimension Threshold",
              }),
            ],
          },
          position: {
            taskTypes: [
              r.TaskType.LidarAnnotation,
              r.TaskType.LidarCuboidPlane,
              r.TaskType.LidarPointAnnotation,
            ],
            title: "Position",
            graderFn: l.gradePerFrame(v),
            paramConfigs: [new s.ParamConfig("threshold", 0.6, T)],
          },
          heading: {
            taskTypes: [
              r.TaskType.LidarAnnotation,
              r.TaskType.LidarCuboidPlane,
            ],
            title: "Heading",
            graderFn: l.gradePerFrame(b("normal", h)),
            supportMultiFrameParameterization: !0,
            paramConfigs: E,
          },
          yaw: {
            taskTypes: [
              r.TaskType.LidarAnnotation,
              r.TaskType.LidarCuboidPlane,
            ],
            title: "Yaw",
            graderFn: l.gradePerFrame(b("", h)),
            supportMultiFrameParameterization: !0,
            paramConfigs: E,
          },
          weakHeading: {
            taskTypes: [
              r.TaskType.LidarAnnotation,
              r.TaskType.LidarCuboidPlane,
            ],
            title: "Weak Heading (45 deg)",
            graderFn: l.gradePerFrame(b("weak", 0.78)),
          },
          bank: {
            taskTypes: [
              r.TaskType.LidarAnnotation,
              r.TaskType.LidarCuboidPlane,
            ],
            title: "Bank",
            graderFn: l.gradePerFrame((e, t, n, { threshold: r = 0.17 }) => ({
              bank: l.gradeIfNotMissing(
                (e, t) => {
                  const n = Math.abs(a.computeAngleDiff(e.roll, t.roll));
                  return {
                    correctWork: +(n < r),
                    totalWork: 1,
                    intermediates: { bankDiff: n },
                  };
                },
                e,
                t
              ),
            })),
          },
          pitch: {
            taskTypes: [
              r.TaskType.LidarAnnotation,
              r.TaskType.LidarCuboidPlane,
            ],
            title: "Pitch",
            graderFn: l.gradePerFrame((e, t, n, { threshold: r = 0.17 }) => ({
              pitch: l.gradeIfNotMissing(
                (e, t) => {
                  const n = Math.abs(a.computeAngleDiff(e.pitch, t.pitch));
                  return {
                    correctWork: +(n < r),
                    totalWork: 1,
                    intermediates: { pitchDiff: n },
                  };
                },
                e,
                t
              ),
            })),
          },
          stationary: {
            taskTypes: [
              r.TaskType.LidarAnnotation,
              r.TaskType.LidarCuboidPlane,
            ],
            title: "Stationary",
            graderFn: l.gradeSingle(
              (e, t) => ({
                correctWork: +(
                  i.default.get(e, "props.stationary") ===
                  i.default.get(t, "props.stationary")
                ),
                totalWork: 1,
              }),
              "stationary"
            ),
          },
          zCoordinate: {
            taskTypes: [
              r.TaskType.LidarAnnotation,
              r.TaskType.LidarCuboidPlane,
            ],
            title: "Z-Coordinate",
            graderFn: l.gradePerFrame(x("weak", 0.2)),
          },
          strictZCoordinate: {
            taskTypes: [
              r.TaskType.LidarAnnotation,
              r.TaskType.LidarCuboidPlane,
            ],
            title: "Strict Z-Coordinate",
            graderFn: l.gradePerFrame(x("strict", 0.02)),
          },
          facePosition: {
            taskTypes: [
              r.TaskType.LidarAnnotation,
              r.TaskType.LidarCuboidPlane,
            ],
            title: "Face Position (Outwards)",
            graderFn: l.gradePerFrame(
              (
                e,
                t,
                n,
                {
                  innerThreshold: r = 0.025,
                  outerThreshold: a = 0.1,
                  rightInnerThreshold: s = r,
                  rightOuterThreshold: u = a,
                  leftInnerThreshold: c = r,
                  leftOuterThreshold: f = a,
                  frontInnerThreshold: d = r,
                  frontOuterThreshold: h = a,
                  backInnerThreshold: p = r,
                  backOuterThreshold: g = a,
                  topInnerThreshold: m = r,
                  topOuterThreshold: y = a,
                  bottomInnerThreshold: b = r,
                  bottomOuterThreshold: v = a,
                }
              ) => {
                const _ = [1, -1, 1, -1, 1, -1],
                  x = [
                    [s, u],
                    [c, f],
                    [d, h],
                    [p, g],
                    [m, y],
                    [b, v],
                  ];
                return {
                  facePosition: l.gradeIfNotMissing(
                    (e, t) => {
                      const n = o.getFaceCenters(t),
                        r = o.getFaceCenters(e),
                        {
                          xVector3: a,
                          yVector3: s,
                          zVector3: u,
                        } = o.getEdgeVectors(e),
                        c = [a, a, s, s, u, u],
                        l = r.map((e, t) => e.distanceTo(n[t])),
                        f = i.default.zipWith(
                          r,
                          n,
                          c,
                          _,
                          x,
                          (e, t, n, r, i) =>
                            +((e, t, n, r, i, o) => {
                              const a = e.clone().sub(t),
                                s = a.dot(n) >= 0 ? 1 : -1,
                                u = a.projectOnVector(n).length() * r * s;
                              return u < o && u > -i;
                            })(e, t, n, r, i[0], i[1])
                        ),
                        d = {
                          centers1: r,
                          centers2: n,
                          faceScores: f,
                          faceDistances: l,
                        };
                      return {
                        correctWork: i.default.sum(f) / 6,
                        totalWork: 1,
                        intermediates: d,
                      };
                    },
                    e,
                    t
                  ),
                };
              }
            ),
            supportMultiFrameParameterization: !0,
            paramConfigs: A,
          },
          perAxisPosition: {
            taskTypes: [
              r.TaskType.LidarAnnotation,
              r.TaskType.LidarCuboidPlane,
            ],
            title: "Per Axis Position",
            graderFn: l.gradePerFrame((e, t, n, r) => ({
              position: l.gradeIfNotMissing(
                (e, t) => {
                  const n = {};
                  let o = 0;
                  return (
                    i.default.forEach(u.Axis, (i) => {
                      const a = r[`${i}Threshold`],
                        s = e.position[i] - t.position[i],
                        u = +(Math.abs(s) < a);
                      (n[`${i}PositionDiff`] = s),
                        (n[`${i}PositionWork`] = u),
                        (o += u);
                    }),
                    { correctWork: o, totalWork: 3, intermediates: n }
                  );
                },
                e,
                t
              ),
            })),
            supportMultiFrameParameterization: !0,
            paramConfigs: k,
          },
          groupIou: {
            taskTypes: [
              r.TaskType.LidarAnnotation,
              r.TaskType.LidarCuboidPlane,
            ],
            title: "Cuboid Group IOU",
            graderFn: l.globalGradePerFrame(
              (e, t, { labels: n = [], threshold: r = 0.5 }) => {
                const o = (e, t) => {
                  const n = a.computeGroupIOU(e, t);
                  return {
                    correctWork: +(n >= r),
                    totalWork: 1,
                    intermediates: { iou: n },
                  };
                };
                return i.default.reduce(
                  n,
                  (n, r) => {
                    const a = i.default.filter(e, { label: r }),
                      s = i.default.filter(t, { label: r }),
                      u = l.gradeIfNotMissing(o, a, s);
                    return (n[`groupIou-${r}`] = { ...u, label: r }), n;
                  },
                  {}
                );
              }
            ),
            global: !0,
          },
        };
      t.typedLidarGraders = P;
      const C = P;
      t.PARAMS_WITH_FRONTEND_VIS = [
        "facePosition",
        "perAxisPosition",
        "yaw",
        "dimensions",
      ];
      var L = C;
      t.default = L;
    },
    856753: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default = t.DEFAULT_LIDAR_POINT_ANNOTATION_DISTANCE_THRESHOLD =
          void 0);
      var r = n(167469),
        i = n(991984),
        o = n(74909),
        a = n(894574);
      t.DEFAULT_LIDAR_POINT_ANNOTATION_DISTANCE_THRESHOLD = 0.5;
      var s = {
        lidarPointAnnotationDistance: {
          taskTypes: [r.TaskType.LidarPointAnnotation],
          title: "Lidar Point Annotation Distance",
          graderFn: i.gradePerFrame((e, t, n, { threshold: r = 0.5 }) => ({
            lidarPointAnnotationDistance: i.gradeIfNotMissing(
              (e, t) => {
                const { position: n, label: i } = e,
                  { position: s, label: u } = t;
                if (!u || !s || !i || !n)
                  return { correctWork: 0, totalWork: 0 };
                const c = o.naiveDistance(n, s),
                  l = a.CONSENSUS_ERROR_THRESHOLDS[u] || r;
                return {
                  correctWork: +(c <= l),
                  totalWork: 1,
                  intermediates: { distance: c, threshold: l },
                };
              },
              e,
              t
            ),
          })),
        },
      };
      t.default = s;
    },
    197845: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default = t.DEFAULT_LIDAR_POLYGON_THRESHOLD = void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(167469),
        a = n(991984);
      t.DEFAULT_LIDAR_POLYGON_THRESHOLD = 0.05;
      var s = {
        lidarPolygonZLevel: {
          taskTypes: [o.TaskType.LidarPolygon],
          title: "Grader for Lidar Polygon Z Level",
          graderFn: a.gradePerFrame((e, t, n, { threshold: r = 0.05 }) => ({
            lidarPolygonZLevel: a.gradeIfNotMissing(
              (e, t) => {
                const n = i.default.meanBy(e.vertices, (e) => e.z),
                  o = i.default.meanBy(t.vertices, (e) => e.z),
                  a = Math.abs(n - o);
                return {
                  correctWork: +(a <= r),
                  totalWork: 1,
                  intermediates: { distance: a, threshold: r },
                };
              },
              e,
              t
            ),
          })),
        },
      };
      t.default = s;
    },
    147368: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default = t.DEFAULT_CLUSTER_OVERLAP_THRESHOLD = void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(167469),
        a = n(825555),
        s = n(297393),
        u = n(991984);
      t.DEFAULT_CLUSTER_OVERLAP_THRESHOLD = 0.8;
      const c = [
        { cutoff: 0.9, work: 1 },
        { cutoff: 0.8, work: 0.75 },
        { cutoff: 0.7, work: 0.5 },
      ];
      var l = {
        clusterOverlap: {
          taskTypes: [o.TaskType.LidarSegmentation],
          title: "Cluster Overlap",
          graderFn: u.gradePerFrameWithContext(
            (e, t, n, r, { threshold: o = 0.8 }, a) => ({
              clusterOverlap: u.gradeIfNotMissing(
                (t, n) => {
                  const r = s.getPointIntersections(a),
                    [u, c] = i.default.sortBy([t, n], (e) => e.props.response),
                    l = `${e}_${u.props.response}_${c.props.response}_${u.props.cluster}_${c.props.cluster}`,
                    f = r?.get(l) || 0,
                    d = t.frames[e].numPoints - f,
                    h = f / n.frames[e].numPoints;
                  return {
                    correctWork: +(h >= o),
                    totalWork: 1,
                    intermediates: {
                      incorrectPoints: d,
                      correctPoints: f,
                      overlap: h,
                    },
                  };
                },
                t,
                n
              ),
            })
          ),
        },
        lssIoU: {
          taskTypes: [o.TaskType.LidarSegmentation],
          title: "Lidar Semantic Segmentation IoU",
          graderFn: u.gradePerFrameWithContext(
            (e, t, n, r, { correctWorkThresholds: o = c }, l) => ({
              lssIoU: u.gradeIfNotMissing(
                (t, n) => {
                  const r = s.getPointIntersections(l),
                    [u, c] = i.default.sortBy([t, n], (e) => e.props.response),
                    f = `${e}_${u.props.response}_${c.props.response}_${u.props.cluster}_${c.props.cluster}`,
                    d = r?.get(f) || 0,
                    h = t.frames[e] ? t.frames[e].numPoints - d : 0,
                    p =
                      (t.frames?.[e]?.numPoints || 0) +
                      (n.frames?.[e]?.numPoints || 0),
                    g = d / (p - d);
                  return {
                    correctWork: a.getHighestWorkThreshold(o, g)?.work ?? 0,
                    totalWork: i.default.maxBy(o, (e) => e.cutoff)?.work ?? 1,
                    intermediates: {
                      incorrectPoints: h,
                      correctPoints: d,
                      totalPoints: p,
                      correctWorkThresholds: o,
                    },
                    metrics: { lssIou: g },
                  };
                },
                t,
                n
              ),
            })
          ),
        },
        numPoints: {
          taskTypes: [o.TaskType.LidarSegmentation],
          title: "Point Count",
          graderFn: (e, t) => {
            const n = i.default.reduce(
              t?.frames,
              (e, { numPoints: t }) => (e += t ?? 0),
              0
            );
            return {
              numPoints: {
                correctWork: n,
                totalWork: n,
                errorType: "numPoints",
                numIncorrectFrames: 0,
                numTotalFrames: i.default.size(t?.frames),
              },
            };
          },
        },
      };
      t.default = l;
    },
    272455: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default =
          t.weightedProjectionIOU =
          t.LIDAR_POINT_THRESHOLD =
          t.LONG_RANGE_PROJECTION_THRESHOLD =
            void 0);
      var r,
        i = n(825555),
        o = n(167469),
        a = n(991984),
        s = n(440169),
        u = n(74909),
        c = n(729493),
        l = (r = n(298784)) && r.__esModule ? r : { default: r };
      t.LONG_RANGE_PROJECTION_THRESHOLD = 0.7;
      t.LIDAR_POINT_THRESHOLD = 5;
      const f = (e, t) => {
          const n = s.polygonFor(e).convexHull(),
            r = s.polygonFor(t).convexHull();
          return {
            projUnion: n.union(r).getArea(),
            projIntersection: n.intersection(r).getArea(),
          };
        },
        d = (e, t) => {
          let n = 0,
            r = 0;
          for (let i = 0; i < e.length; i++) {
            const o = e[i],
              a = t[i];
            if (!o || !a) continue;
            const { projUnion: s, projIntersection: u } = f(o, a);
            (n += s), (r += u);
          }
          return r && n ? r / n : 0;
        };
      t.weightedProjectionIOU = d;
      const h = { type: "Number", min: 0.001, step: 1e-4 };
      var p = {
        facePositionAndProjectionIou: {
          taskTypes: [o.TaskType.LidarAnnotation],
          title: "Long Range Lidar Projections",
          graderFn: a.gradePerFrame(
            (
              e,
              t,
              n,
              {
                projectionIouThreshold: r = 0.7,
                innerThreshold: i = c.DEFAULT_FACE_POSITION_INNER_THRESHOLD,
                outerThreshold: o = c.DEFAULT_FACE_POSITION_OUTER_THRESHOLD,
                rightInnerThreshold: s = i,
                rightOuterThreshold: f = o,
                leftInnerThreshold: h = i,
                leftOuterThreshold: p = o,
                frontInnerThreshold: g = i,
                frontOuterThreshold: m = o,
                backInnerThreshold: y = i,
                backOuterThreshold: b = o,
                topInnerThreshold: v = i,
                topOuterThreshold: _ = o,
                bottomInnerThreshold: x = i,
                bottomOuterThreshold: T = o,
              }
            ) => {
              const M = (e, t) => {
                  if (!e || !t) return !1;
                  const n = !l.default.every(e.projections, (e) =>
                      l.default.isNull(e)
                    ),
                    r = !l.default.every(t.projections, (e) =>
                      l.default.isNull(e)
                    ),
                    i = e.numberOfPoints <= 5,
                    o = t.numberOfPoints <= 5;
                  return n && r && i && o;
                },
                w = ["x", "x", "y", "y", "z", "z"],
                A = [1, -1, 1, -1, 1, -1],
                k = [
                  [s, f],
                  [h, p],
                  [g, m],
                  [y, b],
                  [v, _],
                  [x, T],
                ];
              return {
                projectionIou: ((n, i) => {
                  if (l.default.isEmpty(e) || l.default.isEmpty(t) || !M(n, i))
                    return { correctWork: 0, totalWork: 0 };
                  const o = d(n.projections, i.projections);
                  return {
                    correctWork: +(o >= r),
                    totalWork: 1,
                    intermediates: { iou: o, longRange: !0 },
                  };
                })(e, t),
                facePosition: a.gradeIfNotMissing(
                  (e, t) => {
                    if (M(e, t)) return { correctWork: 0, totalWork: 0 };
                    const n = u.getFaceCenters(t),
                      r = u.getFaceCenters(e),
                      i = l.default.zipWith(
                        r,
                        n,
                        w,
                        A,
                        k,
                        (e, t, n, r, i) =>
                          +((e, t, n, r) => e < t + r && e > t - n)(
                            e[n] * r,
                            t[n] * r,
                            i[0],
                            i[1]
                          )
                      ),
                      o = {
                        centers1: r,
                        centers2: n,
                        faceScores: i,
                        longRange: !1,
                      };
                    return {
                      correctWork: l.default.sum(i) / 6,
                      totalWork: 1,
                      intermediates: o,
                    };
                  },
                  e,
                  t
                ),
              };
            }
          ),
          paramConfigs: [
            new i.ParamConfig(
              "rightInnerThreshold",
              c.DEFAULT_FACE_POSITION_INNER_THRESHOLD,
              { label: "Right (Inner)", ...h }
            ),
            new i.ParamConfig(
              "rightOuterThreshold",
              c.DEFAULT_FACE_POSITION_OUTER_THRESHOLD,
              { label: "Right (Outer)", ...h }
            ),
            new i.ParamConfig(
              "leftInnerThreshold",
              c.DEFAULT_FACE_POSITION_INNER_THRESHOLD,
              { label: "Left (Inner)", ...h }
            ),
            new i.ParamConfig(
              "leftOuterThreshold",
              c.DEFAULT_FACE_POSITION_OUTER_THRESHOLD,
              { label: "Left (Outer)", ...h }
            ),
            new i.ParamConfig(
              "frontInnerThreshold",
              c.DEFAULT_FACE_POSITION_INNER_THRESHOLD,
              { label: "Front (Inner)", ...h }
            ),
            new i.ParamConfig(
              "frontOuterThreshold",
              c.DEFAULT_FACE_POSITION_OUTER_THRESHOLD,
              { label: "Front (Outer)", ...h }
            ),
            new i.ParamConfig(
              "backInnerThreshold",
              c.DEFAULT_FACE_POSITION_INNER_THRESHOLD,
              { label: "Back (Inner)", ...h }
            ),
            new i.ParamConfig(
              "backOuterThreshold",
              c.DEFAULT_FACE_POSITION_OUTER_THRESHOLD,
              { label: "Back (Outer)", ...h }
            ),
            new i.ParamConfig(
              "topInnerThreshold",
              c.DEFAULT_FACE_POSITION_INNER_THRESHOLD,
              { label: "Top (Inner)", ...h }
            ),
            new i.ParamConfig(
              "topOuterThreshold",
              c.DEFAULT_FACE_POSITION_OUTER_THRESHOLD,
              { label: "Top (Outer)", ...h }
            ),
            new i.ParamConfig(
              "bottomInnerThreshold",
              c.DEFAULT_FACE_POSITION_INNER_THRESHOLD,
              { label: "Bottom (Inner)", ...h }
            ),
            new i.ParamConfig(
              "bottomOuterThreshold",
              c.DEFAULT_FACE_POSITION_OUTER_THRESHOLD,
              { label: "Bottom (Outer)", ...h }
            ),
          ],
        },
      };
      t.default = p;
    },
    63226: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default =
          t.DEFAULT_MAX_STRAY_POINTS =
          t.DEFAULT_STRAY_POINTS_THRESHOLD =
            void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(167469),
        a = n(297393),
        s = n(991984);
      t.DEFAULT_STRAY_POINTS_THRESHOLD = 0.05;
      t.DEFAULT_MAX_STRAY_POINTS = 10;
      var u = {
        strayPoints: {
          taskTypes: [o.TaskType.LidarSegmentation],
          title: "Stray Points",
          graderFn: s.gradePerFrameWithContext(
            (e, t, n, r, { maxStray: o = 10, threshold: u = 0.05 }, c) => ({
              annotationOverlap: s.gradeIfNotMissing(
                (n, r) => {
                  if (!c)
                    throw new Error("Missing context for stray points grader");
                  const s = a.getPointIntersections(c),
                    [l, f] = i.default.sortBy([n, r], (e) => e.props.response),
                    d = `${e}_${l.props.response}_${f.props.response}_${l.props.cluster}_${f.props.cluster}`,
                    h = s.get(d) || 0,
                    p = t.frames[e] ? t.frames[e].numPoints - h : 0,
                    g = Math.min(
                      o,
                      u * (t.frames[e] ? t.frames[e].numPoints : 0)
                    );
                  return {
                    correctWork: +(p < g),
                    totalWork: 1,
                    intermediates: { incorrectPoints: p, maxIncorrect: g },
                  };
                },
                t,
                n
              ),
            })
          ),
        },
      };
      t.default = u;
    },
    233193: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default =
          t.LINE_GRADER_MARGIN_THRESHOLD =
          t.LINE_DISTANCE_MARGIN_THRESHOLD =
          t.LINE_EP_DISTANCE_THRESHOLD =
            void 0);
      var r = n(167469),
        i = n(440169),
        o = n(991984),
        a = n(362508);
      t.LINE_EP_DISTANCE_THRESHOLD = 15;
      t.LINE_DISTANCE_MARGIN_THRESHOLD = 50;
      t.LINE_GRADER_MARGIN_THRESHOLD = 5;
      var s = {
        endpointDistance: {
          taskTypes: [r.TaskType.LineAnnotation],
          title: "Line Endpoint Distance",
          graderFn: o.gradePerFrame((e, t, n, { threshold: r = 15 }) => ({
            endpointDistance: o.gradeIfNotMissing(
              (e, t) => {
                const n = i.calculateEndpointDistance(e.vertices, t.vertices);
                return {
                  correctWork: +(n <= r),
                  totalWork: 1,
                  intermediates: { distance: n },
                };
              },
              e,
              t
            ),
          })),
          paramConfigs: [
            {
              name: "threshold",
              label: "Endpoint Distance Threshold",
              type: "number",
              defaultValue: 15,
            },
          ],
        },
        margin: {
          taskTypes: [r.TaskType.LineAnnotation],
          title: "Line Margin",
          graderFn: o.gradePerFrame(
            (e, t, n, { threshold: r = 5, partialCredit: a = !1 }) => ({
              margin: o.gradeIfNotMissing(
                (e, t) => {
                  if (a) {
                    const {
                        numUserPoints: n,
                        numUserPointsInMargin: o,
                        numCorrectPoints: a,
                      } = i.getAmountOfLineInMargin(e.vertices, t.vertices, r),
                      s = { inMargin: +(o === n) },
                      u = n - o;
                    return {
                      correctWork: Math.max(a - u, 0) / a,
                      totalWork: 1,
                      intermediates: s,
                    };
                  }
                  const n = +i.lineInMargin(e.vertices, t.vertices, r);
                  return {
                    correctWork: n,
                    totalWork: 1,
                    intermediates: { inMargin: n },
                  };
                },
                e,
                t
              ),
            })
          ),
          paramConfigs: [
            {
              name: "threshold",
              label: "Margin Threshold",
              type: "number",
              defaultValue: 5,
            },
            {
              name: "partialCredit",
              label: "Partial Credit",
              type: "boolean",
              defaultValue: !1,
            },
          ],
        },
        zCoordMargin: {
          taskTypes: [r.TaskType.LineAnnotation],
          title: "GIS Line Margin Z Coordinate Grader",
          graderFn: o.gradePerFrame(a.zCoordMarginLineLength),
          paramConfigs: [
            {
              name: "zthreshold",
              label: "Margin Threshold for z coordinate",
              type: "number",
              defaultValue: a.Z_LINE_GRADER_MARGIN_THRESHOLD,
            },
            {
              name: "xythreshold",
              label: "Margin Threshold for matching line",
              type: "number",
              defaultValue: a.XY_LINE_GRADER_MARGIN_THRESHOLD,
            },
          ],
        },
        frechetLineDistance: {
          taskTypes: [r.TaskType.LineAnnotation],
          title: "Frechet Line Distance",
          graderFn: o.gradePerFrame((e, t, n, { threshold: r = 5 }) => ({
            frechetDistance: o.gradeIfNotMissing(
              (e, t) => {
                const n = i.discreteFrechetDistance(e.vertices, t.vertices);
                return {
                  correctWork: +(n < r),
                  totalWork: 1,
                  intermediates: { frechetLineDistance: n },
                };
              },
              e,
              t
            ),
          })),
          paramConfigs: [
            {
              name: "threshold",
              label: "Frechet Line Distance Threshold",
              type: "number",
              defaultValue: 5,
            },
          ],
        },
      };
      t.default = s;
    },
    313220: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.linkingUuidGrader = void 0);
      var r = n(991984);
      t.linkingUuidGrader = (e, t) => ({
        linkingUuid: r.ignoreIfMissing(
          (e, t) => {
            if (!e.is_base_annotation && !t.is_base_annotation)
              return { correctWork: 0, totalWork: 0 };
            if (!e.is_base_annotation || !t.is_base_annotation)
              return { correctWork: 0, totalWork: 1 };
            return {
              correctWork: +(!!e?.uuid && e.uuid === t?.uuid),
              totalWork: 1,
            };
          },
          e,
          t
        ),
      });
    },
    804850: function (e, t) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.globalGraderLiteParams = t.defaultMammothMappingParams = void 0);
      const n = {
        splitTolerance: 0.1,
        segmentLinkTolerance: 0.001,
        crossSubdivisionThreshold: 5,
        segmentLinkCandidateFcdThreshold: 5,
        maximumSplitSegmentLength: 10.3,
      };
      t.defaultMammothMappingParams = n;
      const r = { ...n, maximumSplitSegmentLength: 100 };
      t.globalGraderLiteParams = r;
    },
    662171: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.makeGlobalMammothMappingGraderFn = h),
        (t.makeGlobalMammothMappingMatcherFn = m),
        (t.legacyGlobalGrader = t.globalGraderLite = t.globalGrader = void 0);
      var r,
        i = n(167469),
        o = (r = n(298784)) && r.__esModule ? r : { default: r },
        a = n(105879),
        s = n(604744),
        u = n(401976),
        c = n(896888),
        l = n(991984),
        f = n(804850);
      const d = (e, t) => `mammothMapping${t}${e}`;
      function h(e) {
        return l.globalGradePerFrame((t, n) => {
          const r = o.default.flatMap(u.ALL_LABELS, (r) => {
              const i = t.filter((e) => e.label === r),
                o = n.filter((e) => e.label === r),
                { subdividedSegmentsA: u, subdividedSegmentsB: c } =
                  a.computeCrossDivision(i, o, e);
              return a
                .getSegmentMatches(u, c, e)
                .map((e) => s.scoreSegmentMatch(e, r));
            }),
            i = [
              ...o.default.flatMap(u.ALL_LABELS, (e) =>
                u.ALL_ERROR_TYPES.map((t) => {
                  const n = r.filter((t) => t.label === e),
                    i = c.ERROR_TYPE_LABEL_SEVERITY_MAP[t][e];
                  return s.transformScoresToGlobalScore(n, t, d(t, i), {
                    label: e,
                    graderType: "mammothMapppingGlobal",
                    key: `${e}::${t}`,
                  });
                })
              ),
              ...o.default.flatMap(u.ALL_SEVERITIES, (e) =>
                u.ALL_ERROR_TYPES.map((t) => {
                  const n = r.filter(
                    (n) => c.ERROR_TYPE_LABEL_SEVERITY_MAP[t][n.label] === e
                  );
                  return s.transformScoresToGlobalScore(n, t, d(t, e), {
                    graderType: "mammothMapppingGlobal",
                    label: "mixed",
                    key: d(t, e),
                  });
                })
              ),
            ];
          return o.default.fromPairs(i.map((e) => [e.key, e]));
        });
      }
      const p = (e) => {
          const t = {
              type: "polyline-fragments",
              currentId: e.currentId,
              correctId: e.correctId,
              props: { label: e.label },
              rawScoredSegmentMatches: e.scoredSegmentMatches,
            },
            n =
              e.currentAnn && e.correctAnn
                ? "Precision"
                : e.currentAnn
                ? "FalsePositive"
                : "FalseNegative",
            r = c.ERROR_TYPE_LABEL_SEVERITY_MAP[n][e.label],
            i = o.default.map(e.scoredSegmentMatches, "score"),
            a = s.transformScoresToGlobalScore(i, n, d(n, r), {
              graderType: "mammothMapppingGlobal",
              label: e.label,
              key: n,
            });
          return {
            metadata: t,
            currentAnnotation: e.currentAnn,
            correctAnnotation: e.correctAnn,
            scores: [a],
            numFalseNegativeFrames: 0,
            numFalsePositiveFrames: 0,
            numIncorrectTruePositiveFrames: 0,
            numTotalTruePositiveFrames: 0,
          };
        },
        g = (e, t) => (e ? `${t}-${e.uuid}` : `${t}-none`);
      function m(e) {
        return (t, n) => {
          const r = new Map([...t, ...n].map((e) => [e.frames[0], e]));
          r.set(void 0, void 0);
          const i = t.map((e) => e.frames[0]),
            c = n.map((e) => e.frames[0]);
          return o.default
            .flatMap(u.ALL_LABELS, (t) => {
              const n = i.filter((e) => e.label === t),
                u = c.filter((e) => e.label === t),
                {
                  subdividedSegmentsA: l,
                  subdividedSegmentsB: f,
                  segmentToAnnotationMap: d,
                } = a.computeCrossDivision(n, u, e),
                h = a
                  .getSegmentMatches(l, f, e)
                  .map((e) => ({
                    score: s.scoreSegmentMatch(e, t),
                    segmentMatch: e,
                  })),
                p = new Map([
                  ...n.map((e) => [g(e, "a"), e]),
                  ["a-none", void 0],
                  ...u.map((e) => [g(e, "b"), e]),
                  ["b-none", void 0],
                ]),
                m = o.default.groupBy(h, ({ segmentMatch: e }) => {
                  const n = e.currentSegment ? d.get(e.currentSegment) : void 0,
                    r = e.correctSegment ? d.get(e.correctSegment) : void 0;
                  return JSON.stringify({
                    currentId: g(n, "a"),
                    correctId: g(r, "b"),
                    label: t,
                  });
                });
              return o.default.map(m, (e, t) => {
                const { currentId: n, correctId: i, label: o } = JSON.parse(t);
                return {
                  currentId: n,
                  correctId: i,
                  currentAnn: r.get(p.get(n)),
                  correctAnn: r.get(p.get(i)),
                  label: o,
                  scoredSegmentMatches: e,
                };
              });
            })
            .map(p);
        };
      }
      const y = {
        taskTypes: [i.TaskType.LineAnnotation],
        title: "(Mammoth GIS Global) Per-class bag-of-segments Line Grader",
        graderFn: h(f.defaultMammothMappingParams),
        matcherFn: m(f.defaultMammothMappingParams),
        global: !0,
      };
      t.globalGrader = y;
      const b = {
        taskTypes: [i.TaskType.LineAnnotation],
        title:
          "(Mammoth GIS Global Lite) Faster Per-class bag-of-segments Line Grader",
        graderFn: h(f.globalGraderLiteParams),
        matcherFn: m(f.globalGraderLiteParams),
        global: !0,
      };
      t.globalGraderLite = b;
      const v = {
        taskTypes: [i.TaskType.LineAnnotation],
        title: "(Legacy) Per-class bag-of-segments Line Grader",
        graderFn: h(f.defaultMammothMappingParams),
        matcherFn: m(f.defaultMammothMappingParams),
        global: !0,
      };
      t.legacyGlobalGrader = v;
    },
    68380: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        Object.defineProperty(t, "mammothMappingGlobal", {
          enumerable: !0,
          get: function () {
            return r.globalGrader;
          },
        }),
        Object.defineProperty(t, "nuroLine", {
          enumerable: !0,
          get: function () {
            return r.legacyGlobalGrader;
          },
        }),
        Object.defineProperty(t, "mammothMappingLite", {
          enumerable: !0,
          get: function () {
            return r.globalGraderLite;
          },
        }),
        Object.defineProperty(t, "mammothMapping", {
          enumerable: !0,
          get: function () {
            return i.legacyLocalGrader;
          },
        });
      var r = n(662171),
        i = n(676116);
    },
    676116: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.legacyLocalGrader = t.localMammothMappingGraderFn = void 0);
      var r,
        i = n(662171),
        o = n(167469),
        a = (r = n(298784)) && r.__esModule ? r : { default: r };
      const s = async (e, t) =>
        await i.globalGrader.graderFn(
          a.default.compact([e]),
          a.default.compact([t])
        );
      t.localMammothMappingGraderFn = s;
      const u = {
        taskTypes: [o.TaskType.LineAnnotation],
        title: "(Mammoth GIS) Matched pairs segments Line Grader",
        graderFn: s,
        global: !1,
      };
      t.legacyLocalGrader = u;
    },
    896888: function (e, t) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.PRECISION_FCD_THRESHOLDS =
          t.ERROR_TYPE_LABEL_SEVERITY_MAP =
          t.INFINITY =
            void 0);
      t.INFINITY = 1e15;
      const n = {
        FalsePositive: {
          "road boundary": "Critical",
          "road boundary (polygon)": "Critical",
          "reversible lane center": "Critical",
          "shared turn lane center": "Critical",
          "vehicle lane center": "Critical",
          "vehicle lane connection": "Critical",
          "traffic line": "Moderate",
          driveway: "Moderate",
          "dashed odot": "Severe",
          "dashed sdot": "Severe",
          "solid odot": "Severe",
          "solid sdot": "Severe",
          "bicycle lane": "Moderate",
        },
        FalseNegative: {
          "road boundary": "Critical",
          "road boundary (polygon)": "Critical",
          "reversible lane center": "Critical",
          "shared turn lane center": "Critical",
          "vehicle lane center": "Critical",
          "vehicle lane connection": "Critical",
          "traffic line": "Critical",
          driveway: "Critical",
          "dashed odot": "Severe",
          "dashed sdot": "Severe",
          "solid odot": "Severe",
          "solid sdot": "Severe",
          "bicycle lane": "Moderate",
        },
        Precision: {
          "road boundary": "Critical",
          "road boundary (polygon)": "Critical",
          "reversible lane center": "Critical",
          "shared turn lane center": "Critical",
          "vehicle lane center": "Critical",
          "vehicle lane connection": "Critical",
          "traffic line": "Severe",
          driveway: "Severe",
          "dashed odot": "Severe",
          "dashed sdot": "Severe",
          "solid odot": "Severe",
          "solid sdot": "Severe",
          "bicycle lane": "Moderate",
        },
      };
      t.ERROR_TYPE_LABEL_SEVERITY_MAP = n;
      t.PRECISION_FCD_THRESHOLDS = {
        "road boundary": 1,
        "road boundary (polygon)": 1,
        "reversible lane center": 2,
        "shared turn lane center": 2,
        "vehicle lane center": 2,
        "vehicle lane connection": 2,
        "traffic line": 2,
        driveway: 1,
        "dashed odot": 1,
        "dashed sdot": 1,
        "solid odot": 1,
        "solid sdot": 1,
        "bicycle lane": 3,
      };
    },
    105879: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.computeCrossDivision = t.getSegmentMatches = void 0),
        n(825555);
      var r = u(n(298784)),
        i = u(n(289624)),
        o = u(n(540742)),
        a = n(896888),
        s = n(490503);
      function u(e) {
        return e && e.__esModule ? e : { default: e };
      }
      const c = ([{ x: e, y: t }, { x: n, y: r }], i) => ({
        x: (1 - i) * e + i * n,
        y: (1 - i) * t + i * r,
      });
      function l(e, t) {
        const n = [];
        for (let r = 0; r < e.length - 1; r++) {
          const i = [e[r], e[r + 1]],
            o = s.computeSegmentLength(i),
            a = Math.ceil(o / t);
          let u = i[0];
          for (let e = 0; e < a; e++) {
            const t = c(i, (e + 1) / a);
            n.push([u, t]), (u = t);
          }
        }
        return n;
      }
      const f = (e, t, n) => {
        function i(e) {
          const t = r.default.min(e.map((e) => e.x)),
            n = r.default.min(e.map((e) => e.y)),
            i = r.default.max(e.map((e) => e.x)),
            o = r.default.max(e.map((e) => e.y));
          return r.default.flatMap(
            r.default.range(Math.floor(t / 32), Math.floor(i / 32) + 1),
            (e) =>
              r.default
                .range(Math.floor(n / 32), Math.floor(o / 32) + 1)
                .map((t) => 640 * e + t)
          );
        }
        function a(e) {
          return r.default
            .range(3)
            .flatMap((t) =>
              r.default.range(3).map((n) => e + 640 * (t - 1) + (n - 1))
            );
        }
        const u = e.map(i),
          c = t.map(i),
          l = new Map();
        u.forEach((e, t) => {
          e.forEach((e) => {
            l.has(e) || l.set(e, new Set()), l.get(e).add(t);
          });
        });
        const f = r.default.size(e),
          d = r.default.size(t),
          h = [];
        c.forEach((i, o) => {
          const u = new Set();
          r.default.flatMap(i, a).forEach((e) => {
            if (l.has(e)) for (const t of l.get(e)) u.add(t);
          });
          for (const r of u)
            s.computeFCD(e[r], t[o]) <=
              n.segmentLinkCandidateFcdThreshold + n.segmentLinkTolerance &&
              h.push([r, f + o]);
        });
        const p = ((e, t) => {
          const n = new o.default(e);
          for (const [r, i] of t) n.union(r, i);
          return n.compile();
        })(f + d, h);
        return p.map((e) => ({
          indicesA: e.filter((e) => e < f),
          indicesB: e.filter((e) => e >= f).map((e) => e - f),
        }));
      };
      t.getSegmentMatches = (e, t, n) => {
        if (r.default.isEmpty(e) && r.default.isEmpty(t)) return [];
        const o = f(e, t, n),
          u = [];
        o.forEach((o) => {
          const c = o.indicesA.map((t) => e[t]),
            l = o.indicesB.map((e) => t[e]),
            f = ((e, t) => e.map((e) => t.map((t) => s.computeFCD(e, t))))(
              c,
              l
            ),
            d = ((e, t, n, i) =>
              e
                .map((e, o) =>
                  t.map((t, a) => {
                    const u = s.computeSegmentLength(e),
                      c = s.computeSegmentLength(t),
                      l = e[1].x - e[0].x,
                      f = e[1].y - e[0].y,
                      d = t[1].x - t[0].x,
                      h = t[1].y - t[0].y,
                      p = Math.abs((l * d + f * h) / (u * c));
                    return n[o][a] >
                      i.segmentLinkCandidateFcdThreshold +
                        i.segmentLinkTolerance
                      ? 0
                      : r.default.min([u, c]) *
                          p *
                          Math.exp(
                            -n[o][a] / i.segmentLinkCandidateFcdThreshold
                          );
                  })
                )
                .map((e) =>
                  e.map((e) => (r.default.isFinite(e) ? a.INFINITY - e : 0))
                ))(c, l, f, n),
            h =
              d.length > 0 && d[0].length > 0
                ? ((e) => (e.length ? i.default(e) : []))(d).filter(
                    ([e, t]) => d[e][t] < a.INFINITY
                  )
                : [];
          u.push(...h.map(([e, t]) => [o.indicesA[e], o.indicesB[t]]));
        });
        const c = r.default.times(e.length, () => !1),
          l = r.default.times(t.length, () => !1);
        for (const [r, i] of u) c[r] = l[i] = !0;
        return [
          ...u.map(([n, r]) => ({
            currentSegment: e[n],
            correctSegment: t[r],
            fcd: s.computeFCD(e[n], t[r]),
          })),
          ...e.filter((e, t) => !c[t]).map((e) => ({ currentSegment: e })),
          ...t.filter((e, t) => !l[t]).map((e) => ({ correctSegment: e })),
        ];
      };
      t.computeCrossDivision = (e, t, n) => {
        const i = [
            ...r.default.flatMap(e, (e) => e.vertices),
            ...r.default.flatMap(t, (e) => e.vertices),
          ],
          o = e.map((e) =>
            l(
              s.projectVerticesOntoPolyline(
                e.vertices,
                i,
                n.crossSubdivisionThreshold,
                n.splitTolerance
              ),
              n.maximumSplitSegmentLength
            )
          ),
          a = t.map((e) =>
            l(
              s.projectVerticesOntoPolyline(
                e.vertices,
                i,
                n.crossSubdivisionThreshold,
                n.splitTolerance
              ),
              n.maximumSplitSegmentLength
            )
          );
        return {
          segmentToAnnotationMap: new Map([
            ...r.default.flatMap(o, (t, n) => t.map((t) => [t, e[n]])),
            ...r.default.flatMap(a, (e, n) => e.map((e) => [e, t[n]])),
          ]),
          subdividedSegmentsA: r.default.flatten(o),
          subdividedSegmentsB: r.default.flatten(a),
        };
      };
    },
    604744: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.transformScoresToGlobalScore = t.scoreSegmentMatch = void 0);
      var r,
        i = n(401976),
        o = n(896888),
        a = n(490503),
        s = (r = n(298784)) && r.__esModule ? r : { default: r };
      t.scoreSegmentMatch = (e, t) => {
        if (!i.isLabel(t)) throw new Error("unknown label: " + t);
        const { currentSegment: n, correctSegment: r, fcd: s } = e;
        return {
          label: t,
          currentLength: n ? a.computeSegmentLength(n) : 0,
          correctLength: r ? a.computeSegmentLength(r) : 0,
          isMatch: !!n && !!r,
          isCorrect: !!n && !!r && s <= o.PRECISION_FCD_THRESHOLDS[t],
        };
      };
      t.transformScoresToGlobalScore = (e, t, n, r) => {
        const i = s.default.sumBy(e, "currentLength"),
          o = s.default.sumBy(e, "correctLength"),
          a = s.default.sumBy(s.default.filter(e, "isMatch"), "currentLength"),
          u = s.default.sumBy(s.default.filter(e, "isMatch"), "correctLength"),
          c = s.default.sumBy(
            s.default.filter(e, "isCorrect"),
            "currentLength"
          );
        let l, f;
        if ("FalseNegative" === t) (l = u), (f = o);
        else if ("FalsePositive" === t) (l = a), (f = i);
        else {
          if ("Precision" !== t) throw new Error(`Unknown error type ${t}`);
          (l = c), (f = a);
        }
        return {
          ...r,
          errorType: t,
          errorTypeWithSeverity: n,
          numIncorrectFrames: 0,
          numTotalFrames: 0,
          correctWork: l,
          totalWork: f,
        };
      };
    },
    401976: function (e, t) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isScoredPolylineSegmentsMatchedAnnotations = function (e) {
          return "polyline-fragments" === e?.metadata?.type;
        }),
        (t.ALL_ERROR_TYPES =
          t.ALL_SEVERITIES =
          t.isLabel =
          t.ALL_LABELS =
            void 0);
      const n = [
        "road boundary",
        "road boundary (polygon)",
        "reversible lane center",
        "shared turn lane center",
        "vehicle lane center",
        "vehicle lane connection",
        "traffic line",
        "driveway",
        "dashed odot",
        "dashed sdot",
        "solid odot",
        "solid sdot",
        "bicycle lane",
      ];
      t.ALL_LABELS = n;
      t.isLabel = (e) => n.includes(e);
      t.ALL_SEVERITIES = ["Critical", "Severe", "Moderate"];
      t.ALL_ERROR_TYPES = ["FalseNegative", "FalsePositive", "Precision"];
    },
    190913: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        Object.defineProperty(t, "mammothMappingPolygonGrader", {
          enumerable: !0,
          get: function () {
            return r.mammothMappingPolygonGrader;
          },
        });
      var r = n(912140);
    },
    290637: function (e, t) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.POLYGON_IOU_THRESHOLD = t.POLYGON_ERROR_TYPE_LABEL_SEVERITY_MAP =
          void 0);
      const n = {
        FalsePositive: {
          intersection: "Severe",
          "keep clear zone": "Moderate",
          "parking area": "Severe",
          "pedestrian crosswalk": "Moderate",
          "road boundary (polygon)": "Critical",
          "speed regulator": "Severe",
        },
        FalseNegative: {
          intersection: "Critical",
          "keep clear zone": "Severe",
          "parking area": "Severe",
          "pedestrian crosswalk": "Critical",
          "road boundary (polygon)": "Critical",
          "speed regulator": "Critical",
        },
        Precision: {
          intersection: "Severe",
          "keep clear zone": "Critical",
          "parking area": "Severe",
          "pedestrian crosswalk": "Critical",
          "road boundary (polygon)": "Critical",
          "speed regulator": "Severe",
        },
      };
      t.POLYGON_ERROR_TYPE_LABEL_SEVERITY_MAP = n;
      t.POLYGON_IOU_THRESHOLD = 0.9;
    },
    912140: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.mammothMappingPolygonGrader = t.localMammothMappingPolygonGraderFn =
          void 0);
      var r,
        i = n(167469),
        o = n(440169),
        a = (r = n(298784)) && r.__esModule ? r : { default: r },
        s = n(290637),
        u = n(991984),
        c = n(105879),
        l = n(604744),
        f = n(804850);
      const d = (e, t) =>
          `mammothMappingPolygon${s.POLYGON_ERROR_TYPE_LABEL_SEVERITY_MAP[e][t]}${e}`,
        h = (e) => ({ ...e, vertices: [...e.vertices, e.vertices[0]] }),
        p = (e, t) =>
          a.default.mapValues(
            (() => {
              if (e && t) {
                const n = e.label;
                if ("road boundary (polygon)" === n)
                  return ((e, t) => {
                    const n = h(e),
                      r = h(t),
                      i = f.defaultMammothMappingParams,
                      { subdividedSegmentsA: o, subdividedSegmentsB: s } =
                        c.computeCrossDivision([n], [r], i),
                      u = "road boundary (polygon)",
                      p = c
                        .getSegmentMatches(o, s, i)
                        .map((e) => l.scoreSegmentMatch(e, u)),
                      g = a.default.sum(p.map((e) => e.correctLength)),
                      m = a.default.sum(
                        p.filter((e) => e.isCorrect).map((e) => e.currentLength)
                      );
                    return {
                      [d("Precision", u)]: { correctWork: m, totalWork: g },
                      [d("FalseNegative", u)]: { correctWork: g, totalWork: g },
                    };
                  })(e, t);
                const r = o.genericIou(e, t),
                  i = o.getPolygonPerimeter(t);
                return {
                  [d("Precision", n)]: {
                    correctWork: r < s.POLYGON_IOU_THRESHOLD ? 0 : i,
                    totalWork: i,
                  },
                  [d("FalseNegative", n)]: { correctWork: i, totalWork: i },
                };
              }
              if (t) {
                const e = t.label,
                  n = o.getPolygonPerimeter(t);
                return {
                  [d("FalseNegative", e)]: { correctWork: 0, totalWork: n },
                };
              }
              {
                const t = e.label,
                  n = o.getPolygonPerimeter(e);
                return {
                  [d("FalsePositive", t)]: { correctWork: -n, totalWork: 0 },
                };
              }
            })(),
            (e, t) => ({
              ...e,
              errorType: t,
              numIncorrectFrames: e.correctWork < e.totalWork ? 1 : 0,
              numTotalFrames: 1,
            })
          );
      t.localMammothMappingPolygonGraderFn = p;
      const g = {
        taskTypes: [i.TaskType.PolygonAnnotation],
        title: "Mammoth GIS Polygon Grader",
        graderFn: u.gradePerFrame(p, !1, !1, !0),
        global: !1,
      };
      t.mammothMappingPolygonGrader = g;
    },
    247915: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default =
          t.comparisonGraderFn =
          t.melonAudioDeviceGraderFn =
          t.adjustCoefficient =
          t.melonAudioRankFnGenerator =
          t.DEFAULT_ACCEPTABLE_DEVICES =
            void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(167469),
        a = n(991984),
        s = n(222357);
      const u = n(555956),
        c = ["headphone", "headset", "airpod", "usb audio device"].map((e) =>
          e.toLowerCase()
        );
      var l;
      (t.DEFAULT_ACCEPTABLE_DEVICES = c),
        (function (e) {
          (e.Pearson = "pearson"),
            (e.Spearman = "spearman"),
            (e.Kendall = "kendall");
        })(l || (l = {}));
      const f = (e, t, n) => (r, o, a) => {
        const c = [];
        r.forEach((e) => {
          const t = e.field_id,
            n = e.response[0],
            r = n.result;
          if (!a?.questionPrefix || e.field_id.startsWith(a.questionPrefix))
            if (r === s.GraderResult.Correct) {
              const e = n.given[0],
                r = d(e);
              c.push({ model: t, expected: r, given: r });
            } else if (r === s.GraderResult.Incorrect) {
              const e = n;
              c.push({
                model: t,
                expected: d(e.expected[0]),
                given: d(e.given[0]),
              });
            }
        });
        const l = new u(c, { expected: "metric", given: "metric" })[t](
            "expected",
            "given"
          ),
          f = i.default.get(l, n),
          p = a?.correlationThreshold,
          g = isNaN(f) || (void 0 !== p && f < p) ? 0 : h(f),
          m = r.length,
          y = { modelScores: c, modelCount: m, metadata: l };
        return {
          [a?.questionPrefix ? `${e}_${a.questionPrefix}` : e]: {
            label: `${e} correlation`,
            correctWork: g,
            totalWork: 1,
            intermediates: y,
          },
        };
      };
      t.melonAudioRankFnGenerator = f;
      const d = (e) =>
          "string" === typeof e
            ? parseFloat(e)
            : "number" === typeof e
            ? e
            : NaN,
        h = (e) => (e + 1) / 2;
      t.adjustCoefficient = h;
      const p = (e, t, n, r, o) => {
        const a = o?.responseMetadata?.audioDevices || [],
          s = n?.acceptableDevices || [],
          u = 0 === s.length ? c : s,
          l = a.map((e) => e.label),
          f = n?.failWhenMissingDevice ?? !0;
        let d;
        if (0 === l.length) d = +!f;
        else {
          d = +(
            i.default.intersection(
              l.map((e) => e.toLowerCase()),
              u.map((e) => e.toLowerCase())
            ).length > 0
          );
        }
        return {
          audioDeviceRequirement: {
            label: "audio device requirement",
            totalWork: 1,
            correctWork: d,
            intermediates: { givenDevices: l, acceptableDevices: u },
          },
        };
      };
      t.melonAudioDeviceGraderFn = p;
      const g = (e, t, n) => {
        const r = {};
        e.forEach((e) => {
          const t = e.field_id,
            n = e.response[0],
            i = n.result;
          if (i === s.GraderResult.Correct) {
            const e = n.given[0],
              i = d(e);
            r[t] = i;
          } else if (i === s.GraderResult.Incorrect) {
            const e = d(n.given[0]);
            r[t] = e;
          }
        });
        const { operator: o, firstAnnotation: a, secondAnnotation: u } = n,
          c = {
            "===": (e, t) => e === t,
            "!==": (e, t) => e !== t,
            ">": (e, t) => e > t,
            ">=": (e, t) => e >= t,
            "<": (e, t) => e < t,
            "<=": (e, t) => e <= t,
          };
        let l = 0;
        i.default.has(c, o) && c[o](r[a], r[u]) && (l = 1);
        return {
          comparison: {
            label: "comparison between categories",
            totalWork: 1,
            correctWork: l,
            intermediates: { modelScoresRecord: r },
          },
        };
      };
      t.comparisonGraderFn = g;
      var m = {
        melonAudioPearsonRank: {
          taskTypes: [o.TaskType.TextCollection],
          title: "melon audio pearson rank",
          graderFn: a.globalGradePerFrame(
            f(l.Pearson, "correlationCoefficient", "correlationCoefficient")
          ),
          global: !0,
        },
        melonAudioSpearmanRank: {
          taskTypes: [o.TaskType.TextCollection],
          title: "melon audio spearman rank",
          graderFn: a.globalGradePerFrame(f(l.Spearman, "spearmansRho", "rho")),
          global: !0,
        },
        melonAudioKendallRank: {
          taskTypes: [o.TaskType.TextCollection],
          title: "melon audio kendall rank",
          graderFn: a.globalGradePerFrame(
            f(l.Kendall, "kendallsTau", "b.tauB")
          ),
          global: !0,
        },
        melonAudioDevice: {
          taskTypes: [o.TaskType.TextCollection],
          title: "melon audio device",
          graderFn: a.globalGradePerFrame(p),
          global: !0,
        },
        comparisonGrader: {
          taskTypes: [o.TaskType.TextCollection],
          title: "comparion grader",
          graderFn: a.globalGradePerFrame(g),
          global: !0,
        },
      };
      t.default = m;
    },
    835802: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default = t.melonImageGrader = void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(167469),
        a = n(963494),
        s = n(991984),
        u = n(222357);
      const c = (e, t) => ({
        melonImage: s.gradeIfNotMissing(
          (e, t) =>
            t.type === a.TextCollectionFieldType.Category
              ? {
                  correctWork: i.default.sum(
                    e.response.map((e) => {
                      if (e.result === u.GraderResult.Correct) return 1;
                      if (e.result === u.GraderResult.Incorrect) {
                        if (1 !== e.given.length || 1 !== e.expected.length)
                          return 0;
                        const t = Number(e.given[0]),
                          n = Number(e.expected[0]);
                        if (n > 0 && t > 0) return 1;
                        if (n < 0 && t < 0) return 1;
                        if (0 === n && t >= -1 && t <= 1) return 1;
                      }
                      return 0;
                    })
                  ),
                  totalWork: t.response.length,
                }
              : { correctWork: 0, totalWork: 0 },
          e,
          t
        ),
      });
      t.melonImageGrader = c;
      var l = Object.freeze({
        melonImage: {
          taskTypes: [o.TaskType.TextCollection],
          title: "melon image",
          graderFn: s.gradePerFrame(c),
        },
      });
      t.default = l;
    },
    410718: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default =
          t.indexAssignmentDistance =
          t.timespanIou =
          t.MultiModalTranscriptionNerAnnotationComponentWeights =
          t.MultiModalTranscriptionNerAnnotationComponents =
          t.MULTI_MODAL_TRANSCRIPTION_NER_MATCHING_THRESHOLD =
          t.MULTI_MODAL_TRANSCRIPTION_TIMESTAMP_GRADING_THRESHOLD =
          t.MULTI_MODAL_TRANSCRIPTION_TIMESTAMP_MATCHING_THRESHOLD =
            void 0);
      var r,
        i = n(167469),
        o = n(991984),
        a = (r = n(298784)) && r.__esModule ? r : { default: r };
      t.MULTI_MODAL_TRANSCRIPTION_TIMESTAMP_MATCHING_THRESHOLD = 0.4;
      t.MULTI_MODAL_TRANSCRIPTION_TIMESTAMP_GRADING_THRESHOLD = 0.8;
      var s;
      (t.MULTI_MODAL_TRANSCRIPTION_NER_MATCHING_THRESHOLD = 0.3),
        (t.MultiModalTranscriptionNerAnnotationComponents = s),
        (function (e) {
          (e[(e.TokenOverlap = 0)] = "TokenOverlap"),
            (e[(e.LabelAssignment = 1)] = "LabelAssignment"),
            (e[(e.IndexAssignment = 2)] = "IndexAssignment");
        })(s || (t.MultiModalTranscriptionNerAnnotationComponents = s = {}));
      const u = {
        [s.TokenOverlap]: 0.6,
        [s.LabelAssignment]: 0.2,
        [s.IndexAssignment]: 0.2,
      };
      t.MultiModalTranscriptionNerAnnotationComponentWeights = u;
      const c = (e, t) => {
        const n = Math.max(e[0], t[0]),
          r = Math.min(e[1], t[1]);
        return (
          Math.max(0, r - n) / (Math.max(e[1], t[1]) - Math.min(e[0], t[0]))
        );
      };
      t.timespanIou = c;
      const l = (e, t) => Math.exp(-Math.abs(e - t) / 10);
      t.indexAssignmentDistance = l;
      const f =
        (e) =>
        (t, n, ...r) =>
          "transcript" === (n?.props.type ?? t?.props.type)
            ? o.gradePerFrame(e)(t, n, ...r)
            : {};
      var d,
        h = Object.freeze({
          multiModalTranscriptionTimestamp: {
            taskTypes: [i.TaskType.MultiModalTranscription],
            title: "MultiModalTranscription Timestamp IOU",
            graderFn: f((e, t, n, { threshold: r = 0.8 }) => ({
              multiModalTranscriptionTimestamp: o.gradeIfNotMissing(
                (e, t) => {
                  const n = c(e.timestamps, t.timestamps);
                  return {
                    correctWork: +(n >= r),
                    totalWork: 1,
                    intermediates: { iou: n },
                  };
                },
                e,
                t
              ),
            })),
            paramConfigs: [
              { name: "threshold", label: "IoU Threshold", type: "number" },
            ],
          },
          multiModalTranscriptionSpeaker: {
            taskTypes: [i.TaskType.MultiModalTranscription],
            title: "MultiModalTranscription Speaker Assignment",
            graderFn: f((e, t) => ({
              multiModalTranscriptionSpeaker: o.gradeIfNotMissing(
                (e, t) => {
                  return {
                    correctWork:
                      ((n = e.speakerIndex ?? "0"),
                      (r = t.speakerIndex ?? "0"),
                      n === r ? 1 : 0),
                    totalWork: 1,
                  };
                  var n, r;
                },
                e,
                t
              ),
            })),
          },
          multiModalTranscriptionText: {
            taskTypes: [i.TaskType.MultiModalTranscription],
            title: "MultiModalTranscription Text",
            graderFn: f((e, t) => ({
              multiModalTranscriptionText: o.gradeIfNotMissing(
                (e, t) =>
                  o.gradeFreeText(
                    e.text,
                    t.text,
                    o.TextComparisonMethod.NormalizedLevenshtein
                  ),
                e,
                t
              ),
            })),
          },
          multiModalTranscriptionNerText: {
            taskTypes: [i.TaskType.MultiModalTranscription],
            title: "MultiModalTranscription NER Text",
            graderFn:
              ((d = (e, t, n) => {
                const r = (e, t) => {
                  var n, r;
                  return {
                    multiModalTranscriptionNerTextGrader:
                      ((n = e),
                      (r = t),
                      {
                        correctWork:
                          u[s.TokenOverlap] *
                            o.gradeFreeText(
                              n.text,
                              r.text,
                              o.TextComparisonMethod.NormalizedLevenshtein
                            ).correctWork +
                          u[s.LabelAssignment] * (n.label === r.label ? 1 : 0) +
                          u[s.IndexAssignment] *
                            l(
                              n.transcriptSectionStart,
                              r.transcriptSectionStart
                            ),
                        totalWork: 1,
                      }),
                  };
                };
                return a.default.isEmpty(t)
                  ? {
                      multiModalTranscriptionNerText: {
                        correctWork: 0,
                        totalWork: 0,
                      },
                    }
                  : a.default.isEmpty(e)
                  ? {
                      multiModalTranscriptionNerText: {
                        correctWork: +(
                          a.default.findIndex(
                            t.acceptedAnnotations,
                            ({ annotation: e }) => !e
                          ) >= 0
                        ),
                        totalWork: 1,
                      },
                    }
                  : a.default.isNil(t.text) ||
                    a.default.isNil(t.label) ||
                    a.default.isNil(t.transcriptSectionStart) ||
                    a.default.isNil(t.transcriptSectionEnd) ||
                    a.default.isNil(e.text) ||
                    a.default.isNil(e.label) ||
                    a.default.isNil(e.transcriptSectionStart) ||
                    a.default.isNil(e.transcriptSectionEnd)
                  ? {
                      multiModalTranscriptionNerText: {
                        correctWork: 0,
                        totalWork: 0,
                      },
                    }
                  : o.gradeForAcceptedAnnotations(
                      e,
                      t,
                      r,
                      n && n.acceptedAnnotationMatchIndexes
                    );
              }),
              (e, t, ...n) =>
                "annotation" === (t?.props.type ?? e?.props.type)
                  ? o.gradePerFrame(d)(e, t, ...n)
                  : {}),
          },
        });
      t.default = h;
    },
    896135: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default =
          t.gradePerFrameForAnnotations =
          t.nerRelationshipsGrader =
          t.nerLabelsGrader =
          t.endpointGrader =
          t.nullGrader =
            void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(167469),
        a = n(991984);
      t.nullGrader = () => {};
      const s = (e, t, n) => {
        const r = (e, t) => {
          var n;
          var r;
          return {
            start:
              ((n = t), { correctWork: +(e.start === n.start), totalWork: 1 }),
            end: ((r = t), { correctWork: +(e.end === r.end), totalWork: 1 }),
          };
        };
        if (i.default.isEmpty(t)) {
          const e = { correctWork: 0, totalWork: 0 };
          return { start: e, end: e };
        }
        if (i.default.isEmpty(e)) {
          const e = {
            correctWork: +(
              i.default.findIndex(
                t.acceptedAnnotations,
                ({ annotation: e }) => !e
              ) >= 0
            ),
            totalWork: 1,
          };
          return { start: e, end: e };
        }
        return i.default.isNil(t.start) ||
          i.default.isNil(t.end) ||
          i.default.isNil(e.start) ||
          i.default.isNil(e.end)
          ? {
              start: { correctWork: 0, totalWork: 0 },
              end: { correctWork: 0, totalWork: 0 },
            }
          : a.gradeForAcceptedAnnotations(
              e,
              t,
              r,
              n && n.acceptedAnnotationMatchIndexes
            );
      };
      t.endpointGrader = s;
      const u = (e, t, n) => {
        const r = (e, t) => {
          var n, r;
          return {
            nerLabels:
              ((n = e.label),
              (r = t.label),
              { correctWork: +(n === r), totalWork: 1 }),
          };
        };
        if (i.default.isEmpty(t)) {
          return { nerLabels: { correctWork: 0, totalWork: 0 } };
        }
        if (i.default.isEmpty(e)) {
          return {
            nerLabels: {
              correctWork: +(
                i.default.findIndex(
                  t.acceptedAnnotations,
                  ({ annotation: e }) => !e
                ) >= 0
              ),
              totalWork: 1,
            },
          };
        }
        return i.default.isNil(t.label) || i.default.isNil(e.label)
          ? { nerLabels: { correctWork: 0, totalWork: 0 } }
          : a.gradeForAcceptedAnnotations(
              e,
              t,
              r,
              n && n.acceptedAnnotationMatchIndexes
            );
      };
      t.nerLabelsGrader = u;
      const c = (e, t, n, r, o, a) => {
        if (i.default.isEmpty(t?.name))
          return { nerRelationships: { correctWork: 0, totalWork: 0 } };
        if (i.default.isEmpty(e))
          return { nerRelationships: { correctWork: 0, totalWork: 1 } };
        return {
          nerRelationships: {
            correctWork: +(
              !(a.directedRelationshipNames.includes(e.name) && n?.reversed) &&
              e.name === t.name
            ),
            totalWork: 1,
          },
        };
      };
      t.nerRelationshipsGrader = c;
      const l =
        (e) =>
        (t, n, ...r) =>
          "annotation" === (n?.props.type ?? t?.props.type)
            ? a.gradePerFrame(e)(t, n, ...r)
            : {};
      t.gradePerFrameForAnnotations = l;
      var f,
        d = Object.freeze({
          textEndpoints: {
            taskTypes: [o.TaskType.NamedEntityRecognition],
            title: "Text endpoints",
            graderFn: l(s),
          },
          nerLabels: {
            taskTypes: [
              o.TaskType.NamedEntityRecognition,
              o.TaskType.MultiModalTranscription,
            ],
            title: "Text Labels",
            graderFn: l(u),
          },
          nerRelationships: {
            taskTypes: [
              o.TaskType.NamedEntityRecognition,
              o.TaskType.MultiModalTranscription,
            ],
            title: "Text relationships",
            graderFn:
              ((f = c),
              (e, t, ...n) =>
                "relationship" === (t?.props.type ?? e?.props.type)
                  ? a.gradePerFrame(f)(e, t, ...n)
                  : {}),
          },
        });
      t.default = d;
    },
    642101: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default = t.hasCorrectLabels = void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(991984),
        a = n(167469),
        s = n(440169);
      class u {
        appendError(e) {
          (this.count += 1), this.details.push(e);
        }
        toJson() {
          return { count: this.count, details: this.details };
        }
        constructor() {
          (this.count = 0), (this.details = []);
        }
      }
      const c = {
          small_vehicles: ["car_or_van_or_suv", "pickup_truck"],
          large_vehicles: [
            "truck",
            "pickup_truck",
            "trailer",
            "front_of_semi_truck",
            "bendy_bus",
            "rigid_bus",
            "train",
          ],
          emergency_vehicles: ["firetruck", "police_car", "ambulance"],
          construction_vehicles: ["construction_vehicle"],
          other_vehicles: [
            "motorcycle",
            "bicycle",
            "bicycle_rack",
            "police_bicycle",
            "police_motorcycle",
          ],
          pedestrians: ["adult_pedestrian", "child pedestrian"],
          "construction_workers_&_police_officers": [
            "police",
            "construction_worker",
          ],
          animals: ["small_animal", "large_animal"],
          others: [
            "stroller",
            "wheelchair",
            "other_pushable_pullable",
            "portable_personal_mobility_vehicle",
          ],
          movable_objects: [
            "traffic_cone",
            "temporary_traffic_barrier",
            "movable_obstacle_in_road",
          ],
        },
        l = i.default.flatMap(c),
        f = {};
      i.default.forEach(c, (e, t) => {
        i.default.forEach(e, (e) => {
          f[e] = t;
        });
      });
      const d = ["vehicle_activity"],
        h = ["rider_status", "emergency_lights", "is_directing_traffic"],
        p = (e, t) => i.default.get(e, "height", 0) > t,
        g = (e) => l.includes(e),
        m = (e, t = []) => {
          if (e.correctLabel !== e.currentLabel) return !1;
          const n = i.default.get(e.correctAnnotation, "attributes", {}),
            r = i.default.get(e.currentAnnotation, "attributes", {}),
            o = i.default.differenceWith(
              i.default.entries(n),
              i.default.entries(r),
              i.default.isEqual
            );
          for (const [i] of o) if (!t.includes(i)) return !1;
          return !0;
        };
      t.hasCorrectLabels = m;
      const y = (e) =>
          e.currentAnnotation && !e.correctAnnotation && g(e.currentLabel)
            ? `extra ${e.currentLabel}`
            : null,
        b = (e) =>
          !e.currentAnnotation && e.correctAnnotation && g(e.correctLabel)
            ? `missing ${e.correctLabel}`
            : null,
        v = (e) => {
          if (!e.currentAnnotation || !e.correctAnnotation) return null;
          const t = [];
          return (
            ((e, t) => {
              const n = e.currentAnnotation,
                r = e.correctAnnotation,
                o = [
                  n.left - r.left,
                  n.top - r.top,
                  n.left + n.width - (r.left + r.width),
                  n.top + n.height - (r.top + r.height),
                ];
              return i.default.every(o, (e) => Math.abs(e) < t);
            })(e, 2) || t.push("loose bounding box"),
            m(e, d) || t.push(`incorrect label (${e.currentLabel})`),
            t.length > 0 ? `${e.correctLabel}: ${t.join(", ")}` : null
          );
        },
        _ = (e) => {
          const t = p(e.correctAnnotation, 40);
          return (
            e.correctAnnotation &&
            e.currentAnnotation &&
            ((((e) => f[e.currentLabel] !== f[e.correctLabel])(e) && t) ||
              (((e, t) => {
                const n = i.default.get(e.currentAnnotation, "attributes", {}),
                  r = i.default.get(e.currentAnnotation, "attributes", {}),
                  o = i.default.difference(
                    i.default.entries(n),
                    i.default.entries(r)
                  );
                for (const [i] of o) if (t.includes(i)) return !0;
                return !1;
              })(e, h) &&
                t) ||
              ((e, t) =>
                s.genericIou(e.correctAnnotation, e.currentAnnotation) < t)(
                e,
                0.7
              ))
          );
        },
        x = (e) => {
          const t = e.top,
            n = e.left,
            r = e.height,
            i = e.width,
            o = [];
          return (
            o.push({ x: n, y: t }),
            o.push({ x: n + i, y: t }),
            o.push({ x: n + i, y: t + r }),
            o.push({ x: n, y: t + r }),
            o.push({ x: n, y: t }),
            o
          );
        },
        T = (e) => {
          const t = i.default.get(e.correctAnnotation, "frames.0");
          t && (t.vertices = x(t));
          const n = i.default.get(e.currentAnnotation, "frames.0");
          return (
            n && (n.vertices = x(n)),
            {
              correctLabel: i.default.get(e.correctAnnotation, "props.label"),
              currentLabel: i.default.get(e.currentAnnotation, "props.label"),
              correctAnnotation: t,
              currentAnnotation: n,
            }
          );
        };
      var M = {
        neutronBox: {
          taskTypes: [a.TaskType.Annotation],
          title: "neutron rubric",
          graderFn: o.globalGradePerFrame(
            (
              e,
              t,
              { recallThreshold: n = 0.95, precisionThreshold: r = 0.95 },
              i
            ) => {
              const o = i.map(T),
                a = new u(),
                s = new u();
              let c = 0;
              const l = new u(),
                f = new u();
              let d = 0;
              for (const u of o) {
                u.correctAnnotation && (c += 1),
                  u.currentAnnotation && (d += 1);
                const e = b(u);
                e &&
                  (p(u.correctAnnotation, 40)
                    ? a.appendError(e)
                    : s.appendError(e));
                const t = y(u);
                t &&
                  (p(u.currentAnnotation, 40)
                    ? l.appendError(t)
                    : f.appendError(t));
                const n = v(u);
                n && (_(u) ? l.appendError(n) : f.appendError(n));
              }
              const h = c > 0 ? 1 - (3 * a.count + s.count) / c : +(0 === d),
                g = d > 0 ? 1 - (3 * l.count + f.count) / d : +(0 === d);
              return {
                recall: {
                  label: "recall",
                  correctWork: +(h > n),
                  totalWork: 1,
                  intermediates: {
                    recall: h,
                    "critical false negatives": a.toJson(),
                    "non-critical false negatives": s.toJson(),
                    "total ground truth annotations": c,
                  },
                },
                precision: {
                  label: "precision",
                  correctWork: +(g > r),
                  totalWork: 1,
                  intermediates: {
                    precision: g,
                    "critical errors": l.toJson(),
                    "non-critical errors": f.toJson(),
                    "total annotations": d,
                  },
                },
              };
            }
          ),
          global: !0,
        },
      };
      t.default = M;
    },
    242603: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default =
          t.pointGraders =
          t.distanceGrader =
          t.POINT_DISTANCE_THRESHOLD =
            void 0);
      var r = n(440169),
        i = n(167469),
        o = n(991984);
      t.POINT_DISTANCE_THRESHOLD = 6;
      const a = { correctWork: 0, totalWork: 0 },
        s = (e, t, n, { threshold: i = 6 }) => {
          return (
            (s = t),
            e?.sensor_id === s?.sensor_id
              ? {
                  pointDistance: o.gradeIfNotMissing(
                    (e, t) => {
                      const n = r.findDistance(
                        r.vertexToArr(e),
                        r.vertexToArr(t)
                      );
                      return {
                        correctWork: +(n <= i),
                        totalWork: 1,
                        intermediates: { distance: n },
                      };
                    },
                    e,
                    t
                  ),
                }
              : { pointDistance: a }
          );
          var s;
        };
      t.distanceGrader = s;
      const u = {
        pointDistance: {
          taskTypes: [i.TaskType.PointAnnotation],
          title: "Distance",
          graderFn: o.gradePerFrame(s),
        },
      };
      t.pointGraders = u;
      var c = u;
      t.default = c;
    },
    355427: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default =
          t.splitIntoPolygonLikes =
          t.polygonIouClampedGrader =
          t.DEFAULT_PX_MAPPINGS =
          t.POLYGON_GRADER_MARGIN_THRESHOLD =
          t.POLYGON_GRADER_IOU_DIFF_THRESHOLD =
          t.VIDEO_POLYGON_DISTANCE_IOU_THRESHOLD =
          t.POLYGON_DISTANCE_IOU_THRESHOLD =
            void 0);
      var r = n(167469),
        i = n(991984),
        o = n(440169),
        a = n(311311);
      t.POLYGON_DISTANCE_IOU_THRESHOLD = 0.6;
      t.VIDEO_POLYGON_DISTANCE_IOU_THRESHOLD = 0.3;
      t.POLYGON_GRADER_IOU_DIFF_THRESHOLD = 0.9;
      t.POLYGON_GRADER_MARGIN_THRESHOLD = 5;
      const s = [
        { min: 0, max: 5, threshold: 0.5 },
        { min: 5, max: 10, threshold: 0.6 },
      ];
      t.DEFAULT_PX_MAPPINGS = s;
      const u = (e, t, n, { threshold: r = 0.9, mappings: a = s }) => ({
        polygonIouClamped: i.gradeIfNotMissing(
          (e, t) => {
            let n = r;
            try {
              const e = o.polygonFor(t).getArea(),
                r = a.filter((t) => t.min <= e && t.max > e);
              r.length > 0 && (n = r[0].threshold);
            } catch (i) {}
            try {
              const r = o.genericIou(e, t);
              return {
                correctWork: +(r >= n),
                totalWork: 1,
                intermediates: { iou: r },
              };
            } catch (s) {
              return { correctWork: 0, totalWork: 1 };
            }
          },
          e,
          t
        ),
      });
      t.polygonIouClampedGrader = u;
      const c = (e) =>
        a
          .splitPointsByFragment(e.vertices, e.multiple_polygon_vertices)
          .filter((e) => e.length)
          .map((e) => ({ vertices: e }));
      t.splitIntoPolygonLikes = c;
      var l = {
        polygonIou: {
          taskTypes: [r.TaskType.PolygonAnnotation, r.TaskType.LidarPolygon],
          title: "Polygon Intersection-Over-Union",
          graderFn: i.gradePerFrame((e, t, n, { threshold: r = 0.9 }) => ({
            polygonIou: i.gradeIfNotMissing(
              (e, t) => {
                try {
                  const n = c(e),
                    i = c(t),
                    a = o.fragmentsIou(n, i);
                  return {
                    correctWork: +(a >= r),
                    totalWork: 1,
                    intermediates: { iou: a },
                  };
                } catch (n) {
                  return { correctWork: 0, totalWork: 1 };
                }
              },
              e,
              t
            ),
          })),
          paramConfigs: [
            { name: "threshold", label: "IoU Threshold", type: "number" },
          ],
        },
        polygonMargin: {
          taskTypes: [r.TaskType.PolygonAnnotation, r.TaskType.LidarPolygon],
          title: "Polygon Margin",
          graderFn: i.gradePerFrame((e, t, n, { threshold: r = 5 }) => ({
            polygonMargin: i.gradeIfNotMissing(
              (e, t) => {
                const n = a.splitPointsByFragment(
                    e.vertices,
                    e.multiple_polygon_vertices
                  ),
                  i = a.splitPointsByFragment(
                    t.vertices,
                    t.multiple_polygon_vertices
                  ),
                  s = +o.lineListInMargin(
                    o.loopBackToStart(n),
                    o.loopBackToStart(i),
                    r
                  );
                return {
                  correctWork: s,
                  totalWork: 1,
                  intermediates: { inMargin: s },
                };
              },
              e,
              t
            ),
          })),
          paramConfigs: [
            {
              name: "threshold",
              label: "Margin Threshold",
              type: "number",
              defaultValue: 5,
            },
          ],
        },
        polygonIouClamped: {
          taskTypes: [r.TaskType.PolygonAnnotation, r.TaskType.LidarPolygon],
          title: "Polygon Intersection-Over-Union with clamping by size",
          graderFn: i.gradePerFrame(u),
          paramConfigs: [
            {
              name: "threshold",
              label: "default IoU Threshold",
              type: "number",
            },
            {
              name: "mappings",
              label: "possible px range to threshold mappings",
              type: "any",
            },
          ],
        },
      };
      t.default = l;
    },
    216383: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default =
          t.getEdgeAccuracy =
          t.queryNearestNeighbor =
          t.kdTreeify =
          t.getSegmentIouDetail =
          t.getSegmentIou =
            void 0);
      var r,
        i = n(167469),
        o = n(991984),
        a = (r = n(298784)) && r.__esModule ? r : { default: r };
      const s = (e, t) => u(e, t).iou;
      t.getSegmentIou = s;
      const u = (e, t) => {
        const n = e.columnMin <= t.columnMax && e.columnMax >= t.columnMin;
        if (!(e.rowMin <= t.rowMax && e.rowMax >= t.rowMin) || !n)
          return { iou: 0, intersection: 0 };
        const r = e.intersectionArea(t);
        if (0 === r) return { iou: 0, intersection: 0 };
        const i = e.unionArea(t);
        return { iou: i > 0 ? r / i : 0, intersection: r };
      };
      t.getSegmentIouDetail = u;
      const c = (e, t) => ({
          segmentIou: o.gradeIfNotMissing(
            (e, t) => {
              const n = e.segment,
                r = t.segment,
                i = s(n, r);
              return {
                correctWork: i,
                totalWork: 1,
                intermediates: { segmentIou: i },
              };
            },
            e,
            t
          ),
        }),
        l = (e, t = 0) => {
          const n = e.sort((e, n) => e[t] - n[t]);
          if (0 === e.length) return null;
          const r = Math.floor(n.length / 2);
          return {
            point: n[r],
            left: l(n.slice(0, r), t ? 0 : 1),
            right: l(n.slice(r + 1), t ? 0 : 1),
          };
        };
      t.kdTreeify = l;
      const f = (e, t) =>
          (e[0] - t[0]) * (e[0] - t[0]) + (e[1] - t[1]) * (e[1] - t[1]),
        d = (e, t, n = null, r = 1 / 0, i = 0) => {
          if (null === e) return n;
          let o, a;
          f(e.point, t) < r && ((n = e.point), (r = f(n, t))),
            t[i] < e.point[i]
              ? ((o = e.left), (a = e.right))
              : ((o = e.right), (a = e.left)),
            (r = (n = d(o, t, n, r, i ? 0 : 1)) ? f(n, t) : 1 / 0);
          const s = Math.abs(t[i] - e.point[i]);
          return s * s < r && (n = d(a, t, n, r, i ? 0 : 1)), n;
        };
      t.queryNearestNeighbor = d;
      const h = (e, t, n) => {
        const r = e.getEdge(),
          i = t.getEdge(),
          o = l(i);
        let a = 0,
          s = 0;
        for (const u of r) {
          const e = d(o, u);
          e && (f(u, e) <= n * n && (a += 1), (s += 1));
        }
        return s ? a / s : 0;
      };
      t.getEdgeAccuracy = h;
      const p = (e, t) => {
        const n = a.default.get(t, "nonCritical", []),
          r = e.props.label;
        return n.includes(r) ? 0.5 : 1;
      };
      var g = {
        segmentIou: {
          taskTypes: [i.TaskType.SegmentAnnotation],
          title: "Overlap between matching segment annotations",
          graderFn: (e, t, n, { threshold: r = 1 } = {}, i, s) => {
            const u = a.default.get(e, "frames.[0]"),
              l = a.default.get(t, "frames.[0]"),
              f = a.default.get(s, "frames.[0]"),
              d = "segmentIou",
              { correctWork: h, totalWork: p } = c(u, l).segmentIou,
              g = h >= r ? 1 : h,
              m = {
                errorType: d,
                rawErrorType: d,
                correctWork: g,
                totalWork: p,
                relativeCorrectWork: g,
                relativeTotalWork: p,
                introducedErrorCorrectWork: 0,
                numIncorrectFrames: +(h < r && p),
                incorrectFrames: p && h < r ? ["0"] : [],
                numTotalFrames: 1,
                isMissingProp: !u || void 0,
                isExtraneousProp: !l || void 0,
              };
            if (!i || !l) return { [d]: m };
            if (!u) {
              if (f) {
                const { correctWork: e, totalWork: t } = c(f, l).segmentIou,
                  n = e < t;
                return {
                  [o.getMissingPropErrorType(d)]: Object.assign({}, m, {
                    relativeCorrectWork: -1,
                    relativeTotalWork: 0,
                    introducedErrorCorrectWork: n ? 0 : -1,
                    isMissingProp: !0,
                  }),
                };
              }
              return {
                [o.getMissingPropErrorType(d)]: Object.assign({}, m, {
                  relativeCorrectWork: 0,
                  relativeTotalWork: 1,
                  isMissingProp: !0,
                }),
              };
            }
            if (!f)
              return {
                [d]: Object.assign({}, m, {
                  relativeCorrectWork: h,
                  relativeTotalWork: 1,
                }),
              };
            const y = ((e, t, n) => {
              const r = t.difference(n),
                i = n.difference(t),
                o = e.difference(n),
                a = n.difference(e),
                s = o.intersectionArea(r),
                u = a.intersectionArea(i),
                c = o.getArea() - s,
                l = a.getArea() - u,
                f = t.getArea() || 1,
                d = -(c + l);
              return {
                relativeCorrectWork: (s + u + d) / f,
                relativeTotalWork: (r.getArea() + i.getArea()) / f,
                introducedErrorCorrectWork: d / f,
              };
            })(u.segment, l.segment, f.segment);
            return { [d]: Object.assign({}, m, y) };
          },
          paramConfigs: [
            {
              name: "threshold",
              label: "IOU Threshold",
              type: "number",
              defaultValue: 1,
            },
          ],
        },
        segmentEdgeFScore: {
          taskTypes: [i.TaskType.SegmentAnnotation],
          title:
            "F-Score computed from classifying edge pixels as explainable or not",
          graderFn: o.gradePerFrame((e, t, n, r) => ({
            edgeFScore: o.gradeIfNotMissing(
              (e, t) => {
                const n = e.segment,
                  i = t.segment,
                  o = h(n, i, r?.bandwidth ?? 3),
                  a = h(i, n, r?.bandwidth ?? 3),
                  s = o + a ? (2 * o * a) / (o + a) : 0;
                return {
                  correctWork: s,
                  totalWork: 1,
                  intermediates: { fScore: s },
                };
              },
              e,
              t
            ),
          })),
          paramConfigs: [
            {
              name: "bandwidth",
              label: "Edge Width",
              type: "number",
              defaultValue: 3,
            },
          ],
        },
        segmentAnnotationPrecisionRecall: {
          taskTypes: [i.TaskType.SegmentAnnotation],
          title: "Per annotation precision recall grader",
          graderFn: (e, t, n, r, i, o) => {
            let s = 0,
              u = 0,
              l = 0,
              f = 0;
            for (const g of o || []) {
              const e = g.currentAnnotation,
                t = g.correctAnnotation,
                r = a.default.get(e, "frames.[0]"),
                i = a.default.get(t, "frames.[0]");
              if (!i && !r) continue;
              let o = 0,
                d = 0,
                h = 0,
                m = 0;
              const { correctWork: y } = c(r, i).segmentIou;
              if (i && !r) (o += 1), (d += 1);
              else if (r && !i) (h += 1), (m += 1);
              else if (
                r &&
                i &&
                ((o += 1),
                (h += 1),
                r.label !== i.label ? (m += 1) : (m += 1 - y),
                r.attributes || i.attributes)
              ) {
                const e = a.default.union(
                  a.default.keys(r.attributes || {}),
                  a.default.keys(i.attributes || {})
                );
                (h += e.length),
                  (m += e.filter(
                    (e) => r.attributes?.[e] !== i.attributes?.[e]
                  ).length);
              }
              const b = p(t || e, n);
              (s += b * o), (u += b * d), (l += b * h), (f += b * m);
            }
            const d = "segmentAnnotationRecall",
              h = "segmentAnnotationPrecision";
            return {
              [d]: {
                errorType: d,
                correctWork: s - u,
                totalWork: s,
                relativeCorrectWork: s - u,
                relativeTotalWork: s,
              },
              [h]: {
                errorType: h,
                correctWork: l - f,
                totalWork: l,
                relativeCorrectWork: l - f,
                relativeTotalWork: l,
              },
            };
          },
          global: !0,
        },
        pixelPrecision: {
          taskTypes: [i.TaskType.SegmentAnnotation],
          title: "Pixel Precision",
          graderFn: (e, t, n, r, i, o) => {
            const a = { errorPixels: 0, totalPixels: 0 };
            for (const u of o || []) {
              const e = u.currentAnnotation,
                t = u.correctAnnotation;
              if (!t && !e) continue;
              const r = p(t || e, n);
              if (t) {
                if (e)
                  if (t.props.label === e.props.label)
                    (a.totalPixels += t.props.area * r),
                      (a.errorPixels +=
                        e.frames[0].segment
                          .difference(t.frames[0].segment)
                          .getArea() * r);
                  else {
                    const e = t.props.area * r;
                    (a.errorPixels += e), (a.totalPixels += e);
                  }
              } else {
                const t = e.props.area * r;
                (a.errorPixels += t), (a.totalPixels += t);
              }
            }
            const s = "pixelPrecision";
            return {
              [s]: {
                errorType: s,
                rawErrorType: s,
                correctWork: a.totalPixels - a.errorPixels,
                totalWork: a.totalPixels,
                relativeCorrectWork: a.totalPixels - a.errorPixels,
                relativeTotalWork: a.totalPixels,
                introducedErrorCorrectWork: 0,
              },
            };
          },
          global: !0,
        },
        pixelRecall: {
          taskTypes: [i.TaskType.SegmentAnnotation],
          title: "Pixel Recall",
          graderFn: (e, t, n, r, i, o) => {
            const a = { totalPixels: 0, missingPixels: 0 };
            for (const u of o || []) {
              const e = u.currentAnnotation,
                t = u.correctAnnotation;
              if (!t && !e) continue;
              const r = p(t || e, n);
              if (!t) continue;
              const i = t.props.area * r;
              (a.totalPixels += i), e || (a.missingPixels = i);
            }
            const s = "pixelRecall";
            return {
              [s]: {
                errorType: s,
                rawErrorType: s,
                correctWork: a.totalPixels - a.missingPixels,
                totalWork: a.totalPixels,
                relativeCorrectWork: a.totalPixels - a.missingPixels,
                relativeTotalWork: a.totalPixels,
                introducedErrorCorrectWork: 0,
              },
            };
          },
          global: !0,
        },
      };
      t.default = g;
    },
    30353: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default = t.sizeChartGrader = void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(167469),
        a = n(991984),
        s = n(222357),
        u = n(810755);
      function c(e) {
        return "inch" === e ? "in" : e;
      }
      function l(e, t) {
        if (e === t) return !0;
        if (e.length - t.length === 1) {
          let n = 0,
            r = 0;
          for (n = 0; n < e.length; n++) e[n] === t[r] && (r += 1);
          return n - r <= 1;
        }
        if (t.length - e.length === 1) {
          let n = 0,
            r = 0;
          for (n = 0; n < t.length; n++) t[n] === e[r] && (r += 1);
          return n - r <= 1;
        }
        if (t.length === e.length) {
          let n = 0;
          for (let r = 0; r < t.length; r++) t[r] !== e[r] && (n += 1);
          return n <= 1;
        }
        return !1;
      }
      function f(e) {
        return i.default.flatMap(e, (e) =>
          i.default.map(e.conversions, (t) => ({
            label: e.label,
            conversion: t,
            sizeGroupingKey: [e.label, t.key, t.value]
              .join("__DELIM__")
              .replace(/ /g, "")
              .toLowerCase(),
          }))
        );
      }
      function d(e) {
        return i.default.flatMap(e, (e) =>
          i.default.map(e.measurements, (t) => ({
            label: e.label,
            measurement: t,
            sizeGroupingKey: [e.label, t.measurement, c(t.size_unit_override)]
              .join("__DELIM__")
              .replace(/ /g, "")
              .toLowerCase(),
            measurementGroupingKey: [t.measurement, c(t.size_unit_override)]
              .join("__DELIM__")
              .replace(/ /g, "")
              .toLowerCase(),
          }))
        );
      }
      function h(e) {
        return i.default.map(e, (e) => e.label);
      }
      function p(e) {
        let t = 0;
        t += f(e.sizes).length;
        const n = d(e.sizes);
        return (
          (t += 2 * i.default.uniqBy(n, "sizeGroupingKey").length),
          (t += i.default.uniqBy(n, "measurementGroupingKey").length),
          t
        );
      }
      function g(e, t, n) {
        const r = h(e.sizes),
          o = h(t.sizes),
          a = i.default.differenceBy(r, o);
        n.missingLabels += a.length;
        const s = i.default.differenceBy(o, r);
        n.extraneousLabels += s.length;
        const u = f(e.sizes),
          p = f(t.sizes),
          g = i.default.differenceBy(u, p, "sizeGroupingKey");
        n.missingConversions += g.length;
        const m = i.default.differenceBy(p, u, "sizeGroupingKey");
        n.extraneousConversions += m.length;
        const y = d(e.sizes).sort(),
          b = d(t.sizes).sort();
        if (b.length > y.length)
          n.extraneousMeasurements += b.length - y.length;
        else if (b.length < y.length)
          n.missingMeasurements += y.length - b.length;
        else {
          const e = i.default.difference(y, b),
            t = i.default.differenceWith(
              e.map((e) => e.sizeGroupingKey),
              b.map((e) => e.sizeGroupingKey),
              l
            ),
            r = i.default.differenceWith(
              b.map((e) => e.sizeGroupingKey),
              e.map((e) => e.sizeGroupingKey),
              l
            );
          (n.missingMeasurements += t.length),
            (n.extraneousMeasurements += r.length),
            (n.typosMeasurements += 2 * b.length - t.length - r.length);
        }
        const v = i.default
          .values(i.default.groupBy([...y, ...b], (e) => e.sizeGroupingKey))
          .filter((e) => e.length >= 2);
        i.default.forEach(v, ([e, t]) => {
          (n.minSizeFloatError +=
            e &&
            t &&
            e.measurement.min_size_float === t.measurement.min_size_float
              ? 0
              : 1),
            (n.maxSizeFloatError +=
              e &&
              t &&
              e.measurement.max_size_float === t.measurement.max_size_float
                ? 0
                : 1);
        });
        const _ = i.default.values(
          i.default.groupBy([...y, ...b], (e) => e.measurementGroupingKey)
        );
        i.default.forEach(_, (e) => {
          n.sizeUnitOverride +=
            1 ===
            i.default.uniqBy(
              e.map((e) => c(e.measurement.size_unit_override)),
              "size_unit_override"
            ).length
              ? 0
              : 1;
        });
      }
      const m = (e, t, n, r) => {
        const o = "sizeChart";
        u.assertDefined(r);
        const a = i.default.groupBy(e, "field_id"),
          c = a.containsSizeChart?.[0];
        if (
          !c ||
          i.default.get(c, "response.0.result") !== s.GraderResult.Correct
        )
          return { sizeChart: { label: o, correctWork: 0, totalWork: 20 } };
        if (
          "no" === i.default.get(c, "response.0") ||
          "website_down" === i.default.get(c, "response.0")
        )
          return { sizeChart: { label: o, correctWork: 20, totalWork: 20 } };
        const l = {
            sizeChartName: 0,
            missingConversions: 0,
            extraneousConversions: 0,
            missingMeasurements: 0,
            extraneousMeasurements: 0,
            typosMeasurements: 0,
            missingLabels: 0,
            extraneousLabels: 0,
            minSizeFloatError: 0,
            maxSizeFloatError: 0,
            sizeUnitOverride: 0,
            jsonParseError: 0,
          },
          f = a.size_chart_name ?? [];
        for (const u of f)
          l.sizeChartName +=
            i.default.get(u, "response.0.result") === s.GraderResult.Correct
              ? 0
              : 1;
        const d = a.json_input ?? [];
        for (const u of d)
          if (
            i.default.get(u, "response.0.result") !== s.GraderResult.Correct
          ) {
            let e;
            try {
              e = JSON.parse(i.default.get(u, "response.0.expected"));
              g(e, JSON.parse(i.default.get(u, "response.0.given")), l);
            } catch {
              l.jsonParseError += e ? p(e) : 1;
            }
          }
        if (
          l.missingLabels +
            l.extraneousLabels +
            l.missingConversions +
            l.extraneousConversions +
            l.missingMeasurements +
            l.extraneousMeasurements +
            l.sizeUnitOverride >
          0
        )
          return {
            sizeChart: {
              label: o,
              correctWork: 0,
              totalWork: 20,
              intermediates: { errors: l },
            },
          };
        let h = 20;
        return (
          0 !== l.sizeChartName && (h -= 1),
          0 !== l.typosMeasurements && (h -= 1),
          (h -= 6 * Math.min(l.minSizeFloatError + l.maxSizeFloatError, 3)),
          {
            sizeChart: {
              label: o,
              correctWork: Math.max(h, 0),
              totalWork: 20,
              intermediates: { errors: l },
            },
          }
        );
      };
      t.sizeChartGrader = m;
      var y = Object.freeze({
        sizeChart: {
          taskTypes: [o.TaskType.TextCollection],
          title: "e-commerse size chart grader",
          graderFn: a.globalGradePerFrame(m),
          global: !0,
        },
      });
      t.default = y;
    },
    798921: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default = t.snowberryCqlGraderFn = t.CqlField = void 0);
      var r,
        i,
        o = n(167469),
        a = n(991984),
        s = n(222357);
      (t.CqlField = r),
        (function (e) {
          (e.IsUnjudgeable = "is_unjudgeable"),
            (e.PoorVideoQuality = "poor_video_quality"),
            (e.PoorAudioQuality = "poor_audio_quality"),
            (e.NegativeCharacteristics = "negative_characteristics"),
            (e.TypesOfContent = "types_of_content");
        })(r || (t.CqlField = r = {})),
        (function (e) {
          (e.Unjudgeable = "unjudgeable"),
            (e.Good = "good"),
            (e.Bad = "bad"),
            (e.Debatable = "debatable"),
            (e.Empty = "empty");
        })(i || (i = {}));
      const u = (e) => {
          if (0 === Object.keys(e).length) return i.Empty;
          const t = e[r.IsUnjudgeable] && "no" !== e[r.IsUnjudgeable][0],
            n = e[r.PoorVideoQuality] && "no" !== e[r.PoorVideoQuality][0],
            o = e[r.PoorAudioQuality] && "no" !== e[r.PoorAudioQuality][0],
            a =
              e[r.NegativeCharacteristics] &&
              "none" !== e[r.NegativeCharacteristics][0],
            s = n || o || a,
            u = e[r.TypesOfContent] && "debatable" !== e[r.TypesOfContent][0];
          return t ? i.Unjudgeable : s ? i.Bad : u ? i.Good : i.Debatable;
        },
        c = (e) => {
          const { givenResponsesPerField: t, expectedResponsesPerField: n } = ((
            e
          ) => {
            const t = {},
              n = {};
            return (
              e.forEach((e) => {
                const r = e.field_id,
                  i = e.response[0],
                  o = i.result;
                o === s.GraderResult.Correct || o === s.GraderResult.Matched
                  ? ((t[r] = i.given), (n[r] = i.given))
                  : (o !== s.GraderResult.Missing && (t[r] = i.given),
                    o !== s.GraderResult.Extraneous && (n[r] = i.expected));
              }),
              { givenResponsesPerField: t, expectedResponsesPerField: n }
            );
          })(e);
          let o = 0;
          const a = u(t),
            c = u(n),
            l = ((e, t) => {
              const n = [
                r.PoorVideoQuality,
                r.PoorAudioQuality,
                r.NegativeCharacteristics,
                r.TypesOfContent,
              ];
              for (const r of n)
                if ((e[r]?.[0] || t[r]?.[0]) && e[r]?.[0] !== t[r]?.[0])
                  return !1;
              return !0;
            })(t, n);
          a === i.Empty
            ? (o = 0)
            : a === c
            ? (o = (a !== i.Good && a !== i.Bad) || l ? 1 : 0.97)
            : (a === i.Unjudgeable && c !== i.Unjudgeable) ||
              (a !== i.Unjudgeable && c === i.Unjudgeable)
            ? (o = 0.3)
            : (a === i.Debatable && c === i.Good) ||
              (a === i.Bad && c === i.Debatable)
            ? (o = 0.75)
            : ((a === i.Debatable && c !== i.Debatable) ||
                (a !== i.Debatable && c === i.Debatable)) &&
              (o = 0.5);
          return {
            snapCql: {
              label: "snap cql",
              totalWork: 1,
              correctWork: o,
              intermediates: { givenAnswer: a, expectedAnswer: c },
            },
          };
        };
      t.snowberryCqlGraderFn = c;
      var l = {
        snowberryCqlGrader: {
          taskTypes: [o.TaskType.TextCollection],
          title: "snowberry cql grader",
          graderFn: a.globalGradePerFrame(c),
          global: !0,
        },
      };
      t.default = l;
    },
    944129: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default =
          t.quizGrader =
          t.entityExtraneousFn =
          t.modifierGrader =
          t.textGrader =
          t.priceGrader =
            void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(167469),
        a = n(991984),
        s = n(524183),
        u = n(513254),
        c = n(222357),
        l = n(963494),
        f = n(934788);
      const d = (e, t, n) => (r) => {
          if (!r || 0 === r.response.length) return c.IGNORED_GRADER_OUTPUT;
          const i = r.response[0];
          return i.result === c.GraderResult.Correct
            ? e(i.given, i.given)
            : i.result === c.GraderResult.Incorrect
            ? e(i.given, i.expected)
            : i.result === c.GraderResult.Missing
            ? t
              ? t(i.expected)
              : c.MISSING_GRADER_OUTPUT
            : i.result === c.GraderResult.Extraneous && n
            ? n(i.given)
            : c.IGNORED_GRADER_OUTPUT;
        },
        h = (e) => parseFloat(e) || 0,
        p = (e, t, n, r) => {
          const i = (e, t) => ({ correctWork: +(h(e) === h(t)), totalWork: 1 }),
            o = (e) => ({ correctWork: +(0 === h(e)), totalWork: 1 }),
            a = r?.parentGiven ? "_parentGiven" : "";
          return {
            [`itemPrice${a}`]: f.gradeIfFieldMatch(
              ["item_price", "price_value"],
              d(i, o)
            )(e, t),
            [`optionPrice${a}`]: f.gradeIfFieldMatch(["option_price"], d(i, o))(
              e,
              t
            ),
          };
        };
      t.priceGrader = p;
      const g = (e) => e.trim().toLowerCase(),
        m = (e, t) => ({
          menuText: f.gradeIfTypeMatch(
            l.TextCollectionFieldType.Text,
            d((e, t) =>
              a.gradeFreeText(g(e), g(t), a.TextComparisonMethod.Levenshtein)
            )
          )(e, t),
        });
      t.textGrader = m;
      const y = (e, t, n, r) => {
        const i = (e, t) => ({ correctWork: +(h(e) === h(t)), totalWork: 1 }),
          o = (e, t) => ({
            correctWork: -f.redundantDifference(e, t || []).length,
            totalWork: 0,
          }),
          a = r?.parentGiven ? "_parentGiven" : "";
        return {
          [`extraMin${a}`]: f.gradeIfFieldMatch(["extra_min"], d(i))(e, t),
          [`extraMax${a}`]: f.gradeIfFieldMatch(["extra_max"], d(i))(e, t),
          [`extraFree${a}`]: f.gradeIfFieldMatch(["extra_free"], d(i))(e, t),
          [`extraNumChoice${a}`]: f.gradeIfFieldMatch(
            ["extra_num_choice"],
            d(i)
          )(e, t),
          [`itemDefaultOptionsCount${a}`]: f.gradeIfFieldMatch(
            ["item_default_options"],
            d(
              (e, t) => ({
                correctWork: f.redundantIntersection(e, t).length,
                totalWork: t.length,
              }),
              (e) => ({ correctWork: 0, totalWork: e.length })
            )
          )(e, t),
          [`itemDefaultOptionsExtraneous${a}`]: f.gradeIfFieldMatch(
            ["item_default_options"],
            d(o, () => ({ correctWork: 0, totalWork: 0 }), o)
          )(e, t),
        };
      };
      t.modifierGrader = y;
      const b = () => c.CORRECT_GRADER_OUTPUT,
        v = (e, t) => (n, r) => ({
          [`${t}Count`]: f.gradeIfFieldMatch([e], d(b))(n, r),
        }),
        _ = (e) => {
          if (!e) return !1;
          const t = e.frames[0].response;
          return 0 !== t.length && t[0].result !== c.GraderResult.Missing;
        },
        x = (e, t) => async (n, r, i, o, a, u) => {
          const c = `${t}Extraneous${
            u?.props?.grandParentGiven ? "_parentGiven" : ""
          }`;
          if (
            (n && e === n.props.label) ||
            (r && e === r.props.label) ||
            (u && e === u.props.label)
          ) {
            const e = await s.extraneousGrader(
              _(n) ? n : void 0,
              _(r) ? r : void 0,
              i,
              o,
              a,
              _(u) ? u : void 0
            );
            return (e.extraneous.errorType = c), { [c]: e.extraneous };
          }
          return {};
        };
      t.entityExtraneousFn = x;
      const T = (e, t) => {
        const n = f.gradeIfFieldLike(["Question"], u.singleGraderFn)(e, t);
        return { [`${t?.field_id}`]: n };
      };
      t.quizGrader = T;
      const M = {
          dragonfruitCategoryCount: {
            taskTypes: [o.TaskType.TextCollection],
            title: "Number of categories",
            graderFn: a.gradePerFrame(v("category_name", "category")),
          },
          dragonfruitItemCount: {
            taskTypes: [o.TaskType.TextCollection],
            title: "Number of items",
            graderFn: a.gradePerFrame(v("item_name", "item")),
          },
          dragonfruitItemPriceLabelCount: {
            taskTypes: [o.TaskType.TextCollection],
            title: "Number of item price labels",
            graderFn: a.gradePerFrame(v("price_label", "itemPrice")),
          },
          dragonfruitExtraCount: {
            taskTypes: [o.TaskType.TextCollection],
            title: "Number of extras",
            graderFn: a.gradePerFrame(v("extra_name", "extra")),
          },
          dragonfruitOptionCount: {
            taskTypes: [o.TaskType.TextCollection],
            title: "Number of options",
            graderFn: a.gradePerFrame(v("option_name", "option")),
          },
        },
        w = {
          dragonfruitCategoryExtraneous: {
            taskTypes: [o.TaskType.TextCollection],
            title: "Extraneous categories",
            graderFn: x("category_name", "category"),
          },
          dragonfruitItemExtraneous: {
            taskTypes: [o.TaskType.TextCollection],
            title: "Extraneous items",
            graderFn: x("item_name", "item"),
          },
          dragonfruitItemPriceLabelExtraneous: {
            taskTypes: [o.TaskType.TextCollection],
            title: "Extraneous item price labels",
            graderFn: x("price_label", "itemPrice"),
          },
          dragonfruitExtraExtraneous: {
            taskTypes: [o.TaskType.TextCollection],
            title: "Extraneous extras",
            graderFn: x("extra_name", "extra"),
          },
          dragonfruitOptionExtraneous: {
            taskTypes: [o.TaskType.TextCollection],
            title: "Extraneous options",
            graderFn: x("option_name", "option"),
          },
        };
      var A = {
        dragonfruitPrice: {
          taskTypes: [o.TaskType.TextCollection],
          title: "Menu price",
          graderFn: f.textCollectionGradePerFrame(p),
        },
        dragonfruitText: {
          taskTypes: [o.TaskType.TextCollection],
          title: "Transcription text",
          graderFn: f.textCollectionGradePerFrame(m),
        },
        dragonfruitModifier: {
          taskTypes: [o.TaskType.TextCollection],
          title: "Entry modifiers",
          graderFn: f.textCollectionGradePerFrame(y),
        },
        ...M,
        dragonfruitEntityCount: {
          taskTypes: [o.TaskType.TextCollection],
          title: "Number of menu entries",
          graderFn: f.textCollectionGradePerFrame((e, t, n, r) => {
            const i = r?.grandParentGiven ? "_parentGiven" : "";
            return {
              [`categoryCount${i}`]: f.gradeIfFieldMatch(
                ["category_name"],
                d(b)
              )(e, t),
              [`itemCount${i}`]: f.gradeIfFieldMatch(["item_name"], d(b))(e, t),
              [`itemPriceLabelCount${i}`]: f.gradeIfFieldMatch(
                ["price_label"],
                d(b)
              )(e, t),
              [`extraCount${i}`]: f.gradeIfFieldMatch(["extra_name"], d(b))(
                e,
                t
              ),
              [`optionCount${i}`]: f.gradeIfFieldMatch(["option_name"], d(b))(
                e,
                t
              ),
            };
          }),
        },
        ...w,
        dragonfruitExtraneous: {
          taskTypes: [o.TaskType.TextCollection],
          title: "Extraneous entries",
          graderFn: async (...e) => {
            const t = await Promise.all([
              x("category_name", "category")(...e),
              x("item_name", "item")(...e),
              x("price_label", "itemPrice")(...e),
              x("extra_name", "extra")(...e),
              x("option_name", "option")(...e),
            ]);
            return i.default.merge(t);
          },
        },
        dragonfruitQuizGrader: {
          taskTypes: [o.TaskType.TextCollection],
          title: "Quiz Categorization Question",
          graderFn: f.textCollectionGradePerFrame(T),
        },
      };
      t.default = A;
    },
    513254: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.shouldGradeField = F),
        (t.default =
          t.textCollectionGraders =
          t.categoryDistanceGrader =
          t.getCategoryScoreByDistance =
          t.DecayFunction =
          t.tokenIOUTextGrader =
          t.clampedEditDistanceFallbackFn =
          t.numericValueFallbackFn =
          t.singleGraderFn =
          t.categoryFieldFullPathGrader =
          t.calculatePrecisionMultiSelectFullPathScore =
          t.calculateIOUMultiSelectFullPathScore =
          t.computeTranscriptionEntitiesScore =
          t.extractTranscriptionEntities =
          t.checkTranscriptionEntitiesFormatting =
          t.categoryFieldLeafGrader =
          t.gradeByMatchingResult =
          t.multiSelectConfirmationRateGradingWeights =
          t.TextParamKey =
            void 0);
      var r,
        i = f(n(298784)),
        o = n(167469),
        a = f(n(952256)),
        s = n(963494),
        u = n(991984),
        c = n(934788),
        l = n(222357);
      function f(e) {
        return e && e.__esModule ? e : { default: e };
      }
      (t.TextParamKey = r),
        (function (e) {
          (e.CaseInsensitive = "caseInsensitive"),
            (e.AlphaNumericOnly = "alphaNumericOnly"),
            (e.Trim = "trim"),
            (e.SkipEmpty = "skipEmpty"),
            (e.IgnoreCurlyQuotes = "ignoreCurlyQuotes");
        })(r || (t.TextParamKey = r = {}));
      const d = {
          [r.CaseInsensitive]: c.safeToLowerCase,
          [r.AlphaNumericOnly]: c.safeAlphaNum,
          [r.Trim]: c.safeTrim,
          [r.IgnoreCurlyQuotes]: c.safeIgnoreCurlyQuotes,
        },
        h = { missing: 1, extraneous: 0 };
      t.multiSelectConfirmationRateGradingWeights = h;
      const p = (e) => {
          if (void 0 !== e.result) {
            if (e.result === l.GraderResult.Missing) return e.expected;
            if (
              e.result === l.GraderResult.Correct ||
              e.result === l.GraderResult.Incorrect ||
              e.result === l.GraderResult.Extraneous
            )
              return e.given;
            throw new Error(`Unexpected grader result: ${JSON.stringify(e)}`);
          }
          return e;
        },
        g = (e) => e.map(p),
        m = (e, t) => (n, r) =>
          n && 0 !== n.response.length
            ? i.default.every(
                n.response,
                (e) => e.result === l.GraderResult.Missing
              )
              ? l.MISSING_GRADER_OUTPUT
              : e(n, r, void 0, t)
            : l.IGNORED_GRADER_OUTPUT;
      t.gradeByMatchingResult = m;
      const y = (e, t) => (
          t?.forEach((t) => {
            e = e.map(d[t] ?? i.default.identity);
          }),
          e
        ),
        b = (e, t) => ({
          correctWork: i.default.sum(
            e.response.map((e) =>
              e.result === l.GraderResult.Correct
                ? 1
                : e.result === l.GraderResult.Incorrect
                ? c.redundantIou(e.expected, e.given)
                : 0
            )
          ),
          totalWork: t.response.length,
        });
      t.categoryFieldLeafGrader = b;
      const v = (e, t) => {
        const n = Object.keys(t),
          r = i.default.compact(Object.values(t));
        let o = 0,
          a = 0;
        for (const i of e)
          if (n.includes(i)) {
            if (((o += 1), o >= a + 2)) return !1;
            t[i] || (a += 1);
          } else if (r.includes(i) && ((a += 1), a > o)) return !1;
        return !0;
      };
      t.checkTranscriptionEntitiesFormatting = v;
      const _ = (e, t) => {
        const n = Object.keys(t).filter((e) => t[e]),
          r = [];
        let o, a;
        for (let s = 0; s < e.length; s++) {
          const u = e[s];
          if (
            (n.includes(u) && ((a = s), (o = u)),
            !i.default.isNil(o) && !i.default.isNil(a) && t[o] === u)
          ) {
            const t = i.default.map(e.slice(a + 1, s).split(","), (e) =>
              e.trim()
            );
            r.push(t), (o = null), (a = null);
          }
        }
        return r;
      };
      t.extractTranscriptionEntities = _;
      const x = (e, t, n) => {
        const r = _(e, n),
          i = _(t, n);
        return {
          correctWork: c.redundantListOfList(r, i, c.redundantIou),
          totalWork: r.length,
        };
      };
      t.computeTranscriptionEntitiesScore = x;
      const T = (e) =>
          i.default.flatten(i.default.values(e || {}).map((e) => e.values)),
        M = (e) => i.default.mapValues(e || {}, (e) => e.values),
        w = (e, t, n) => {
          const r = [];
          i.default.forOwn(e, (e, o) => {
            i.default.forOwn(t, (t, i) => {
              const a = ((e, t, n) => {
                const { incorrectPath: r, partialPath: i } = n,
                  o = c.redundantIntersection(e, t),
                  a = Math.max(e.length, t.length);
                let s = o.length / a;
                return A(s) || (s *= r), e.length < t.length && (s *= i), s;
              })(e, t, n);
              r.push({ actualChoice: o, expectedChoice: i, score: a });
            });
          });
          return i.default.sortBy(r, ({ score: e }) => e);
        },
        A = (e) => 1 === e,
        k = (e, t, n) => {
          const r = n?.missing ?? 1,
            o = n?.extraneous ?? 1,
            a = new Set(),
            s = new Set(),
            u = new Set();
          i.default.forOwn(e, (e, t) =>
            e.forEach((e) => {
              a.add(e), u.add(e);
            })
          ),
            i.default.forOwn(t, (e, t) =>
              e.forEach((e) => {
                s.add(e), u.add(e);
              })
            );
          let c = 0,
            l = 0;
          return (
            u.forEach((e) => {
              a.has(e) && !s.has(e)
                ? (l += o)
                : s.has(e) && !a.has(e)
                ? (l += r)
                : ((c += 1), (l += 1));
            }),
            c === l ? 1 : c / l
          );
        };
      t.calculateIOUMultiSelectFullPathScore = k;
      const E = (e, t = ">") => {
          const n = {};
          for (const r of e) {
            const e = r.split(t).map((e) => e.trim()),
              i = [];
            for (let n = 0; n < e.length; n++) {
              const r = e.slice(0, n + 1).join(` ${t} `);
              i.push(r);
            }
            n[r] = i;
          }
          return n;
        },
        P = (e, t, n) => {
          if (i.default.isEqual(Object.keys(e), Object.keys(t))) return 1;
          const r = i.default.isEmpty(e),
            o = i.default.isEmpty(t);
          if (r && o) return 1;
          if (r !== o) return 0;
          const a = n?.pathHierarchyDelimiter
              ? E(Object.keys(e), n?.pathHierarchyDelimiter)
              : e,
            s = n?.pathHierarchyDelimiter
              ? E(Object.keys(t), n?.pathHierarchyDelimiter)
              : t,
            u = ((e) => {
              const t = {};
              return (
                e.forEach((e, n) => {
                  t[e] = n + 1;
                }),
                t
              );
            })(Object.values(s).flat()),
            c = {},
            l =
              n && n.tiers
                ? Object.fromEntries(
                    Object.entries(n.tiers).map(([e, t]) => [Number(e), t])
                  )
                : {},
            f = n && n.tiers ? i.default.max(Object.keys(l).map(Number)) : 1;
          for (const [i, d] of Object.entries(a)) {
            let e = null;
            if (s[i]) e = 1;
            else {
              let t = 0,
                r = 0;
              for (let n = 0; n < d.length; n++) {
                const i = n + 1,
                  o = l[Math.min(i, f)] ?? 1;
                u[d[n]] && (t++, (e = o)), r++;
              }
              (n && n.tiers) || (e = t / r);
            }
            c[i] = e || 0;
          }
          return i.default.mean(Object.values(c)) ?? 0;
        };
      t.calculatePrecisionMultiSelectFullPathScore = P;
      const C = (e, t, n, r) => ({
        correctWork: i.default.sum(
          e.response.map((e) => {
            if (e.result === l.GraderResult.Correct) return 1;
            if (e.result === l.GraderResult.Incorrect) {
              const n = M(e.categoryMetadata?.given),
                o = t.fullPaths ? t.fullPaths : e.categoryMetadata?.expected,
                a = M(o);
              switch (r?.strategy) {
                case s.TextCollectionFullPathGradingStrategy
                  .WeightedMultiSelect: {
                  const e = r?.weights,
                    t = ((e, t, n) => {
                      const {
                          perChoiceBase: r,
                          perChoiceError: o,
                          missing: a,
                          extraneous: s,
                        } = n,
                        u = w(e, t, n),
                        c = i.default.cloneDeep(e),
                        l = i.default.cloneDeep(t),
                        f = [],
                        d = i.default.sum(r.slice(0, i.default.size(t)));
                      for (; !i.default.isEmpty(c) && !i.default.isEmpty(l); ) {
                        const e = u.pop();
                        if (!e) break;
                        const {
                            actualChoice: t,
                            expectedChoice: n,
                            score: i,
                          } = e,
                          a = f.length;
                        if (t in c && n in l) {
                          delete c[t], delete l[n];
                          let e = i * r[a];
                          A(i) || (e += (1 - i) * o[a]),
                            f.push({
                              actualChoice: t,
                              expectedChoice: n,
                              weightedScore: e,
                            });
                        }
                      }
                      let h = i.default.sumBy(f, ({ weightedScore: e }) => e),
                        p = 0,
                        g = 0;
                      i.default.isEmpty(l)
                        ? i.default.isEmpty(c) || (g = s * i.default.size(c))
                        : (p = a * i.default.size(l)),
                        (h += p + g);
                      const m = h / d;
                      return Math.max(m, 0);
                    })(n, a, e);
                  return t;
                }
                case s.TextCollectionFullPathGradingStrategy.IOUMultiSelect: {
                  const e = r?.iouWeights;
                  return k(n, a, e);
                }
                case s.TextCollectionFullPathGradingStrategy
                  .PrecisionMultiSelect: {
                  const e = r?.precisionWeights;
                  return P(n, a, e);
                }
                default: {
                  const n = T(e.categoryMetadata?.given),
                    r = t.fullPaths
                      ? T(t.fullPaths)
                      : T(e.categoryMetadata?.expected),
                    i = Math.max(r.length, n.length);
                  return 0 !== i ? c.redundantIntersection(r, n).length / i : 0;
                }
              }
            }
            return 0;
          })
        ),
        totalWork: t.response.length,
      });
      t.categoryFieldFullPathGrader = C;
      const L = (e) => `${e.year}-${e.month}-${e.day} ${e.hour}:${e.minute}`,
        I = (e, t, n, r) => {
          const o = g(e.response),
            a = g(t.response);
          return r?.checkExactOrder
            ? { correctWork: Number(i.default.isEqual(o, a)), totalWork: 1 }
            : a.length
            ? r?.kendallsTau
              ? (function (e, t) {
                  let n = 0;
                  try {
                    const r = t
                        .map((e) =>
                          "null" === e
                            ? -1
                            : e.includes(",")
                            ? e
                                .split(",")
                                .map((e) => Number(e))
                                .sort()
                                .map((e) => `${e}`)
                            : e
                        )
                        .flat()
                        .map((e) => Number(e)),
                      i = e
                        .map((e) =>
                          "null" === e
                            ? -1
                            : e.includes(",")
                            ? e
                                .split(",")
                                .map((e) => Number(e))
                                .sort()
                                .map((e) => `${e}`)
                            : e
                        )
                        .flat()
                        .map((e) => Number(e))
                        .map((e) => r.indexOf(e) + 1);
                    let o = 0,
                      a = 0;
                    for (const [e, t] of i.entries())
                      for (const n of i.slice(e + 1, i.length))
                        t < n && (o += 1), t > n && (a += 1);
                    n = Math.abs((o - a) / (o + a));
                  } catch (r) {
                    throw new Error(`Error in evalKendallsTau: ${r}`);
                  }
                  isNaN(n) && (n = 0);
                  return { correctWork: n, totalWork: 1 };
                })(o, a)
              : (function (e, t, n) {
                  const r = t.length,
                    o = [...Array(r).keys()],
                    a = new Map();
                  o.forEach((e) => {
                    a.set(t[e], Math.pow(r - e, 2));
                  });
                  const s = i.default.sum(
                      o.map((t) => (a.get(e[t]) ?? 0) / (t + 1))
                    ),
                    u = i.default.sum(
                      o.map((e) => (a.get(t[e]) ?? 0) / (e + 1))
                    );
                  return { correctWork: Math.pow(s / u, n), totalWork: 1 };
                })(o, a, r?.ndcgPenalty ?? 2)
            : { correctWork: 0, totalWork: 0 };
        };
      const S = (e, t, n, o) => {
        const a = t.type;
        if (e.type !== a)
          throw new Error(
            `Inconsistent original and correct annotation types: ${e.type} vs ${a}`
          );
        switch (a) {
          case s.TextCollectionFieldType.TranscriptionText:
            return ((e, t) => {
              const n = i.default.head(g(t.response)),
                r = t.tags,
                o = i.default.head(g(e.response));
              return v(n, r) && v(o, r)
                ? x(n, o, r)
                : { correctWork: 0, totalWork: 0 };
            })(e, t);
          case s.TextCollectionFieldType.Text:
          case s.TextCollectionFieldType.Number:
          case s.TextCollectionFieldType.Select:
          case s.TextCollectionFieldType.Autocomplete:
          case s.TextCollectionFieldType.QueryableTextAndResults:
          case s.TextCollectionFieldType.JSON:
          case s.TextCollectionFieldType.Boolean:
          case s.TextCollectionFieldType.Markdown:
            return ((e, t, n, o) => {
              const a = g(t.response),
                s = g(e.response),
                u = o?.fieldTextParams?.[e.field_id],
                l = i.default.keys(i.default.pickBy(u, i.default.identity)),
                f = y(a, l),
                d = y(s, l);
              return l.includes(r.SkipEmpty) &&
                i.default.every(d, i.default.isEmpty) &&
                i.default.every(f, i.default.isEmpty)
                ? { correctWork: 0, totalWork: 0 }
                : { correctWork: c.redundantIou(f, d), totalWork: 1 };
            })(e, t, 0, o);
          case s.TextCollectionFieldType.Category:
            return b(e, t);
          case s.TextCollectionFieldType.Datetime:
            return ((e, t) => {
              const n = g(e.response).map(L),
                r = g(t.response).map(L);
              return { correctWork: c.redundantIou(r, n), totalWork: 1 };
            })(e, t);
          case s.TextCollectionFieldType.TimeRange:
            return ((e, t) => ({
              correctWork: i.default.sum(
                t.response.map((t, n) =>
                  c.redundantIou(p(t), p(e.response[n]) || [])
                )
              ),
              totalWork: t.response.length,
            }))(e, t);
          case s.TextCollectionFieldType.RankingOrder:
            return I(e, t, n, o);
          case s.TextCollectionFieldType.BoundingBox:
          case s.TextCollectionFieldType.Code:
          case s.TextCollectionFieldType.WorkspaceContainer:
          case s.TextCollectionFieldType.FileUpload:
          case s.TextCollectionFieldType.WfeButton:
          case s.TextCollectionFieldType.Tool:
          case s.TextCollectionFieldType.Instruction:
          case s.TextCollectionFieldType.Rubric:
          case s.TextCollectionFieldType.AudioRecording:
          case s.TextCollectionFieldType.MultiChannelAudioUpload:
          case s.TextCollectionFieldType.DynamicLabeledText:
          case s.TextCollectionFieldType.AttachmentUpload:
            return { correctWork: 0, totalWork: 0 };
        }
      };
      t.singleGraderFn = S;
      const O = (e, t, n, r) => {
        const o = t.type;
        if (e.type !== o)
          throw new Error(
            `Inconsistent original and correct annotation types: ${e.type} vs ${o}`
          );
        if (r?.tolerance && o === s.TextCollectionFieldType.Text) {
          const n = Number(i.default.head(g(e.response))),
            o = Number(i.default.head(g(t.response)));
          if (!isNaN(n) && !isNaN(o)) {
            const e = Math.abs(n - o);
            return {
              correctWork: Math.max(r.tolerance - e, 0) / r.tolerance,
              totalWork: 1,
            };
          }
        }
        return S(e, t, n, r);
      };
      t.numericValueFallbackFn = O;
      const N = (e, t, n, r) => {
        const o = t.type;
        if (e.type !== o)
          throw new Error(
            `Inconsistent original and correct annotation types: ${e.type} vs ${o}`
          );
        if (
          o === s.TextCollectionFieldType.TranscriptionText ||
          o === s.TextCollectionFieldType.Text ||
          o === s.TextCollectionFieldType.Autocomplete
        ) {
          const n = i.default
              .head(g(e.response))
              .replace(/\W/g, "")
              .toLowerCase(),
            r = i.default.head(g(t.response)).replace(/\W/g, "").toLowerCase();
          if (0 === r.length)
            return { correctWork: 0 === n.length ? 1 : 0, totalWork: 1 };
          const o = a.default(n, r);
          if (o >= r.length) return { correctWork: 0, totalWork: 1 };
          const s = (r.length - o) / r.length;
          return {
            correctWork: Math.pow(s, r.length <= 20 ? 4 : 3),
            totalWork: 1,
          };
        }
        if (o === s.TextCollectionFieldType.Number) {
          const n = Number(i.default.head(g(e.response))),
            r = Number(i.default.head(g(t.response)));
          if (!isNaN(n) && !isNaN(r)) {
            const e = Math.abs(n - r);
            return { correctWork: Math.pow(2, -e), totalWork: 1 };
          }
        }
        return S(e, t, n, r);
      };
      function F(e, t, n) {
        return !n && !(!i.default.isNil(t) && !i.default.includes(t, e));
      }
      t.clampedEditDistanceFallbackFn = N;
      const D = (e, t, n, r) => {
          const i = t.type;
          if (e.type !== i)
            throw new Error(
              `Inconsistent original and correct annotation types: ${e.type} vs ${i}`
            );
          const o = n?.fieldsWhitelist || r?.fieldsWhitelist;
          if (
            (i !== s.TextCollectionFieldType.Text &&
              i !== s.TextCollectionFieldType.Autocomplete) ||
            (o && !o.includes(t.field_id)) ||
            e.fieldWasReadOnly
          )
            return { correctWork: 0, totalWork: 0 };
          {
            if (!Array.isArray(e.response) || !Array.isArray(t.response))
              return { correctWork: 0, totalWork: 0 };
            const r = p(e.response[0]),
              i = p(t.response[0]),
              o = n?.redundant
                ? u.TextComparisonMethod.TokenIOURedundant
                : u.TextComparisonMethod.TokenIOU;
            return u.gradeFreeText(r, i, o);
          }
        },
        R = (e, t, n, r, o, a) => {
          const c = r?.fieldsWhitelist || a?.fieldsWhitelist;
          if (
            !t ||
            i.default.isEmpty(t) ||
            t.type !== s.TextCollectionFieldType.Text ||
            (c && !c.includes(t.field_id)) ||
            e.fieldWasReadOnly
          ) {
            return { tokenIOUText: { correctWork: 0, totalWork: 0 } };
          }
          if (
            i.default.isEmpty(e) ||
            e?.response[0].result === l.GraderResult.Missing
          ) {
            return {
              tokenIOUText: {
                correctWork: +(
                  i.default.findIndex(
                    t.acceptedAnnotations,
                    ({ annotation: e }) => !e
                  ) >= 0
                ),
                totalWork: 1,
              },
            };
          }
          return u.gradeForAcceptedAnnotations(
            e,
            t,
            (e, t) => ({ tokenIOUText: D(e, t, r) }),
            n && n.acceptedAnnotationMatchIndexes
          );
        };
      var G;
      (t.tokenIOUTextGrader = R),
        (t.DecayFunction = G),
        (function (e) {
          (e.Linear = "linear"),
            (e.Constant = "constant"),
            (e.CustomSteps = "custom_steps");
        })(G || (t.DecayFunction = G = {}));
      const B = (e, t, n) => {
        const r = n?.maxAcceptableDistance || 0,
          o = n?.valueMap || {};
        if (
          1 !== e.length ||
          1 !== t.length ||
          r < 0 ||
          i.default.isBoolean(e[0]) ||
          i.default.isBoolean(t[0])
        )
          return 0;
        const a = e[0],
          s = t[0],
          u = i.default.isNil(o[a]) ? ("" === a ? -1 / 0 : Number(a)) : o[a],
          c = i.default.isNil(o[s]) ? ("" === s ? -1 / 0 : Number(s)) : o[s];
        if (i.default.isEqual(u, c)) return 1;
        if (0 === r) return 0;
        const l = Math.abs(u - c);
        if (isNaN(l) || l > r) return 0;
        if (n?.decayFunction === G.Constant) return 1;
        if (n?.decayFunction === G.CustomSteps) {
          const e = Math.floor(l),
            t = n?.steps ?? [];
          return e >= t.length ? 0 : t[e];
        }
        return 1 - l / r;
      };
      t.getCategoryScoreByDistance = B;
      const W = (e, t, n, r, o, a) => ({
        categoryDistance: u.gradeIfNotMissing(
          (e, t) =>
            [
              s.TextCollectionFieldType.Category,
              s.TextCollectionFieldType.Number,
              s.TextCollectionFieldType.Autocomplete,
            ].includes(t.type) &&
            F(
              t.field_id,
              r?.fieldsWhitelist || a?.fieldsWhitelist,
              !!e.fieldWasReadOnly
            )
              ? {
                  correctWork: i.default.sum(
                    e.response.map((e) =>
                      e.result === l.GraderResult.Correct
                        ? 1
                        : e.result === l.GraderResult.Incorrect
                        ? t.type === s.TextCollectionFieldType.Category
                          ? B(e.expected, e.given, r)
                          : B([e.expected], [e.given], r)
                        : 0
                    )
                  ),
                  totalWork: t.response.length,
                }
              : { correctWork: 0, totalWork: 0 },
          e,
          t
        ),
      });
      t.categoryDistanceGrader = W;
      const j = Object.freeze({
        textCollection: {
          taskTypes: [o.TaskType.TextCollection],
          title: "text content",
          graderFn: u.gradePerFrame((e, t, n, r, i, o) => ({
            textFieldContent: u.gradeIfNotMissing(
              (e, t) =>
                F(
                  t.field_id,
                  r?.fieldsWhitelist || o?.fieldsWhitelist,
                  !!e.fieldWasReadOnly
                )
                  ? m(S, r)(e, t)
                  : { correctWork: 0, totalWork: 0 },
              e,
              t
            ),
          })),
        },
        textCategoryFullChoicePath: {
          taskTypes: [o.TaskType.TextCollection],
          title: "full choice path",
          graderFn: u.gradePerFrame((e, t, n, r, o, a) => {
            const c = r?.fieldsWhitelist || a?.fieldsWhitelist,
              l = i.default.isEqual(r?.iouWeights, h);
            return u.gradeForAcceptedAnnotations(
              e,
              t,
              (e, t) => {
                return {
                  ["fullChoicePath" + (l ? "ConfirmationRate" : "")]:
                    ((n = e),
                    (o = t),
                    o.type !== s.TextCollectionFieldType.Category ||
                    (!i.default.isNil(c) && !c.includes(n.field_id)) ||
                    n.fieldWasReadOnly
                      ? { correctWork: 0, totalWork: 0 }
                      : m(C, r)(n, o)),
                };
                var n, o;
              },
              n && n.acceptedAnnotationMatchIndexes
            );
          }),
        },
        tokenIOUText: {
          taskTypes: [o.TaskType.TextCollection],
          title: "token iou text grader",
          graderFn: u.gradePerFrame(R),
        },
        gradientGrader: {
          taskTypes: [o.TaskType.TextCollection],
          title: "gradient grader",
          graderFn: u.gradePerFrame((e, t, n, r, o, a) => ({
            textFieldContent: u.gradeIfNotMissing(
              (e, t) => {
                if (
                  F(
                    t.field_id,
                    r?.fieldsWhitelist || a?.fieldsWhitelist,
                    !!e.fieldWasReadOnly
                  )
                ) {
                  let n = {
                    gradientList: ["1", "2", "3", "4", "5"],
                    fieldsWhitelist: [],
                  };
                  return (
                    r && (n = r),
                    ((e) => (t, n) => {
                      if (
                        !t ||
                        0 === t.response.length ||
                        !n ||
                        0 === n.response.length
                      )
                        return l.IGNORED_GRADER_OUTPUT;
                      if (
                        i.default.every(
                          t.response,
                          (e) => e.result === l.GraderResult.Missing
                        )
                      )
                        return l.MISSING_GRADER_OUTPUT;
                      const r = e.gradientList,
                        o = t.response.length,
                        a = t.response.map((e) => {
                          if ("correct" === e.result) return 1;
                          const t = i.default.get(e, "given.0", null),
                            n = i.default.get(e, "expected.0", null);
                          if (n && t) {
                            if (!r.includes(t) || !r.includes(n)) return 0;
                            const e =
                              1 -
                              Math.abs(r.indexOf(t) - r.indexOf(n)) /
                                ((r.length - 1) / 2);
                            return Math.max(0, e);
                          }
                          return 0;
                        });
                      return { correctWork: i.default.sum(a), totalWork: o };
                    })(n)(e, t)
                  );
                }
                return { correctWork: 0, totalWork: 0 };
              },
              e,
              t
            ),
          })),
        },
        rankingOrderFieldGrader: {
          taskTypes: [o.TaskType.TextCollection],
          title: "ranking order field grader",
          graderFn: u.gradePerFrame((e, t, n, r, i, o) => ({
            textFieldContent: u.gradeIfNotMissing(
              (e, i) =>
                F(
                  i.field_id,
                  r?.fieldsWhitelist || o?.fieldsWhitelist,
                  !!e.fieldWasReadOnly
                ) && t?.type === s.TextCollectionFieldType.RankingOrder
                  ? m(I, r)(e, i, n, r)
                  : { correctWork: 0, totalWork: 0 },
              e,
              t
            ),
          })),
        },
        clampedEditDistanceWithFallback: {
          taskTypes: [o.TaskType.TextCollection],
          title:
            "clamped alphanumeric edit distance grader that falls back to textcollection",
          graderFn: u.gradePerFrame((e, t, n, r, i, o) => ({
            textFieldContent: u.gradeIfNotMissing(
              (e, t) =>
                F(
                  t.field_id,
                  r?.fieldsWhitelist || o?.fieldsWhitelist,
                  !!e.fieldWasReadOnly
                )
                  ? m(N, r)(e, t)
                  : { correctWork: 0, totalWork: 0 },
              e,
              t
            ),
          })),
        },
        numericValueWithFallback: {
          taskTypes: [o.TaskType.TextCollection],
          title: "numeric value grader that falls back to textcollection",
          graderFn: u.gradePerFrame((e, t, n, r, i, o) => ({
            textFieldContent: u.gradeIfNotMissing(
              (e, t) =>
                F(
                  t.field_id,
                  r?.fieldsWhitelist || o?.fieldsWhitelist,
                  !!e.fieldWasReadOnly
                )
                  ? m(O, r)(e, t)
                  : { correctWork: 0, totalWork: 0 },
              e,
              t
            ),
          })),
        },
        categoryDistance: {
          taskTypes: [o.TaskType.TextCollection],
          title: "category distance",
          graderFn: u.gradePerFrame(W),
        },
      });
      t.textCollectionGraders = j;
      var z = j;
      t.default = z;
    },
    909452: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default = void 0);
      var r = n(167469),
        i = n(991984);
      var o = Object.freeze({
        transcriptionContent: {
          taskTypes: [r.TaskType.Transcription],
          title: "transcription content",
          graderFn: i.gradePerFrame((e, t) => ({
            transcriptionContent: i.gradeIfNotMissing(
              (e, t) => i.gradeFreeText(e.value, t.value),
              e,
              t
            ),
          })),
        },
      });
      t.default = o;
    },
    168212: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.isLSS = function (e, t, n) {
          return !!t && !!n && e.taskType === o.TaskType.LidarSegmentation;
        }),
        (t.parseIntersectionKey = function (e) {
          const t = e.split("_");
          if (5 !== t.length) return null;
          const [n, r, i, o, a] = t;
          return {
            frame: parseInt(n),
            source: r,
            dest: i,
            sourceId: o,
            destId: a,
          };
        }),
        (t.convertMatchedLidarSemsegLabelDeltaToLidarSemsegLabelDelta =
          function (e) {
            return i.default.omit(e, "totalPoints", "isMatch");
          }),
        (t.getDeltaKey = l),
        (t.buildLabelDeltaWeightingMap = d),
        (t.getWeightingForDelta = h),
        (t.aggregateClassResults = g),
        (t.averageClassResults = y),
        (t.upsertClassResults = b),
        (t.generateLssMetrics =
          t.generatePerIndexInfo =
          t.generateMatchedDeltas =
          t.generateLabelIntersections =
          t.buildLSSCounts =
            void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(167469),
        a = n(825555),
        s = n(297393),
        u = n(810755);
      t.buildLSSCounts = ({
        startSource: e,
        endSource: t,
        frame: n,
        startLabels: r,
        endLabels: i,
        intersectionMap: o = new Map(),
        pointWeights: a,
      }) => {
        if (r.length !== i.length)
          throw new Error(
            `Unexpected length, start had ${r.length}, end had ${i.length}`
          );
        const s = r.length,
          u = {};
        for (let c = 0; c < s; c++) {
          const e = r[c],
            t = i[c];
          u[e] || (u[e] = {}), u[e][t] || (u[e][t] = 0);
          const n = a ? a[c] : 1;
          u[e][t] += n;
        }
        for (const c in u)
          for (const r in u[c]) {
            const i = `${n}_${e}_${t}_${c}_${r}`;
            o.set(i, u[c][r]);
          }
        return o;
      };
      const c = ({
        graderParams: e,
        pointIntersections: t,
        distanceWeightedPointIntersections: n,
        currentInfoMap: r,
        correctInfoMap: o,
      }) => {
        const s = [a.ResponseSource.Current, a.ResponseSource.Correct],
          u = new Date(),
          c = i.default.omitBy(
            {
              project: e?.project?.toString(),
              subtask: e?.subtask?.toString(),
              attempt: e?.attempt?.toString(),
              graderSource: e?.source,
            },
            i.default.isNil
          ),
          l = [];
        return (
          t.forEach((e, t) => {
            const [i, f, d, h, p] = t.split("_");
            if (!s.includes(f) || !s.includes(d)) return;
            const g = parseInt(i),
              m = f === a.ResponseSource.Correct,
              y = parseInt(m ? h : p),
              b = parseInt(m ? p : h),
              v = r[b],
              _ = o[y];
            v &&
              _ &&
              l.push({
                correctLabelIndex: y,
                currentLabelIndex: b,
                currentLabel: v.label,
                correctLabel: _.label,
                currentIsInstance: v.instance,
                correctIsInstance: _.instance,
                pointCount: e,
                distanceWeightedPointCount: n ? n.get(t) : void 0,
                frame: g,
                gradedAt: u,
                ...c,
              });
          }),
          l
        );
      };
      function l(e) {
        return `${e.currentLabelIndex}-${e.correctLabelIndex}`;
      }
      t.generateLabelIntersections = c;
      const f = (e) => {
        const t = i.default.groupBy(e, (e) => e.frame),
          n = i.default.map(i.default.groupBy(e, l), (e) => {
            const t = i.default.omit(
                e[0],
                "frame",
                "pointCount",
                "distanceWeightedPointCount"
              ),
              n = i.default.sumBy(
                e,
                (e) => e.distanceWeightedPointCount ?? e.pointCount
              );
            return Object.assign({}, t, { totalPointsAcrossFrames: n });
          }),
          r = {},
          o = {};
        n.forEach((e) => {
          e.correctLabel === e.currentLabel &&
            ((r[e.currentLabelIndex] += e.totalPointsAcrossFrames),
            (o[e.correctLabelIndex] += e.totalPointsAcrossFrames));
        });
        const a = i.default.groupBy(n, (e) => e.correctLabelIndex),
          s = {},
          u = {};
        function c(e) {
          (s[e.correctLabelIndex] = e),
            (u[e.currentLabelIndex] = e),
            (e.isMatch = !0);
        }
        function f(e) {
          return (
            e.currentLabel === e.correctLabel &&
            !s[e.correctLabelIndex] &&
            !u[e.currentLabelIndex]
          );
        }
        return (
          i.default
            .sortBy(i.default.keys(a), (e) => {
              const t = a[e];
              return (
                -1 * i.default.sumBy(t, (e) => e.totalPointsAcrossFrames ?? 0)
              );
            })
            .forEach((e) => {
              const t = a[e];
              if (!t.length) return;
              const n = t[0];
              if (s[n.correctLabelIndex]) return;
              const r = t.filter(f);
              if (!r.length) return;
              const u = r[0];
              if (!u.correctIsInstance) return void c(u);
              const l = o[n.correctLabelIndex],
                d = i.default.maxBy(r, (e) =>
                  0 === l
                    ? e.correctLabelIndex === e.currentLabelIndex
                    : e.totalPointsAcrossFrames / (l || 1)
                );
              d && c(d);
            }),
          i.default.mapValues(t, (e) => {
            const t = i.default.groupBy(e, (e) => e.correctLabelIndex),
              n = i.default.mapValues(t, (e) =>
                i.default.sumBy(
                  e,
                  (e) => e.distanceWeightedPointCount ?? e.pointCount
                )
              ),
              r = {};
            return (
              i.default.forEach(t, (e, t) => {
                const o = i.default.toNumber(t),
                  a = s[o],
                  u = n[o],
                  c = e.map((e) =>
                    i.default.assign(
                      {
                        isMatch:
                          !!a && e.currentLabelIndex === a.currentLabelIndex,
                        totalPoints: u,
                      },
                      e
                    )
                  );
                r[o] = c;
              }),
              r
            );
          })
        );
      };
      function d(e) {
        const t = {};
        return (
          e?.forEach(({ correctedLabel: e, originalLabel: n, weight: r }) => {
            t[e] || (t[e] = {}), (t[e][n] = r);
          }),
          t
        );
      }
      t.generateMatchedDeltas = f;
      function h(e, t) {
        return t[e.correctLabel]?.[e.currentLabel] ?? 1;
      }
      const p = (e) => {
        const t = {};
        return (
          e.forEach((e) => {
            const { label: n, index: r, instance: i } = e.props,
              o = { label: n, instance: !!i, index: r };
            t[r] = o;
          }),
          t
        );
      };
      t.generatePerIndexInfo = p;
      function g(e) {
        const t = {
          weightedNumOriginal: 0,
          weightedNumExpected: 0,
          weightedNumIntersection: 0,
          weightedNumUnion: 0,
        };
        return (
          e.forEach((e) => {
            i.default.forEach(e, (e, n) => {
              t[n] += e;
            });
          }),
          t
        );
      }
      function m(e) {
        const t = e.weightedNumUnion;
        return 0 === t ? 1 : Math.min(e.weightedNumIntersection / t, 1);
      }
      function y(e) {
        return Object.assign({ weightedAverage: m(e) }, e);
      }
      function b(e, t, n) {
        v(e, t, n, !0), v(e, t, n, !1);
      }
      function v(e, t, n, r) {
        const i = r ? "weightedNumOriginal" : "weightedNumExpected",
          o = e[r ? "currentLabel" : "correctLabel"];
        t[o] ||
          (t[o] = {
            weightedNumOriginal: 0,
            weightedNumExpected: 0,
            weightedNumIntersection: 0,
            weightedNumUnion: 0,
          });
        const a = t[o],
          s = (e.distanceWeightedPointCount ?? e.pointCount) * n;
        (a[i] += s),
          e.isMatch && !r
            ? ((a.weightedNumIntersection += s), (a.weightedNumUnion += s))
            : e.isMatch || (a.weightedNumUnion += s);
      }
      t.generateLssMetrics = async ({
        context: e,
        currentAnnotations: t,
        correctAnnotations: n,
        graderParams: r,
        labelDeltaWeighting: o,
      }) => {
        const a = d(o),
          l = s.getPointIntersections(e),
          m = await s.getPointIntersectionsWeighted(e),
          v = p(t),
          _ = p(n),
          x = c({
            graderParams: r,
            pointIntersections: l,
            distanceWeightedPointIntersections: m,
            currentInfoMap: v,
            correctInfoMap: _,
          });
        u.assertDefined(x, { message: "Could not get label intersections" });
        const T = f(x),
          M = {};
        return (
          i.default.forEach(T, (e) => {
            i.default.forEach(e, (e) => {
              i.default.forEach(e, (e) => {
                const t = h(e, a);
                b(e, M, t);
              });
            });
          }),
          {
            classResults: i.default.mapValues(M, (e) => y(e)),
            averagedClassResult: y(g(i.default.values(M))),
          }
        );
      };
    },
    440169: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.vertexToArr = C),
        (t.radianDifference = function (e, t) {
          return Math.abs(L(e - t));
        }),
        (t.interpolatePointsSegmentsLinear = S),
        (t.calcMinDist = function (e, t) {
          const n = C(r.default.first(e)),
            i = C(r.default.last(e)),
            o = C(r.default.first(t)),
            a = C(r.default.last(t));
          return Math.min(P(n, o) + P(i, a), P(n, a) + P(i, o));
        }),
        (t.calculateEndpointDistance = function (e, t) {
          const n = C(r.default.first(e)),
            i = C(r.default.last(e)),
            o = C(r.default.first(t)),
            a = C(r.default.last(t));
          return Math.min(
            Math.max(P(n, o), P(i, a)),
            Math.max(P(n, a), P(i, o))
          );
        }),
        (t.nearestPointOnSegment = N),
        (t.vertexSqDistanceToSegment = F),
        (t.lineInMargin = function (e, t, n) {
          const i = t.slice(0, -1).map((e, n) => [e, t[n + 1]]);
          e = I(e);
          const o = O(i, n);
          return r.default.every(e, (e) => o(e));
        }),
        (t.loopBackToStart = function (e) {
          return e.map((e) => [...e, e[0]]);
        }),
        (t.lineListInMargin = function (e, t, n) {
          if (r.default.isEmpty(t)) return !0;
          const i = t
              .map((e) => e.slice(0, -1).map((t, n) => [t, e[n + 1]]))
              .flat(),
            o = e.map((e) => I(e)).flat(),
            a = O(i, n);
          return r.default.every(o, (e) => a(e));
        }),
        (t.getAmountOfLineInMargin = function (e, t, n) {
          const i = t.slice(0, -1).map((e, n) => [e, t[n + 1]]);
          e = I(e);
          const o = O(i, n),
            a = r.default.filter(e, (e) => o(e));
          return (
            (t = I(t)),
            {
              numUserPoints: e.length,
              numUserPointsInMargin: a.length,
              numCorrectPoints: t.length,
            }
          );
        }),
        (t.getLengthOfLineInMargin = function (e, t, n) {
          const i = t.slice(0, -1).map((e, n) => [e, t[n + 1]]),
            o = S(e),
            a = O(i, n),
            s = r.default.filter(o, (e) => a(e.point)),
            u = r.default.sumBy(s, (e) => e.pixelLength),
            c = r.default.sumBy(o, (e) => e.pixelLength),
            l = r.default.sumBy(i, (e) => P(C(e[0]), C(e[1])));
          return {
            lengthCorrectUserLine: u,
            lengthTotalUserLine: c,
            lengthTotalCorrectLine: l,
          };
        }),
        (t.getLengthOfLineInMarginZCoordinate = function (e, t, n, i) {
          const a = t.slice(0, -1).map((e, n) => [e, t[n + 1]]),
            s = S(e),
            u = a.map((e) => {
              const [t, n] = e;
              if (r.default.isNil(t.worldZ) || r.default.isNil(n.worldZ))
                throw new Error("Z coordinate is not defined");
              return [
                { ...t, z: t.worldZ },
                { ...n, z: n.worldZ },
              ];
            }),
            c = s.map((e) => {
              const { point: t, pixelLength: n } = e;
              if (r.default.isNil(t.worldZ))
                throw new Error("Z coordinate is not defined");
              return { point: { ...t, z: t.worldZ }, pixelLength: n };
            }),
            l = (function (e, t, n) {
              const i = new o.default(e.length);
              for (const [r, o] of e) {
                const e = Math.min(r.x, o.x),
                  t = Math.max(r.x, o.x),
                  a = Math.min(r.y, o.y),
                  s = Math.max(r.y, o.y);
                i.add(e - n, a - n, t + n, s + n);
              }
              return (
                i.finish(),
                (n) => {
                  const o = i.search(n.x, n.y, n.x, n.y),
                    a = r.default.map(o, (t) => ({
                      distance: F(n, e[t]),
                      idx: t,
                      nearestPoint: N(n, e[t]),
                    })),
                    s = r.default.minBy(a, (e) => e.distance);
                  if (!s) return !1;
                  const { idx: u, nearestPoint: c } = s,
                    l = (function (e, t) {
                      const { x: n, y: r } = e,
                        [{ x: i, y: o, z: a }, { x: s, y: u, z: c }] = t;
                      if (i !== s && (n < Math.min(i, s) || n > Math.max(i, s)))
                        throw new Error(
                          "The point does not lie on the line segment."
                        );
                      if (o !== u && (r < Math.min(o, u) || r > Math.max(o, u)))
                        throw new Error(
                          "The point does not lie on the line segment."
                        );
                      const l =
                        Math.sqrt((n - i) ** 2 + (r - o) ** 2) /
                        Math.sqrt((s - i) ** 2 + (u - o) ** 2);
                      return a + l * (c - a);
                    })(c, e[u]);
                  return Math.abs(l - n.z) <= t;
                }
              );
            })(u, n, i),
            f = r.default.filter(c, (e) => l(e.point)),
            d = r.default.sumBy(f, (e) => e.pixelLength),
            h = r.default.sumBy(s, (e) => e.pixelLength),
            p = r.default.sumBy(a, (e) => P(C(e[0]), C(e[1])));
          return {
            lengthCorrectUserLine: d,
            lengthTotalUserLine: h,
            lengthTotalCorrectLine: p,
          };
        }),
        (t.idsMatch =
          t.addRadians =
          t.normalizeToNegPiPi =
          t.findDistance =
          t.findDistance2 =
          t.getExtendedCuboidDirection =
          t.getCuboidVertices =
          t.getCuboidSideFaceVertices =
          t.getCuboidFrontFaceVertices =
          t.getCuboidFrontFaceAsBox =
          t.formatCuboidAnnotation =
          t.projectedPointFromCuboid =
          t.discreteFrechetDistance =
          t.midpoint =
          t.rotatedBoxIou =
          t.boxIou =
          t.getPolygonPerimeter =
          t.fragmentsIou =
          t.genericIou =
          t.genericIouNucleus =
          t.iouWithBuffer =
          t.polygonListIou =
          t.iou =
          t.polygonListPolyboolIou =
          t.polyboolIou =
          t.geoJsonFor =
          t.polygonFor =
          t.geometryFactory =
          t.geom =
          t.ACCURACY_THRESHOLD =
          t.POLYGON_DIFF_THRESHOLD =
          t.MARGIN_OF_ERROR_FOR_CUBOIDANNOTATION =
          t.MARGIN_OF_ERROR_FOR_ANNOTATION =
            void 0);
      var r = f(n(298784)),
        i = (function (e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (null != e)
            for (var n in e)
              if (Object.prototype.hasOwnProperty.call(e, n)) {
                var r =
                  Object.defineProperty && Object.getOwnPropertyDescriptor
                    ? Object.getOwnPropertyDescriptor(e, n)
                    : {};
                r.get || r.set ? Object.defineProperty(t, n, r) : (t[n] = e[n]);
              }
          return (t.default = e), t;
        })(n(593539)),
        o = f(n(533637)),
        a = n(903779),
        s = f(n(132764)),
        u = f(n(373291)),
        c = n(60271),
        l = f(n(378970));
      function f(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.MARGIN_OF_ERROR_FOR_ANNOTATION = 10;
      t.MARGIN_OF_ERROR_FOR_CUBOIDANNOTATION = 95;
      t.POLYGON_DIFF_THRESHOLD = 0.7;
      t.ACCURACY_THRESHOLD = 0.9;
      const d = i.geom;
      t.geom = d;
      const h = new d.GeometryFactory();
      t.geometryFactory = h;
      const p = (e) => {
        const t = r.default.map(
          r.default.concat(e.vertices, [e.vertices[0]]),
          (e) => new d.Coordinate(e.x, e.y)
        );
        return h.createPolygon(h.createLinearRing(t), []);
      };
      t.polygonFor = p;
      const g = (e) => {
        const t = e.vertices.map((e) => [e.x, e.y]);
        return (
          t.push(t[0]), u.default.polygonFromGeoJSON(a.polygon([t]).geometry)
        );
      };
      t.geoJsonFor = g;
      const m = (e, t) => {
        const n = u.default.intersect(e, t),
          r = u.default.union(e, t),
          i = s.default(u.default.polygonToGeoJSON(n)),
          o = s.default(u.default.polygonToGeoJSON(r));
        return i && o ? i / o : 0;
      };
      t.polyboolIou = m;
      const y = (e, t) => {
        const n = l.default(e, t);
        let i,
          o = 0;
        r.default.each(n, ([e, t]) => {
          const n = u.default.intersect(e, t),
            r = s.default(u.default.polygonToGeoJSON(n));
          o += r;
        }),
          r.default.each([...e, ...t], (e) => {
            i = i ? u.default.union(i, e) : e;
          });
        const a = s.default(u.default.polygonToGeoJSON(i));
        return o && a ? o / a : 0;
      };
      t.polygonListPolyboolIou = y;
      const b = (e, t) => {
        const n = e.intersection(t);
        if (!n?.getArea()) return 0;
        const r = e.union(t);
        return r ? n.getArea() / r.getArea() : 0;
      };
      t.iou = b;
      const v = (e, t) => {
        const n = l.default(e, t);
        let i,
          o = 0;
        return (
          r.default.each(n, ([e, t]) => {
            const n = e.intersection(t);
            n && (o += n.getArea());
          }),
          r.default.each([...e, ...t], (e) => {
            i = i ? e.union(i) : e;
          }),
          i ? o / i.getArea() : 0
        );
      };
      t.polygonListIou = v;
      const _ = (e, t) => {
        const n = e.buffer(0).intersection(t.buffer(0)),
          r = e.buffer(0).union(t.buffer(0));
        return n && r ? n.getArea() / r.getArea() : 0;
      };
      t.iouWithBuffer = _;
      t.genericIouNucleus = (e, t) => {
        const n = p(e),
          r = p(t);
        try {
          const e = b(n, r);
          return Number.isNaN(e) || !isFinite(e) ? 0 : e;
        } catch (i) {
          const e = _(n, r);
          return Number.isNaN(e) || !isFinite(e) ? 0 : e;
        }
      };
      const x = (e, t) => {
        try {
          const n = p(e),
            r = p(t);
          return b(n, r);
        } catch (n) {
          try {
            const n = p(e).buffer(0.001),
              r = p(t).buffer(0.001);
            return b(n, r);
          } catch (r) {
            const n = g(e),
              i = g(t);
            return m(n, i);
          }
        }
      };
      t.genericIou = x;
      t.fragmentsIou = (e, t) => {
        try {
          const n = e.map((e) => p(e)),
            r = t.map((e) => p(e));
          return v(n, r);
        } catch (n) {
          try {
            const n = e.map((e) => p(e).buffer(0.001)),
              r = t.map((e) => p(e).buffer(0.001));
            return v(n, r);
          } catch (r) {
            const n = e.map(g),
              i = t.map(g);
            return y(n, i);
          }
        }
      };
      t.getPolygonPerimeter = (e) => {
        if (e.vertices.length < 3) return 1;
        return p(e)?.getLength() || 1;
      };
      t.boxIou = (e, t) => {
        const n = e.rotation ?? 0,
          r = t.rotation ?? 0;
        if (0 !== n || 0 !== r) return T(e, t);
        const i = Math.max(e.left, t.left),
          o = Math.min(e.left + e.width, t.left + t.width),
          a = Math.max(e.top, t.top),
          s = Math.min(e.top + e.height, t.top + t.height),
          u = Math.max(0, o - i) * Math.max(0, s - a);
        return u / (e.width * e.height + t.width * t.height - u);
      };
      const T = (e, t) => {
        const n = c.getRotatedVertices({
            height: e.height,
            width: e.width,
            rotation: e.rotation ?? 0,
            center: { x: e.left + e.width / 2, y: e.top + e.height / 2 },
            returnMidpoints: !1,
          }),
          r = c.getRotatedVertices({
            height: t.height,
            width: t.width,
            rotation: t.rotation ?? 0,
            center: { x: t.left + t.width / 2, y: t.top + t.height / 2 },
            returnMidpoints: !1,
          });
        return x({ vertices: n }, { vertices: r });
      };
      t.rotatedBoxIou = T;
      const M = (e) => {
          if (!e) return 0;
          const t = r.default.get(e, "x1"),
            n = r.default.get(e, "x2"),
            i = r.default.get(e, "y1"),
            o = r.default.get(e, "y2");
          return Math.pow(Math.pow(t - n, 2) + Math.pow(i - o, 2), 0.5);
        },
        w = (e, t) => ({ x: (e.x + t.x) / 2, y: (e.y + t.y) / 2 });
      t.midpoint = w;
      t.discreteFrechetDistance = (e, t) => {
        const n = A(e, t),
          r = A(e.reverse(), t);
        return Math.min(n, r);
      };
      const A = (e, t) => {
        const n = [...Array(e.length)].map(() => Array(t.length));
        n[0][0] = P(C(e[0]), C(t[0]));
        for (let r = 1; r < e.length; r++)
          n[r][0] = Math.max(n[r - 1][0], P(C(e[r]), C(t[0])));
        for (let r = 1; r < t.length; r++)
          n[0][r] = Math.max(n[0][r - 1], P(C(e[0]), C(t[r])));
        for (let r = 1; r < e.length; r++)
          for (let i = 1; i < t.length; i++)
            n[r][i] = Math.max(
              Math.min(n[r - 1][i], n[r - 1][i - 1], n[r][i - 1]),
              P(C(e[r]), C(t[i]))
            );
        return n[e.length - 1][t.length - 1];
      };
      t.projectedPointFromCuboid = (e) => {
        const t = w(e.vertices.faceTopleft, e.vertices.faceBottomright);
        return (
          ((e, t) => {
            if (!e || !t) return null;
            const { x1: n, x2: r, y1: i, y2: o } = e,
              { x1: a, x2: s, y1: u, y2: c } = t,
              l = (n - r) * (u - c) - (i - o) * (a - s);
            return 0 === l
              ? null
              : {
                  x:
                    ((n * o - i * r) * (a - s) - (n - r) * (a * c - u * s)) / l,
                  y:
                    ((n * o - i * r) * (u - c) - (i - o) * (a * c - u * s)) / l,
                };
          })(e.edges.sideTop, e.edges.sideBottom) || t
        );
      };
      t.formatCuboidAnnotation = (e) => {
        const t = {
          edges: r.default.keyBy(e.edges, (e) =>
            r.default.camelCase(e.description)
          ),
          vertices: r.default.keyBy(e.vertices, (e) =>
            r.default.camelCase(e.description)
          ),
          isExtended: !!e.edges && e.edges.length > 4,
        };
        return (
          (t.width = M(t.edges.faceTop)),
          (t.height = M(t.edges.faceLeft)),
          (t.sideHeight = M(t.edges.sideBack) || t.height),
          t
        );
      };
      t.getCuboidFrontFaceAsBox = (e) => ({
        top: e.vertices.faceTopleft.y,
        left: e.vertices.faceTopleft.x,
        height: e.vertices.faceBottomright.y - e.vertices.faceTopleft.y,
        width: e.vertices.faceBottomright.x - e.vertices.faceTopleft.x,
      });
      const k = (e) => ({
        vertices: [
          e.vertices.faceTopleft,
          e.vertices.faceTopright,
          e.vertices.faceBottomright,
          e.vertices.faceBottomleft,
        ],
      });
      t.getCuboidFrontFaceVertices = k;
      t.getCuboidSideFaceVertices = (e) => ({
        vertices: [
          e.vertices.faceTopright,
          e.vertices.sideTopcorner,
          e.vertices.sideBottomcorner,
          e.vertices.faceBottomright,
        ],
      });
      t.getCuboidVertices = (e) =>
        e.isExtended
          ? {
              vertices: [
                e.vertices.faceTopleft,
                e.vertices.faceTopright,
                e.vertices.sideTopcorner,
                e.vertices.sideBottomcorner,
                e.vertices.faceBottomright,
                e.vertices.faceBottomleft,
              ],
            }
          : k(e);
      t.getExtendedCuboidDirection = (e) => {
        if (!e.isExtended) return null;
        return Math.abs(e.edges.sideBack.x1 - e.edges.faceLeft.x1) >
          Math.abs(e.edges.sideBack.x1 - e.edges.faceRight.x1)
          ? "faceRight"
          : "faceLeft";
      };
      const E = (e, t) => Math.pow(e[0] - t[0], 2) + Math.pow(e[1] - t[1], 2);
      t.findDistance2 = E;
      const P = (e, t) => Math.sqrt(E(e, t));
      function C(e) {
        return [e.x, e.y];
      }
      t.findDistance = P;
      const L = (e) => (
        (e = ((e %= 2 * Math.PI) + 2 * Math.PI) % (2 * Math.PI)) > Math.PI &&
          (e -= 2 * Math.PI),
        e
      );
      t.normalizeToNegPiPi = L;
      function I(e, t = 1) {
        return r.default.flatten(
          e.map((n, i) => {
            if (i === e.length - 1) return [n];
            const o = e[i + 1],
              a = P(C(n), C(o)),
              s = r.default.ceil(a / t),
              u = (o.x - n.x) / s,
              c = (o.y - n.y) / s;
            return r.default.times(s, (e) => ({
              x: n.x + e * u,
              y: n.y + e * c,
            }));
          })
        );
      }
      function S(e, t = 1) {
        return r.default.flatten(
          e.map((n, i) => {
            if (i === e.length - 1) return [];
            const o = e[i + 1],
              a = P(C(n), C(o)),
              s = r.default.ceil(a / t),
              u = a / s,
              c = o.worldZ,
              l = n.worldZ,
              f = !r.default.isNil(c) && !r.default.isNil(l),
              d = (o.x - n.x) / s,
              h = (o.y - n.y) / s,
              p = f ? (c - l) / s : 0,
              g = r.default.times(s + 1, (e) => ({
                x: n.x + e * d,
                y: n.y + e * h,
                worldZ: f ? l + e * p : void 0,
              }));
            return r.default.times(s, (e) => {
              const t = g[e],
                n = g[e + 1],
                i =
                  r.default.isNil(t.worldZ) || r.default.isNil(n.worldZ)
                    ? void 0
                    : (t.worldZ + n.worldZ) / 2;
              return {
                point: { x: (t.x + n.x) / 2, y: (t.y + n.y) / 2, worldZ: i },
                pixelLength: u,
              };
            });
          })
        );
      }
      function O(e, t) {
        const n = new o.default(e.length);
        for (const [r, i] of e) {
          const e = Math.min(r.x, i.x),
            o = Math.max(r.x, i.x),
            a = Math.min(r.y, i.y),
            s = Math.max(r.y, i.y);
          n.add(e - t, a - t, o + t, s + t);
        }
        return (
          n.finish(),
          (i) => {
            const o = n.search(i.x, i.y, i.x, i.y);
            return r.default.some(o, (n) => F(i, e[n]) <= t * t);
          }
        );
      }
      function N(e, t) {
        const { x: n, y: r } = e,
          [{ x: i, y: o }, { x: a, y: s }] = t,
          u = a - i,
          c = s - o,
          l = u * u + c * c,
          f = l ? ((n - i) * u + (r - o) * c) / l : -1;
        return f < 0
          ? { x: i, y: o }
          : f > 1
          ? { x: a, y: s }
          : { x: i + f * u, y: o + f * c };
      }
      function F(e, t) {
        const { x: n, y: r } = e,
          { x: i, y: o } = N(e, t),
          a = n - i,
          s = r - o;
        return a * a + s * s;
      }
      t.addRadians = (e, t) => L(e + t);
      t.idsMatch = (e, t) => !!e?.id && e.id === t?.id;
    },
    910951: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default = void 0);
      var r = (function (e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var n in e)
            if (Object.prototype.hasOwnProperty.call(e, n)) {
              var r =
                Object.defineProperty && Object.getOwnPropertyDescriptor
                  ? Object.getOwnPropertyDescriptor(e, n)
                  : {};
              r.get || r.set ? Object.defineProperty(t, n, r) : (t[n] = e[n]);
            }
        return (t.default = e), t;
      })(n(814412));
      class i {
        static fromObject(e) {
          return new i(s(e.root), new Map(e.nodes.map(([e, t]) => [e, s(t)])));
        }
        static empty() {
          return new i({
            id: 0,
            offset: 0,
            count: 0,
            depth: 0,
            children: [],
            index: new Uint32Array(0),
            boundingBox: new r.Box3(),
          });
        }
        static fromPositions(e, t) {
          if (0 === e.length) return i.empty();
          const n = t?.maxDepth || this.defaultOptions.maxDepth,
            o = t?.maxElements || this.defaultOptions.maxElements,
            a = Math.floor(e.length / 3),
            s = new Uint32Array(a),
            u = new Uint32Array(4),
            c = new Uint32Array(4),
            l = new Uint32Array(a),
            f = new Uint8Array(a),
            d = new r.Vector3(),
            h = new r.Vector3(),
            p = new Map();
          for (let r = 0; r < a; r++) s[r] = r;
          const g = (e, t, n = 0) => {
              const i = {
                id: p.size,
                offset: e,
                count: t,
                depth: n,
                index: s.subarray(e, e + t),
                boundingBox: new r.Box3(),
                children: [],
              };
              return p.set(i.id, i), i;
            },
            m = (t) => {
              l.set(s.subarray(t.offset, t.offset + t.count)),
                c.fill(0),
                u.fill(0),
                t.boundingBox.getCenter(h);
              for (let n = 0; n < t.count; n++)
                (f[n] = e[3 * l[n]] > h.x ? 1 : 0),
                  (f[n] += e[3 * l[n] + 1] > h.y ? 2 : 0),
                  u[f[n]]++;
              let r = t.offset;
              for (let e = 0; e < 4; e++) (c[e] = r), (r += u[e]);
              const i = [];
              for (let e = 0; e < 4; e++) {
                const n = g(c[e], u[e], t.depth + 1);
                i.push(n);
              }
              for (let n = 0; n < t.count; n++) {
                const t = f[n];
                (s[c[t]++] = l[n]),
                  d.fromArray(e, 3 * l[n]),
                  i[f[n]].boundingBox.expandByPoint(d);
              }
              t.children = i;
              for (const e of i) e.count > o && e.depth < n && m(e);
            },
            y = g(0, a);
          for (let r = 0; r < y.count; r++)
            d.fromArray(e, 3 * (y.offset + r)), y.boundingBox.expandByPoint(d);
          return m(y), new i(y, p);
        }
        get index() {
          return this.root.index;
        }
        get count() {
          return this.root.count;
        }
        getIndexForNodes(e) {
          const t = e.reduce((e, t) => e + t.count, 0);
          let n = 0;
          const r = new Uint32Array(t);
          for (const i of e)
            for (let e = 0; e < i.count; e++) r[n++] = this.index[i.offset + e];
          return r;
        }
        queryNodes(e, t = 1 / 0) {
          const n = [],
            r = (i) => {
              e(i) &&
                (0 === i.children.length || i.depth >= t
                  ? n.push(i)
                  : i.children.forEach((e) => r(e)));
            };
          return r(this.root), n;
        }
        queryNodesWithFull(e, t, n = 1 / 0) {
          const r = [],
            i = (o) => {
              e(o) &&
                (0 === o.children.length || o.depth >= n || t(o)
                  ? r.push(o)
                  : o.children.forEach((e) => i(e)));
            };
          return i(this.root), r;
        }
        queryIndex(e, t = 1 / 0) {
          return this.getIndexForNodes(this.queryNodes(e, t));
        }
        toObject() {
          return { root: a(this.root), nodes: u(this.nodes, a) };
        }
        clone() {
          return this;
        }
        constructor(e, t) {
          (this.root = e), (this.nodes = t || new Map([[0, e]]));
        }
      }
      (t.BoxQuadTree = i),
        (i.defaultOptions = { maxDepth: 8, maxElements: 1e3 });
      var o = i;
      function a(e) {
        return {
          id: e.id,
          count: e.count,
          depth: e.depth,
          index: e.index,
          offset: e.offset,
          boundingBox: {
            min: e.boundingBox.min.toArray(),
            max: e.boundingBox.max.toArray(),
          },
          children: e.children.map(a),
        };
      }
      function s(e) {
        return {
          id: e.id,
          count: e.count,
          depth: e.depth,
          index: e.index,
          offset: e.offset,
          boundingBox: new r.Box3(
            new r.Vector3().fromArray(e.boundingBox.min),
            new r.Vector3().fromArray(e.boundingBox.max)
          ),
          children: e.children.map(s),
        };
      }
      function u(e, t) {
        const n = [];
        for (const [r, i] of e.entries()) n.push([r, t(i)]);
        return n;
      }
      t.default = o;
    },
    141971: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      var r = o(n(298784)),
        i = o(n(910951));
      function o(e) {
        return e && e.__esModule ? e : { default: e };
      }
      class a {
        static build(e = i.default.empty()) {
          return new a(e);
        }
        get selectedNodeIds() {
          return Array.from(this.nodes.keys());
        }
        clone() {
          return a.build(this.boxTree).copy(this);
        }
        copy(e) {
          if (this.boxTree !== e.boxTree)
            throw new Error("Selections should share the same box tree.");
          return (
            this.clear(),
            e.nodes.forEach((e, t) => {
              this.nodes.set(t, {
                ids: e.ids ? e.ids.slice() : void 0,
                full: e.full,
              });
            }),
            this
          );
        }
        getNode(e) {
          if (!this.nodes.has(e)) {
            const t = {};
            return this.nodes.set(e, t), t;
          }
          return this.nodes.get(e);
        }
        clear() {
          return this.nodes.clear(), this;
        }
        selectNode(e) {
          const t = this.boxTree.nodes.get(e);
          return this.nodes.set(e, { ids: t.index, full: !0 }), this;
        }
        union(e) {
          return (
            this.assertComparable(e),
            e.nodes.forEach((e, t) => {
              if (e.ids?.length) {
                const n = this.getNode(t);
                n.ids?.length
                  ? (n.ids = Uint32Array.from(
                      r.default.uniq([
                        ...Array.from(n.ids),
                        ...Array.from(e.ids),
                      ])
                    ))
                  : (n.ids = e.ids);
              }
            }),
            this
          );
        }
        intersection(e) {
          this.assertComparable(e);
          const t = [];
          return (
            this.nodes.forEach((n, i) => {
              if (n.ids?.length && e.nodes.has(i)) {
                const t = e.getNode(i);
                n.ids = Uint32Array.from(r.default.intersection(n.ids, t.ids));
              }
              (n.ids?.length && e.nodes.has(i)) || t.push(i);
            }),
            t.forEach((e) => {
              this.nodes.delete(e);
            }),
            this
          );
        }
        difference(e) {
          return (
            this.assertComparable(e),
            this.nodes.forEach((t, n) => {
              if (t.ids?.length && e.nodes.has(n)) {
                const i = e.getNode(n);
                i.ids?.length &&
                  (t.ids = Uint32Array.from(
                    r.default.difference(t.ids, i.ids)
                  ));
              }
            }),
            this
          );
        }
        select(e, t) {
          return (this.getNode(e).ids = t), this;
        }
        forEach(e) {
          this.nodes.forEach((t) => {
            const n = t.ids;
            if (n) for (let r = 0; r < n.length; r++) e(n[r]);
          });
        }
        getCount() {
          let e = 0;
          return (
            this.nodes.forEach((t) => {
              e += t.ids?.length || 0;
            }),
            e
          );
        }
        isEmpty() {
          return 0 === this.getCount();
        }
        getIndex() {
          const e = new Uint32Array(this.getCount());
          let t = 0;
          return (
            this.nodes.forEach((n) => {
              n.ids && (e.set(n.ids, t), (t += n.ids.length));
            }),
            e
          );
        }
        constructor(e) {
          (this.assertComparable = (e) => {
            if (this.boxTree !== e.boxTree)
              throw new Error("Selections should share the same box tree.");
          }),
            (this.boxTree = e),
            (this.nodes = new Map());
        }
      }
      t.BoxTreeSelection = a;
    },
    252575: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      var r = {},
        i = a(n(910951));
      Object.keys(i).forEach(function (e) {
        "default" !== e &&
          "__esModule" !== e &&
          (Object.prototype.hasOwnProperty.call(r, e) ||
            (e in t && t[e] === i[e]) ||
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function () {
                return i[e];
              },
            }));
      });
      var o = a(n(141971));
      function a(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var n in e)
            if (Object.prototype.hasOwnProperty.call(e, n)) {
              var r =
                Object.defineProperty && Object.getOwnPropertyDescriptor
                  ? Object.getOwnPropertyDescriptor(e, n)
                  : {};
              r.get || r.set ? Object.defineProperty(t, n, r) : (t[n] = e[n]);
            }
        return (t.default = e), t;
      }
      Object.keys(o).forEach(function (e) {
        "default" !== e &&
          "__esModule" !== e &&
          (Object.prototype.hasOwnProperty.call(r, e) ||
            (e in t && t[e] === o[e]) ||
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function () {
                return o[e];
              },
            }));
      });
    },
    545224: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      var r = n(252575),
        i = n(592159),
        o = n(145564);
      class a extends i.PointCloud {
        static fromPointCloud(e, t) {
          if (e instanceof a) return e;
          const n =
            t?.boxQuadTree ||
            (e.xyz
              ? r.BoxQuadTree.fromPositions(e.xyz)
              : r.BoxQuadTree.empty());
          return new a({ ...e, boxQuadTree: n });
        }
        static fromObject(e) {
          const t = i.PointCloud.buildFromObject(e.pointCloud),
            n = r.BoxQuadTree.fromObject(e.boxQuadTree);
          return new a({ ...t, boxQuadTree: n });
        }
        toObject() {
          return {
            pointCloud: super.toJSON(),
            boxQuadTree: this.boxQuadTree.toObject(),
          };
        }
        clone() {
          return new a({
            boxQuadTree: this.boxQuadTree.clone(),
            ...super.clone(),
          });
        }
        getFilterContext() {
          return {
            points: this.xyz,
            timestamps: this.pointTimestampArray,
            boxTree: this.boxQuadTree,
          };
        }
        applySelection(e) {
          return this.applyIndex(e.getIndex());
        }
        applyFilter(e) {
          return this.applySelection(e.getSelection(this.getFilterContext()));
        }
        getIndexByFilter(e) {
          return e.getSelection(this.getFilterContext()).getIndex();
        }
        getIndexBySmartSample(e) {
          return this.getIndexByFilter(new o.SmartSampleFilter(e));
        }
        filterByRange(e) {
          return this.applyFilter(new o.RangeQueryFilter(e));
        }
        getIndexByFilterByRange(e) {
          return this.getIndexByFilter(new o.RangeQueryFilter(e));
        }
        filterByRangeAndTimestamp(e, t, n) {
          return this.applyFilter(new o.RangeTimestampFilter(e, t, n));
        }
        filterByCuboid(e) {
          return this.applyFilter(new o.CuboidFilter(e));
        }
        filterByNotInCuboid(e) {
          return this.applyFilter(new o.CuboidSubtractionFilter(e));
        }
        getIndexByCuboid(e) {
          return this.getIndexByFilter(new o.CuboidFilter(e));
        }
        filterByCuboidBorder(e, t = 0, n = 0, r = 0) {
          return this.applyFilter(new o.CuboidBorderFilter(e, t, n, r));
        }
        filterByPointsOutsideCuboidFace(e, t = 0, n = 0, r = 0) {
          return new o.CuboidBorderFilter(
            e,
            t,
            n,
            r
          ).filterPointsInPartialExteriorBorder(this.getFilterContext());
        }
        filterByCylinder(e) {
          return this.applyFilter(new o.CylinderFilter(e));
        }
        filterByCuboidAndTimestamp(e, t, n) {
          return this.applyFilter(new o.HyperCuboidFilter(e, t, n));
        }
        getIndexByCuboidAndTimestamp(e, t, n) {
          return this.getIndexByFilter(new o.HyperCuboidFilter(e, t, n));
        }
        countPointsInCuboid(e) {
          return new o.CuboidFilter(e).countPoints(this.getFilterContext());
        }
        countPointsInCuboidAndTimestamp(e, t, n) {
          return new o.HyperCuboidFilter(e, t, n).countPoints(
            this.getFilterContext()
          );
        }
        countPointsOutsideCuboidFace(e, t = 0, n = 0, r = 0) {
          return new o.CuboidBorderFilter(
            e,
            t,
            n,
            r
          ).countPointsInPartialExteriorBorder(this.getFilterContext());
        }
        constructor(e) {
          super(e), (this.boxQuadTree = e.boxQuadTree);
        }
      }
      t.IndexedPointCloud = a;
    },
    592159: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(257868);
      class a {
        static buildFromObject(e) {
          return new a({
            xyz: e.xyz,
            photoColors: e.photoColors,
            bloomLevel: e.bloomLevel,
            intensities: e.intensities,
            deviceIds: e.deviceIds,
            uniqueDeviceIds: e.uniqueDeviceIds,
            ids: e.ids,
            meta: e.meta,
            pointTimestampArray: e.pointTimestampArray,
          });
        }
        static combinePointClouds(e) {
          if (!e.length) return new a();
          const t = {
              xyz: e.map((e) => e.xyz),
              intensities: e.map((e) => e.intensities),
              photoColors: e.map((e) => e.photoColors),
              bloomLevel: e.map((e) => e.bloomLevel),
              deviceIds: e.map((e) => e.deviceIds),
              ids: e.map((e) => e.ids),
              pointTimestampArray: e.map((e) => e.pointTimestampArray),
            },
            n = i.default.uniq(
              i.default.flatten(
                i.default.compact(e.map((e) => e.uniqueDeviceIds))
              )
            );
          return new a({
            xyz: o.concat(t.xyz),
            intensities: i.default.every(t.intensities)
              ? o.concat(i.default.compact(t.intensities))
              : null,
            photoColors: i.default.every(t.photoColors)
              ? o.concat(i.default.compact(t.photoColors))
              : null,
            bloomLevel: i.default.every(t.bloomLevel)
              ? o.concat(i.default.compact(t.bloomLevel))
              : null,
            deviceIds: i.default.every(t.deviceIds)
              ? o.concat(i.default.compact(t.deviceIds))
              : null,
            ids: i.default.every(t.ids)
              ? o.concat(i.default.compact(t.ids))
              : null,
            pointTimestampArray: i.default.every(t.pointTimestampArray)
              ? o.concat(i.default.compact(t.pointTimestampArray))
              : null,
            uniqueDeviceIds: n,
            meta: e[0].meta,
          });
        }
        toJSON() {
          return {
            xyz: this.xyz,
            photoColors: this.photoColors,
            bloomLevel: this.bloomLevel,
            intensities: this.intensities,
            deviceIds: this.deviceIds,
            uniqueDeviceIds: this.uniqueDeviceIds,
            ids: this.ids,
            meta: this.meta,
            pointTimestampArray: this.pointTimestampArray,
          };
        }
        zeros(e) {
          return new a({
            xyz: new Float32Array(3 * e),
            intensities: this.intensities ? new Float32Array(e) : null,
            photoColors: this.photoColors ? new Uint8Array(3 * e) : null,
            bloomLevel: this.bloomLevel ? new Uint8Array(e) : null,
            deviceIds: this.deviceIds ? new Float32Array(e) : null,
            ids: this.ids ? new Uint32Array(e) : null,
            pointTimestampArray: this.pointTimestampArray
              ? new Float64Array(e)
              : null,
          });
        }
        randomSample(e) {
          if (e >= this.numPoints) return this;
          const t = i.default.sampleSize(i.default.range(this.numPoints), e);
          return this.slice(t);
        }
        subPointCloud(e, t) {
          return new a({
            xyz: this.xyz.subarray(3 * e, 3 * t),
            intensities: this.intensities
              ? this.intensities.subarray(e, t)
              : null,
            photoColors: this.photoColors
              ? this.photoColors.subarray(3 * e, 3 * t)
              : null,
            bloomLevel: this.bloomLevel ? this.bloomLevel.subarray(e, t) : null,
            deviceIds: this.deviceIds ? this.deviceIds.subarray(e, t) : null,
            ids: this.ids ? this.ids.subarray(e, t) : null,
            pointTimestampArray: this.pointTimestampArray
              ? this.pointTimestampArray.subarray(e, t)
              : null,
            meta: this.meta,
          });
        }
        slice(e) {
          return this.applyIndex(Uint32Array.from(e));
        }
        applyIndex(e) {
          const t = this.deviceIds ? o.pick(this.deviceIds, e) : null,
            n = t ? this.uniqueDeviceIds : null;
          return new a({
            xyz: o.pick(this.xyz, e, 3),
            intensities: this.intensities ? o.pick(this.intensities, e) : null,
            photoColors: this.photoColors
              ? o.pick(this.photoColors, e, 3)
              : null,
            bloomLevel: this.bloomLevel ? o.pick(this.bloomLevel, e) : null,
            deviceIds: t,
            uniqueDeviceIds: n,
            ids: this.ids ? o.pick(this.ids, e) : null,
            pointTimestampArray: this.pointTimestampArray
              ? o.pick(this.pointTimestampArray, e)
              : null,
            meta: this.meta,
          });
        }
        clone() {
          return new a({
            xyz: this.xyz.slice(),
            intensities: this.intensities ? this.intensities.slice() : null,
            photoColors: this.photoColors ? this.photoColors.slice() : null,
            bloomLevel: this.bloomLevel ? this.bloomLevel.slice() : null,
            deviceIds: this.deviceIds ? this.deviceIds.slice() : null,
            uniqueDeviceIds: this.deviceIds
              ? this.uniqueDeviceIds?.slice()
              : null,
            ids: this.ids ? this.ids.slice() : null,
            pointTimestampArray: this.pointTimestampArray
              ? this.pointTimestampArray.slice()
              : null,
            meta: i.default.clone(this.meta),
          });
        }
        constructor(e = {}) {
          if (
            ((e.xyz = e.xyz || new Float32Array(0)),
            !(e.xyz instanceof Float32Array))
          )
            throw new Error("Malformed xyz (incorrect type)");
          if (e.ids) {
            if (!(e.ids instanceof Uint32Array))
              throw new Error("Malformed ids (incorrect type)");
            if (e.ids.length !== e.xyz.length / 3)
              throw new Error("Malformed ids (incorrect length)");
          }
          (this.numPoints = e.xyz.length / 3),
            (this.xyz = e.xyz),
            (this.meta = e.meta),
            (this.photoColors = e.photoColors ?? null),
            (this.bloomLevel = e.bloomLevel ?? null),
            (this.intensities = e.intensities ?? null),
            (this.deviceIds = e.deviceIds ?? null),
            (this.uniqueDeviceIds = e.uniqueDeviceIds ?? null),
            (this.pointTimestampArray = e.pointTimestampArray ?? null),
            (this.ids = e.ids ?? null),
            !i.default.isEmpty(this.deviceIds) &&
              i.default.isEmpty(this.uniqueDeviceIds) &&
              (this.uniqueDeviceIds = i.default.uniq(this.deviceIds));
        }
      }
      t.PointCloud = a;
    },
    827004: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      var r = n(252575);
      t.BaseFilter = class {
        selectNode(e) {
          return !0;
        }
        getIdsFromNode(e, t) {
          return t.index;
        }
        getSelection(e) {
          const t = r.BoxTreeSelection.build(e.boxTree);
          return (
            e.boxTree
              .queryNodes((e) => this.selectNode(e))
              .forEach((n) => t.select(n.id, this.getIdsFromNode(e, n))),
            t
          );
        }
      };
    },
    674026: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      var r = n(814412),
        i = n(252575),
        o = n(376570);
      const a = new r.Vector3();
      class s extends o.CuboidFilter {
        shouldSelectId(e, t) {
          a.set(
            e.points[3 * t + 0] - this.cuboid.position.x,
            e.points[3 * t + 1] - this.cuboid.position.y,
            e.points[3 * t + 2] - this.cuboid.position.z
          ),
            a.applyMatrix3(this.rotation);
          const n = Math.abs(a.x),
            r = Math.abs(a.y),
            i = Math.abs(a.z),
            o = Math.min(this.diag[0], this.diag[0] + this.borderX),
            s = Math.max(this.diag[0], this.diag[0] + this.borderX),
            u = Math.min(this.diag[1], this.diag[1] + this.borderY),
            c = Math.max(this.diag[1], this.diag[1] + this.borderY),
            l = Math.min(this.diag[2], this.diag[2] + this.borderZ),
            f = Math.max(this.diag[2], this.diag[2] + this.borderZ);
          return n > o && r > u && i > l && n <= s && r <= c && i <= f;
        }
        shouldSelectPointInPartialExteriorBorder(e, t) {
          if (
            (a.set(
              e.points[3 * t + 0] - this.cuboid.position.x,
              e.points[3 * t + 1] - this.cuboid.position.y,
              e.points[3 * t + 2] - this.cuboid.position.z
            ),
            a.applyMatrix3(this.rotation),
            this.borderX > 0)
          ) {
            const e = a.x > this.diag[0] && a.x <= this.diag[0] + this.borderX,
              t =
                a.y >= -this.diag[1] &&
                a.y <= this.diag[1] &&
                a.z >= -this.diag[2] &&
                a.z <= this.diag[2];
            return e && t;
          }
          if (this.borderX < 0) {
            const e =
                a.x < -this.diag[0] && a.x >= -this.diag[0] + this.borderX,
              t =
                a.y >= -this.diag[1] &&
                a.y <= this.diag[1] &&
                a.z >= -this.diag[2] &&
                a.z <= this.diag[2];
            return e && t;
          }
          if (this.borderY > 0) {
            const e = a.y > this.diag[1] && a.y <= this.diag[1] + this.borderY,
              t =
                a.x >= -this.diag[0] &&
                a.x <= this.diag[0] &&
                a.z >= -this.diag[2] &&
                a.z <= this.diag[2];
            return e && t;
          }
          if (this.borderY < 0) {
            const e =
                a.y < -this.diag[1] && a.y >= -this.diag[1] + this.borderY,
              t =
                a.x >= -this.diag[0] &&
                a.x <= this.diag[0] &&
                a.z >= -this.diag[2] &&
                a.z <= this.diag[2];
            return e && t;
          }
          if (this.borderZ > 0) {
            const e = a.z > this.diag[2] && a.z >= this.diag[2] + this.borderZ,
              t =
                a.x >= -this.diag[0] &&
                a.x <= this.diag[0] &&
                a.y >= -this.diag[1] &&
                a.y <= this.diag[1];
            return e && t;
          }
          if (this.borderZ < 0) {
            const e =
                a.z < -this.diag[2] && a.z >= -this.diag[2] + this.borderZ,
              t =
                a.x >= -this.diag[0] &&
                a.x <= this.diag[0] &&
                a.y >= -this.diag[1] &&
                a.y <= this.diag[1];
            return e && t;
          }
          return !1;
        }
        filterPointsInPartialExteriorBorder(e) {
          const t = i.BoxTreeSelection.build(e.boxTree);
          return (
            e.boxTree
              .queryNodes((e) => this.selectNode(e))
              .forEach((n) => {
                let r = 0;
                const i = new Uint32Array(n.count);
                for (let t = 0; t < n.count; t++)
                  this.shouldSelectPointInPartialExteriorBorder(
                    e,
                    n.index[t]
                  ) && (i[r++] = n.index[t]);
                t.select(n.id, i.slice(0, r));
              }),
            t
          );
        }
        countPointsInPartialExteriorBorder(e) {
          let t = 0;
          return (
            e.boxTree
              .queryNodes((e) => this.selectNode(e))
              .forEach((n) => {
                for (let r = 0; r < n.count; r++)
                  this.shouldSelectPointInPartialExteriorBorder(
                    e,
                    n.index[r]
                  ) && t++;
              }),
            t
          );
        }
        constructor(e, t = 0, n = 0, r = 0) {
          super({
            ...e,
            dimensions: {
              x: e.dimensions.x + t,
              y: e.dimensions.y + n,
              z: e.dimensions.z + r,
            },
          }),
            (this.borderX = t),
            (this.borderY = n),
            (this.borderZ = r),
            (this.diag = [
              0.5 * e.dimensions.x,
              0.5 * e.dimensions.y,
              0.5 * e.dimensions.z,
            ]);
        }
      }
      t.CuboidBorderFilter = s;
    },
    376570: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      var r = n(814412),
        i = n(565407);
      const o = new r.Vector3(),
        a = new r.Vector3(),
        s = new r.Box3();
      class u extends i.RangeQueryFilter {
        shouldSelectId(e, t) {
          return (
            o.set(
              e.points[3 * t + 0] - this.cuboid.position.x,
              e.points[3 * t + 1] - this.cuboid.position.y,
              e.points[3 * t + 2] - this.cuboid.position.z
            ),
            o.applyMatrix3(this.rotation),
            o.x >= -this.diag[0] &&
              o.y >= -this.diag[1] &&
              o.z >= -this.diag[2] &&
              o.x <= this.diag[0] &&
              o.y <= this.diag[1] &&
              o.z <= this.diag[2]
          );
        }
        getIdsFromNode(e, t) {
          const n = new Uint32Array(t.count);
          let r = 0;
          for (let i = 0; i < n.length; i++)
            this.shouldSelectId(e, t.index[i]) && (n[r++] = t.index[i]);
          return n.slice(0, r);
        }
        countPoints(e) {
          let t = 0;
          return (
            e.boxTree.queryNodes(this.selectNode).forEach((n) => {
              for (let r = 0; r < n.index.length; r++)
                this.shouldSelectId(e, n.index[r]) && t++;
            }),
            t
          );
        }
        constructor(e) {
          super(
            (function (e) {
              s.makeEmpty();
              const t = c(e);
              for (let n = 0; n <= 1; n++)
                for (let r = 0; r <= 1; r++)
                  for (let i = 0; i <= 1; i++)
                    o
                      .set(n, r, i)
                      .subScalar(0.5)
                      .multiply(
                        a.set(e.dimensions.x, e.dimensions.y, e.dimensions.z)
                      )
                      .applyMatrix3(t)
                      .add(a.set(e.position.x, e.position.y, e.position.z)),
                      s.expandByPoint(o);
              return {
                minX: s.min.x,
                maxX: s.max.x,
                minY: s.min.y,
                maxY: s.max.y,
                minZ: s.min.z,
                maxZ: s.max.z,
              };
            })(e)
          ),
            (this.cuboid = e),
            (this.rotation = c(e)),
            (this.diag = [
              0.5 * e.dimensions.x,
              0.5 * e.dimensions.y,
              0.5 * e.dimensions.z,
            ]);
        }
      }
      function c({ yaw: e, pitch: t, roll: n }) {
        const i = new r.Euler(-(t || 0), n || 0, e, "ZYX"),
          o = new r.Matrix4().makeRotationFromEuler(i);
        return new r.Matrix3().setFromMatrix4(o).transpose();
      }
      t.CuboidFilter = u;
    },
    467913: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      var r = n(814412),
        i = n(376570);
      const o = new r.Vector3();
      class a extends i.CuboidFilter {
        shouldSelectId(e, t) {
          return (
            o.set(
              e.points[3 * t + 0] - this.cuboid.position.x,
              e.points[3 * t + 1] - this.cuboid.position.y,
              e.points[3 * t + 2] - this.cuboid.position.z
            ),
            o.applyMatrix3(this.rotation),
            o.x < -this.diag[0] ||
              o.y < -this.diag[1] ||
              o.z < -this.diag[2] ||
              o.x > this.diag[0] ||
              o.y > this.diag[1] ||
              o.z > this.diag[2]
          );
        }
        constructor(e) {
          super(e), (this.cuboid = e);
        }
      }
      t.CuboidSubtractionFilter = a;
    },
    71930: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      var r = n(814412),
        i = n(565407);
      const o = new r.Vector3();
      class a extends i.RangeQueryFilter {
        getIdsFromNode(e, t) {
          const n = this.cylinder.radius * this.cylinder.radius;
          let r = 0;
          const i = new Uint32Array(t.count);
          for (let a = 0; a < i.length; a++)
            o.set(
              e.points[3 * t.index[a] + 0] - this.cylinder.center[0],
              e.points[3 * t.index[a] + 1] - this.cylinder.center[1],
              e.points[3 * t.index[a] + 2] - this.cylinder.center[2]
            ),
              o.x * o.x + o.y * o.y < n &&
                2 * o.z > -this.cylinder.height &&
                2 * o.z < this.cylinder.height &&
                (i[r++] = t.index[a]);
          return i.slice(0, r);
        }
        constructor(e) {
          super(
            (function (e) {
              return {
                minX: e.center[0] - e.radius,
                maxX: e.center[0] + e.radius,
                minY: e.center[1] - e.radius,
                maxY: e.center[1] + e.radius,
                minZ: e.center[2] - e.height / 2,
                maxZ: e.center[2] + e.height / 2,
              };
            })(e)
          ),
            (this.cylinder = e);
        }
      }
      t.CylinderFilter = a;
    },
    774371: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      var r = n(376570);
      class i extends r.CuboidFilter {
        shouldSelectId(e, t) {
          return (
            e.timestamps[t] >= this.start &&
            e.timestamps[t] <= this.end &&
            super.shouldSelectId(e, t)
          );
        }
        getIdsFromNode(e, t) {
          if (!e.timestamps)
            throw new Error("Cannot apply timestamp filter in this pointcloud");
          return super.getIdsFromNode(e, t);
        }
        constructor(e, t, n) {
          super(e), (this.start = t), (this.end = n);
        }
      }
      t.HyperCuboidFilter = i;
    },
    565407: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      var r = n(814412),
        i = n(827004);
      class o extends i.BaseFilter {
        constructor(e) {
          super(),
            (this.selectNode = (e) => e.boundingBox.intersectsBox(this.box3)),
            (this.box3 = new r.Box3(
              new r.Vector3(e.minX, e.minY, e.minZ),
              new r.Vector3(e.maxX, e.maxY, e.maxZ)
            ));
        }
      }
      t.RangeQueryFilter = o;
    },
    243474: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      var r = n(565407);
      class i extends r.RangeQueryFilter {
        getIdsFromNode(e, t) {
          if (!e.timestamps)
            throw new Error("Cannot apply timestamp filter in this pointcloud");
          const n = new Uint32Array(t.count);
          let r = 0;
          for (let i = 0; i < n.length; i++)
            e.timestamps[t.index[i]] >= this.start &&
              e.timestamps[t.index[i]] <= this.end &&
              (n[r++] = t.index[i]);
          return n.slice(0, r);
        }
        constructor(e, t, n) {
          super(e), (this.start = t), (this.end = n);
        }
      }
      t.RangeTimestampFilter = i;
    },
    787863: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      var r = n(827004);
      class i extends r.BaseFilter {
        getIdsFromNode(e, t) {
          if (0 === e.points.length || 0 === this.sampleRate)
            return new Uint32Array();
          const n = Math.floor(t.count * this.sampleRate),
            r = new Uint32Array(n),
            i = 1 / this.sampleRate;
          for (let o = 0; o < n; o++) r[o] = t.index[o * i];
          return r;
        }
        constructor(e) {
          super(), (this.sampleRate = e);
        }
      }
      t.SampleFilter = i;
    },
    35914: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(252575);
      t.SmartSampleFilter = class {
        getSelection({ boxTree: e }) {
          const t = o.BoxTreeSelection.build(e),
            n = e.queryNodes(() => !0),
            r = n.map((t) => Math.pow(t.count / e.count, 0.25)),
            a = i.default.sum(r);
          return (
            n.forEach((n, i) => {
              let o = 0;
              const s = e.count * this.sampleRate * (r[i] / a),
                u = n.count / s,
                c = new Uint32Array(2 * s);
              for (let e = 0; e < n.count && !(o >= c.length); e += u)
                c[o++] = n.index[e << 0];
              t.select(n.id, c.subarray(0, o));
            }),
            t
          );
        }
        constructor(e) {
          this.sampleRate = e;
        }
      };
    },
    145564: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      var r = {},
        i = p(n(827004));
      Object.keys(i).forEach(function (e) {
        "default" !== e &&
          "__esModule" !== e &&
          (Object.prototype.hasOwnProperty.call(r, e) ||
            (e in t && t[e] === i[e]) ||
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function () {
                return i[e];
              },
            }));
      });
      var o = p(n(565407));
      Object.keys(o).forEach(function (e) {
        "default" !== e &&
          "__esModule" !== e &&
          (Object.prototype.hasOwnProperty.call(r, e) ||
            (e in t && t[e] === o[e]) ||
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function () {
                return o[e];
              },
            }));
      });
      var a = p(n(674026));
      Object.keys(a).forEach(function (e) {
        "default" !== e &&
          "__esModule" !== e &&
          (Object.prototype.hasOwnProperty.call(r, e) ||
            (e in t && t[e] === a[e]) ||
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function () {
                return a[e];
              },
            }));
      });
      var s = p(n(376570));
      Object.keys(s).forEach(function (e) {
        "default" !== e &&
          "__esModule" !== e &&
          (Object.prototype.hasOwnProperty.call(r, e) ||
            (e in t && t[e] === s[e]) ||
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function () {
                return s[e];
              },
            }));
      });
      var u = p(n(467913));
      Object.keys(u).forEach(function (e) {
        "default" !== e &&
          "__esModule" !== e &&
          (Object.prototype.hasOwnProperty.call(r, e) ||
            (e in t && t[e] === u[e]) ||
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function () {
                return u[e];
              },
            }));
      });
      var c = p(n(71930));
      Object.keys(c).forEach(function (e) {
        "default" !== e &&
          "__esModule" !== e &&
          (Object.prototype.hasOwnProperty.call(r, e) ||
            (e in t && t[e] === c[e]) ||
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function () {
                return c[e];
              },
            }));
      });
      var l = p(n(787863));
      Object.keys(l).forEach(function (e) {
        "default" !== e &&
          "__esModule" !== e &&
          (Object.prototype.hasOwnProperty.call(r, e) ||
            (e in t && t[e] === l[e]) ||
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function () {
                return l[e];
              },
            }));
      });
      var f = p(n(35914));
      Object.keys(f).forEach(function (e) {
        "default" !== e &&
          "__esModule" !== e &&
          (Object.prototype.hasOwnProperty.call(r, e) ||
            (e in t && t[e] === f[e]) ||
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function () {
                return f[e];
              },
            }));
      });
      var d = p(n(774371));
      Object.keys(d).forEach(function (e) {
        "default" !== e &&
          "__esModule" !== e &&
          (Object.prototype.hasOwnProperty.call(r, e) ||
            (e in t && t[e] === d[e]) ||
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function () {
                return d[e];
              },
            }));
      });
      var h = p(n(243474));
      function p(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var n in e)
            if (Object.prototype.hasOwnProperty.call(e, n)) {
              var r =
                Object.defineProperty && Object.getOwnPropertyDescriptor
                  ? Object.getOwnPropertyDescriptor(e, n)
                  : {};
              r.get || r.set ? Object.defineProperty(t, n, r) : (t[n] = e[n]);
            }
        return (t.default = e), t;
      }
      Object.keys(h).forEach(function (e) {
        "default" !== e &&
          "__esModule" !== e &&
          (Object.prototype.hasOwnProperty.call(r, e) ||
            (e in t && t[e] === h[e]) ||
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function () {
                return h[e];
              },
            }));
      });
    },
    152122: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      var r = {};
      t.default = void 0;
      var i = u(n(592159));
      Object.keys(i).forEach(function (e) {
        "default" !== e &&
          "__esModule" !== e &&
          (Object.prototype.hasOwnProperty.call(r, e) ||
            (e in t && t[e] === i[e]) ||
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function () {
                return i[e];
              },
            }));
      });
      var o = u(n(549041));
      Object.keys(o).forEach(function (e) {
        "default" !== e &&
          "__esModule" !== e &&
          (Object.prototype.hasOwnProperty.call(r, e) ||
            (e in t && t[e] === o[e]) ||
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function () {
                return o[e];
              },
            }));
      });
      var a = u(n(545224));
      Object.keys(a).forEach(function (e) {
        "default" !== e &&
          "__esModule" !== e &&
          (Object.prototype.hasOwnProperty.call(r, e) ||
            (e in t && t[e] === a[e]) ||
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function () {
                return a[e];
              },
            }));
      });
      var s = u(n(198360));
      function u(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var n in e)
            if (Object.prototype.hasOwnProperty.call(e, n)) {
              var r =
                Object.defineProperty && Object.getOwnPropertyDescriptor
                  ? Object.getOwnPropertyDescriptor(e, n)
                  : {};
              r.get || r.set ? Object.defineProperty(t, n, r) : (t[n] = e[n]);
            }
        return (t.default = e), t;
      }
      Object.keys(s).forEach(function (e) {
        "default" !== e &&
          "__esModule" !== e &&
          (Object.prototype.hasOwnProperty.call(r, e) ||
            (e in t && t[e] === s[e]) ||
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function () {
                return s[e];
              },
            }));
      });
      var c = i.PointCloud;
      t.default = c;
    },
    198360: function (e, t) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    549041: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.normalizeIntensities = function (e) {
          if (i.default.mean(e) < 0.005)
            for (let r = 0; r < e.length; r++)
              (e[r] *= 63356), (e[r] = Math.tanh(e[r]));
          const t = i.default.max(e) || 0;
          let n = 1;
          t > 255 ? (n = 65536) : t > 1 && (n = 255);
          if (n > 1) for (let r = 0; r < e.length; r++) e[r] /= n;
          for (let r = 0; r < e.length; r++) isNaN(e[r]) && (e[r] = 0);
        }),
        (t.processIntensityData = function (e, t) {
          let n = t.mean;
          void 0 === n && (n = i.default.mean(e));
          let r = t.variance;
          if (void 0 === r) {
            let t = 0;
            for (const r of e) t += Math.pow(r - n, 2);
            r = t / e.length;
          }
          t.intensityBand = n + r;
        });
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r };
    },
    490063: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default = function (e) {
          const t = e.slice();
          return (
            t.sort(o),
            (function (e) {
              if (e.length <= 1) return e.slice();
              const t = [];
              for (const r of e) {
                for (; t.length >= 2; ) {
                  const e = t[t.length - 1],
                    n = t[t.length - 2];
                  if ((e.x - n.x) * (r.y - n.y) < (e.y - n.y) * (r.x - n.x))
                    break;
                  t.pop();
                }
                t.push(r);
              }
              t.pop();
              const n = [];
              for (let r = e.length - 1; r >= 0; r--) {
                const t = e[r];
                for (; n.length >= 2; ) {
                  const e = n[n.length - 1],
                    r = n[n.length - 2];
                  if ((e.x - r.x) * (t.y - r.y) < (e.y - r.y) * (t.x - r.x))
                    break;
                  n.pop();
                }
                n.push(t);
              }
              return (
                n.pop(),
                1 === t.length && 1 === n.length && i.default.isEqual(t, n)
                  ? t
                  : t.concat(n)
              );
            })(t)
          );
        });
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r };
      function o(e, t) {
        return e.x < t.x
          ? -1
          : e.x > t.x
          ? 1
          : e.y < t.y
          ? -1
          : e.y > t.y
          ? 1
          : 0;
      }
    },
    74909: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.getEuler = p),
        (t.getToCuboidTransformationMatrix = g),
        (t.getEdgeVectors = m),
        (t.getHeadingVector = function (e) {
          const t = p(e);
          return new i.Vector3(0, 1, 0).applyEuler(t);
        }),
        (t.containingPoints = y),
        (t.cuboidsOverlap = function (e, t) {
          return (
            y(e.cuboidProps, b(t.cuboidProps)).length > 0 ||
            y(t.cuboidProps, b(e.cuboidProps)).length > 0
          );
        }),
        (t.getCorners = b),
        (t.getEdges = v),
        (t.getVisibleCameras = function (e, t) {
          const n = e.map((e, t) => ({ camIndex: t, camera: e }));
          return t
            ? n.filter(({ camera: e }) => {
                const n = e.projectFn
                  ? e.projectFn.bind(e)
                  : l.getProjectionFunction(e);
                return b(t).some((e) => n?.(e).visible);
              })
            : n;
        }),
        (t.getProjectedConvexHullOnCamera = function (e, t) {
          let n = t.projectFn;
          n || (n = l.getProjectionFunction(t));
          const r = b(e),
            i = [];
          let o = !0;
          for (const a of r) {
            const {
              preDistortPosition: e,
              distortPosition: r,
              distortGood: s,
              visible: u,
            } = n(a);
            u && (o = !1);
            const c = s ? r : e;
            (c.x = Math.max(0, c.x)),
              (c.x = Math.min(t.imageWidth * (t.scale_factor || 1), c.x)),
              (c.y = Math.max(0, c.y)),
              (c.y = Math.min(t.imageHeight * (t.scale_factor || 1), c.y)),
              i.push(c);
          }
          if (o) return [];
          return f.default(i);
        }),
        (t.transformPoint = function (e, t) {
          const { xVector3: n, yVector3: r } = m(e),
            o = s.parseVector3(t);
          o.sub(s.parseVector3(e.position));
          const a = n.dot(o),
            u = r.dot(o),
            c = o.z;
          return new i.Vector3(a, u, c);
        }),
        (t.naiveDistance = function (e, t) {
          const n = s.parseVector3(e),
            r = s.parseVector3(t);
          return s.vsub(n, r).length();
        }),
        (t.cuboidVolume = _),
        (t.cuboidsIOU = function (e, t, n = 5) {
          return r.default.round(
            u.computeIOU(
              e.position,
              e.dimensions,
              e.yaw,
              t.position,
              t.dimensions,
              t.yaw
            ),
            n
          );
        }),
        (t.cuboidsIOV = function (e, t, n = 5) {
          const i = Math.max(
              0,
              Math.min(
                u.zBounds(e.position, e.dimensions).hi,
                u.zBounds(t.position, t.dimensions).hi
              ) -
                Math.max(
                  u.zBounds(e.position, e.dimensions).lo,
                  u.zBounds(t.position, t.dimensions).lo
                )
            ),
            o = u.getIntersectionPolygonArea(
              e.position,
              e.dimensions,
              e.yaw,
              t.position,
              t.dimensions,
              t.yaw
            ),
            a = Math.max(_(e), 1e-5);
          return r.default.round((i * o) / a, n);
        }),
        (t.cuboidsIntersect = function (e, t) {
          return (
            u.computeIOU(
              e.position,
              e.dimensions,
              e.yaw,
              t.position,
              t.dimensions,
              t.yaw
            ) > 0
          );
        }),
        (t.cuboidContainsCuboid = function (e, t) {
          const n = b(t);
          return y(e, n).length === n.length;
        }),
        (t.cuboidContainsPoint = function (e, t) {
          const n = b(e);
          return (
            n.some((e) => e.x >= t.x) &&
            n.some((e) => e.x <= t.x) &&
            n.some((e) => e.y >= t.y) &&
            n.some((e) => e.y <= t.y) &&
            n.some((e) => e.z >= t.z) &&
            n.some((e) => e.z <= t.z)
          );
        }),
        (t.cuboidAABB = x),
        (t.cuboidsPoints = function (
          e,
          t,
          n,
          r,
          a = 0,
          s = 0,
          u = 0,
          c = !1,
          l = 1.33
        ) {
          const f = {},
            d = {},
            h = {},
            p = [],
            m = [],
            y = [],
            b = {};
          e.forEach((e) => {
            e &&
              e.id &&
              (c && ((f[e.id] = []), n && (d[e.id] = []), r && (h[e.id] = [])),
              (b[e.id] = g(e)));
          });
          const v = e.map((e) => {
              const t = Math.min(e.extrapolatedFrameDist || 0, 5);
              return x(e, a + t * l, s + t * l, u + t * l);
            }),
            _ = new o.RBush3D(8);
          _.load(v);
          const T = new i.Vector3(),
            M = new i.Vector3(),
            w = { minX: 0, maxX: 0, minY: 0, maxY: 0, minZ: 0, maxZ: 0 };
          function A({ cuboid: e }) {
            if (!e || !e.id) return !0;
            const t = b[e.id];
            M.set(T.x - e.position.x, T.y - e.position.y, T.z - e.position.z),
              M.applyMatrix3(t);
            const n = Math.abs(M.x),
              r = Math.abs(M.y),
              i = Math.abs(M.z),
              o = Math.min(e.extrapolatedFrameDist || 0, 5),
              c = a + o * l,
              f = s + o * l,
              d = u + o * l,
              h = -c / 2,
              p = -f / 2,
              g = -d / 2,
              m = 0.5 * e.dimensions.x + c / 2,
              y = 0.5 * e.dimensions.y + f / 2,
              v = 0.5 * e.dimensions.z + d / 2;
            return n < h || n > m || r < p || r > y || i < g || i > v;
          }
          for (let i = 0; i < t.length; i += 3) {
            (w.minX = w.maxX = t[i]),
              (w.minY = w.maxY = t[i + 1]),
              (w.minZ = w.maxZ = t[i + 2]);
            const e = _.search(w);
            e.length &&
              (T.set(t[i], t[i + 1], t[i + 2]),
              e.forEach((e) => {
                if (A(e)) return;
                const t = e.cuboid.id;
                c
                  ? (f[t].push(T.x, T.y, T.z), n && d[t].push(n[i / 3]))
                  : (p.push(T.x, T.y, T.z), n && m.push(n[i / 3]));
              }));
          }
          for (const i of r ?? []) {
            (w.minX = w.maxX = i.position.x),
              (w.minY = w.maxY = i.position.y),
              (w.minZ = w.maxZ = i.position.z);
            const e = _.search(w);
            e.length &&
              (T.set(i.position.x, i.position.y, i.position.z),
              e.forEach((e) => {
                A(e) || (c ? h[e.cuboid.id].push(i) : y.push(i));
              }));
          }
          if (c) {
            const e = {};
            for (const t in f)
              e[t] = {
                points: new Float32Array(f[t]),
                intensities: n ? new Float32Array(d[t]) : null,
                radar_points: r ? h[t] : null,
              };
            return e;
          }
          return {
            points: new Float32Array(p),
            intensities: n ? new Float32Array(m) : null,
            radar_points: r ? y : null,
          };
        }),
        (t.cuboidsHavePointsInPadding = function (e, t, n) {
          const r = {},
            a = {},
            s = new Set(e.map((e) => e.id)),
            u = {};
          e.forEach((e) => {
            e &&
              e.id &&
              (e.id in r || ((r[e.id] = !1), (a[e.id] = 0)), (u[e.id] = g(e)));
          });
          const c = e.map((e) => x(e)),
            l = new o.RBush3D(8);
          l.load(c);
          const f = new i.Vector3(),
            d = new i.Vector3(),
            h = { minX: 0, maxX: 0, minY: 0, maxY: 0, minZ: 0, maxZ: 0 };
          for (let i = 0; i < t.length && 0 !== s.size; i += 3) {
            (h.minX = h.maxX = t[i]),
              (h.minY = h.maxY = t[i + 1]),
              (h.minZ = h.maxZ = t[i + 2]);
            const e = l.search(h);
            e.length &&
              (f.set(t[i], t[i + 1], t[i + 2]),
              e.forEach((e) => {
                const t = e.cuboid;
                if (!t || !t.id || !s.has(t.id)) return;
                const i = u[t.id];
                d.set(
                  f.x - t.position.x,
                  f.y - t.position.y,
                  f.z - t.position.z
                ),
                  d.applyMatrix3(i);
                const o = Math.abs(d.x),
                  c = Math.abs(d.y),
                  l = Math.abs(d.z),
                  h = 0.5 * t.dimensions.x,
                  p = 0.5 * t.dimensions.y,
                  g = 0.5 * t.dimensions.z;
                return (o < 0 && o > h) || (c < 0 && c > p) || (l < 0 && l > g)
                  ? void 0
                  : o >= h - n || c >= p - n || l >= g - n
                  ? (s.delete(t.id), (r[t.id] = !0))
                  : void a[t.id]++;
              }));
          }
          return { pointsInPaddingById: r, pointCounts: a };
        }),
        (t.cuboidInsidePolygon2D = function (e, t) {
          const n = b(e);
          return r.default.some(n, (e) => T(e.x, e.y, t));
        }),
        (t.insidePolygon = T),
        (t.polygonContainsPolygon = function (e, t) {
          for (const n of t) if (!T(n.x, n.y, e)) return !1;
          return !0;
        }),
        (t.extendCuboid = M),
        (t.transformPointsToCuboid = function (e, t) {
          const n = new Float32Array(t.length),
            r = [e.position.x, e.position.y, e.position.z],
            i = [
              [Math.cos(e.yaw), -Math.sin(e.yaw), 0],
              [Math.sin(e.yaw), Math.cos(e.yaw), 0],
              [0, 0, 1],
            ];
          for (let o = 0; o < t.length / 3; o++)
            for (let e = 0; e < 3; e++) {
              n[3 * o + e] = 0;
              for (let a = 0; a < 3; a++)
                n[3 * o + e] += (t[3 * o + a] - r[a]) * i[a][e];
            }
          return n;
        }),
        (t.getCuboidMatrix4 = function (e) {
          const { x: t, y: n, z: r } = e.position,
            o = new i.Matrix4().makeRotationFromEuler(p(e));
          return new i.Matrix4().makeTranslation(t, n, r).multiply(o);
        }),
        (t.applyMatrix4Transform = function (e, t) {
          const n = new i.Vector3(),
            r = new i.Quaternion(),
            o = new i.Vector3();
          t.decompose(n, r, o);
          const a = new i.Euler().setFromQuaternion(r, h);
          (e.position = { x: n.x, y: n.y, z: n.z }),
            (e.pitch = -a.x),
            (e.roll = a.y),
            (e.yaw = a.z);
        }),
        (t.matchCloseCuboids = function (e, t, n = 0.2, i = 0.9) {
          const o = {};
          t.forEach((e) => (o[e.id] = e));
          const s = {};
          e.forEach((e) => {
            e.id in o && delete o[e.id];
          }),
            e.forEach((e) => {
              for (const t in o) {
                const r = o[t];
                if (a.distance3D(r.position, e.position) > n) return;
                const c = u.computeIOU(
                  e.position,
                  e.dimensions,
                  e.yaw,
                  r.position,
                  r.dimensions,
                  r.yaw
                );
                c > i &&
                  (!(e.id in s) || s[e.id].iou < c) &&
                  (s[e.id] = { iou: c, cuboid: r });
              }
            });
          for (const r in s) {
            const e = s[r].cuboid;
            s[e.id] = { cuboid: e, iou: 0 };
          }
          return r.default.values(s).map((e) => e.cuboid.id);
        }),
        (t.getCuboidHalves = function (e) {
          const { xVector3: t, yVector3: n } = m(e);
          t.multiplyScalar(e.dimensions.x / 4),
            n.multiplyScalar(e.dimensions.y / 4);
          const i = r.default.cloneDeep(e);
          w(i.position, t), (i.dimensions.x /= 2);
          const o = r.default.cloneDeep(e);
          A(o.position, t), (o.dimensions.x /= 2);
          const a = r.default.cloneDeep(e);
          w(a.position, n), (a.dimensions.y /= 2);
          const s = r.default.cloneDeep(e);
          return (
            A(s.position, n),
            (s.dimensions.y /= 2),
            { left: i, right: o, front: s, back: a }
          );
        }),
        (t.createSimpleCuboidClone = function (e) {
          return {
            dimensions: {
              x: e.dimensions.x,
              y: e.dimensions.y,
              z: e.dimensions.z,
            },
            position: { x: e.position.x, y: e.position.y, z: e.position.z },
            yaw: e.yaw,
            pitch: e.pitch,
            roll: e.roll,
            id: e.id,
            label: e.label,
          };
        }),
        (t.cuboidToPlane = function (e) {
          const t = new i.BoxGeometry(
              e.dimensions.x,
              e.dimensions.y,
              e.dimensions.z
            ),
            n = new i.Object3D();
          n.position.set(e.position.x, e.position.y, e.position.z),
            n.rotateZ(e.yaw),
            n.updateMatrixWorld();
          return [
            t.vertices[7],
            t.vertices[2],
            t.vertices[1],
            t.vertices[4],
          ].map((e) => n.localToWorld(e));
        }),
        (t.combineCuboids = k),
        (t.filterAreaByCuboidPaths = function (
          e,
          t,
          n,
          r,
          i,
          o = 0,
          a = 0,
          s = 0
        ) {
          const u = M(k(e), o, a, s),
            l = c.IndexedPointCloud.fromPointCloud(
              new c.PointCloud({ xyz: t, intensities: n })
            ),
            f = c.IndexedPointCloud.fromPointCloud(
              new c.PointCloud({ xyz: E(r) })
            ),
            d = c.IndexedPointCloud.fromPointCloud(
              new c.PointCloud({ xyz: i || new Float32Array() })
            ),
            h = l.getIndexByCuboid(u),
            p = f.getIndexByCuboid(u),
            g = d.filterByCuboid(u),
            m = l.applyIndex(h),
            y = [];
          if (r) for (let c = 0; c < p.length; c++) y.push(r[p[c]]);
          return {
            pointSubset: {
              points: m.xyz,
              intensities: m.intensities,
              groundPoints: g.xyz,
              radar_points: r ? y : null,
            },
            pointIndices: h,
          };
        }),
        (t.getCuboidName = function (e, t, n = !1) {
          if (!e || !t) return;
          return (
            (n ? r.default.truncate(e, { length: 17 }) : e) +
            " " +
            r.default.split(t, "#")[0].slice(-4)
          );
        }),
        (t.minDistanceLines3D = P),
        (t.minDistanceCuboids = function (e, t) {
          const n = v(e),
            r = v(t);
          let i = Number.MAX_VALUE;
          return (
            n.forEach((e) => {
              r.forEach((t) => {
                const n = P(e[0], e[1], t[0], t[1]);
                i = n < i ? n : i;
              });
            }),
            i
          );
        }),
        (t.notEmpty = C),
        (t.getCheckpoints = L),
        (t.getCuboidEdges = function (e, t, n, i = 20, o) {
          let a = b(t);
          const u = s.parseVector3(e.position),
            c = a.map((e) => s.parseVector3(e).distanceTo(u)),
            l = r.default.indexOf(c, r.default.max(c));
          a = r.default.range(8).map((e) => a[7 ^ e ^ l]);
          const f = [];
          return (
            [
              {
                isDashed: !1,
                edgePaths: [
                  [0, 1, 3, 2],
                  [1, 5, 4, 0, 2, 6, 4],
                ],
              },
              {
                isDashed: !0,
                edgePaths: [
                  [5, 7, 3],
                  [7, 6],
                ],
              },
            ].forEach(({ isDashed: e, edgePaths: t }) => {
              t.forEach((t) => {
                const r = [];
                for (let e = 0; e + 1 < t.length; e += 1) {
                  const u = L(a[t[e]], a[t[e + 1]], i);
                  try {
                    r.push(...u.map(n).filter(C));
                  } catch (s) {
                    o?.(s);
                  }
                }
                f.push({ points: r, isDashed: e });
              });
            }),
            f
          );
        }),
        (t.getFaceCenters = t.DEFAULT_SEGMENT_COUNT = t.EULER_ORDER = void 0);
      var r = d(n(298784)),
        i = (function (e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (null != e)
            for (var n in e)
              if (Object.prototype.hasOwnProperty.call(e, n)) {
                var r =
                  Object.defineProperty && Object.getOwnPropertyDescriptor
                    ? Object.getOwnPropertyDescriptor(e, n)
                    : {};
                r.get || r.set ? Object.defineProperty(t, n, r) : (t[n] = e[n]);
              }
          return (t.default = e), t;
        })(n(814412)),
        o = n(527352),
        a = n(141862),
        s = n(108040),
        u = n(39083),
        c = n(152122),
        l = n(320716),
        f = d(n(490063));
      function d(e) {
        return e && e.__esModule ? e : { default: e };
      }
      const h = "ZYX";
      t.EULER_ORDER = h;
      function p(e) {
        return new i.Euler(e.pitch ? -e.pitch : 0, e.roll || 0, e.yaw, h);
      }
      function g(e) {
        const t = new i.Quaternion().setFromEuler(p(e)).invert(),
          n = new i.Matrix4().makeRotationFromQuaternion(t);
        return new i.Matrix3().getNormalMatrix(n);
      }
      function m(e) {
        const t = p(e);
        return {
          xVector3: new i.Vector3(1, 0, 0).applyEuler(t),
          yVector3: new i.Vector3(0, 1, 0).applyEuler(t),
          zVector3: new i.Vector3(0, 0, 1).applyEuler(t),
        };
      }
      function y(e, t, n, o = !1) {
        return e.pitch || e.roll
          ? (function (e, t, n, o = !0) {
              const a = g(e),
                s = new i.Vector3(e.position.x, e.position.y, e.position.z),
                u = e.dimensions.x / 2 + r.default.get(n, "x", 0),
                c = e.dimensions.y / 2 + r.default.get(n, "y", 0),
                l = e.dimensions.z / 2 + r.default.get(n, "z", 0),
                f = u ** 2 + c ** 2 + l ** 2;
              return t.filter((e) => {
                if (s.distanceToSquared(e) > f) return !1;
                const t = e.clone().sub(s).applyMatrix3(a);
                return o
                  ? Math.abs(t.x) <= u &&
                      Math.abs(t.y) <= c &&
                      Math.abs(t.z) <= l
                  : Math.abs(t.x) < u && Math.abs(t.y) < c && Math.abs(t.z) < l;
              });
            })(e, t, n, o)
          : (function (e, t, n, o = !1) {
              const a = e.dimensions.x / 2 + r.default.get(n, "x", 0),
                s = e.dimensions.y / 2 + r.default.get(n, "y", 0),
                u = e.dimensions.z / 2 + r.default.get(n, "z", 0),
                { xVector3: c, yVector3: l } = m(e),
                f = new i.Vector3(e.position.x, e.position.y, e.position.z);
              return t.filter((e) => {
                const t = e.clone().sub(f),
                  n = Math.abs(c.dot(t)),
                  r = Math.abs(l.dot(t)),
                  i = Math.abs(t.z);
                return o ? r <= s && n <= a && i <= u : r < s && n < a && i < u;
              });
            })(e, t, n, o);
      }
      function b(e) {
        const t = s.parseVector3(e.position),
          { xVector3: n, yVector3: r, zVector3: i } = m(e),
          o = n.multiplyScalar(e.dimensions.x / 2),
          a = r.multiplyScalar(e.dimensions.y / 2),
          u = i.multiplyScalar(e.dimensions.z / 2),
          c = t.clone(),
          l = t.clone(),
          f = t.clone(),
          d = t.clone(),
          h = t.clone(),
          p = t.clone(),
          g = t.clone(),
          y = t.clone();
        return (
          c.add(o).add(a).add(u),
          l.sub(o).add(a).add(u),
          f.add(o).sub(a).add(u),
          d.sub(o).sub(a).add(u),
          h.add(o).add(a).sub(u),
          p.sub(o).add(a).sub(u),
          g.add(o).sub(a).sub(u),
          y.sub(o).sub(a).sub(u),
          [c, l, f, d, h, p, g, y]
        );
      }
      function v(e) {
        const t = b(e);
        return [
          [t[0], t[1]],
          [t[1], t[3]],
          [t[3], t[2]],
          [t[2], t[0]],
          [t[4], t[5]],
          [t[5], t[7]],
          [t[7], t[6]],
          [t[6], t[4]],
          [t[0], t[4]],
          [t[1], t[5]],
          [t[3], t[7]],
          [t[2], t[6]],
        ];
      }
      t.DEFAULT_SEGMENT_COUNT = 20;
      function _(e) {
        return e.dimensions.x * e.dimensions.y * e.dimensions.z;
      }
      function x(e, t = 0, n = 0, r = 0) {
        const o = t + e.dimensions.x / 2,
          a = n + e.dimensions.y / 2,
          s = r + e.dimensions.z / 2,
          u = -(2 * t + e.dimensions.x) / 2,
          c = -(2 * n + e.dimensions.y) / 2,
          l = -(2 * r + e.dimensions.z) / 2,
          f = [
            u,
            c,
            l,
            u,
            c,
            s,
            u,
            a,
            l,
            u,
            a,
            s,
            o,
            c,
            l,
            o,
            c,
            s,
            o,
            a,
            l,
            o,
            a,
            s,
          ],
          d = new i.Vector3();
        let h = Number.POSITIVE_INFINITY,
          g = Number.POSITIVE_INFINITY,
          m = Number.POSITIVE_INFINITY,
          y = Number.NEGATIVE_INFINITY,
          b = Number.NEGATIVE_INFINITY,
          v = Number.NEGATIVE_INFINITY;
        const _ = p(e),
          x = new i.Quaternion();
        x.setFromEuler(_);
        for (let i = 0; i < f.length; i += 3)
          d.set(f[i], f[i + 1], f[i + 2]),
            d.applyQuaternion(x),
            (h = Math.min(d.x, h)),
            (g = Math.min(d.y, g)),
            (m = Math.min(d.z, m)),
            (y = Math.max(d.x, y)),
            (b = Math.max(d.y, b)),
            (v = Math.max(d.z, v));
        (h += e.position.x),
          (y += e.position.x),
          (g += e.position.y),
          (b += e.position.y),
          (m += e.position.z),
          (v += e.position.z);
        return {
          cuboid: e,
          minX: h,
          minY: g,
          minZ: m,
          maxX: y,
          maxY: b,
          maxZ: v,
        };
      }
      function T(e, t, n) {
        let r = !1;
        for (let i = 0, o = n.length - 1; i < n.length; o = i++) {
          const a = n[i].x,
            s = n[i].y,
            u = n[o].x,
            c = n[o].y;
          s > t !== c > t && e < ((u - a) * (t - s)) / (c - s) + a && (r = !r);
        }
        return r;
      }
      function M(e, t, n, r) {
        return {
          ...e,
          dimensions: {
            x: e.dimensions.x + t,
            y: e.dimensions.y + n,
            z: e.dimensions.z + r,
          },
        };
      }
      t.getFaceCenters = (e) => {
        const t = s.parseVector3(e.position),
          { xVector3: n, yVector3: r, zVector3: i } = m(e),
          o = n.multiplyScalar(e.dimensions.x / 2),
          a = r.multiplyScalar(e.dimensions.y / 2),
          u = i.multiplyScalar(e.dimensions.z / 2);
        return [
          t.clone().add(o),
          t.clone().sub(o),
          t.clone().add(a),
          t.clone().sub(a),
          t.clone().add(u),
          t.clone().sub(u),
        ];
      };
      const w = function (e, t) {
          (e.x += t.x), (e.y += t.y), (e.z += t.z);
        },
        A = function (e, t) {
          (e.x -= t.x), (e.y -= t.y), (e.z -= t.z);
        };
      function k(e) {
        const t = new i.Box3();
        for (const i of e) {
          const e = b(i);
          for (let n = 0; n < e.length; n++) t.expandByPoint(e[n]);
        }
        const n = t.getCenter(new i.Vector3()),
          r = t.getSize(new i.Vector3());
        return {
          ...e[0],
          yaw: 0,
          position: { x: n.x, y: n.y, z: n.z },
          dimensions: { x: r.x, y: r.y, z: r.z },
        };
      }
      function E(e) {
        if (!e) return new Float32Array();
        const t = new Float32Array(3 * e.length);
        for (let n = 0; n < e.length; n++)
          (t[3 * n + 0] = e[n].position.x),
            (t[3 * n + 1] = e[n].position.y),
            (t[3 * n + 2] = e[n].position.z);
        return t;
      }
      function P(e, t, n, r) {
        const o = new i.Vector3().subVectors(t, e),
          a = new i.Vector3().subVectors(r, n),
          s = new i.Vector3().subVectors(e, n),
          u = o.dot(o),
          c = o.dot(a),
          l = a.dot(a),
          f = o.dot(s),
          d = a.dot(s);
        let h, p, g, m;
        const y = u * l - c * c;
        (h = y),
          (p = y),
          y < Number.EPSILON
            ? ((g = 0), (h = 1), (m = d), (p = l))
            : ((g = c * d - l * f),
              (m = u * d - c * f),
              g < 0
                ? ((g = 0), (m = d), (p = l))
                : g > h && ((g = h), (m = d + c), (p = l))),
          m < 0
            ? ((m = 0),
              -f < 0 ? (g = 0) : -f > u ? (g = h) : ((g = -f), (h = u)))
            : m > p &&
              ((m = p),
              -f + c < 0
                ? (g = 0)
                : -f + c > u
                ? (g = h)
                : ((g = -f + c), (h = u)));
        const b = Math.abs(g) < Number.EPSILON ? 0 : g / h,
          v = Math.abs(m) < Number.EPSILON ? 0 : m / p,
          _ = new i.Vector3().copy(o).multiplyScalar(b),
          x = new i.Vector3().copy(a).multiplyScalar(v);
        return new i.Vector3().copy(s).add(_).sub(x).length();
      }
      function C(e) {
        return null !== e && void 0 !== e;
      }
      function L(e, t, n = 20) {
        return r.default.range(n + 1).map((r) => e.clone().lerp(t, r / n));
      }
    },
    39083: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.computeAngleDiff = u),
        (t.computeIOU = h),
        (t.computeGroupIOU = p),
        (t.build2DPolygonFor = g),
        (t.getIntersectionPolygonArea = m),
        (t.mistakeProperties =
          t.mistakeCategory =
          t.zBounds =
          t.xyzToPoint3D =
            void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(593539),
        a = n(74909);
      const s = Math.PI;
      function u(e, t) {
        let n = e - t;
        return (n -= 2 * s * Math.round(n / (2 * s))), n;
      }
      const c = new o.geom.GeometryFactory(),
        l = ({ x: e, y: t, z: n }) =>
          Math.max(e, 0) * Math.max(t, 0) * Math.max(n, 0);
      t.xyzToPoint3D = (e) => ({ x: e[0], y: e[1], z: e[2] });
      const f = ({ z: e }, { z: t }) => ({
        lo: e - Math.max(t, 0) / 2,
        hi: e + Math.max(t, 0) / 2,
      });
      t.zBounds = f;
      const d = (e) => {
        const [t, ...n] = e.map((e) => g(e.position, e.dimensions, e.yaw));
        let r = t;
        for (const i of n) r = r.union(i);
        return r;
      };
      function h(e, t, n, r, i, o) {
        const a = Math.max(
          0,
          Math.min(f(e, t).hi, f(r, i).hi) - Math.max(f(e, t).lo, f(r, i).lo)
        );
        if (0 === a) return 0;
        const s = l(t) + l(i),
          u = a * m(e, t, n, r, i, o);
        let c = s - u;
        return (c = Math.max(c, 0.001)), u / c;
      }
      function p(e, t) {
        const [n, r] = [e, t].map(d);
        return n.intersection(r).getArea() / n.union(r).getArea();
      }
      function g({ x: e, y: t }, { x: n, y: r }, i) {
        const a = [
          [(n = Math.max(n, 0)) / 2, (r = Math.max(r, 0)) / 2],
          [n / 2, -r / 2],
          [-n / 2, -r / 2],
          [-n / 2, r / 2],
          [n / 2, r / 2],
        ].map(
          ([n, r]) =>
            new o.geom.Coordinate(
              e + n * Math.cos(i) - r * Math.sin(i),
              t + r * Math.cos(i) + n * Math.sin(i)
            )
        );
        return c.createPolygon(c.createLinearRing(a), []);
      }
      function m(e, t, n, r, i, o) {
        return g(e, t, n).intersection(g(r, i, o)).getArea();
      }
      const y = Object.freeze({
        BAD_SIZE: "badSize",
        BAD_POSITION: "badPosition",
        BAD_HEADING: "badHeading",
        BAD_HEADING_25DEG: "badHeading25Deg",
        BAD_HEADING_45DEG: "badHeading45Deg",
        STRICT_BAD_HEADING: "strictBadHeading",
        DEFINITELY_BAD_HEADING: "definitelyBadHeading",
        MISSING: "missing",
        EXTRANEOUS: "extraneous",
        STATIONARY: "stationary",
        MISLABELED: "mislabeled",
        BAD_ATTRIBUTES: "badAttributes",
        BAD_ATTRIBUTES_WEAK: "badAttributesWeak",
        BAD_Z: "badZ",
        DEFINITELY_BAD_Z: "definitelyBadZ",
        WEAK_BAD_Z: "weakBadZ",
        STRICT_BAD_POSITION: "strictBadPosition",
        STRICT_BAD_SIZE: "strictBadSize",
        STRICT_BAD_Z: "strictBadZ",
        FACE_POSITION: "facePosition",
        FACE_POSITION_OUTWARDS: "facePositionOutwards",
        BAD_IOU: "badIOU",
        WEAK_BAD_IOU: "weakBadIOU",
        FACE_PARAMETRIZED: "faceParametrized",
        ATTR_PARAMETRIZED: "attrParametrized",
        POSITION_RANGE: "positionRange",
        FACE_RANGE: "faceRange",
        BAD_GROUP_IOU: "badGroupIOU",
      });
      t.mistakeCategory = y;
      const b =
          (e, t = {}, n = !1) =>
          (r, o) => {
            const a = i.default.keys(o.frames);
            if (n) {
              const n = {};
              i.default.map(a, (a) => {
                const s = r.frames[a],
                  u = o.frames[a],
                  c = e(s, u, t, a);
                i.default.map(c, (e, t) => {
                  (n[t] = n[t] || []), e && n[t].push(a);
                });
              });
              return i.default.map(n, (e, t) => ({
                isIncorrect: e.length > 0,
                frames: e,
                errorType: t,
              }));
            }
            {
              const n = i.default.compact(
                i.default.map(a, (n) => {
                  const i = r.frames[n],
                    a = o.frames[n];
                  return e(i, a, t, n) ? n : void 0;
                })
              );
              return [{ isIncorrect: n.length > 0, frames: n }];
            }
          },
        v = (e, t, { threshold: n }) =>
          !e || a.naiveDistance(e.dimensions, t.dimensions) > n,
        _ = (e, t, { threshold: n }) =>
          !e || a.naiveDistance(e.position, t.position) > n,
        x = (e, t, { perFramePositionRanges: n, sizeRange: r }, i) => {
          const o = (e, t, n) =>
              e > Math.max(t, n) + 0.01 || Math.min(t, n) > e + 0.01,
            a = (e, t, n) =>
              e &&
              (o(e.x, t[0], n[0]) || o(e.y, t[1], n[1]) || o(e.z, t[2], n[2]));
          if (n[i]) {
            const { r1: t, r2: r } = n[i];
            if (a(e && e.position, t, r)) return !0;
          }
          if (r) {
            const { r1: t, r2: n } = r;
            return a(e && e.dimensions, t, n);
          }
          return !1;
        },
        T = (e, t, { perFrameFaceRanges: n, faceRanges: r }, o) => {
          if (!e) return !0;
          const s = i.default.get(n, o) || r;
          if (!s) return !1;
          const { r1: u, r2: c } = s,
            l = a.getFaceCenters({ ...u, yaw: 0 }),
            f = a.getFaceCenters({ ...c, yaw: 0 }),
            d = a.getFaceCenters({ ...e, yaw: 0 }),
            h = i.default.zipWith(
              d,
              l,
              f,
              ["x", "x", "y", "y", "z", "z"],
              (e, t, n, r) => {
                return (
                  (i = e[r]),
                  (o = t[r]),
                  (a = n[r]),
                  i > Math.max(o, a) + 0.02 || Math.min(o, a) > i + 0.02
                );
                var i, o, a;
              }
            );
          return i.default.some(h);
        },
        M = (e, t, { yawThreshold: n }) => {
          if (
            i.default.includes(
              ["no label zone", "no label"],
              i.default.toLower(t.label)
            )
          )
            return !1;
          const r = e ? u(e.yaw, t.yaw) : 1 / 0;
          return Math.abs(r) > n;
        },
        w = (e, t, { threshold: n }) => {
          const r = (e) => e.position.z - e.dimensions.z / 2,
            i = e ? r(e) - r(t) : 0;
          return Math.abs(i) > n;
        },
        A = (e, t, n, r) =>
          t
            ? i.default.mapValues(t.attributes, (o, a) =>
                ((
                  e,
                  t,
                  { attributeThreshold: n, perFrameAttributeRanges: r },
                  o,
                  a
                ) => {
                  if (r && r[o]) {
                    const t = r[o];
                    return (
                      !!e && t[a] && !i.default.includes(t[a], e.attributes[a])
                    );
                  }
                  if ("visibility" === a) {
                    const r = i.default.get(e, "attributes.visibility"),
                      o = i.default.get(t, "attributes.visibility");
                    if (r && r !== o) {
                      let e = {
                        "41%-60%": ["61%-80%"],
                        "61%-80%": ["41%-60%"],
                      };
                      n > 0 &&
                        (e = {
                          "21%-40%": ["41%-60%"],
                          "41%-60%": ["21%-40%", "61%-80%"],
                          "61%-80%": ["41%-60%", "81%-100%"],
                          "81%-100%": ["61%-80%"],
                        });
                      const t = e[r];
                      if (!t || !i.default.includes(t, o)) return !0;
                    }
                    return !1;
                  }
                  return !!e && e.attributes[a] !== t.attributes[a];
                })(e, t, n, r, a)
              )
            : {},
        k = (e, t, { threshold: n }) =>
          !e ||
          h(e.position, e.dimensions, e.yaw, t.position, t.dimensions, t.yaw) <
            n;
      const E = (
          e,
          t,
          {
            threshold: n,
            perFramePerFaceThresholds: r,
            noLabelThreshold: o = 0.3,
          },
          s
        ) => {
          if (!e) return !0;
          if (
            i.default.includes(
              ["no label zone", "no label"],
              i.default.toLower(t.label)
            )
          )
            return k(e, t, { threshold: o });
          const u = a.getFaceCenters(t),
            c = a.getFaceCenters(e);
          let l;
          if (r && r[s]) {
            const e = r[s];
            l = i.default.zipWith(c, u, e, (e, t, n) => e.distanceTo(t) > n);
          } else l = i.default.zipWith(c, u, (e, t) => e.distanceTo(t) > n);
          return i.default.some(l);
        },
        P = {
          [y.BAD_SIZE]: {
            title: "Incorrect size",
            grader: b(v, { threshold: 0.6 }),
            maxPerFrameWeight: 1,
          },
          [y.BAD_POSITION]: {
            title: "Incorrect position",
            grader: b(_, { threshold: 0.6 }),
            maxPerFrameWeight: 1,
          },
          [y.STRICT_BAD_HEADING]: {
            title: "Incorrect heading (2 deg, really strict)",
            description:
              "Accepts headings within 2 degrees. So if the correct answer is 100, the grader would \naccept answers between 98 degrees and 102 degrees. This is really strict.",
            grader: b(M, { yawThreshold: 0.04 }),
            maxPerFrameWeight: 1,
          },
          [y.DEFINITELY_BAD_HEADING]: {
            title: "Incorrect heading (5 deg, pretty strict)",
            description:
              "Accepts headings within 5 degrees. So if the correct answer is 100, the grader would \naccept answers between 95 degrees and 105 degrees.",
            grader: b(M, { yawThreshold: 0.09 }),
            maxPerFrameWeight: 1,
          },
          [y.BAD_HEADING]: {
            title: "Incorrect heading (10 deg)",
            description:
              "Accepts headings within 10 degrees (this is pretty strict). So if the correct answer is 100, the \ngrader would accept answers between 75 degrees and 125 degrees",
            grader: b(M, { yawThreshold: 0.17 }),
            maxPerFrameWeight: 1,
          },
          [y.BAD_HEADING_25DEG]: {
            title: "Incorrect heading (25 deg)",
            description:
              "Accepts headings within 25 degrees. So if the correct answer is 100, the grader would accept answers \nbetween 75 degrees and 125 degrees",
            grader: b(M, { yawThreshold: 0.44 }),
            maxPerFrameWeight: 1,
          },
          [y.BAD_HEADING_45DEG]: {
            title: "Incorrect heading (45 deg)",
            description:
              "Accepts headings within 45 degrees. So if the correct answer is 100, the grader would accept answers \nbetween 55 degrees and 145 degrees. Good for pedestrians, esp when pedestrians are blurry.",
            grader: b(M, { yawThreshold: 0.78 }),
            maxPerFrameWeight: 1,
          },
          [y.BAD_Z]: {
            title: "Incorrect Z-index",
            grader: b(w, { threshold: 0.03 }),
            maxPerFrameWeight: 1,
          },
          [y.BAD_ATTRIBUTES]: {
            title: "Incorrect Attributes",
            grader: b(A, {}, !0),
            maxPerFrameWeight: 1,
          },
          [y.BAD_ATTRIBUTES_WEAK]: {
            title: "Incorrect Attributes (relaxed)",
            grader: b(A, { attributeThreshold: 1 }, !0),
            maxPerFrameWeight: 1,
          },
          [y.STATIONARY]: {
            title: "Stationary",
            grader: (e, t) => [{ isIncorrect: e.stationary !== t.stationary }],
            maxPerFrameWeight: 0,
          },
          [y.MISLABELED]: {
            title: "Incorrect label",
            grader: (e, t) => [{ isIncorrect: e.label !== t.label }],
            maxPerFrameWeight: 0,
          },
          [y.STRICT_BAD_SIZE]: {
            title: "Incorrect size (strict)",
            grader: b(v, { threshold: 0.3 }),
            maxPerFrameWeight: 1,
          },
          [y.STRICT_BAD_POSITION]: {
            title: "Incorrect position (strict)",
            grader: b(_, { threshold: 0.3 }),
            maxPerFrameWeight: 1,
          },
          [y.WEAK_BAD_Z]: {
            title: "Incorrect Z-index (relaxed)",
            grader: b(w, { threshold: 0.2 }),
            maxPerFrameWeight: 1,
          },
          [y.STRICT_BAD_Z]: {
            title: "Incorrect Z-index (strict)",
            grader: b(w, { threshold: 0.035 }),
            maxPerFrameWeight: 1,
          },
          [y.MISSING]: { title: "Missing cuboid", maxPerFrameWeight: 0 },
          [y.EXTRANEOUS]: {
            title: "Cuboid should have been deleted",
            maxPerFrameWeight: 1,
          },
          [y.DEFINITELY_BAD_Z]: {
            title: "Incorrect Z-index (very wrong)",
            grader: b(w, { threshold: 0.05 }),
            maxPerFrameWeight: 1,
          },
          [y.FACE_POSITION]: {
            title: "Incorrect cuboid (position or size)",
            description:
              "Use this grader to grade the tasker's cuboid by checking the center positions of each face. \nThis grader will consider tasker correct if each of the faces in the tasker's cuboid is\nwithin 0.2m of the corresponding face of the cuboid in the answer key.",
            grader: b(E, { threshold: 0.2 }),
            maxPerFrameWeight: 1,
          },
          [y.FACE_POSITION_OUTWARDS]: {
            title: "Incorrect cuboid (position or size)",
            description:
              "Use this grader when the answer key cuboids are the tightest acceptable answer. \nThis grader will consider tasker correct if tasker's cuboid is no more than 0.05m smaller \nthan the answer key cuboid and no more than 0.2m larger than the answer key cuboid",
            grader: b(
              (
                e,
                t,
                {
                  innerThreshold: n,
                  outerThreshold: r,
                  perFramePerFaceInnerThresholds: o,
                  perFramePerFaceOuterThresholds: s,
                },
                u
              ) => {
                if (!e) return !0;
                i.default.includes(
                  ["no label zone", "no label"],
                  i.default.toLower(t.label)
                ) && ((n = 0.5), (r = 5));
                const c = a.getFaceCenters(t),
                  l = a.getFaceCenters(e);
                function f(e, t, n, r) {
                  return e > t + r || e < t - n;
                }
                const d = ["x", "x", "y", "y", "z", "z"],
                  h = [1, -1, 1, -1, 1, -1];
                let p;
                if (o && o[u] && s && s[u]) {
                  const e = o[u],
                    t = s[u];
                  p = i.default.zipWith(l, c, d, h, (n, r, i, o) =>
                    f(n[i] * o, r[i] * o, e, t)
                  );
                } else
                  p = i.default.zipWith(l, c, d, h, (e, t, i, o) =>
                    f(e[i] * o, t[i] * o, n, r)
                  );
                return i.default.some(p);
              },
              { outerThreshold: 0.2, innerThreshold: 0.05 }
            ),
            maxPerFrameWeight: 1,
          },
          [y.BAD_IOU]: {
            title: "Incorrect cuboid (overlap, strict)",
            description:
              "Use this grader when tasker's cuboid should overlap cuboid from answer key by at least 75%",
            grader: b(k, { threshold: 0.75 }),
            maxPerFrameWeight: 1,
          },
          [y.WEAK_BAD_IOU]: {
            title: "Incorrect cuboid (overlap, relaxed)",
            description:
              "Use this grader when tasker's cuboid should overlap cuboid from answer key by at least 50%",
            grader: b(k, { threshold: 0.5 }),
            maxPerFrameWeight: 1,
          },
          [y.FACE_PARAMETRIZED]: {
            title: "Incorrect cuboid (position or size)",
            description:
              "This is a parameterized grader - only use this if you know what you are doing.",
            grader: (e) => b(E, e),
            maxPerFrameWeight: 1,
          },
          [y.ATTR_PARAMETRIZED]: {
            title: "Incorrect attributes",
            description:
              "This is a parameterized grader - only use this if you know what you are doing.",
            grader: (e) => b(A, e, !0),
            maxPerFrameWeight: 1,
          },
          [y.POSITION_RANGE]: {
            title: "Incorrect cuboid (position)",
            description:
              "This is a parameterized grader - only use this if you know what you are doing.",
            grader: (e) => b(x, e),
            maxPerFrameWeight: 1,
          },
          [y.FACE_RANGE]: {
            title: "Incorrect cuboid (position or size)",
            description:
              "This grader will consider tasker correct if tasker's cuboid is no more \nthan 0.02 larger or smaller than the cuboid range",
            grader: (e) => b(T, e),
            maxPerFrameWeight: 1,
          },
          [y.BAD_GROUP_IOU]: {
            title: "Incorrect Cuboid Group",
            grader: (
              (e, t = {}) =>
              (n, r) => {
                const o = i.default.keys(r.cuboids[0].frames),
                  a = i.default.compact(
                    i.default.map(o, (i) => {
                      const o = n.cuboids.map((e) => e.frames[i]),
                        a = r.cuboids.map((e) => e.frames[i]);
                      return e(o, a, t) ? i : void 0;
                    })
                  );
                return [{ isIncorrect: a.length > 0, frames: a }];
              }
            )(
              function (e, t, { threshold: n }) {
                return p(e, t) < n;
              },
              { threshold: 0.5 }
            ),
            maxPerFrameWeight: 1,
          },
        };
      t.mistakeProperties = P;
    },
    894574: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.getPointKey = M),
        (t.filterDuplicateMissingAnnotations = function (e) {
          const [t, n] = o.default.partition(e, (e) =>
            o.default.every(e.props.perFrame.position, (e) => e)
          );
          return o.default.uniqBy([...t, ...n], (e) => M(e.props.static));
        }),
        (t.READ_ONLY_ACTIONS =
          t.MAX_ERROR_THRESHOLD =
          t.MEAN_ERROR_THRESHOLD =
          t.CONSENSUS_ERROR_THRESHOLDS =
          t.SKELETON_LABELS =
          t.SHOULDER_RIGHT_LABEL =
          t.SHOULDER_LEFT_LABEL =
          t.ELBOW_RIGHT_LABEL =
          t.ELBOW_LEFT_LABEL =
          t.WRIST_RIGHT_LABEL =
          t.WRIST_LEFT_LABEL =
          t.HIP_RIGHT_LABEL =
          t.HIP_LEFT_LABEL =
          t.KNEE_RIGHT_LABEL =
          t.KNEE_LEFT_LABEL =
          t.ANKLE_RIGHT_LABEL =
          t.ANKLE_LEFT_LABEL =
          t.CENTER_HEAD_LABEL =
          t.NOSE_LABEL =
          t.KeypointFailure =
            void 0);
      var r,
        i,
        o = (r = n(298784)) && r.__esModule ? r : { default: r };
      (t.KeypointFailure = i),
        (function (e) {
          (e.MissingCamera = "missing-camera"),
            (e.InvisibleCuboid = "invisible-cuboid"),
            (e.ImproperSubtasks = "improper-subtasks"),
            (e.MissingCuboid = "missing-cuboid"),
            (e.MultiCuboid = "multi-cuboid"),
            (e.GeneralError = "general-error"),
            (e.MissingPoints = "missing-points"),
            (e.FloatingCuboid = "floating-cuboid"),
            (e.UndergroundCuboid = "underground-cuboid");
        })(i || (t.KeypointFailure = i = {}));
      const a = "Nose";
      t.NOSE_LABEL = a;
      const s = "Center of Head";
      t.CENTER_HEAD_LABEL = s;
      const u = "Ankle-Left";
      t.ANKLE_LEFT_LABEL = u;
      const c = "Ankle-Right";
      t.ANKLE_RIGHT_LABEL = c;
      const l = "Knee-Left";
      t.KNEE_LEFT_LABEL = l;
      const f = "Knee-Right";
      t.KNEE_RIGHT_LABEL = f;
      const d = "Hip-Left";
      t.HIP_LEFT_LABEL = d;
      const h = "Hip-Right";
      t.HIP_RIGHT_LABEL = h;
      const p = "Wrist-Left";
      t.WRIST_LEFT_LABEL = p;
      const g = "Wrist-Right";
      t.WRIST_RIGHT_LABEL = g;
      const m = "Elbow-Left";
      t.ELBOW_LEFT_LABEL = m;
      const y = "Elbow-Right";
      t.ELBOW_RIGHT_LABEL = y;
      const b = "Shoulder-Left";
      t.SHOULDER_LEFT_LABEL = b;
      const v = "Shoulder-Right";
      t.SHOULDER_RIGHT_LABEL = v;
      const _ = [b, v, m, y, p, g, d, h, l, f, u, c, s, a];
      t.SKELETON_LABELS = _;
      const x = Object.freeze({
        [s]: 0.036,
        [a]: 0.049,
        [b]: 0.049,
        [v]: 0.049,
        [m]: 0.054,
        [y]: 0.054,
        [p]: 0.079,
        [g]: 0.079,
        [d]: 0.065,
        [h]: 0.065,
        [l]: 0.064,
        [f]: 0.064,
        [u]: 0.077,
        [c]: 0.077,
      });
      t.CONSENSUS_ERROR_THRESHOLDS = x;
      t.MEAN_ERROR_THRESHOLD = 0.04;
      t.MAX_ERROR_THRESHOLD = 0.15;
      const T = Object.freeze({
        origLabels: { _ignore: { changeParams: !1 } },
        currLabels: { _ignore: { changeParams: !1 } },
        blockCreateAndDelete: !0,
        creatable: [],
        editableAttrs: [],
        enforceWithoutOrigLabel: !0,
      });
      function M(e) {
        return `${e.label}-${e.linkedCuboidId}`;
      }
      t.READ_ONLY_ACTIONS = T;
    },
    108040: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.Axis =
          t.vec3ArraySortBy =
          t.foreachVec4Array =
          t.foreachVec3Array =
          t.mapFilterVec3Array =
          t.filterMapVec3Array =
          t.mapVec3Array =
          t.filterVec3Array =
          t.filterCountVec3Array =
          t.prettify =
          t.vsub =
          t.vadd =
          t.vectorToObject =
          t.parseVector4 =
          t.parseVector3 =
          t.parseVector2 =
            void 0);
      var r = a(n(298784)),
        i = a(n(141862)),
        o = (function (e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (null != e)
            for (var n in e)
              if (Object.prototype.hasOwnProperty.call(e, n)) {
                var r =
                  Object.defineProperty && Object.getOwnPropertyDescriptor
                    ? Object.getOwnPropertyDescriptor(e, n)
                    : {};
                r.get || r.set ? Object.defineProperty(t, n, r) : (t[n] = e[n]);
              }
          return (t.default = e), t;
        })(n(814412));
      function a(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.parseVector2 = (e) => new o.Vector2(parseFloat(e.x), parseFloat(e.y));
      t.parseVector3 = (e) =>
        new o.Vector3(parseFloat(e.x), parseFloat(e.y), parseFloat(e.z));
      t.parseVector4 = (e) =>
        new o.Vector4(
          parseFloat(e.x),
          parseFloat(e.y),
          parseFloat(e.z),
          parseFloat(e.w)
        );
      t.vectorToObject = (e) => {
        if (e.isVector4) {
          const t = e;
          return { type: "vec4", x: t.x, y: t.y, z: t.z };
        }
        if (e.isVector3) {
          const t = e;
          return { type: "vec3", x: t.x, y: t.y, z: t.z };
        }
        {
          const t = e;
          return { type: "vec2", x: t.x, y: t.y };
        }
      };
      t.vadd = (e, t) => {
        if (e.isVector2 || e.isVector3 || e.isVector4) {
          const n = e.clone();
          return n.add(t), n;
        }
        return e - t;
      };
      t.vsub = (e, t) => {
        if (e.isVector2 || e.isVector3 || e.isVector4) {
          const n = e.clone();
          return n.sub(t), n;
        }
        return e - t;
      };
      t.prettify = (e) => {
        const t = i.default.round(e.x, 4),
          n = i.default.round(e.y, 4),
          r = i.default.round(e.z, 4),
          o = i.default.round(e.w, 4);
        return e.isVector4
          ? `<${t}, ${n}, ${r}, ${o}>`
          : e.isVector3
          ? `<${t}, ${n}, ${r}>`
          : e.isVector2
          ? `<${t}, ${n}>`
          : e.toString();
      };
      t.filterCountVec3Array = (e, t, n = -1) => {
        let r = 0;
        const i = new o.Vector3();
        for (
          let o = 0;
          o < e.length && (i.fromArray(e, o), !t(i) || (r++, r !== n));
          o += 3
        );
        return r;
      };
      t.filterVec3Array = (e, t) => {
        const n = new Float32Array(e.length);
        let r = 0;
        const i = new o.Vector3();
        for (let o = 0; o < e.length; o += 3) {
          i.fromArray(e, o);
          t(i) && (i.toArray(n, r), (r += 3));
        }
        return n.slice(0, r);
      };
      t.mapVec3Array = (e, t) => {
        const n = new Float32Array(e.length),
          r = new o.Vector3();
        for (let i = 0; i < e.length; i += 3)
          r.fromArray(e, i), t(r).toArray(n, i);
        return n;
      };
      t.filterMapVec3Array = (e, t) => {
        const n = new Float32Array(e.length);
        let r = 0;
        const i = new o.Vector3();
        for (let o = 0; o < e.length; o += 3) {
          i.fromArray(e, o);
          t(i) && (i.toArray(n, r), (r += 3));
        }
        return n.slice(0, r);
      };
      t.mapFilterVec3Array = (e, t) => {
        const n = new Float32Array(e.length);
        let r = 0;
        const i = new o.Vector3();
        for (let o = 0; o < e.length; o += 3) {
          i.fromArray(e, o);
          const a = t(i);
          a && (a.toArray(n, r), (r += 3));
        }
        return n.slice(0, r);
      };
      t.foreachVec3Array = (e, t) => {
        const n = new o.Vector3();
        for (let r = 0; r < e.length; r += 3) n.fromArray(e, r), t(n, r / 3);
      };
      t.foreachVec4Array = (e, t) => {
        const n = new o.Vector4();
        for (let r = 0; r < e.length; r += 4) n.fromArray(e, r), t(n, r / 4);
      };
      var s;
      (t.vec3ArraySortBy = (e, t) => {
        const n = new Float32Array(e.length),
          i = new o.Vector3(),
          a = r.default.range(e.length / 3);
        void 0 === t && (t = [r.default.identity]),
          t instanceof Function && (t = [t]),
          (t = r.default.map(
            t,
            (t) => (n) => t(((t) => i.fromArray(e, 3 * t))(n))
          ));
        const s = r.default.sortBy(a, t);
        for (let r = 0; r < s.length; r++)
          (n[3 * r] = e[3 * s[r]]),
            (n[3 * r + 1] = e[3 * s[r] + 1]),
            (n[3 * r + 2] = e[3 * s[r] + 2]);
        return n;
      }),
        (t.Axis = s),
        (function (e) {
          (e.X = "x"), (e.Y = "y"), (e.Z = "z");
        })(s || (t.Axis = s = {}));
    },
    378970: function (e, t) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.default = function (...e) {
          return e.reduce((e, t) =>
            e.flatMap((e) => t.map((t) => [e, t].flat()))
          );
        });
    },
    490503: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.downsampleCoordsByAngle = function (e, t = 2.5) {
          if (e.length <= 2) return e;
          const n = [];
          e.slice(0, -1).forEach((t, r) => {
            const i = e[r + 1],
              o = i.x - t.x,
              a = i.y - t.y;
            n.push(Math.atan2(a, o) * (180 / Math.PI));
          });
          const r = [];
          let i = 0;
          for (; i < n.length; ) {
            const e = n[i];
            let o = 0,
              a = i + 1;
            for (; a < n.length && ((o += Math.abs(n[a] - e)), !(o >= t)); )
              r.push(a), a++;
            i = a;
          }
          return e.filter((e, t) => !r.includes(t));
        }),
        (t.extendLineSegment =
          t.projectVerticesOntoPolyline =
          t.computeDistanceToPolyline =
          t.computeFCD =
          t.projectVertexOntoLine =
          t.polylineLen =
          t.computeSegmentLength =
          t.dist =
            void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(440169),
        a = n(950382);
      const s = (e, t) =>
        Math.sqrt((e.x - t.x) * (e.x - t.x) + (e.y - t.y) * (e.y - t.y));
      t.dist = s;
      t.computeSegmentLength = ([e, t]) => s(e, t);
      t.polylineLen = (e) =>
        i.default.sum(
          i.default.range(e.length - 1).map((t) => s(e[t], e[t + 1]))
        );
      t.projectVertexOntoLine = ([e, t], n, r) => {
        a.samePoint(e, t, 0) && (t = { x: e.x + 1, y: e.y });
        const i = n.x - e.x,
          o = n.y - e.y,
          u = t.x - e.x,
          c = t.y - e.y,
          l = (i * u + o * c) / (u * u + c * c);
        if (r && (l <= r[0] || l >= r[1])) return null;
        const f = { x: e.x + l * u, y: e.y + l * c };
        return { proj: f, coeff: l, distance: s(n, f) };
      };
      t.computeFCD = (e, t) =>
        Math.sqrt(
          i.default.max([
            o.vertexSqDistanceToSegment(e[0], t),
            o.vertexSqDistanceToSegment(e[1], t),
            o.vertexSqDistanceToSegment(t[0], e),
            o.vertexSqDistanceToSegment(t[1], e),
          ])
        );
      t.computeDistanceToPolyline = (e, t) =>
        Math.sqrt(
          i.default.min(
            i.default
              .range(t.length - 1)
              .map((n) => o.vertexSqDistanceToSegment(e, [t[n], t[n + 1]]))
          )
        );
      t.projectVerticesOntoPolyline = (e, t, n = 1 / 0, r = 0) =>
        i.default.flatMap(e, (o, u) => {
          if (u + 1 === e.length) return [o];
          const c = e[u + 1],
            l = s(o, c),
            f = (function ([e, t], [n, r], i) {
              a.samePoint(e, t, 0) && (t = { x: e.x + 1, y: e.y });
              const o = t.x - e.x,
                u = t.y - e.y,
                c = o * o + u * u,
                l = r * c,
                f = n * c;
              return (t) => {
                const n = t.x - e.x,
                  r = t.y - e.y,
                  a = n * o + r * u;
                if (a <= f || a >= l) return null;
                const d = a / c,
                  h = { x: e.x + d * o, y: e.y + d * u },
                  p = s(t, h);
                return p > i ? null : { proj: h, coeff: d, distance: p };
              };
            })([o, c], 0 === l ? [0, 1] : [r / l, 1 - r / l], n),
            d = [];
          for (const e of t) {
            const t = f(e);
            t && d.push(t);
          }
          d.sort((e, t) => e.coeff - t.coeff);
          const h = [],
            p = r / l;
          for (const e of d)
            (0 === h.length ||
              0 === p ||
              e.coeff > i.default.last(h).coeff + p) &&
              h.push(e);
          return [o, ...i.default.map(h, "proj")];
        });
      t.extendLineSegment = (e, t, n) => {
        if (0 === s(e, t)) return e;
        const r = n / s(e, t);
        return { x: t.x + r * (t.x - e.x), y: t.y + r * (t.y - e.y) };
      };
    },
    716375: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        Object.defineProperty(t, "AreaGeofence", {
          enumerable: !0,
          get: function () {
            return r.AreaGeofence;
          },
        }),
        Object.defineProperty(t, "VolumeGeofence", {
          enumerable: !0,
          get: function () {
            return r.VolumeGeofence;
          },
        }),
        Object.defineProperty(t, "WhaleGeofence", {
          enumerable: !0,
          get: function () {
            return r.WhaleGeofence;
          },
        }),
        Object.defineProperty(t, "Geofence", {
          enumerable: !0,
          get: function () {
            return r.Geofence;
          },
        }),
        Object.defineProperty(t, "AttributeCondition", {
          enumerable: !0,
          get: function () {
            return r.AttributeCondition;
          },
        }),
        Object.defineProperty(t, "ActualAttributeConditions", {
          enumerable: !0,
          get: function () {
            return r.ActualAttributeConditions;
          },
        }),
        Object.defineProperty(t, "CategoricalAttribute", {
          enumerable: !0,
          get: function () {
            return r.CategoricalAttribute;
          },
        }),
        Object.defineProperty(t, "NumericalAttribute", {
          enumerable: !0,
          get: function () {
            return r.NumericalAttribute;
          },
        }),
        Object.defineProperty(t, "NumericalArrayAttribute", {
          enumerable: !0,
          get: function () {
            return r.NumericalArrayAttribute;
          },
        }),
        Object.defineProperty(t, "LinkedAttribute", {
          enumerable: !0,
          get: function () {
            return r.LinkedAttribute;
          },
        }),
        Object.defineProperty(t, "NERGlobalAttribute", {
          enumerable: !0,
          get: function () {
            return r.NERGlobalAttribute;
          },
        }),
        Object.defineProperty(t, "AnnotationAttribute", {
          enumerable: !0,
          get: function () {
            return r.AnnotationAttribute;
          },
        }),
        Object.defineProperty(t, "AnnotationAttributes", {
          enumerable: !0,
          get: function () {
            return r.AnnotationAttributes;
          },
        }),
        Object.defineProperty(t, "AnnotationGeometry", {
          enumerable: !0,
          get: function () {
            return r.AnnotationGeometry2D;
          },
        }),
        (t.isBoxAnnotation = function (e) {
          return (
            (!!e.geometry && e.geometry === r.AnnotationGeometry2D.Box) ||
            ("type" in e && e.type === r.AnnotationGeometry2D.Box)
          );
        }),
        (t.isLinkableBoxAnnotation = function (e) {
          return !!e.type && e.type === r.AnnotationGeometry2D.Box;
        }),
        (t.isLinkablePointAnnotation = function (e) {
          return !!e.type && e.type === r.AnnotationGeometry2D.Point;
        }),
        (t.isLinkablePolygonAnnotation = function (e) {
          return !!e.type && e.type === r.AnnotationGeometry2D.Polygon;
        }),
        (t.isPathAnnotation = function (e) {
          return (
            (("geometry" in e && !!e.geometry && o.includes(e.geometry)) ||
              ("type" in e && o.includes(e.type))) &&
            !!e.vertices
          );
        }),
        (t.isPolygonAnnotation = function (e) {
          return (
            ((!!e.geometry && e.geometry === r.AnnotationGeometry2D.Polygon) ||
              ("type" in e && e.type === r.AnnotationGeometry2D.Polygon)) &&
            !!e.vertices
          );
        }),
        (t.isLineAnnotation = function (e) {
          return (
            ((!!e.geometry && e.geometry === r.AnnotationGeometry2D.Line) ||
              ("type" in e && e.type === r.AnnotationGeometry2D.Line)) &&
            !!e.vertices
          );
        }),
        (t.isPathImageAnnotation = function (e) {
          return (
            e.geometry === r.AnnotationGeometry2D.Line ||
            e.geometry === r.AnnotationGeometry2D.Polygon
          );
        }),
        (t.isPointAnnotation = function (e) {
          return (
            (!!e.geometry && e.geometry === r.AnnotationGeometry2D.Point) ||
            ("type" in e && e.type === r.AnnotationGeometry2D.Point)
          );
        }),
        (t.isCuboidAnnotation = function (e) {
          return (
            (!!e.geometry && e.geometry === r.AnnotationGeometry2D.Cuboid) ||
            ("type" in e && e.type === r.AnnotationGeometry2D.Cuboid)
          );
        }),
        (t.isFrontendOrBackendPathAnnotation = function (e) {
          return d(e) || h(e);
        }),
        (t.isFrontendOrBackendPolygonAnnotation = d),
        (t.isFrontendOrBackendLineAnnotation = h),
        (t.isFrontendOrBackendPointAnnotation = function (e) {
          let t;
          "geometry" in e ? (t = e.geometry) : "type" in e && (t = e.type);
          return t === r.AnnotationGeometry2D.Point && "x" in e && "y" in e;
        }),
        (t.isFrontendOrBackendSpotterAnnotation = function (e) {
          return [i.SPOTTER_POLYGON, i.SPOTTER_POINT].includes(e.label ?? "");
        }),
        (t.LinkNotPresent =
          t.GLOBAL_ATTRIBUTES_GRADER_ID =
          t.CuboidEdgeDesc =
          t.CuboidVertexDesc =
          t.KeyframeType =
          t.taskTypeToGeometry =
          t.geometryToVideoTaskType =
          t.geometryToTaskType =
          t.pathGeometries =
            void 0);
      var r = n(167469),
        i = n(143986);
      const o = [r.AnnotationGeometry2D.Line, r.AnnotationGeometry2D.Polygon];
      t.pathGeometries = o;
      const a = {
        Polygon: r.TaskType.PolygonAnnotation,
        Point: r.TaskType.PointAnnotation,
        [r.AnnotationGeometry2D.Ellipse]: r.TaskType.EllipseAnnotation,
        [r.AnnotationGeometry2D.Point]: r.TaskType.PointAnnotation,
        [r.AnnotationGeometry2D.Box]: r.TaskType.Annotation,
        [r.AnnotationGeometry2D.Line]: r.TaskType.LineAnnotation,
        [r.AnnotationGeometry2D.Cuboid]: r.TaskType.CuboidAnnotation,
        [r.AnnotationGeometry2D.Polygon]: r.TaskType.PolygonAnnotation,
        [r.AnnotationGeometry2D.LidarCuboid]: r.TaskType.LidarAnnotation,
        [r.AnnotationGeometry2D.LidarPoint]: r.TaskType.LidarPointAnnotation,
      };
      t.geometryToTaskType = a;
      const s = {
        [r.AnnotationGeometry2D.Ellipse]: r.TaskType.EllipseAnnotation,
        [r.AnnotationGeometry2D.Point]: r.TaskType.PointAnnotation,
        [r.AnnotationGeometry2D.Box]: r.TaskType.VideoBoxAnnotation,
        [r.AnnotationGeometry2D.Line]: r.TaskType.LineAnnotation,
        [r.AnnotationGeometry2D.Cuboid]: r.TaskType.VideoCuboidAnnotation,
        [r.AnnotationGeometry2D.Polygon]: r.TaskType.VideoPolygonAnnotation,
      };
      t.geometryToVideoTaskType = s;
      const u = {
        [r.TaskType.PointAnnotation]: r.AnnotationGeometry2D.Point,
        [r.TaskType.LineAnnotation]: r.AnnotationGeometry2D.Line,
        [r.TaskType.Annotation]: r.AnnotationGeometry2D.Box,
        [r.TaskType.CuboidAnnotation]: r.AnnotationGeometry2D.Cuboid,
        [r.TaskType.PolygonAnnotation]: r.AnnotationGeometry2D.Polygon,
        [r.TaskType.VideoBoxAnnotation]: r.AnnotationGeometry2D.Box,
        [r.TaskType.VideoCuboidAnnotation]: r.AnnotationGeometry2D.Cuboid,
        [r.TaskType.VideoPolygonAnnotation]: r.AnnotationGeometry2D.Polygon,
        [r.TaskType.LidarAnnotation]: r.AnnotationGeometry2D.LidarCuboid,
        [r.TaskType.LidarPointAnnotation]: r.AnnotationGeometry2D.LidarPoint,
      };
      var c, l, f;
      (t.taskTypeToGeometry = u),
        (t.KeyframeType = c),
        (function (e) {
          (e.Start = "start"), (e.Middle = "middle"), (e.End = "end");
        })(c || (t.KeyframeType = c = {})),
        (t.CuboidVertexDesc = l),
        (function (e) {
          (e.FaceTopLeft = "face-topleft"),
            (e.FaceBottomLeft = "face-bottomleft"),
            (e.FaceTopRight = "face-topright"),
            (e.FaceBottomRight = "face-bottomright"),
            (e.SideTopCorner = "side-topcorner"),
            (e.SideBottomCorner = "side-bottomcorner");
        })(l || (t.CuboidVertexDesc = l = {})),
        (t.CuboidEdgeDesc = f),
        (function (e) {
          (e.FaceTop = "face-top"),
            (e.FaceBottom = "face-bottom"),
            (e.FaceLeft = "face-left"),
            (e.FaceRight = "face-right"),
            (e.SideTop = "side-top"),
            (e.SideBottom = "side-bottom"),
            (e.SideBack = "side-back");
        })(f || (t.CuboidEdgeDesc = f = {}));
      t.GLOBAL_ATTRIBUTES_GRADER_ID = "_global_attributes";
      function d(e) {
        let t;
        return (
          "geometry" in e ? (t = e.geometry) : "type" in e && (t = e.type),
          t === r.AnnotationGeometry2D.Polygon && "vertices" in e
        );
      }
      function h(e) {
        let t;
        return (
          "geometry" in e ? (t = e.geometry) : "type" in e && (t = e.type),
          t === r.AnnotationGeometry2D.Line && "vertices" in e
        );
      }
      t.LinkNotPresent = "__LINK_NOT_PRESENT__";
    },
    492027: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.createLineFromPoints =
          t.createEdgeFromPoints =
          t.getPointsFromLine =
          t.createLineFromEdges =
          t.isSharedDerivedPoint =
          t.isLayer2DerivedPoint =
          t.isLayer1DerivedPoint =
          t.hasDerivedVertices =
          t.hasLayer2Vertices =
          t.hasLayer1Vertices =
          t.isPrimitiveAnnotation =
          t.isDerivedAnnotation =
          t.isDerivedLayerPoint =
          t.CONSERVATIVE_DRZ_VERTEX_SPACIN_DECIMAL_PLACE =
          t.CONSERVATIVE_DRZ_VERTEX_SPACING =
          t.DEFAULT_PERCISION_DRZ_ALIGNMENT_DECIMAL_PLACE =
          t.DEFAULT_PERCISION_DRZ_ALIGNMENT =
          t.DERIVED_ANNOTATION_VERSION =
            void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(308408);
      t.DERIVED_ANNOTATION_VERSION = 2;
      t.DEFAULT_PERCISION_DRZ_ALIGNMENT = 1e-5;
      t.DEFAULT_PERCISION_DRZ_ALIGNMENT_DECIMAL_PLACE = 5;
      t.CONSERVATIVE_DRZ_VERTEX_SPACING = 1e-7;
      t.CONSERVATIVE_DRZ_VERTEX_SPACIN_DECIMAL_PLACE = 7;
      t.isDerivedLayerPoint = (e) => !!e.layer1VertexId || !!e.layer2VertexId;
      t.isDerivedAnnotation = (e) => !!e.metadata?.derivedMetadata;
      t.isPrimitiveAnnotation = (e) => !!e.vertices?.some(u);
      const a = (e) =>
        o.isPathAnnotation(e) && i.default.some(e.vertices, (e) => u(e));
      t.hasLayer1Vertices = a;
      const s = (e) =>
        o.isPathAnnotation(e) && i.default.some(e.vertices, (e) => c(e));
      t.hasLayer2Vertices = s;
      t.hasDerivedVertices = (e) => a(e) || s(e);
      const u = (e) => !!e.layer1VertexId;
      t.isLayer1DerivedPoint = u;
      const c = (e) => !!e.layer2VertexId;
      t.isLayer2DerivedPoint = c;
      t.isSharedDerivedPoint = (e, t) => {
        const n = i.default.round(e.x, 5) === i.default.round(t.x, 5),
          r = i.default.round(e.y, 5) === i.default.round(t.y, 5);
        return n && r;
      };
      t.createLineFromEdges = (e) => ({ edges: e });
      t.getPointsFromLine = (e) => {
        const t = [];
        return (
          e.edges.forEach((e, n) => {
            0 === n && t.push(e.start), t.push(e.end);
          }),
          t
        );
      };
      const l = (e, t) => ({ start: e, end: t });
      t.createEdgeFromPoints = l;
      t.createLineFromPoints = (e) => {
        const t = [];
        return (
          e.forEach((n, r) => {
            r !== e.length - 1 && t.push(l(n, e[r + 1]));
          }),
          { edges: t }
        );
      };
    },
    946305: function (e, t) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
    },
    308408: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      var r = {},
        i = s(n(716375));
      Object.keys(i).forEach(function (e) {
        "default" !== e &&
          "__esModule" !== e &&
          (Object.prototype.hasOwnProperty.call(r, e) ||
            (e in t && t[e] === i[e]) ||
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function () {
                return i[e];
              },
            }));
      });
      var o = s(n(492027));
      Object.keys(o).forEach(function (e) {
        "default" !== e &&
          "__esModule" !== e &&
          (Object.prototype.hasOwnProperty.call(r, e) ||
            (e in t && t[e] === o[e]) ||
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function () {
                return o[e];
              },
            }));
      });
      var a = s(n(946305));
      function s(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var n in e)
            if (Object.prototype.hasOwnProperty.call(e, n)) {
              var r =
                Object.defineProperty && Object.getOwnPropertyDescriptor
                  ? Object.getOwnPropertyDescriptor(e, n)
                  : {};
              r.get || r.set ? Object.defineProperty(t, n, r) : (t[n] = e[n]);
            }
        return (t.default = e), t;
      }
      Object.keys(a).forEach(function (e) {
        "default" !== e &&
          "__esModule" !== e &&
          (Object.prototype.hasOwnProperty.call(r, e) ||
            (e in t && t[e] === a[e]) ||
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function () {
                return a[e];
              },
            }));
      });
    },
    707814: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.getAllOntologyValues = function e(t) {
          const n = [];
          for (const r of t) n.push(r), f(r) && n.push(...e(r.subchoices));
          return n;
        }),
        (t.getAllChoiceValues = l),
        (t.generateChoiceMapping = function e(t) {
          const n = [];
          for (const r of t) {
            const t = { choice: d(r) };
            "string" !== typeof r &&
              ((t.display = r.display),
              (t.description = r.description),
              f(r) && (t.subchoices = e(r.subchoices))),
              n.push(t);
          }
          return n;
        }),
        (t.generateChoiceDisplayMapping = function e(t) {
          return t.reduce(
            (t, { choice: n, display: r, subchoices: i }) => (
              (t[n] = r || ""), { ...t, ...(i && i.length > 0 ? e(i) : {}) }
            ),
            {}
          );
        }),
        (t.isNestedChoice = f),
        (t.getChoiceValue = d),
        (t.getChoiceDisplay = function (e) {
          return i.default.isNil(e)
            ? ""
            : "string" === typeof e
            ? e
            : e.display;
        }),
        (t.sortChoice = h),
        (t.sortChoices = function e(t) {
          if (!t) return [];
          const n = [];
          for (const r of t) {
            const t = r;
            f(r) && (t.subchoices = e(r.subchoices)), n.push(t);
          }
          return n.sort(h);
        }),
        (t.getOntologyPreorderTraversal = function (e, t = new Set(), n = {}) {
          const r = (e, o = 0, a = !1, s = new Set(), u) => {
            s.add(e);
            const c = a || t.has(e.choice + o);
            u = n[e.choice] ?? u;
            const l = i.default.map(
                i.default.filter(e.subchoices, (e) => !s.has(e)),
                (e) => r(e, o + 1, c, s, u)
              ),
              f = i.default.sortBy(l, ([{ subtreeSize: e, subchoices: t }]) =>
                e > 0 ? 0 : t && t.length > 0 ? 1 : 2
              ),
              d = i.default.sumBy(l, ([{ subtreeSize: e }]) => e);
            return [
              { ...e, depth: o, flagged: a, color: u, subtreeSize: d + 1 },
              ...i.default.flatten(f),
            ];
          };
          return r(e);
        }),
        (t.transformOntologyToObject = p),
        (t.transformObjectToOntology = function e(t) {
          return Object.keys(t).reduce((n, r) => {
            const i = t[r];
            return (
              i.subchoices
                ? n.push({
                    choice: r,
                    display: i.display,
                    subchoices: e(i.subchoices),
                  })
                : n.push({ choice: r, display: i.display }),
              n
            );
          }, []);
        }),
        (t.getChoiceObjectMatchingChoice = function e(t, n, r) {
          for (const i of t.values())
            if (i.choice === n) r = i;
            else if (i.subchoices) {
              const t = e(i.subchoices, n, r);
              "" !== t.choice && (r = t);
            }
          return r;
        }),
        (t.getChoiceMatchingString = function e(t, n, r) {
          for (const i of t.values())
            if (i.display === n) r = i;
            else if (i.subchoices) {
              const t = e(i.subchoices, n, r);
              "" !== t.choice && (r = t);
            }
          return r;
        }),
        (t.getIndicesToChoice = function e(t, n, r = []) {
          for (const [i, o] of t.entries()) {
            if (o.choice === n) return r.concat([i]);
            if (o.subchoices) {
              const t = e(o.subchoices, n, r.concat([i]));
              if (t.length > 0) return t;
            }
          }
          return [];
        }),
        (t.countSubchoices = function e(t) {
          return t
            ? Object.values(t).reduce(
                (t, n) => ((t += e(n.subchoices)), t + 1),
                0
              )
            : 0;
        }),
        (t.depthFirstSearchOntology = function e(t, n, r, i = new Set()) {
          i.add(t);
          const o = (t.display ?? t.choice)
              .toLowerCase()
              .includes(n.toLowerCase()),
            a = r || o,
            s = [],
            u = new Set(),
            c = new Set();
          if (t.subchoices) {
            const r = t.subchoices.filter((e) => !i.has(e));
            for (const t of r) {
              const r = e(t, n, a, i);
              r.node && s.push(r.node),
                r.matches.forEach((e) => u.add(e)),
                r.matchesString.forEach((e) => c.add(e));
            }
          }
          if (a || s.length > 0 || "root" === t.choice) {
            const e = { ...t, subchoices: s };
            return (
              o && (u.add(e), c.add(e.choice)),
              { node: e, matches: u, matchesString: c }
            );
          }
          return { node: void 0, matches: u, matchesString: c };
        }),
        (t.mapOntologyToChoiceObject = function (e) {
          const t = (e) =>
            e.map(({ choice: e, display: n, subchoices: r }) => ({
              display: n,
              choice: e,
              ...(r?.length && {
                subchoices: [{ display: n, choice: e }, ...t(r)],
              }),
            }));
          return t(e.ontology);
        }),
        (t.transformOntologyToFlatObject = g),
        (t.loadChangeMap = function (e) {
          const t = new Set(),
            n = {},
            r = {},
            o = {};
          return (
            i.default.forEach(e.ontology, (e, i) => {
              e.added && t.add(i),
                e.deleted && (n[i] = e.deleted),
                e.edited && (o[i] = e.edited),
                e.moved && (r[i] = e.moved);
            }),
            { added: t, deleted: n, moved: r, edited: o }
          );
        }),
        (t.compareAttributes = m),
        (t.separateClassAttributes = function (e, t) {
          if (!t) return { globalAttributes: {}, classAttributes: {} };
          const n = {},
            r = {},
            o = {},
            a = l(e);
          i.default.forEach(t, (e, t) => {
            const a = i.default.omit(e, "conditions"),
              s = e.conditions?.label_condition?.label;
            e.global || e.conditions?.is_global
              ? (n[t] = a)
              : s
              ? "string" === typeof s
                ? (r[s] = { ...r[s], [t]: a })
                : s.map((e) => {
                    r[e] = { ...r[e], [t]: a };
                  })
              : (o[t] = a);
          }),
            i.default.size(o) &&
              a.forEach((e) => {
                r[e] = { ...r[e], ...o };
              });
          return { globalAttributes: n, classAttributes: r };
        }),
        (t.addAttributesToOntology = function e(t, n) {
          return t.map((t) => ({
            ...t,
            ...(t.subchoices && { subchoices: e(t.subchoices, n) }),
            ...(n[t.choice] && { attributes: n[t.choice] }),
          }));
        }),
        (t.depthFirstCompareOntologies = function (e, t) {
          const n = g(e),
            r = g(t),
            o = new Set(),
            a = {},
            s = {},
            u = {};
          return (
            (function e(t = {}, c = {}, l) {
              i.default.forEach(
                t,
                ({ display: t, subchoices: n, attributes: o }, f) => {
                  const d = { choice: f, display: t };
                  if (!c[f] && r[f])
                    s[f] = {
                      previousChoice: d,
                      newChoice: d,
                      previousParent: l,
                      newParent: r[f].parent,
                    };
                  else if (!c[f])
                    return (
                      (a[f] = { previous: { choice: f, display: t } }),
                      l &&
                        (s[f] = {
                          newChoice: l,
                          previousChoice: d,
                          previousParent: l,
                          newParent: r[l.choice].parent,
                        }),
                      void e(n, c[f]?.subchoices, l)
                    );
                  if (
                    (r[f] &&
                      t !== r[f].display &&
                      (u[f] = {
                        display: {
                          previousDisplay: t,
                          newDisplay: r[f].display,
                        },
                      }),
                    r[f] && !i.default.isEqual(o, r[f].attributes))
                  ) {
                    const e = m(o, r[f].attributes);
                    u[f] = { ...u[f], attributes: e };
                  }
                  e(n, c[f]?.subchoices, d);
                }
              ),
                i.default.forEach(c, ({ display: r, subchoices: i }, a) => {
                  t[a] ||
                    n[a] ||
                    (l &&
                      !o.has(l.choice) &&
                      (u[l.choice] = {
                        ...u[l.choice],
                        newSubchoices: [
                          ...(u[l.choice]?.newSubchoices || []),
                          a,
                        ],
                      }),
                    o.add(a)),
                    e(t[a]?.subchoices || {}, i, { display: r, choice: a });
                });
            })(p(e, !0), p(t, !0)),
            { added: o, deleted: a, edited: u, moved: s }
          );
        }),
        (t.compareEvents = function (e = [], t = [], n, r) {
          if (!e.length && !t.length) return;
          const o = new Set(i.default.difference(t, e)),
            a = new Set(i.default.difference(e, t)),
            s = {};
          return (
            i.default.intersection(e, t).forEach((e) => {
              const t = m(n?.[e], r?.[e]);
              i.default.size(t) && (s[e] = t);
            }),
            { added: o, deleted: a, edited: s }
          );
        }),
        (t.getAnnotationOntologyChanges = y),
        (t.getAttributeChanges = b),
        (t.getEventChanges = v),
        (t.getChangeList = function (e) {
          const t = [],
            n = (e, n) => {
              e.forEach((e) =>
                t.push({
                  changeType: n,
                  choice: e,
                  display: i.default.last(e.split(" > ")),
                })
              );
            };
          return (
            e.added && n([...e.added], a.Added),
            n(i.default.keys(e.deleted), a.Deleted),
            n(i.default.keys(e.edited), a.Edited),
            n(i.default.keys(e.moved), a.Moved),
            t
          );
        }),
        (t.getFirstUnconfirmedAttributeFlag =
          t.combineFlags =
          t.loadOntologyChange =
          t.RequestStatus =
          t.QuickReviewTaskStatus =
          t.QuickReviewNodeStatus =
          t.NodeState =
          t.NO_ONTOLOGY_TEXT =
            void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(284167);
      var a, s, u, c;
      function l(e) {
        const t = [];
        for (const n of e) {
          const e = d(n);
          if (!e || "" === e)
            throw new Error(
              "The provided ontology has a choice which is undefined, null, or empty"
            );
          t.push(e), f(n) && t.push(...l(n.subchoices));
        }
        return t;
      }
      function f(e) {
        const t = i.default.get(e, "subchoices");
        return i.default.isArray(t) && !i.default.isEmpty(t);
      }
      function d(e) {
        return i.default.isNil(e) ? "" : "string" === typeof e ? e : e.choice;
      }
      function h(e, t) {
        const n = (e.display ?? e.choice).toUpperCase(),
          r = (t.display ?? t.choice).toUpperCase();
        return n.localeCompare(r);
      }
      function p(e, t) {
        return e.reduce(
          (e, { choice: n, display: r, subchoices: i, attributes: o }) => (
            (e[n] = {
              display: r,
              ...(i?.length && { subchoices: p(i, t) }),
              ...(t && o && { attributes: o }),
            }),
            e
          ),
          {}
        );
      }
      function g(e, t = [], n) {
        return e.reduce((e, r) => {
          const { choice: o, display: a, subchoices: s, attributes: u } = r;
          return (
            s?.length &&
              Object.assign(
                e,
                g(
                  s,
                  [...t],
                  i.default.pick(r, ["choice", "display", "attributes"])
                )
              ),
            (e[o] = {
              path: t,
              ...i.default.omitBy(
                { display: a, attributes: u, parent: n },
                i.default.isNil
              ),
            }),
            e
          );
        }, {});
      }
      function m(e, t) {
        if (!e && !t) return;
        const n = [],
          r = [],
          o = [];
        return (
          i.default.forEach(e, (e, a) => {
            const s = t?.[a];
            i.default.isEqual(e, s) ||
              (s
                ? e.global !== s.global
                  ? (r.push(a), n.push(a))
                  : o.push(a)
                : r.push(a));
          }),
          i.default.keys(t).forEach((t) => {
            e?.[t] || n.push(t);
          }),
          i.default.omitBy(
            { added: n, deleted: r, edited: o },
            (e) => !e.length
          )
        );
      }
      function y(e, t) {
        if (!t) return { ontologyFlags: void 0, annotations: e };
        const n = {},
          r = e.map((e) => {
            if (!e.uuid || !e.label || !t[e.label]) return e;
            const r = i.default.cloneDeep(e);
            n[e.uuid] = { descriptions: [], confirmed: !1 };
            const o = t[e.label];
            let a = null;
            if (
              (o.deleted &&
                ((a = "box"),
                n[e.uuid].descriptions.push(
                  `DELETED: Class ${o.deleted.previous.display} was deleted.`
                )),
              o.moved)
            ) {
              let t;
              (a = o.moved.newChoice.choice),
                (t =
                  o.moved.newChoice.choice === o.moved.previousChoice?.choice
                    ? `MOVED: Class ${
                        o.moved.previousChoice.display
                      } was moved under ${
                        o.moved.newParent ? o.moved.newParent.display : "root"
                      }`
                    : `MOVED: Class was moved from ${
                        o.moved.previousChoice?.display || "previous class"
                      } to ${o.moved.newChoice.display}`),
                n[e.uuid].descriptions.push(t),
                (r.attributes = i.default.isArray(e.attributes)
                  ? Array(e.attributes.length).fill({})
                  : {});
            }
            if (
              o.edited &&
              (o.edited.display &&
                n[e.uuid].descriptions.push(
                  `EDITED: Class was renamed from ${o.edited.display.previousDisplay} to ${o.edited.display.newDisplay}`
                ),
              o.edited.newSubchoices &&
                n[e.uuid].descriptions.push("EXPANDED: New subchoices added"),
              i.default.some(["added", "edited"], (e) =>
                i.default.has(o.edited?.attributes, e)
              ) &&
                (n[e.uuid].descriptions.push("EDITED: Attributes were updated"),
                (n[e.uuid].attributes = {
                  ...i.default.fromPairs(
                    i.default.map(o.edited.attributes?.added, (e) => [
                      e,
                      { description: `ADDED: ${e} was added`, confirmed: !1 },
                    ])
                  ),
                  ...i.default.fromPairs(
                    i.default.map(o.edited.attributes?.edited, (e) => [
                      e,
                      { description: `EDITED: ${e} was edited`, confirmed: !1 },
                    ])
                  ),
                })),
              o.edited.attributes?.edited || o.edited.attributes?.deleted)
            ) {
              const e = i.default.union(
                o.edited.attributes.edited,
                o.edited.attributes.deleted
              );
              r.attributes = i.default.isArray(r.attributes)
                ? i.default.map(r.attributes, (t) => t && i.default.omit(t, e))
                : (r.attributes = i.default.omit(r.attributes, e));
            }
            return (
              n[e.uuid].descriptions.length || delete n[e.uuid],
              a &&
                ((r.label = a),
                r.frames &&
                  (r.frames = r.frames.map((e) =>
                    e ? { ...e, label: a } : void 0
                  ))),
              r
            );
          });
        return { ontologyFlags: n, annotations: r };
      }
      function b(e, t) {
        const n = i.default.cloneDeep(e),
          r = {};
        return (
          t.deleted?.forEach((e) => {
            delete n[e];
          }),
          t.edited?.forEach((e) => {
            delete n[e],
              (r[e] = {
                description: `EDITED: ${e} was edited`,
                confirmed: !1,
              });
          }),
          t.added?.forEach((e) => {
            r[e] = { description: `ADDED: ${e} was added`, confirmed: !1 };
          }),
          { newAttributes: n, newAttributeChanges: r }
        );
      }
      function v(e, t) {
        if (!t) return { events: e, eventFlags: {} };
        const n = {};
        return {
          events: e.reduce((e, r) => {
            let i = r;
            if (t.deleted?.includes(r.label)) return e;
            if (t.edited?.[r.label]) {
              const { newAttributes: e, newAttributeChanges: o } = b(
                r.attributes,
                t.edited?.[r.label]
              );
              (i = { ...r, attributes: e }),
                (n[r.id] = {
                  confirmed: !1,
                  attributes: o,
                  descriptions: ["EDITED: Attributes were edited"],
                });
            }
            return [...e, i];
          }, []),
          eventFlags: n,
        };
      }
      (t.NO_ONTOLOGY_TEXT = "No Ontology"),
        (t.NodeState = a),
        (function (e) {
          (e.Added = "Added"),
            (e.Edited = "Edited"),
            (e.Deleted = "Deleted"),
            (e.Moved = "Moved");
        })(a || (t.NodeState = a = {})),
        (t.QuickReviewNodeStatus = s),
        (function (e) {
          (e.Requested = "Requested"),
            (e.InReview = "In Review"),
            (e.Realigning = "Realigning"),
            (e.Approved = "Approved");
        })(s || (t.QuickReviewNodeStatus = s = {})),
        (t.QuickReviewTaskStatus = u),
        (function (e) {
          (e.InReview = "In Review"),
            (e.Approved = "Approved"),
            (e.Rejected = "Rejected");
        })(u || (t.QuickReviewTaskStatus = u = {})),
        (t.RequestStatus = c),
        (function (e) {
          (e.Submitted = "Submitted"),
            (e.InProgress = "In Progress"),
            (e.Completed = "Completed");
        })(c || (t.RequestStatus = c = {}));
      t.loadOntologyChange = (e) => {
        const t =
          e.ontologyVersion &&
          e.responseOntologyVersion &&
          e.ontologyVersion !== e.responseOntologyVersion
            ? i.default.find(e.ontologyHistory, { _id: e.ontologyVersion })
                ?.changeMaps?.[e.responseOntologyVersion]
            : void 0;
        if (!t) return { newAnnotations: e.annotations, newEvents: e.events };
        const { ontologyFlags: n, annotations: r } = y(
            e.annotations,
            t.ontology
          ),
          { eventFlags: o, events: a } = v(e.events, t.events);
        return {
          newAnnotations: r,
          newEvents: a,
          annotationFlags: { ...n, ...o },
        };
      };
      t.combineFlags = (e, t, n = !0) => {
        if (!i.default.size(t) || !i.default.size(e)) return e || t;
        const r = i.default.cloneDeep(e) || {};
        return (
          i.default.forEach(t, (e, t) => {
            if (!r[t]) return void (r[t] = e);
            const o = i.default.difference(e.descriptions, r[t].descriptions);
            o.length
              ? (r[t] = {
                  ...r[t],
                  confirmed: r[t].confirmed && e.confirmed,
                  descriptions: [...r[t].descriptions, ...o],
                })
              : n && (r[t].confirmed = e.confirmed),
              r[t].attributes
                ? i.default.forEach(e.attributes, (e, i) => {
                    r[t].attributes[i]
                      ? n && (r[t].attributes[i] = e)
                      : (r[t].attributes[i] = e);
                  })
                : (r[t].attributes = e.attributes);
          }),
          r
        );
      };
      t.getFirstUnconfirmedAttributeFlag = (e, t, n) =>
        i.default.findKey(e.attributes, (e, r) => {
          if (e.confirmed) return !1;
          const i = n[r]?.conditions?.attribute_conditions;
          if (!i?.length) return !0;
          return (
            o.isAttributeConditionMet(t, { attribute_conditions: i }) &&
            !e.confirmed
          );
        });
    },
    116615: function (e, t) {
      "use strict";
      var n, r, i, o, a, s;
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.FieldType =
          t.FeaturePricingTier =
          t.FeaturePriority =
          t.ContentFlag =
          t.FeatureType =
          t.GeometryType =
            void 0),
        (t.GeometryType = n),
        (function (e) {
          (e.BoundingBox = "box"), (e.Polygon = "polygon");
        })(n || (t.GeometryType = n = {})),
        (t.FeatureType = r),
        (function (e) {
          (e.Text = "text"),
            (e.Block = "block"),
            (e.Group = "group"),
            (e.Record = "record");
        })(r || (t.FeatureType = r = {})),
        (t.ContentFlag = i),
        (function (e) {
          (e.Line = "line"),
            (e.Key = "key"),
            (e.Value = "value"),
            (e.Thead = "thead"),
            (e.Tbody = "tbody"),
            (e.Date = "date"),
            (e.Money = "money"),
            (e.Checkbox = "checkbox"),
            (e.Region = "region"),
            (e.Query = "query"),
            (e.Span = "span");
        })(i || (t.ContentFlag = i = {})),
        (t.FeaturePriority = o),
        (function (e) {
          (e.P0 = "Most Critical"),
            (e.P1 = "Critical"),
            (e.default = "Regular");
        })(o || (t.FeaturePriority = o = {})),
        (t.FeaturePricingTier = a),
        (function (e) {
          (e.Basic = "Basic"), (e.Premium = "Premium");
        })(a || (t.FeaturePricingTier = a = {})),
        (t.FieldType = s),
        (function (e) {
          e.Select = "select";
        })(s || (t.FieldType = s = {}));
    },
    257868: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.createEmpty = o),
        (t.pick = function (e, t, n = 1) {
          const r = o(e, t.length * n);
          for (let i = 0; i < t.length; i++)
            for (let o = 0; o < n; o++) r[i * n + o] = e[t[i] * n + o];
          return r;
        }),
        (t.concat = function (e) {
          if (!e.length) return;
          const t = i.default.sum(e.map((e) => e.length)),
            n = o(e[0], t);
          let r = 0;
          return (
            e.forEach((e) => {
              n.set(e, r), (r += e.length);
            }),
            n
          );
        }),
        (t.range = function (e, t) {
          const n = new Uint32Array(t - e);
          for (let r = 0; r < n.length; r++) n[r] = r + e;
          return n;
        });
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r };
      function o(e, t = 0) {
        return new (0, e.constructor)(t);
      }
    },
    311311: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.addPathVertex =
          t.updatePathVertex =
          t.moveAndClampPolygon =
          t.getFragmentsFromVertices =
          t.addNewFragment =
          t.splitPointsByFragment =
          t.isMultiPolygon =
            void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(136622);
      t.isMultiPolygon = (e) => !i.default.isEmpty(e.multiple_polygon_vertices);
      t.splitPointsByFragment = (e, t) =>
        i.default.isNil(e)
          ? []
          : i.default.isEmpty(t)
          ? [e]
          : i.default.reduce(t, (e, t) => (e.push(t.vertices), e), []);
      t.addNewFragment = (e, t) => {
        const n = e.vertices,
          r = t,
          i = [...n, ...r],
          o = [
            ...(e.multiple_polygon_vertices ?? [{ vertices: n }]),
            { vertices: r },
          ];
        return { ...e, vertices: i, multiple_polygon_vertices: o };
      };
      const a = (e, t) => {
        if (i.default.isEmpty(t)) return;
        let n = 0;
        return i.default.map(t, (t) => {
          const r = e.slice(n, n + t.vertices.length);
          return (n += t.vertices.length), { vertices: r };
        });
      };
      t.getFragmentsFromVertices = a;
      t.moveAndClampPolygon = (e, t, n, r) => {
        const i = e.vertices.map((e) => ({ ...e, x: e.x + t, y: e.y + n }));
        return (
          o.clampPolygonAnnotationVertices(i, r),
          {
            ...e,
            vertices: i,
            multiple_polygon_vertices: a(i, e.multiple_polygon_vertices),
          }
        );
      };
      t.updatePathVertex = (e, t, n) => {
        const r = Object.assign([], e.vertices, { [t]: n });
        return {
          vertices: r,
          multiple_polygon_vertices: a(r, e.multiple_polygon_vertices),
        };
      };
      t.addPathVertex = (e, t, n) => {
        const r = [...e.vertices.slice(0, t), n, ...e.vertices.slice(t)];
        if (i.default.isEmpty(e.multiple_polygon_vertices))
          return { vertices: r };
        const o = [];
        let a = t;
        return (
          i.default.each(e.multiple_polygon_vertices, (e) => {
            let t = e;
            a >= 0 &&
              a <= e.vertices.length &&
              (t = {
                vertices: [
                  ...e.vertices.slice(0, a),
                  n,
                  ...e.vertices.slice(a),
                ],
              }),
              o.push(t),
              (a -= e.vertices.length);
          }),
          { vertices: r, multiple_polygon_vertices: o }
        );
      };
    },
    260160: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.getBoundingBox = s),
        (t.getLineLength = u),
        (t.getPolygonArea = function (e) {
          if (e.length < 4) return u(e);
          const t = new a.geom.GeometryFactory();
          return t
            .createPolygon(
              t.createLinearRing(
                e.map(({ x: e, y: t }) => new a.geom.Coordinate(e, t))
              ),
              []
            )
            .getArea();
        }),
        (t.standardizeExtremalPoints = function (e) {
          if (!e || !e.vertices) return {};
          const t = [...e.vertices].sort((e, t) => e.x - t.x),
            n = [...e.vertices].sort((e, t) => e.y - t.y);
          return {
            top: n[0],
            bottom: n[n.length - 1],
            left: t[0],
            right: t[t.length - 1],
          };
        }),
        (t.extremalPointAnnotToBoxAnnot = function (e) {
          if (!e) return e;
          const t = s(e.vertices),
            n = i.default.map(t, "x"),
            r = i.default.map(t, "y"),
            a = i.default.min(n),
            u = i.default.min(r),
            c = i.default.max(n),
            l = i.default.max(r);
          return {
            ...e,
            height: l - u,
            width: c - a,
            top: u,
            left: a,
            vertices: t,
            type: o.AnnotationGeometry.ExtremalPoints,
          };
        }),
        (t.getGeneralizedBoundingBox = void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(308408),
        a = n(593539);
      function s(e) {
        if (0 === e.length)
          throw new Error("Cannot find bounding box of empty array");
        const t = i.default.map(e, "x"),
          n = i.default.map(e, "y"),
          r = i.default.min(t),
          o = i.default.min(n),
          a = i.default.max(t),
          s = i.default.max(n);
        return [
          { x: r, y: o },
          { x: r, y: s },
          { x: a, y: s },
          { x: a, y: o },
        ];
      }
      function u(e) {
        if (e.length < 2)
          throw new Error(
            "Cannot find distance of line with less than 3 vertices"
          );
        return new a.geom.GeometryFactory()
          .createLineString(
            e.map(({ x: e, y: t }) => new a.geom.Coordinate(e, t))
          )
          .getLength();
      }
      t.getGeneralizedBoundingBox = (e) => {
        const t = [];
        for (const n of e)
          if (o.isBoxAnnotation(n)) {
            const e = n.x + n.width / 2,
              r = n.y + n.height / 2,
              i = Math.atan(n.height / n.width),
              o = Math.sqrt(n.width ** 2 + n.height ** 2) / 2,
              a = (t) => ({ x: e + o * Math.cos(t), y: r + o * Math.sin(t) });
            t.push(a(i + (n.rotation ?? 0))),
              t.push(a(Math.PI - i + (n.rotation ?? 0))),
              t.push(a(Math.PI + i + (n.rotation ?? 0))),
              t.push(a(-i + (n.rotation ?? 0)));
          }
        return s(t);
      };
    },
    136622: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.clampAnnotation =
          t.clampCuboidAnnotation =
          t.clampPolygonAnnotation =
          t.clampPolygonAnnotationVertices =
          t.clampBoxAnnotation =
          t.getHallucination =
          t.getAllHallucinations =
          t.getCuboidInterpolation =
          t.getLinearPrediction =
          t.getTranslationVector =
          t.getKeyFrames =
            void 0);
      var r,
        i = (r = n(298784)) && r.__esModule ? r : { default: r },
        o = n(308408),
        a = n(43356),
        s = n(311311);
      const u = (e, t, n) => {
        const r = i.default.map(e.frames, (e, t) => ({
            frame: e,
            frameIndex: t,
          })),
          o = n
            ? ({ frame: e }) => !e || !e.keyframeType
            : ({ frame: e }) => !e,
          a = i.default.reject(r, o).map(({ frameIndex: e }) => e);
        return {
          left: i.default.filter(a, (e) => e < t),
          right: i.default.filter(a, (e) => e > t),
        };
      };
      t.getKeyFrames = u;
      const c = (e) => {
        const {
            frameIndex: t,
            keyframe1Index: n,
            keyframe2Index: r,
            keyframe1: i,
            keyframe2: o,
          } = e,
          { x: s, y: u } = a.getDims[i.geometry](i),
          { x: c, y: l } = a.getDims[o.geometry](o),
          f = {
            x: (d = { x: c, y: l }).x - (h = { x: s, y: u }).x,
            y: d.y - h.y,
          };
        var d, h;
        return { x: (f.x / (r - n)) * (t - n), y: (f.y / (r - n)) * (t - n) };
      };
      t.getTranslationVector = c;
      const l = (e, t, n, r, o) => {
        const a = e.frames[t],
          s = e.frames[n];
        return a || s
          ? s
            ? a
              ? o
                ? i.default.cloneDeep(a)
                : d(
                    {
                      frameIndex: r,
                      keyframe1Index: t,
                      keyframe2Index: n,
                      keyframe1: a,
                      keyframe2: s,
                    },
                    e.geometry
                  )
              : i.default.cloneDeep(s)
            : i.default.cloneDeep(a)
          : null;
      };
      t.getLinearPrediction = l;
      const f = (e, t, n, r, i) => ((i - r) / (n - t)) * (e - t) + r,
        d = (e, t) => {
          switch (t) {
            case o.AnnotationGeometry.Point:
              return h(e);
            case o.AnnotationGeometry.Line:
            case o.AnnotationGeometry.Polygon:
              return g(e);
            case o.AnnotationGeometry.Box:
              return p(e);
            case o.AnnotationGeometry.Ellipse:
              return y(e);
            case o.AnnotationGeometry.Cuboid:
              return m(e);
            default:
              return e.keyframe1;
          }
        },
        h = (e) => {
          const { keyframe1: t } = e,
            n = c(e),
            r = i.default.cloneDeep(t);
          return (r.x += n.x), (r.y += n.y), r;
        },
        p = (e) => {
          const {
              frameIndex: t,
              keyframe1Index: n,
              keyframe2Index: r,
              keyframe1: o,
              keyframe2: a,
            } = e,
            s = i.default.cloneDeep(o);
          return (
            (s.width = f(t, n, r, o.width, a.width)),
            (s.height = f(t, n, r, o.height, a.height)),
            (s.x = f(t, n, r, o.x, a.x)),
            (s.y = f(t, n, r, o.y, a.y)),
            s
          );
        },
        g = (e) => {
          const { keyframe1: t } = e,
            n = c(e),
            r = i.default.cloneDeep(t);
          if (
            ((r.vertices = r.vertices.map((e) => ({
              x: e.x + n.x,
              y: e.y + n.y,
            }))),
            r.multiple_polygon_vertices)
          ) {
            const e = r;
            e.multiple_polygon_vertices = s.getFragmentsFromVertices(
              e.vertices,
              e.multiple_polygon_vertices
            );
          }
          return r;
        },
        m = (e) => {
          const {
              frameIndex: t,
              keyframe1Index: n,
              keyframe2Index: r,
              keyframe1: o,
              keyframe2: a,
            } = e,
            s = i.default.cloneDeep(o);
          return (
            (s.face.x1 = f(t, n, r, o.face.x1, a.face.x1)),
            (s.face.x2 = f(t, n, r, o.face.x2, a.face.x2)),
            (s.face.y1 = f(t, n, r, o.face.y1, a.face.y1)),
            (s.face.y2 = f(t, n, r, o.face.y2, a.face.y2)),
            o.edge &&
              a.edge &&
              (s.edge = {
                ex: f(o.edge.ex, o.face.x1, o.face.x2, s.face.x1, s.face.x2),
                ey1: f(o.edge.ey1, o.face.y1, o.face.y2, s.face.y1, s.face.y2),
                ey2: f(o.edge.ey2, o.face.y1, o.face.y2, s.face.y1, s.face.y2),
              }),
            s
          );
        };
      t.getCuboidInterpolation = m;
      const y = (e) => {
        const {
            frameIndex: t,
            keyframe1Index: n,
            keyframe2Index: r,
            keyframe1: o,
            keyframe2: a,
          } = e,
          s = i.default.cloneDeep(o);
        return (
          (s.width = f(t, n, r, o.width, a.width)),
          (s.height = f(t, n, r, o.height, a.height)),
          (s.center[0] = f(t, n, r, o.center[0], a.center[0])),
          (s.center[1] = f(t, n, r, o.center[1], a.center[1])),
          s
        );
      };
      t.getAllHallucinations = (e, t, n) => {
        const r = i.default.map(e.frames, (e) =>
          e?.keyframeType ? e : void 0
        );
        let a;
        const s = i.default.map(r, (e, t) => {
          const n = e?.keyframeType;
          if (!n) return a;
          a = n === o.KeyframeType.End ? void 0 : t;
        });
        let u;
        const c = i.default
          .map([...r].reverse(), (t, n) => {
            const r = t?.keyframeType;
            if (!r) return u;
            u = r === o.KeyframeType.Start ? void 0 : e.frames.length - n - 1;
          })
          .reverse();
        return i.default.map(r, (r, i) => {
          if (((a = s[i]), (u = c[i]), void 0 !== a && void 0 !== u)) {
            let r = l(e, a, u, i, n);
            return r && (r = { ...r, ...T(r, t), keyframeType: void 0 }), r;
          }
        });
      };
      t.getHallucination = (e, t, n, r, o) => {
        const a = u(e, t);
        let s = null;
        if (i.default.isEmpty(a.left) || i.default.isEmpty(a.right))
          if (i.default.isEmpty(a.left)) {
            if (!i.default.isEmpty(a.right)) {
              const [n, r] = i.default.take(a.right, 2);
              s = l(e, n, r, t, o);
            }
          } else {
            const [n, r] = i.default.reverse(i.default.takeRight(a.left, 2));
            s = l(e, n, r, t, o);
          }
        else {
          const n = i.default.last(a.left),
            r = i.default.first(a.right);
          s = l(e, n, r, t, o);
        }
        return (
          s &&
            (s = { ...s, ...(r ? { keyframeType: void 0 } : {}), ...T(s, n) }),
          s
        );
      };
      const b = (e, t) => {
        if (!t) return e;
        const { x: n, y: r, width: o, height: a } = e;
        let s = n + o,
          u = r + a;
        (s = i.default.clamp(s, 2, t.width)),
          (u = i.default.clamp(u, 2, t.height));
        let c = i.default.clamp(n, 0, t.width - 2),
          l = i.default.clamp(r, 0, t.height - 2),
          f = s - c,
          d = u - l;
        return (
          f < 2 && ((c -= Math.floor((2 - f) / 2)), (f = 2)),
          d < 2 && ((l -= Math.floor((2 - d) / 2)), (d = 2)),
          0 === f || 0 === d
            ? { ...e, x: 0, y: 0, width: 100, height: 100 }
            : { ...e, x: c, y: l, width: f, height: d }
        );
      };
      t.clampBoxAnnotation = b;
      const v = (e, t, n) => {
        const r = t?.width ?? Number.MAX_SAFE_INTEGER,
          o = t?.height ?? Number.MAX_SAFE_INTEGER;
        let a,
          s = 0,
          u = 0;
        if (n)
          a = (e) => {
            e.forEach((e) => {
              (e.x = i.default.clamp(e.x, 0, r)),
                (e.y = i.default.clamp(e.y, 0, o));
            });
          };
        else {
          let t;
          t = Array.isArray(e) ? e : i.default.concat([], ...Object.values(e));
          const n = i.default.minBy(t, "x")?.x ?? 0,
            c = i.default.maxBy(t, "x")?.x ?? r,
            l = i.default.minBy(t, "y")?.y ?? 0,
            f = i.default.maxBy(t, "y")?.y ?? o;
          (s =
            n >= 0
              ? i.default.clamp(c, 0, r) - c
              : i.default.clamp(n, 0, r) - n),
            (u =
              l >= 0
                ? i.default.clamp(f, 0, o) - f
                : i.default.clamp(l, 0, o) - l),
            (a = (e) => {
              e.forEach((e) => {
                (e.x += s), (e.y += u);
              });
            });
        }
        return (
          Array.isArray(e) ? a(e) : Object.values(e).forEach((e) => a(e)), e
        );
      };
      t.clampPolygonAnnotationVertices = v;
      const _ = (e, t, n) => (v(e.vertices, t, n), e);
      t.clampPolygonAnnotation = _;
      const x = (e, t) => {
        const n = [
          { x: e.face.x1, y: e.face.y1 },
          { x: e.face.x1, y: e.face.y2 },
          { x: e.face.x2, y: e.face.y1 },
          { x: e.face.x2, y: e.face.y2 },
        ];
        e.edge &&
          n.push(
            { x: e.edge.ex, y: e.edge.ey1 },
            { x: e.edge.ex, y: e.edge.ey2 },
            { x: e.edge.ex, y: e.edge.ey1 },
            { x: e.edge.ex, y: e.edge.ey2 }
          );
        const r = v(n, t),
          i = r[0].x,
          o = r[0].y,
          a = r[3].x,
          s = r[3].y;
        if (((e.face = { x1: i, x2: a, y1: o, y2: s }), e.edge)) {
          const t = n[4].x,
            r = n[4].y,
            i = n[5].y;
          e.edge = { ex: t, ey1: r, ey2: i };
        }
        return e;
      };
      t.clampCuboidAnnotation = x;
      const T = (e, t) => {
        switch (e.geometry) {
          case o.AnnotationGeometry.Box:
            return b(e, t);
          case o.AnnotationGeometry.Point:
            return ((e, t) => (
              (e.x = i.default.clamp(e.x, 0, t.width - 0)),
              (e.y = i.default.clamp(e.y, 0, t.height - 0)),
              e
            ))(e, t);
          case o.AnnotationGeometry.Line:
            return ((e, t) => (v(e.vertices, t), e))(e, t);
          case o.AnnotationGeometry.Polygon:
            return _(e, t);
          case o.AnnotationGeometry.Cuboid:
            return x(e, t);
          default:
            return e;
        }
      };
      t.clampAnnotation = T;
    },
    132764: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      var r = n(31928),
        i = 6378137;
      function o(e) {
        var t = 0;
        if (e && e.length > 0) {
          t += Math.abs(a(e[0]));
          for (var n = 1; n < e.length; n++) t -= Math.abs(a(e[n]));
        }
        return t;
      }
      function a(e) {
        var t,
          n,
          r,
          o,
          a,
          u,
          c = 0,
          l = e.length;
        if (l > 2) {
          for (u = 0; u < l; u++)
            u === l - 2
              ? ((r = l - 2), (o = l - 1), (a = 0))
              : u === l - 1
              ? ((r = l - 1), (o = 0), (a = 1))
              : ((r = u), (o = u + 1), (a = u + 2)),
              (t = e[r]),
              (n = e[o]),
              (c += (s(e[a][0]) - s(t[0])) * Math.sin(s(n[1])));
          c = (c * i * i) / 2;
        }
        return c;
      }
      function s(e) {
        return (e * Math.PI) / 180;
      }
      t.default = function (e) {
        return r.geomReduce(
          e,
          function (e, t) {
            return (
              e +
              (function (e) {
                var t,
                  n = 0;
                switch (e.type) {
                  case "Polygon":
                    return o(e.coordinates);
                  case "MultiPolygon":
                    for (t = 0; t < e.coordinates.length; t++)
                      n += o(e.coordinates[t]);
                    return n;
                  case "Point":
                  case "MultiPoint":
                  case "LineString":
                  case "MultiLineString":
                    return 0;
                }
                return 0;
              })(t)
            );
          },
          0
        );
      };
    },
    903779: function (e, t) {
      "use strict";
      function n(e, t, n) {
        void 0 === n && (n = {});
        var r = { type: "Feature" };
        return (
          (0 === n.id || n.id) && (r.id = n.id),
          n.bbox && (r.bbox = n.bbox),
          (r.properties = t || {}),
          (r.geometry = e),
          r
        );
      }
      function r(e, t, r) {
        if ((void 0 === r && (r = {}), !e))
          throw new Error("coordinates is required");
        if (!Array.isArray(e)) throw new Error("coordinates must be an Array");
        if (e.length < 2)
          throw new Error("coordinates must be at least 2 numbers long");
        if (!h(e[0]) || !h(e[1]))
          throw new Error("coordinates must contain numbers");
        return n({ type: "Point", coordinates: e }, t, r);
      }
      function i(e, t, r) {
        void 0 === r && (r = {});
        for (var i = 0, o = e; i < o.length; i++) {
          var a = o[i];
          if (a.length < 4)
            throw new Error(
              "Each LinearRing of a Polygon must have 4 or more Positions."
            );
          for (var s = 0; s < a[a.length - 1].length; s++)
            if (a[a.length - 1][s] !== a[0][s])
              throw new Error("First and last Position are not equivalent.");
        }
        return n({ type: "Polygon", coordinates: e }, t, r);
      }
      function o(e, t, r) {
        if ((void 0 === r && (r = {}), e.length < 2))
          throw new Error(
            "coordinates must be an array of two or more positions"
          );
        return n({ type: "LineString", coordinates: e }, t, r);
      }
      function a(e, t) {
        void 0 === t && (t = {});
        var n = { type: "FeatureCollection" };
        return (
          t.id && (n.id = t.id),
          t.bbox && (n.bbox = t.bbox),
          (n.features = e),
          n
        );
      }
      function s(e, t, r) {
        return (
          void 0 === r && (r = {}),
          n({ type: "MultiLineString", coordinates: e }, t, r)
        );
      }
      function u(e, t, r) {
        return (
          void 0 === r && (r = {}),
          n({ type: "MultiPoint", coordinates: e }, t, r)
        );
      }
      function c(e, t, r) {
        return (
          void 0 === r && (r = {}),
          n({ type: "MultiPolygon", coordinates: e }, t, r)
        );
      }
      function l(e, n) {
        void 0 === n && (n = "kilometers");
        var r = t.factors[n];
        if (!r) throw new Error(n + " units is invalid");
        return e * r;
      }
      function f(e, n) {
        void 0 === n && (n = "kilometers");
        var r = t.factors[n];
        if (!r) throw new Error(n + " units is invalid");
        return e / r;
      }
      function d(e) {
        return (180 * (e % (2 * Math.PI))) / Math.PI;
      }
      function h(e) {
        return !isNaN(e) && null !== e && !Array.isArray(e);
      }
      Object.defineProperty(t, "__esModule", { value: !0 }),
        (t.earthRadius = 6371008.8),
        (t.factors = {
          centimeters: 100 * t.earthRadius,
          centimetres: 100 * t.earthRadius,
          degrees: t.earthRadius / 111325,
          feet: 3.28084 * t.earthRadius,
          inches: 39.37 * t.earthRadius,
          kilometers: t.earthRadius / 1e3,
          kilometres: t.earthRadius / 1e3,
          meters: t.earthRadius,
          metres: t.earthRadius,
          miles: t.earthRadius / 1609.344,
          millimeters: 1e3 * t.earthRadius,
          millimetres: 1e3 * t.earthRadius,
          nauticalmiles: t.earthRadius / 1852,
          radians: 1,
          yards: 1.0936 * t.earthRadius,
        }),
        (t.unitsFactors = {
          centimeters: 100,
          centimetres: 100,
          degrees: 1 / 111325,
          feet: 3.28084,
          inches: 39.37,
          kilometers: 0.001,
          kilometres: 0.001,
          meters: 1,
          metres: 1,
          miles: 1 / 1609.344,
          millimeters: 1e3,
          millimetres: 1e3,
          nauticalmiles: 1 / 1852,
          radians: 1 / t.earthRadius,
          yards: 1.0936133,
        }),
        (t.areaFactors = {
          acres: 247105e-9,
          centimeters: 1e4,
          centimetres: 1e4,
          feet: 10.763910417,
          hectares: 1e-4,
          inches: 1550.003100006,
          kilometers: 1e-6,
          kilometres: 1e-6,
          meters: 1,
          metres: 1,
          miles: 386e-9,
          millimeters: 1e6,
          millimetres: 1e6,
          yards: 1.195990046,
        }),
        (t.feature = n),
        (t.geometry = function (e, t, n) {
          switch ((void 0 === n && (n = {}), e)) {
            case "Point":
              return r(t).geometry;
            case "LineString":
              return o(t).geometry;
            case "Polygon":
              return i(t).geometry;
            case "MultiPoint":
              return u(t).geometry;
            case "MultiLineString":
              return s(t).geometry;
            case "MultiPolygon":
              return c(t).geometry;
            default:
              throw new Error(e + " is invalid");
          }
        }),
        (t.point = r),
        (t.points = function (e, t, n) {
          return (
            void 0 === n && (n = {}),
            a(
              e.map(function (e) {
                return r(e, t);
              }),
              n
            )
          );
        }),
        (t.polygon = i),
        (t.polygons = function (e, t, n) {
          return (
            void 0 === n && (n = {}),
            a(
              e.map(function (e) {
                return i(e, t);
              }),
              n
            )
          );
        }),
        (t.lineString = o),
        (t.lineStrings = function (e, t, n) {
          return (
            void 0 === n && (n = {}),
            a(
              e.map(function (e) {
                return o(e, t);
              }),
              n
            )
          );
        }),
        (t.featureCollection = a),
        (t.multiLineString = s),
        (t.multiPoint = u),
        (t.multiPolygon = c),
        (t.geometryCollection = function (e, t, r) {
          return (
            void 0 === r && (r = {}),
            n({ type: "GeometryCollection", geometries: e }, t, r)
          );
        }),
        (t.round = function (e, t) {
          if ((void 0 === t && (t = 0), t && !(t >= 0)))
            throw new Error("precision must be a positive number");
          var n = Math.pow(10, t || 0);
          return Math.round(e * n) / n;
        }),
        (t.radiansToLength = l),
        (t.lengthToRadians = f),
        (t.lengthToDegrees = function (e, t) {
          return d(f(e, t));
        }),
        (t.bearingToAzimuth = function (e) {
          var t = e % 360;
          return t < 0 && (t += 360), t;
        }),
        (t.radiansToDegrees = d),
        (t.degreesToRadians = function (e) {
          return ((e % 360) * Math.PI) / 180;
        }),
        (t.convertLength = function (e, t, n) {
          if (
            (void 0 === t && (t = "kilometers"),
            void 0 === n && (n = "kilometers"),
            !(e >= 0))
          )
            throw new Error("length must be a positive number");
          return l(f(e, t), n);
        }),
        (t.convertArea = function (e, n, r) {
          if (
            (void 0 === n && (n = "meters"),
            void 0 === r && (r = "kilometers"),
            !(e >= 0))
          )
            throw new Error("area must be a positive number");
          var i = t.areaFactors[n];
          if (!i) throw new Error("invalid original units");
          var o = t.areaFactors[r];
          if (!o) throw new Error("invalid final units");
          return (e / i) * o;
        }),
        (t.isNumber = h),
        (t.isObject = function (e) {
          return !!e && e.constructor === Object;
        }),
        (t.validateBBox = function (e) {
          if (!e) throw new Error("bbox is required");
          if (!Array.isArray(e)) throw new Error("bbox must be an Array");
          if (4 !== e.length && 6 !== e.length)
            throw new Error("bbox must be an Array of 4 or 6 numbers");
          e.forEach(function (e) {
            if (!h(e)) throw new Error("bbox must only contain numbers");
          });
        }),
        (t.validateId = function (e) {
          if (!e) throw new Error("id is required");
          if (-1 === ["string", "number"].indexOf(typeof e))
            throw new Error("id must be a number or a string");
        });
    },
    31928: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      var r = n(903779);
      function i(e, t, n) {
        if (null !== e)
          for (
            var r,
              o,
              a,
              s,
              u,
              c,
              l,
              f,
              d = 0,
              h = 0,
              p = e.type,
              g = "FeatureCollection" === p,
              m = "Feature" === p,
              y = g ? e.features.length : 1,
              b = 0;
            b < y;
            b++
          ) {
            u = (f =
              !!(l = g ? e.features[b].geometry : m ? e.geometry : e) &&
              "GeometryCollection" === l.type)
              ? l.geometries.length
              : 1;
            for (var v = 0; v < u; v++) {
              var _ = 0,
                x = 0;
              if (null !== (s = f ? l.geometries[v] : l)) {
                c = s.coordinates;
                var T = s.type;
                switch (
                  ((d =
                    !n || ("Polygon" !== T && "MultiPolygon" !== T) ? 0 : 1),
                  T)
                ) {
                  case null:
                    break;
                  case "Point":
                    if (!1 === t(c, h, b, _, x)) return !1;
                    h++, _++;
                    break;
                  case "LineString":
                  case "MultiPoint":
                    for (r = 0; r < c.length; r++) {
                      if (!1 === t(c[r], h, b, _, x)) return !1;
                      h++, "MultiPoint" === T && _++;
                    }
                    "LineString" === T && _++;
                    break;
                  case "Polygon":
                  case "MultiLineString":
                    for (r = 0; r < c.length; r++) {
                      for (o = 0; o < c[r].length - d; o++) {
                        if (!1 === t(c[r][o], h, b, _, x)) return !1;
                        h++;
                      }
                      "MultiLineString" === T && _++, "Polygon" === T && x++;
                    }
                    "Polygon" === T && _++;
                    break;
                  case "MultiPolygon":
                    for (r = 0; r < c.length; r++) {
                      for (x = 0, o = 0; o < c[r].length; o++) {
                        for (a = 0; a < c[r][o].length - d; a++) {
                          if (!1 === t(c[r][o][a], h, b, _, x)) return !1;
                          h++;
                        }
                        x++;
                      }
                      _++;
                    }
                    break;
                  case "GeometryCollection":
                    for (r = 0; r < s.geometries.length; r++)
                      if (!1 === i(s.geometries[r], t, n)) return !1;
                    break;
                  default:
                    throw new Error("Unknown Geometry Type");
                }
              }
            }
          }
      }
      function o(e, t) {
        var n;
        switch (e.type) {
          case "FeatureCollection":
            for (
              n = 0;
              n < e.features.length && !1 !== t(e.features[n].properties, n);
              n++
            );
            break;
          case "Feature":
            t(e.properties, 0);
        }
      }
      function a(e, t) {
        if ("Feature" === e.type) t(e, 0);
        else if ("FeatureCollection" === e.type)
          for (
            var n = 0;
            n < e.features.length && !1 !== t(e.features[n], n);
            n++
          );
      }
      function s(e, t) {
        var n,
          r,
          i,
          o,
          a,
          s,
          u,
          c,
          l,
          f,
          d = 0,
          h = "FeatureCollection" === e.type,
          p = "Feature" === e.type,
          g = h ? e.features.length : 1;
        for (n = 0; n < g; n++) {
          for (
            s = h ? e.features[n].geometry : p ? e.geometry : e,
              c = h ? e.features[n].properties : p ? e.properties : {},
              l = h ? e.features[n].bbox : p ? e.bbox : void 0,
              f = h ? e.features[n].id : p ? e.id : void 0,
              a = (u = !!s && "GeometryCollection" === s.type)
                ? s.geometries.length
                : 1,
              i = 0;
            i < a;
            i++
          )
            if (null !== (o = u ? s.geometries[i] : s))
              switch (o.type) {
                case "Point":
                case "LineString":
                case "MultiPoint":
                case "Polygon":
                case "MultiLineString":
                case "MultiPolygon":
                  if (!1 === t(o, d, c, l, f)) return !1;
                  break;
                case "GeometryCollection":
                  for (r = 0; r < o.geometries.length; r++)
                    if (!1 === t(o.geometries[r], d, c, l, f)) return !1;
                  break;
                default:
                  throw new Error("Unknown Geometry Type");
              }
            else if (!1 === t(null, d, c, l, f)) return !1;
          d++;
        }
      }
      function u(e, t) {
        s(e, function (e, n, i, o, a) {
          var s,
            u = null === e ? null : e.type;
          switch (u) {
            case null:
            case "Point":
            case "LineString":
            case "Polygon":
              return (
                !1 !== t(r.feature(e, i, { bbox: o, id: a }), n, 0) && void 0
              );
          }
          switch (u) {
            case "MultiPoint":
              s = "Point";
              break;
            case "MultiLineString":
              s = "LineString";
              break;
            case "MultiPolygon":
              s = "Polygon";
          }
          for (var c = 0; c < e.coordinates.length; c++) {
            var l = { type: s, coordinates: e.coordinates[c] };
            if (!1 === t(r.feature(l, i), n, c)) return !1;
          }
        });
      }
      function c(e, t) {
        u(e, function (e, n, o) {
          var a = 0;
          if (e.geometry) {
            var s = e.geometry.type;
            if ("Point" !== s && "MultiPoint" !== s) {
              var u,
                c = 0,
                l = 0,
                f = 0;
              return (
                !1 !==
                  i(e, function (i, s, d, h, p) {
                    if (void 0 === u || n > c || h > l || p > f)
                      return (u = i), (c = n), (l = h), (f = p), void (a = 0);
                    var g = r.lineString([u, i], e.properties);
                    if (!1 === t(g, n, o, p, a)) return !1;
                    a++, (u = i);
                  }) && void 0
              );
            }
          }
        });
      }
      function l(e, t) {
        if (!e) throw new Error("geojson is required");
        u(e, function (e, n, i) {
          if (null !== e.geometry) {
            var o = e.geometry.type,
              a = e.geometry.coordinates;
            switch (o) {
              case "LineString":
                if (!1 === t(e, n, i, 0, 0)) return !1;
                break;
              case "Polygon":
                for (var s = 0; s < a.length; s++)
                  if (!1 === t(r.lineString(a[s], e.properties), n, i, s))
                    return !1;
            }
          }
        });
      }
      (t.coordAll = function (e) {
        var t = [];
        return (
          i(e, function (e) {
            t.push(e);
          }),
          t
        );
      }),
        (t.coordEach = i),
        (t.coordReduce = function (e, t, n, r) {
          var o = n;
          return (
            i(
              e,
              function (e, r, i, a, s) {
                o = 0 === r && void 0 === n ? e : t(o, e, r, i, a, s);
              },
              r
            ),
            o
          );
        }),
        (t.featureEach = a),
        (t.featureReduce = function (e, t, n) {
          var r = n;
          return (
            a(e, function (e, i) {
              r = 0 === i && void 0 === n ? e : t(r, e, i);
            }),
            r
          );
        }),
        (t.findPoint = function (e, t) {
          if (((t = t || {}), !r.isObject(t)))
            throw new Error("options is invalid");
          var n,
            i = t.featureIndex || 0,
            o = t.multiFeatureIndex || 0,
            a = t.geometryIndex || 0,
            s = t.coordIndex || 0,
            u = t.properties;
          switch (e.type) {
            case "FeatureCollection":
              i < 0 && (i = e.features.length + i),
                (u = u || e.features[i].properties),
                (n = e.features[i].geometry);
              break;
            case "Feature":
              (u = u || e.properties), (n = e.geometry);
              break;
            case "Point":
            case "MultiPoint":
              return null;
            case "LineString":
            case "Polygon":
            case "MultiLineString":
            case "MultiPolygon":
              n = e;
              break;
            default:
              throw new Error("geojson is invalid");
          }
          if (null === n) return null;
          var c = n.coordinates;
          switch (n.type) {
            case "Point":
              return r.point(c, u, t);
            case "MultiPoint":
              return o < 0 && (o = c.length + o), r.point(c[o], u, t);
            case "LineString":
              return s < 0 && (s = c.length + s), r.point(c[s], u, t);
            case "Polygon":
              return (
                a < 0 && (a = c.length + a),
                s < 0 && (s = c[a].length + s),
                r.point(c[a][s], u, t)
              );
            case "MultiLineString":
              return (
                o < 0 && (o = c.length + o),
                s < 0 && (s = c[o].length + s),
                r.point(c[o][s], u, t)
              );
            case "MultiPolygon":
              return (
                o < 0 && (o = c.length + o),
                a < 0 && (a = c[o].length + a),
                s < 0 && (s = c[o][a].length - s),
                r.point(c[o][a][s], u, t)
              );
          }
          throw new Error("geojson is invalid");
        }),
        (t.findSegment = function (e, t) {
          if (((t = t || {}), !r.isObject(t)))
            throw new Error("options is invalid");
          var n,
            i = t.featureIndex || 0,
            o = t.multiFeatureIndex || 0,
            a = t.geometryIndex || 0,
            s = t.segmentIndex || 0,
            u = t.properties;
          switch (e.type) {
            case "FeatureCollection":
              i < 0 && (i = e.features.length + i),
                (u = u || e.features[i].properties),
                (n = e.features[i].geometry);
              break;
            case "Feature":
              (u = u || e.properties), (n = e.geometry);
              break;
            case "Point":
            case "MultiPoint":
              return null;
            case "LineString":
            case "Polygon":
            case "MultiLineString":
            case "MultiPolygon":
              n = e;
              break;
            default:
              throw new Error("geojson is invalid");
          }
          if (null === n) return null;
          var c = n.coordinates;
          switch (n.type) {
            case "Point":
            case "MultiPoint":
              return null;
            case "LineString":
              return (
                s < 0 && (s = c.length + s - 1),
                r.lineString([c[s], c[s + 1]], u, t)
              );
            case "Polygon":
              return (
                a < 0 && (a = c.length + a),
                s < 0 && (s = c[a].length + s - 1),
                r.lineString([c[a][s], c[a][s + 1]], u, t)
              );
            case "MultiLineString":
              return (
                o < 0 && (o = c.length + o),
                s < 0 && (s = c[o].length + s - 1),
                r.lineString([c[o][s], c[o][s + 1]], u, t)
              );
            case "MultiPolygon":
              return (
                o < 0 && (o = c.length + o),
                a < 0 && (a = c[o].length + a),
                s < 0 && (s = c[o][a].length - s - 1),
                r.lineString([c[o][a][s], c[o][a][s + 1]], u, t)
              );
          }
          throw new Error("geojson is invalid");
        }),
        (t.flattenEach = u),
        (t.flattenReduce = function (e, t, n) {
          var r = n;
          return (
            u(e, function (e, i, o) {
              r = 0 === i && 0 === o && void 0 === n ? e : t(r, e, i, o);
            }),
            r
          );
        }),
        (t.geomEach = s),
        (t.geomReduce = function (e, t, n) {
          var r = n;
          return (
            s(e, function (e, i, o, a, s) {
              r = 0 === i && void 0 === n ? e : t(r, e, i, o, a, s);
            }),
            r
          );
        }),
        (t.lineEach = l),
        (t.lineReduce = function (e, t, n) {
          var r = n;
          return (
            l(e, function (e, i, o, a) {
              r = 0 === i && void 0 === n ? e : t(r, e, i, o, a);
            }),
            r
          );
        }),
        (t.propEach = o),
        (t.propReduce = function (e, t, n) {
          var r = n;
          return (
            o(e, function (e, i) {
              r = 0 === i && void 0 === n ? e : t(r, e, i);
            }),
            r
          );
        }),
        (t.segmentEach = c),
        (t.segmentReduce = function (e, t, n) {
          var r = n,
            i = !1;
          return (
            c(e, function (e, o, a, s, u) {
              (r = !1 === i && void 0 === n ? e : t(r, e, o, a, s, u)),
                (i = !0);
            }),
            r
          );
        });
    },
    603791: function (e, t) {
      "use strict";
      var n = Math.PI,
        r = 2 * n,
        i = 1e-6,
        o = r - i;
      function a() {
        (this._x0 = this._y0 = this._x1 = this._y1 = null), (this._ = "");
      }
      function s() {
        return new a();
      }
      (a.prototype = s.prototype =
        {
          constructor: a,
          moveTo: function (e, t) {
            this._ +=
              "M" +
              (this._x0 = this._x1 = +e) +
              "," +
              (this._y0 = this._y1 = +t);
          },
          closePath: function () {
            null !== this._x1 &&
              ((this._x1 = this._x0), (this._y1 = this._y0), (this._ += "Z"));
          },
          lineTo: function (e, t) {
            this._ += "L" + (this._x1 = +e) + "," + (this._y1 = +t);
          },
          quadraticCurveTo: function (e, t, n, r) {
            this._ +=
              "Q" +
              +e +
              "," +
              +t +
              "," +
              (this._x1 = +n) +
              "," +
              (this._y1 = +r);
          },
          bezierCurveTo: function (e, t, n, r, i, o) {
            this._ +=
              "C" +
              +e +
              "," +
              +t +
              "," +
              +n +
              "," +
              +r +
              "," +
              (this._x1 = +i) +
              "," +
              (this._y1 = +o);
          },
          arcTo: function (e, t, r, o, a) {
            (e = +e), (t = +t), (r = +r), (o = +o), (a = +a);
            var s = this._x1,
              u = this._y1,
              c = r - e,
              l = o - t,
              f = s - e,
              d = u - t,
              h = f * f + d * d;
            if (a < 0) throw new Error("negative radius: " + a);
            if (null === this._x1)
              this._ += "M" + (this._x1 = e) + "," + (this._y1 = t);
            else if (h > i)
              if (Math.abs(d * c - l * f) > i && a) {
                var p = r - s,
                  g = o - u,
                  m = c * c + l * l,
                  y = p * p + g * g,
                  b = Math.sqrt(m),
                  v = Math.sqrt(h),
                  _ =
                    a *
                    Math.tan((n - Math.acos((m + h - y) / (2 * b * v))) / 2),
                  x = _ / v,
                  T = _ / b;
                Math.abs(x - 1) > i &&
                  (this._ += "L" + (e + x * f) + "," + (t + x * d)),
                  (this._ +=
                    "A" +
                    a +
                    "," +
                    a +
                    ",0,0," +
                    +(d * p > f * g) +
                    "," +
                    (this._x1 = e + T * c) +
                    "," +
                    (this._y1 = t + T * l));
              } else this._ += "L" + (this._x1 = e) + "," + (this._y1 = t);
            else;
          },
          arc: function (e, t, a, s, u, c) {
            (e = +e), (t = +t), (c = !!c);
            var l = (a = +a) * Math.cos(s),
              f = a * Math.sin(s),
              d = e + l,
              h = t + f,
              p = 1 ^ c,
              g = c ? s - u : u - s;
            if (a < 0) throw new Error("negative radius: " + a);
            null === this._x1
              ? (this._ += "M" + d + "," + h)
              : (Math.abs(this._x1 - d) > i || Math.abs(this._y1 - h) > i) &&
                (this._ += "L" + d + "," + h),
              a &&
                (g < 0 && (g = (g % r) + r),
                g > o
                  ? (this._ +=
                      "A" +
                      a +
                      "," +
                      a +
                      ",0,1," +
                      p +
                      "," +
                      (e - l) +
                      "," +
                      (t - f) +
                      "A" +
                      a +
                      "," +
                      a +
                      ",0,1," +
                      p +
                      "," +
                      (this._x1 = d) +
                      "," +
                      (this._y1 = h))
                  : g > i &&
                    (this._ +=
                      "A" +
                      a +
                      "," +
                      a +
                      ",0," +
                      +(g >= n) +
                      "," +
                      p +
                      "," +
                      (this._x1 = e + a * Math.cos(u)) +
                      "," +
                      (this._y1 = t + a * Math.sin(u))));
          },
          rect: function (e, t, n, r) {
            this._ +=
              "M" +
              (this._x0 = this._x1 = +e) +
              "," +
              (this._y0 = this._y1 = +t) +
              "h" +
              +n +
              "v" +
              +r +
              "h" +
              -n +
              "Z";
          },
          toString: function () {
            return this._;
          },
        }),
        (t.Z = s);
    },
    708713: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return u;
        },
      });
      var r = n(603791),
        i = n(217728),
        o = n(404224),
        a = n(540652),
        s = n(641221);
      function u() {
        var e = s.x,
          t = null,
          n = (0, i.Z)(0),
          u = s.y,
          c = (0, i.Z)(!0),
          l = null,
          f = o.Z,
          d = null;
        function h(i) {
          var o,
            a,
            s,
            h,
            p,
            g = i.length,
            m = !1,
            y = new Array(g),
            b = new Array(g);
          for (null == l && (d = f((p = (0, r.Z)()))), o = 0; o <= g; ++o) {
            if (!(o < g && c((h = i[o]), o, i)) === m)
              if ((m = !m)) (a = o), d.areaStart(), d.lineStart();
              else {
                for (d.lineEnd(), d.lineStart(), s = o - 1; s >= a; --s)
                  d.point(y[s], b[s]);
                d.lineEnd(), d.areaEnd();
              }
            m &&
              ((y[o] = +e(h, o, i)),
              (b[o] = +n(h, o, i)),
              d.point(t ? +t(h, o, i) : y[o], u ? +u(h, o, i) : b[o]));
          }
          if (p) return (d = null), p + "" || null;
        }
        function p() {
          return (0, a.Z)().defined(c).curve(f).context(l);
        }
        return (
          (h.x = function (n) {
            return arguments.length
              ? ((e = "function" === typeof n ? n : (0, i.Z)(+n)),
                (t = null),
                h)
              : e;
          }),
          (h.x0 = function (t) {
            return arguments.length
              ? ((e = "function" === typeof t ? t : (0, i.Z)(+t)), h)
              : e;
          }),
          (h.x1 = function (e) {
            return arguments.length
              ? ((t =
                  null == e
                    ? null
                    : "function" === typeof e
                    ? e
                    : (0, i.Z)(+e)),
                h)
              : t;
          }),
          (h.y = function (e) {
            return arguments.length
              ? ((n = "function" === typeof e ? e : (0, i.Z)(+e)),
                (u = null),
                h)
              : n;
          }),
          (h.y0 = function (e) {
            return arguments.length
              ? ((n = "function" === typeof e ? e : (0, i.Z)(+e)), h)
              : n;
          }),
          (h.y1 = function (e) {
            return arguments.length
              ? ((u =
                  null == e
                    ? null
                    : "function" === typeof e
                    ? e
                    : (0, i.Z)(+e)),
                h)
              : u;
          }),
          (h.lineX0 = h.lineY0 =
            function () {
              return p().x(e).y(n);
            }),
          (h.lineY1 = function () {
            return p().x(e).y(u);
          }),
          (h.lineX1 = function () {
            return p().x(t).y(n);
          }),
          (h.defined = function (e) {
            return arguments.length
              ? ((c = "function" === typeof e ? e : (0, i.Z)(!!e)), h)
              : c;
          }),
          (h.curve = function (e) {
            return arguments.length ? ((f = e), null != l && (d = f(l)), h) : f;
          }),
          (h.context = function (e) {
            return arguments.length
              ? (null == e ? (l = d = null) : (d = f((l = e))), h)
              : l;
          }),
          h
        );
      }
    },
    540652: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return s;
        },
      });
      var r = n(603791),
        i = n(217728),
        o = n(404224),
        a = n(641221);
      function s() {
        var e = a.x,
          t = a.y,
          n = (0, i.Z)(!0),
          s = null,
          u = o.Z,
          c = null;
        function l(i) {
          var o,
            a,
            l,
            f = i.length,
            d = !1;
          for (null == s && (c = u((l = (0, r.Z)()))), o = 0; o <= f; ++o)
            !(o < f && n((a = i[o]), o, i)) === d &&
              ((d = !d) ? c.lineStart() : c.lineEnd()),
              d && c.point(+e(a, o, i), +t(a, o, i));
          if (l) return (c = null), l + "" || null;
        }
        return (
          (l.x = function (t) {
            return arguments.length
              ? ((e = "function" === typeof t ? t : (0, i.Z)(+t)), l)
              : e;
          }),
          (l.y = function (e) {
            return arguments.length
              ? ((t = "function" === typeof e ? e : (0, i.Z)(+e)), l)
              : t;
          }),
          (l.defined = function (e) {
            return arguments.length
              ? ((n = "function" === typeof e ? e : (0, i.Z)(!!e)), l)
              : n;
          }),
          (l.curve = function (e) {
            return arguments.length ? ((u = e), null != s && (c = u(s)), l) : u;
          }),
          (l.context = function (e) {
            return arguments.length
              ? (null == e ? (s = c = null) : (c = u((s = e))), l)
              : s;
          }),
          l
        );
      }
    },
    641221: function (e, t, n) {
      "use strict";
      function r(e) {
        return e[0];
      }
      function i(e) {
        return e[1];
      }
      n.d(t, {
        x: function () {
          return r;
        },
        y: function () {
          return i;
        },
      });
    },
    445206: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          FormatSpecifier: function () {
            return Mf.v;
          },
          active: function () {
            return qa;
          },
          arc: function () {
            return iA;
          },
          area: function () {
            return oA.Z;
          },
          areaRadial: function () {
            return mA;
          },
          ascending: function () {
            return i;
          },
          axisBottom: function () {
            return ie;
          },
          axisLeft: function () {
            return oe;
          },
          axisRight: function () {
            return re;
          },
          axisTop: function () {
            return ne;
          },
          bisect: function () {
            return c;
          },
          bisectLeft: function () {
            return u;
          },
          bisectRight: function () {
            return s;
          },
          bisector: function () {
            return o;
          },
          blob: function () {
            return Ol;
          },
          brush: function () {
            return xs;
          },
          brushSelection: function () {
            return bs;
          },
          brushX: function () {
            return vs;
          },
          brushY: function () {
            return _s;
          },
          buffer: function () {
            return Fl;
          },
          chord: function () {
            return Ls;
          },
          clientPoint: function () {
            return Hw;
          },
          cluster: function () {
            return Im;
          },
          color: function () {
            return _u;
          },
          contourDensity: function () {
            return Ac;
          },
          contours: function () {
            return vc;
          },
          create: function () {
            return Bw;
          },
          creator: function () {
            return SM;
          },
          cross: function () {
            return d;
          },
          csv: function () {
            return Wl;
          },
          csvFormat: function () {
            return Hc;
          },
          csvFormatRows: function () {
            return Vc;
          },
          csvParse: function () {
            return zc;
          },
          csvParseRows: function () {
            return Uc;
          },
          cubehelix: function () {
            return cc;
          },
          curveBasis: function () {
            return $A.ZP;
          },
          curveBasisClosed: function () {
            return YA.Z;
          },
          curveBasisOpen: function () {
            return XA.Z;
          },
          curveBundle: function () {
            return KA.Z;
          },
          curveCardinal: function () {
            return ek.ZP;
          },
          curveCardinalClosed: function () {
            return QA.Z;
          },
          curveCardinalOpen: function () {
            return JA.Z;
          },
          curveCatmullRom: function () {
            return rk.Z;
          },
          curveCatmullRomClosed: function () {
            return tk.Z;
          },
          curveCatmullRomOpen: function () {
            return nk.Z;
          },
          curveLinear: function () {
            return lA.Z;
          },
          curveLinearClosed: function () {
            return ik.Z;
          },
          curveMonotoneX: function () {
            return ok.Z;
          },
          curveMonotoneY: function () {
            return ok.s;
          },
          curveNatural: function () {
            return ak.Z;
          },
          curveStep: function () {
            return sk.ZP;
          },
          curveStepAfter: function () {
            return sk.cD;
          },
          curveStepBefore: function () {
            return sk.RN;
          },
          customEvent: function () {
            return Lw;
          },
          descending: function () {
            return h;
          },
          deviation: function () {
            return m;
          },
          dispatch: function () {
            return de;
          },
          drag: function () {
            return Dc;
          },
          dragDisable: function () {
            return wt;
          },
          dragEnable: function () {
            return At;
          },
          dsv: function () {
            return Bl;
          },
          dsvFormat: function () {
            return Wc;
          },
          easeBack: function () {
            return El;
          },
          easeBackIn: function () {
            return Al;
          },
          easeBackInOut: function () {
            return El;
          },
          easeBackOut: function () {
            return kl;
          },
          easeBounce: function () {
            return Tl;
          },
          easeBounceIn: function () {
            return xl;
          },
          easeBounceInOut: function () {
            return Ml;
          },
          easeBounceOut: function () {
            return Tl;
          },
          easeCircle: function () {
            return bl;
          },
          easeCircleIn: function () {
            return ml;
          },
          easeCircleInOut: function () {
            return bl;
          },
          easeCircleOut: function () {
            return yl;
          },
          easeCubic: function () {
            return rl;
          },
          easeCubicIn: function () {
            return tl;
          },
          easeCubicInOut: function () {
            return rl;
          },
          easeCubicOut: function () {
            return nl;
          },
          easeElastic: function () {
            return Ll;
          },
          easeElasticIn: function () {
            return Cl;
          },
          easeElasticInOut: function () {
            return Il;
          },
          easeElasticOut: function () {
            return Ll;
          },
          easeExp: function () {
            return gl;
          },
          easeExpIn: function () {
            return hl;
          },
          easeExpInOut: function () {
            return gl;
          },
          easeExpOut: function () {
            return pl;
          },
          easeLinear: function () {
            return Kc;
          },
          easePoly: function () {
            return al;
          },
          easePolyIn: function () {
            return il;
          },
          easePolyInOut: function () {
            return al;
          },
          easePolyOut: function () {
            return ol;
          },
          easeQuad: function () {
            return el;
          },
          easeQuadIn: function () {
            return Qc;
          },
          easeQuadInOut: function () {
            return el;
          },
          easeQuadOut: function () {
            return Jc;
          },
          easeSin: function () {
            return fl;
          },
          easeSinIn: function () {
            return cl;
          },
          easeSinInOut: function () {
            return fl;
          },
          easeSinOut: function () {
            return ll;
          },
          entries: function () {
            return tu;
          },
          event: function () {
            return ww;
          },
          extent: function () {
            return y;
          },
          forceCenter: function () {
            return Xl;
          },
          forceCollide: function () {
            return cf;
          },
          forceLink: function () {
            return df;
          },
          forceManyBody: function () {
            return yf;
          },
          forceRadial: function () {
            return bf;
          },
          forceSimulation: function () {
            return mf;
          },
          forceX: function () {
            return vf;
          },
          forceY: function () {
            return _f;
          },
          format: function () {
            return xf.WU;
          },
          formatDefaultLocale: function () {
            return xf.ZP;
          },
          formatLocale: function () {
            return Tf.Z;
          },
          formatPrefix: function () {
            return xf.jH;
          },
          formatSpecifier: function () {
            return Mf.Z;
          },
          geoAlbers: function () {
            return qg;
          },
          geoAlbersUsa: function () {
            return Zg;
          },
          geoArea: function () {
            return _d;
          },
          geoAzimuthalEqualArea: function () {
            return Kg;
          },
          geoAzimuthalEqualAreaRaw: function () {
            return $g;
          },
          geoAzimuthalEquidistant: function () {
            return Jg;
          },
          geoAzimuthalEquidistantRaw: function () {
            return Qg;
          },
          geoBounds: function () {
            return dh;
          },
          geoCentroid: function () {
            return wh;
          },
          geoCircle: function () {
            return Fh;
          },
          geoClipAntimeridian: function () {
            return Zh;
          },
          geoClipCircle: function () {
            return Yh;
          },
          geoClipExtent: function () {
            return Qh;
          },
          geoClipRectangle: function () {
            return Kh;
          },
          geoConicConformal: function () {
            return om;
          },
          geoConicConformalRaw: function () {
            return im;
          },
          geoConicEqualArea: function () {
            return Vg;
          },
          geoConicEqualAreaRaw: function () {
            return Hg;
          },
          geoConicEquidistant: function () {
            return cm;
          },
          geoConicEquidistantRaw: function () {
            return um;
          },
          geoContains: function () {
            return vp;
          },
          geoDistance: function () {
            return lp;
          },
          geoEqualEarth: function () {
            return mm;
          },
          geoEqualEarthRaw: function () {
            return gm;
          },
          geoEquirectangular: function () {
            return sm;
          },
          geoEquirectangularRaw: function () {
            return am;
          },
          geoGnomonic: function () {
            return bm;
          },
          geoGnomonicRaw: function () {
            return ym;
          },
          geoGraticule: function () {
            return Tp;
          },
          geoGraticule10: function () {
            return Mp;
          },
          geoIdentity: function () {
            return vm;
          },
          geoInterpolate: function () {
            return wp;
          },
          geoLength: function () {
            return sp;
          },
          geoMercator: function () {
            return tm;
          },
          geoMercatorRaw: function () {
            return em;
          },
          geoNaturalEarth1: function () {
            return xm;
          },
          geoNaturalEarth1Raw: function () {
            return _m;
          },
          geoOrthographic: function () {
            return Mm;
          },
          geoOrthographicRaw: function () {
            return Tm;
          },
          geoPath: function () {
            return Eg;
          },
          geoProjection: function () {
            return jg;
          },
          geoProjectionMutator: function () {
            return zg;
          },
          geoRotation: function () {
            return Sh;
          },
          geoStereographic: function () {
            return Am;
          },
          geoStereographicRaw: function () {
            return wm;
          },
          geoStream: function () {
            return sd;
          },
          geoTransform: function () {
            return Pg;
          },
          geoTransverseMercator: function () {
            return Em;
          },
          geoTransverseMercatorRaw: function () {
            return km;
          },
          gray: function () {
            return zu;
          },
          hcl: function () {
            return Ku;
          },
          hierarchy: function () {
            return Om;
          },
          histogram: function () {
            return I;
          },
          hsl: function () {
            return Iu;
          },
          html: function () {
            return Zl;
          },
          image: function () {
            return zl;
          },
          interpolate: function () {
            return Jy;
          },
          interpolateArray: function () {
            return Vy;
          },
          interpolateBasis: function () {
            return Sy;
          },
          interpolateBasisClosed: function () {
            return Oy;
          },
          interpolateBlues: function () {
            return eM;
          },
          interpolateBrBG: function () {
            return dT;
          },
          interpolateBuGn: function () {
            return LT;
          },
          interpolateBuPu: function () {
            return ST;
          },
          interpolateCividis: function () {
            return fM;
          },
          interpolateCool: function () {
            return pM;
          },
          interpolateCubehelix: function () {
            return wb;
          },
          interpolateCubehelixDefault: function () {
            return dM;
          },
          interpolateCubehelixLong: function () {
            return Ab;
          },
          interpolateDate: function () {
            return Zy;
          },
          interpolateDiscrete: function () {
            return eb;
          },
          interpolateGnBu: function () {
            return NT;
          },
          interpolateGreens: function () {
            return nM;
          },
          interpolateGreys: function () {
            return iM;
          },
          interpolateHcl: function () {
            return xb;
          },
          interpolateHclLong: function () {
            return Tb;
          },
          interpolateHsl: function () {
            return yb;
          },
          interpolateHslLong: function () {
            return bb;
          },
          interpolateHue: function () {
            return tb;
          },
          interpolateInferno: function () {
            return AM;
          },
          interpolateLab: function () {
            return vb;
          },
          interpolateMagma: function () {
            return wM;
          },
          interpolateNumber: function () {
            return Yy;
          },
          interpolateNumberArray: function () {
            return Uy;
          },
          interpolateObject: function () {
            return Xy;
          },
          interpolateOrRd: function () {
            return DT;
          },
          interpolateOranges: function () {
            return lM;
          },
          interpolatePRGn: function () {
            return pT;
          },
          interpolatePiYG: function () {
            return mT;
          },
          interpolatePlasma: function () {
            return kM;
          },
          interpolatePuBu: function () {
            return WT;
          },
          interpolatePuBuGn: function () {
            return GT;
          },
          interpolatePuOr: function () {
            return bT;
          },
          interpolatePuRd: function () {
            return zT;
          },
          interpolatePurples: function () {
            return aM;
          },
          interpolateRainbow: function () {
            return mM;
          },
          interpolateRdBu: function () {
            return _T;
          },
          interpolateRdGy: function () {
            return TT;
          },
          interpolateRdPu: function () {
            return HT;
          },
          interpolateRdYlBu: function () {
            return wT;
          },
          interpolateRdYlGn: function () {
            return kT;
          },
          interpolateReds: function () {
            return uM;
          },
          interpolateRgb: function () {
            return By;
          },
          interpolateRgbBasis: function () {
            return jy;
          },
          interpolateRgbBasisClosed: function () {
            return zy;
          },
          interpolateRound: function () {
            return nb;
          },
          interpolateSinebow: function () {
            return _M;
          },
          interpolateSpectral: function () {
            return PT;
          },
          interpolateString: function () {
            return Qy;
          },
          interpolateTransformCss: function () {
            return fb;
          },
          interpolateTransformSvg: function () {
            return db;
          },
          interpolateTurbo: function () {
            return xM;
          },
          interpolateViridis: function () {
            return MM;
          },
          interpolateWarm: function () {
            return hM;
          },
          interpolateYlGn: function () {
            return YT;
          },
          interpolateYlGnBu: function () {
            return qT;
          },
          interpolateYlOrBr: function () {
            return $T;
          },
          interpolateYlOrRd: function () {
            return QT;
          },
          interpolateZoom: function () {
            return gb;
          },
          interrupt: function () {
            return ho;
          },
          interval: function () {
            return Ak;
          },
          isoFormat: function () {
            return Tk;
          },
          isoParse: function () {
            return wk;
          },
          json: function () {
            return Hl;
          },
          keys: function () {
            return Js;
          },
          lab: function () {
            return Uu;
          },
          lch: function () {
            return $u;
          },
          line: function () {
            return aA.Z;
          },
          lineRadial: function () {
            return gA;
          },
          linkHorizontal: function () {
            return kA;
          },
          linkRadial: function () {
            return PA;
          },
          linkVertical: function () {
            return EA;
          },
          local: function () {
            return jw;
          },
          map: function () {
            return Us;
          },
          matcher: function () {
            return RM;
          },
          max: function () {
            return F;
          },
          mean: function () {
            return D;
          },
          median: function () {
            return R;
          },
          merge: function () {
            return G;
          },
          min: function () {
            return B;
          },
          mouse: function () {
            return Vw;
          },
          namespace: function () {
            return CM;
          },
          namespaces: function () {
            return PM;
          },
          nest: function () {
            return Hs;
          },
          now: function () {
            return Ki;
          },
          pack: function () {
            return iy;
          },
          packEnclose: function () {
            return Bm;
          },
          packSiblings: function () {
            return Qm;
          },
          pairs: function () {
            return l;
          },
          partition: function () {
            return ly;
          },
          path: function () {
            return Os.Z;
          },
          permute: function () {
            return W;
          },
          pie: function () {
            return cA;
          },
          piecewise: function () {
            return kb;
          },
          pointRadial: function () {
            return yA;
          },
          polygonArea: function () {
            return Pb;
          },
          polygonCentroid: function () {
            return Cb;
          },
          polygonContains: function () {
            return Nb;
          },
          polygonHull: function () {
            return Ob;
          },
          polygonLength: function () {
            return Fb;
          },
          precisionFixed: function () {
            return Af;
          },
          precisionPrefix: function () {
            return kf;
          },
          precisionRound: function () {
            return Ef;
          },
          quadtree: function () {
            return nf;
          },
          quantile: function () {
            return S;
          },
          quantize: function () {
            return Eb;
          },
          radialArea: function () {
            return mA;
          },
          radialLine: function () {
            return gA;
          },
          randomBates: function () {
            return jb;
          },
          randomExponential: function () {
            return zb;
          },
          randomIrwinHall: function () {
            return Wb;
          },
          randomLogNormal: function () {
            return Bb;
          },
          randomNormal: function () {
            return Gb;
          },
          randomUniform: function () {
            return Rb;
          },
          range: function () {
            return M;
          },
          rgb: function () {
            return wu;
          },
          ribbon: function () {
            return Bs;
          },
          scaleBand: function () {
            return $b;
          },
          scaleDiverging: function () {
            return Yx;
          },
          scaleDivergingLog: function () {
            return Xx;
          },
          scaleDivergingPow: function () {
            return Kx;
          },
          scaleDivergingSqrt: function () {
            return Qx;
          },
          scaleDivergingSymlog: function () {
            return $x;
          },
          scaleIdentity: function () {
            return dv;
          },
          scaleImplicit: function () {
            return Yb;
          },
          scaleLinear: function () {
            return fv;
          },
          scaleLog: function () {
            return xv;
          },
          scaleOrdinal: function () {
            return Xb;
          },
          scalePoint: function () {
            return Qb;
          },
          scalePow: function () {
            return Lv;
          },
          scaleQuantile: function () {
            return Sv;
          },
          scaleQuantize: function () {
            return Ov;
          },
          scaleSequential: function () {
            return jx;
          },
          scaleSequentialLog: function () {
            return zx;
          },
          scaleSequentialPow: function () {
            return Hx;
          },
          scaleSequentialQuantile: function () {
            return qx;
          },
          scaleSequentialSqrt: function () {
            return Vx;
          },
          scaleSequentialSymlog: function () {
            return Ux;
          },
          scaleSqrt: function () {
            return Iv;
          },
          scaleSymlog: function () {
            return Av;
          },
          scaleThreshold: function () {
            return Nv;
          },
          scaleTime: function () {
            return Nx;
          },
          scaleUtc: function () {
            return Gx;
          },
          scan: function () {
            return j;
          },
          schemeAccent: function () {
            return tT;
          },
          schemeBlues: function () {
            return JT;
          },
          schemeBrBG: function () {
            return fT;
          },
          schemeBuGn: function () {
            return CT;
          },
          schemeBuPu: function () {
            return IT;
          },
          schemeCategory10: function () {
            return eT;
          },
          schemeDark2: function () {
            return nT;
          },
          schemeGnBu: function () {
            return OT;
          },
          schemeGreens: function () {
            return tM;
          },
          schemeGreys: function () {
            return rM;
          },
          schemeOrRd: function () {
            return FT;
          },
          schemeOranges: function () {
            return cM;
          },
          schemePRGn: function () {
            return hT;
          },
          schemePaired: function () {
            return rT;
          },
          schemePastel1: function () {
            return iT;
          },
          schemePastel2: function () {
            return oT;
          },
          schemePiYG: function () {
            return gT;
          },
          schemePuBu: function () {
            return BT;
          },
          schemePuBuGn: function () {
            return RT;
          },
          schemePuOr: function () {
            return yT;
          },
          schemePuRd: function () {
            return jT;
          },
          schemePurples: function () {
            return oM;
          },
          schemeRdBu: function () {
            return vT;
          },
          schemeRdGy: function () {
            return xT;
          },
          schemeRdPu: function () {
            return UT;
          },
          schemeRdYlBu: function () {
            return MT;
          },
          schemeRdYlGn: function () {
            return AT;
          },
          schemeReds: function () {
            return sM;
          },
          schemeSet1: function () {
            return aT;
          },
          schemeSet2: function () {
            return sT;
          },
          schemeSet3: function () {
            return uT;
          },
          schemeSpectral: function () {
            return ET;
          },
          schemeTableau10: function () {
            return cT;
          },
          schemeYlGn: function () {
            return ZT;
          },
          schemeYlGnBu: function () {
            return VT;
          },
          schemeYlOrBr: function () {
            return XT;
          },
          schemeYlOrRd: function () {
            return KT;
          },
          select: function () {
            return Gw;
          },
          selectAll: function () {
            return qw;
          },
          selection: function () {
            return Rw;
          },
          selector: function () {
            return NM;
          },
          selectorAll: function () {
            return DM;
          },
          set: function () {
            return Qs;
          },
          shuffle: function () {
            return z;
          },
          stack: function () {
            return uk.Z;
          },
          stackOffsetDiverging: function () {
            return lk.Z;
          },
          stackOffsetExpand: function () {
            return ck.Z;
          },
          stackOffsetNone: function () {
            return fk.Z;
          },
          stackOffsetSilhouette: function () {
            return dk.Z;
          },
          stackOffsetWiggle: function () {
            return hk.Z;
          },
          stackOrderAppearance: function () {
            return pk.Z;
          },
          stackOrderAscending: function () {
            return gk.Z;
          },
          stackOrderDescending: function () {
            return mk.Z;
          },
          stackOrderInsideOut: function () {
            return yk.Z;
          },
          stackOrderNone: function () {
            return bk.Z;
          },
          stackOrderReverse: function () {
            return vk.Z;
          },
          stratify: function () {
            return gy;
          },
          style: function () {
            return JM;
          },
          sum: function () {
            return U;
          },
          svg: function () {
            return Yl;
          },
          symbol: function () {
            return ZA;
          },
          symbolCircle: function () {
            return CA;
          },
          symbolCross: function () {
            return LA;
          },
          symbolDiamond: function () {
            return OA;
          },
          symbolSquare: function () {
            return GA;
          },
          symbolStar: function () {
            return RA;
          },
          symbolTriangle: function () {
            return WA;
          },
          symbolWye: function () {
            return VA;
          },
          symbols: function () {
            return qA;
          },
          text: function () {
            return Rl;
          },
          thresholdFreedmanDiaconis: function () {
            return O;
          },
          thresholdScott: function () {
            return N;
          },
          thresholdSturges: function () {
            return L;
          },
          tickFormat: function () {
            return cv;
          },
          tickIncrement: function () {
            return P;
          },
          tickStep: function () {
            return C;
          },
          ticks: function () {
            return E;
          },
          timeDay: function () {
            return jv;
          },
          timeDays: function () {
            return zv;
          },
          timeFormat: function () {
            return r_;
          },
          timeFormatDefaultLocale: function () {
            return wx;
          },
          timeFormatLocale: function () {
            return t_;
          },
          timeFriday: function () {
            return Rv.mC;
          },
          timeFridays: function () {
            return Rv.b$;
          },
          timeHour: function () {
            return Uv.Z;
          },
          timeHours: function () {
            return Uv.i;
          },
          timeInterval: function () {
            return Gv.Z;
          },
          timeMillisecond: function () {
            return qv.Z;
          },
          timeMilliseconds: function () {
            return qv.m;
          },
          timeMinute: function () {
            return Hv.Z;
          },
          timeMinutes: function () {
            return Hv.L;
          },
          timeMonday: function () {
            return Rv.wA;
          },
          timeMondays: function () {
            return Rv.bJ;
          },
          timeMonth: function () {
            return Dv.Z;
          },
          timeMonths: function () {
            return Dv.e;
          },
          timeParse: function () {
            return i_;
          },
          timeSaturday: function () {
            return Rv.EY;
          },
          timeSaturdays: function () {
            return Rv.Ff;
          },
          timeSecond: function () {
            return Vv.Z;
          },
          timeSeconds: function () {
            return Vv.m;
          },
          timeSunday: function () {
            return Rv.OM;
          },
          timeSundays: function () {
            return Rv.vm;
          },
          timeThursday: function () {
            return Rv.bL;
          },
          timeThursdays: function () {
            return Rv.$t;
          },
          timeTuesday: function () {
            return Rv.sy;
          },
          timeTuesdays: function () {
            return Rv.aU;
          },
          timeWednesday: function () {
            return Rv.zg;
          },
          timeWednesdays: function () {
            return Rv.Ld;
          },
          timeWeek: function () {
            return Rv.OM;
          },
          timeWeeks: function () {
            return Rv.vm;
          },
          timeYear: function () {
            return Fv.Z;
          },
          timeYears: function () {
            return Fv.g;
          },
          timeout: function () {
            return oo;
          },
          timer: function () {
            return eo;
          },
          timerFlush: function () {
            return to;
          },
          touch: function () {
            return Zw;
          },
          touches: function () {
            return Yw;
          },
          transition: function () {
            return Wa;
          },
          transpose: function () {
            return H;
          },
          tree: function () {
            return Ty;
          },
          treemap: function () {
            return Ey;
          },
          treemapBinary: function () {
            return Py;
          },
          treemapDice: function () {
            return cy;
          },
          treemapResquarify: function () {
            return Ly;
          },
          treemapSlice: function () {
            return My;
          },
          treemapSliceDice: function () {
            return Cy;
          },
          treemapSquarify: function () {
            return ky;
          },
          tsv: function () {
            return jl;
          },
          tsvFormat: function () {
            return Xc;
          },
          tsvFormatRows: function () {
            return $c;
          },
          tsvParse: function () {
            return Zc;
          },
          tsvParseRows: function () {
            return Yc;
          },
          utcDay: function () {
            return Xv;
          },
          utcDays: function () {
            return $v;
          },
          utcFormat: function () {
            return o_;
          },
          utcFriday: function () {
            return Zv.QQ;
          },
          utcFridays: function () {
            return Zv.fz;
          },
          utcHour: function () {
            return Dx.Z;
          },
          utcHours: function () {
            return Dx.X;
          },
          utcMillisecond: function () {
            return qv.Z;
          },
          utcMilliseconds: function () {
            return qv.m;
          },
          utcMinute: function () {
            return Rx.Z;
          },
          utcMinutes: function () {
            return Rx.N;
          },
          utcMonday: function () {
            return Zv.l6;
          },
          utcMondays: function () {
            return Zv.$3;
          },
          utcMonth: function () {
            return Fx.Z;
          },
          utcMonths: function () {
            return Fx.K;
          },
          utcParse: function () {
            return a_;
          },
          utcSaturday: function () {
            return Zv.g4;
          },
          utcSaturdays: function () {
            return Zv.Q_;
          },
          utcSecond: function () {
            return Vv.Z;
          },
          utcSeconds: function () {
            return Vv.m;
          },
          utcSunday: function () {
            return Zv.Ox;
          },
          utcSundays: function () {
            return Zv.SU;
          },
          utcThursday: function () {
            return Zv.hB;
          },
          utcThursdays: function () {
            return Zv.xj;
          },
          utcTuesday: function () {
            return Zv.J1;
          },
          utcTuesdays: function () {
            return Zv.DK;
          },
          utcWednesday: function () {
            return Zv.b3;
          },
          utcWednesdays: function () {
            return Zv.uy;
          },
          utcWeek: function () {
            return Zv.Ox;
          },
          utcWeeks: function () {
            return Zv.SU;
          },
          utcYear: function () {
            return Kv.Z;
          },
          utcYears: function () {
            return Kv.D;
          },
          values: function () {
            return eu;
          },
          variance: function () {
            return g;
          },
          version: function () {
            return r;
          },
          voronoi: function () {
            return fE;
          },
          window: function () {
            return XM;
          },
          xml: function () {
            return ql;
          },
          zip: function () {
            return q;
          },
          zoom: function () {
            return AE;
          },
          zoomIdentity: function () {
            return gE;
          },
          zoomTransform: function () {
            return mE;
          },
        });
      var r = "5.16.0";
      function i(e, t) {
        return e < t ? -1 : e > t ? 1 : e >= t ? 0 : NaN;
      }
      function o(e) {
        var t;
        return (
          1 === e.length &&
            ((t = e),
            (e = function (e, n) {
              return i(t(e), n);
            })),
          {
            left: function (t, n, r, i) {
              for (null == r && (r = 0), null == i && (i = t.length); r < i; ) {
                var o = (r + i) >>> 1;
                e(t[o], n) < 0 ? (r = o + 1) : (i = o);
              }
              return r;
            },
            right: function (t, n, r, i) {
              for (null == r && (r = 0), null == i && (i = t.length); r < i; ) {
                var o = (r + i) >>> 1;
                e(t[o], n) > 0 ? (i = o) : (r = o + 1);
              }
              return r;
            },
          }
        );
      }
      var a = o(i),
        s = a.right,
        u = a.left,
        c = s;
      function l(e, t) {
        null == t && (t = f);
        for (
          var n = 0, r = e.length - 1, i = e[0], o = new Array(r < 0 ? 0 : r);
          n < r;

        )
          o[n] = t(i, (i = e[++n]));
        return o;
      }
      function f(e, t) {
        return [e, t];
      }
      function d(e, t, n) {
        var r,
          i,
          o,
          a,
          s = e.length,
          u = t.length,
          c = new Array(s * u);
        for (null == n && (n = f), r = o = 0; r < s; ++r)
          for (a = e[r], i = 0; i < u; ++i, ++o) c[o] = n(a, t[i]);
        return c;
      }
      function h(e, t) {
        return t < e ? -1 : t > e ? 1 : t >= e ? 0 : NaN;
      }
      function p(e) {
        return null === e ? NaN : +e;
      }
      function g(e, t) {
        var n,
          r,
          i = e.length,
          o = 0,
          a = -1,
          s = 0,
          u = 0;
        if (null == t)
          for (; ++a < i; )
            isNaN((n = p(e[a]))) || (u += (r = n - s) * (n - (s += r / ++o)));
        else
          for (; ++a < i; )
            isNaN((n = p(t(e[a], a, e)))) ||
              (u += (r = n - s) * (n - (s += r / ++o)));
        if (o > 1) return u / (o - 1);
      }
      function m(e, t) {
        var n = g(e, t);
        return n ? Math.sqrt(n) : n;
      }
      function y(e, t) {
        var n,
          r,
          i,
          o = e.length,
          a = -1;
        if (null == t) {
          for (; ++a < o; )
            if (null != (n = e[a]) && n >= n)
              for (r = i = n; ++a < o; )
                null != (n = e[a]) && (r > n && (r = n), i < n && (i = n));
        } else
          for (; ++a < o; )
            if (null != (n = t(e[a], a, e)) && n >= n)
              for (r = i = n; ++a < o; )
                null != (n = t(e[a], a, e)) &&
                  (r > n && (r = n), i < n && (i = n));
        return [r, i];
      }
      var b = Array.prototype,
        v = b.slice,
        _ = b.map;
      function x(e) {
        return function () {
          return e;
        };
      }
      function T(e) {
        return e;
      }
      function M(e, t, n) {
        (e = +e),
          (t = +t),
          (n =
            (i = arguments.length) < 2
              ? ((t = e), (e = 0), 1)
              : i < 3
              ? 1
              : +n);
        for (
          var r = -1,
            i = 0 | Math.max(0, Math.ceil((t - e) / n)),
            o = new Array(i);
          ++r < i;

        )
          o[r] = e + r * n;
        return o;
      }
      var w = Math.sqrt(50),
        A = Math.sqrt(10),
        k = Math.sqrt(2);
      function E(e, t, n) {
        var r,
          i,
          o,
          a,
          s = -1;
        if (((n = +n), (e = +e) === (t = +t) && n > 0)) return [e];
        if (
          ((r = t < e) && ((i = e), (e = t), (t = i)),
          0 === (a = P(e, t, n)) || !isFinite(a))
        )
          return [];
        if (a > 0)
          for (
            e = Math.ceil(e / a),
              t = Math.floor(t / a),
              o = new Array((i = Math.ceil(t - e + 1)));
            ++s < i;

          )
            o[s] = (e + s) * a;
        else
          for (
            e = Math.floor(e * a),
              t = Math.ceil(t * a),
              o = new Array((i = Math.ceil(e - t + 1)));
            ++s < i;

          )
            o[s] = (e - s) / a;
        return r && o.reverse(), o;
      }
      function P(e, t, n) {
        var r = (t - e) / Math.max(0, n),
          i = Math.floor(Math.log(r) / Math.LN10),
          o = r / Math.pow(10, i);
        return i >= 0
          ? (o >= w ? 10 : o >= A ? 5 : o >= k ? 2 : 1) * Math.pow(10, i)
          : -Math.pow(10, -i) / (o >= w ? 10 : o >= A ? 5 : o >= k ? 2 : 1);
      }
      function C(e, t, n) {
        var r = Math.abs(t - e) / Math.max(0, n),
          i = Math.pow(10, Math.floor(Math.log(r) / Math.LN10)),
          o = r / i;
        return (
          o >= w ? (i *= 10) : o >= A ? (i *= 5) : o >= k && (i *= 2),
          t < e ? -i : i
        );
      }
      function L(e) {
        return Math.ceil(Math.log(e.length) / Math.LN2) + 1;
      }
      function I() {
        var e = T,
          t = y,
          n = L;
        function r(r) {
          var i,
            o,
            a = r.length,
            s = new Array(a);
          for (i = 0; i < a; ++i) s[i] = e(r[i], i, r);
          var u = t(s),
            l = u[0],
            f = u[1],
            d = n(s, l, f);
          Array.isArray(d) ||
            ((d = C(l, f, d)), (d = M(Math.ceil(l / d) * d, f, d)));
          for (var h = d.length; d[0] <= l; ) d.shift(), --h;
          for (; d[h - 1] > f; ) d.pop(), --h;
          var p,
            g = new Array(h + 1);
          for (i = 0; i <= h; ++i)
            ((p = g[i] = []).x0 = i > 0 ? d[i - 1] : l),
              (p.x1 = i < h ? d[i] : f);
          for (i = 0; i < a; ++i)
            l <= (o = s[i]) && o <= f && g[c(d, o, 0, h)].push(r[i]);
          return g;
        }
        return (
          (r.value = function (t) {
            return arguments.length
              ? ((e = "function" === typeof t ? t : x(t)), r)
              : e;
          }),
          (r.domain = function (e) {
            return arguments.length
              ? ((t = "function" === typeof e ? e : x([e[0], e[1]])), r)
              : t;
          }),
          (r.thresholds = function (e) {
            return arguments.length
              ? ((n =
                  "function" === typeof e
                    ? e
                    : Array.isArray(e)
                    ? x(v.call(e))
                    : x(e)),
                r)
              : n;
          }),
          r
        );
      }
      function S(e, t, n) {
        if ((null == n && (n = p), (r = e.length))) {
          if ((t = +t) <= 0 || r < 2) return +n(e[0], 0, e);
          if (t >= 1) return +n(e[r - 1], r - 1, e);
          var r,
            i = (r - 1) * t,
            o = Math.floor(i),
            a = +n(e[o], o, e);
          return a + (+n(e[o + 1], o + 1, e) - a) * (i - o);
        }
      }
      function O(e, t, n) {
        return (
          (e = _.call(e, p).sort(i)),
          Math.ceil(
            (n - t) /
              (2 * (S(e, 0.75) - S(e, 0.25)) * Math.pow(e.length, -1 / 3))
          )
        );
      }
      function N(e, t, n) {
        return Math.ceil((n - t) / (3.5 * m(e) * Math.pow(e.length, -1 / 3)));
      }
      function F(e, t) {
        var n,
          r,
          i = e.length,
          o = -1;
        if (null == t) {
          for (; ++o < i; )
            if (null != (n = e[o]) && n >= n)
              for (r = n; ++o < i; ) null != (n = e[o]) && n > r && (r = n);
        } else
          for (; ++o < i; )
            if (null != (n = t(e[o], o, e)) && n >= n)
              for (r = n; ++o < i; )
                null != (n = t(e[o], o, e)) && n > r && (r = n);
        return r;
      }
      function D(e, t) {
        var n,
          r = e.length,
          i = r,
          o = -1,
          a = 0;
        if (null == t) for (; ++o < r; ) isNaN((n = p(e[o]))) ? --i : (a += n);
        else for (; ++o < r; ) isNaN((n = p(t(e[o], o, e)))) ? --i : (a += n);
        if (i) return a / i;
      }
      function R(e, t) {
        var n,
          r = e.length,
          o = -1,
          a = [];
        if (null == t) for (; ++o < r; ) isNaN((n = p(e[o]))) || a.push(n);
        else for (; ++o < r; ) isNaN((n = p(t(e[o], o, e)))) || a.push(n);
        return S(a.sort(i), 0.5);
      }
      function G(e) {
        for (var t, n, r, i = e.length, o = -1, a = 0; ++o < i; )
          a += e[o].length;
        for (n = new Array(a); --i >= 0; )
          for (t = (r = e[i]).length; --t >= 0; ) n[--a] = r[t];
        return n;
      }
      function B(e, t) {
        var n,
          r,
          i = e.length,
          o = -1;
        if (null == t) {
          for (; ++o < i; )
            if (null != (n = e[o]) && n >= n)
              for (r = n; ++o < i; ) null != (n = e[o]) && r > n && (r = n);
        } else
          for (; ++o < i; )
            if (null != (n = t(e[o], o, e)) && n >= n)
              for (r = n; ++o < i; )
                null != (n = t(e[o], o, e)) && r > n && (r = n);
        return r;
      }
      function W(e, t) {
        for (var n = t.length, r = new Array(n); n--; ) r[n] = e[t[n]];
        return r;
      }
      function j(e, t) {
        if ((n = e.length)) {
          var n,
            r,
            o = 0,
            a = 0,
            s = e[a];
          for (null == t && (t = i); ++o < n; )
            (t((r = e[o]), s) < 0 || 0 !== t(s, s)) && ((s = r), (a = o));
          return 0 === t(s, s) ? a : void 0;
        }
      }
      function z(e, t, n) {
        for (
          var r, i, o = (null == n ? e.length : n) - (t = null == t ? 0 : +t);
          o;

        )
          (i = (Math.random() * o--) | 0),
            (r = e[o + t]),
            (e[o + t] = e[i + t]),
            (e[i + t] = r);
        return e;
      }
      function U(e, t) {
        var n,
          r = e.length,
          i = -1,
          o = 0;
        if (null == t) for (; ++i < r; ) (n = +e[i]) && (o += n);
        else for (; ++i < r; ) (n = +t(e[i], i, e)) && (o += n);
        return o;
      }
      function H(e) {
        if (!(i = e.length)) return [];
        for (var t = -1, n = B(e, V), r = new Array(n); ++t < n; )
          for (var i, o = -1, a = (r[t] = new Array(i)); ++o < i; )
            a[o] = e[o][t];
        return r;
      }
      function V(e) {
        return e.length;
      }
      function q() {
        return H(arguments);
      }
      var Z = Array.prototype.slice;
      function Y(e) {
        return e;
      }
      var X = 1e-6;
      function $(e) {
        return "translate(" + (e + 0.5) + ",0)";
      }
      function K(e) {
        return "translate(0," + (e + 0.5) + ")";
      }
      function Q(e) {
        return function (t) {
          return +e(t);
        };
      }
      function J(e) {
        var t = Math.max(0, e.bandwidth() - 1) / 2;
        return (
          e.round() && (t = Math.round(t)),
          function (n) {
            return +e(n) + t;
          }
        );
      }
      function ee() {
        return !this.__axis;
      }
      function te(e, t) {
        var n = [],
          r = null,
          i = null,
          o = 6,
          a = 6,
          s = 3,
          u = 1 === e || 4 === e ? -1 : 1,
          c = 4 === e || 2 === e ? "x" : "y",
          l = 1 === e || 3 === e ? $ : K;
        function f(f) {
          var d = null == r ? (t.ticks ? t.ticks.apply(t, n) : t.domain()) : r,
            h = null == i ? (t.tickFormat ? t.tickFormat.apply(t, n) : Y) : i,
            p = Math.max(o, 0) + s,
            g = t.range(),
            m = +g[0] + 0.5,
            y = +g[g.length - 1] + 0.5,
            b = (t.bandwidth ? J : Q)(t.copy()),
            v = f.selection ? f.selection() : f,
            _ = v.selectAll(".domain").data([null]),
            x = v.selectAll(".tick").data(d, t).order(),
            T = x.exit(),
            M = x.enter().append("g").attr("class", "tick"),
            w = x.select("line"),
            A = x.select("text");
          (_ = _.merge(
            _.enter()
              .insert("path", ".tick")
              .attr("class", "domain")
              .attr("stroke", "currentColor")
          )),
            (x = x.merge(M)),
            (w = w.merge(
              M.append("line")
                .attr("stroke", "currentColor")
                .attr(c + "2", u * o)
            )),
            (A = A.merge(
              M.append("text")
                .attr("fill", "currentColor")
                .attr(c, u * p)
                .attr("dy", 1 === e ? "0em" : 3 === e ? "0.71em" : "0.32em")
            )),
            f !== v &&
              ((_ = _.transition(f)),
              (x = x.transition(f)),
              (w = w.transition(f)),
              (A = A.transition(f)),
              (T = T.transition(f)
                .attr("opacity", X)
                .attr("transform", function (e) {
                  return isFinite((e = b(e)))
                    ? l(e)
                    : this.getAttribute("transform");
                })),
              M.attr("opacity", X).attr("transform", function (e) {
                var t = this.parentNode.__axis;
                return l(t && isFinite((t = t(e))) ? t : b(e));
              })),
            T.remove(),
            _.attr(
              "d",
              4 === e || 2 == e
                ? a
                  ? "M" + u * a + "," + m + "H0.5V" + y + "H" + u * a
                  : "M0.5," + m + "V" + y
                : a
                ? "M" + m + "," + u * a + "V0.5H" + y + "V" + u * a
                : "M" + m + ",0.5H" + y
            ),
            x.attr("opacity", 1).attr("transform", function (e) {
              return l(b(e));
            }),
            w.attr(c + "2", u * o),
            A.attr(c, u * p).text(h),
            v
              .filter(ee)
              .attr("fill", "none")
              .attr("font-size", 10)
              .attr("font-family", "sans-serif")
              .attr(
                "text-anchor",
                2 === e ? "start" : 4 === e ? "end" : "middle"
              ),
            v.each(function () {
              this.__axis = b;
            });
        }
        return (
          (f.scale = function (e) {
            return arguments.length ? ((t = e), f) : t;
          }),
          (f.ticks = function () {
            return (n = Z.call(arguments)), f;
          }),
          (f.tickArguments = function (e) {
            return arguments.length
              ? ((n = null == e ? [] : Z.call(e)), f)
              : n.slice();
          }),
          (f.tickValues = function (e) {
            return arguments.length
              ? ((r = null == e ? null : Z.call(e)), f)
              : r && r.slice();
          }),
          (f.tickFormat = function (e) {
            return arguments.length ? ((i = e), f) : i;
          }),
          (f.tickSize = function (e) {
            return arguments.length ? ((o = a = +e), f) : o;
          }),
          (f.tickSizeInner = function (e) {
            return arguments.length ? ((o = +e), f) : o;
          }),
          (f.tickSizeOuter = function (e) {
            return arguments.length ? ((a = +e), f) : a;
          }),
          (f.tickPadding = function (e) {
            return arguments.length ? ((s = +e), f) : s;
          }),
          f
        );
      }
      function ne(e) {
        return te(1, e);
      }
      function re(e) {
        return te(2, e);
      }
      function ie(e) {
        return te(3, e);
      }
      function oe(e) {
        return te(4, e);
      }
      var ae = { value: function () {} };
      function se() {
        for (var e, t = 0, n = arguments.length, r = {}; t < n; ++t) {
          if (!(e = arguments[t] + "") || e in r || /[\s.]/.test(e))
            throw new Error("illegal type: " + e);
          r[e] = [];
        }
        return new ue(r);
      }
      function ue(e) {
        this._ = e;
      }
      function ce(e, t) {
        return e
          .trim()
          .split(/^|\s+/)
          .map(function (e) {
            var n = "",
              r = e.indexOf(".");
            if (
              (r >= 0 && ((n = e.slice(r + 1)), (e = e.slice(0, r))),
              e && !t.hasOwnProperty(e))
            )
              throw new Error("unknown type: " + e);
            return { type: e, name: n };
          });
      }
      function le(e, t) {
        for (var n, r = 0, i = e.length; r < i; ++r)
          if ((n = e[r]).name === t) return n.value;
      }
      function fe(e, t, n) {
        for (var r = 0, i = e.length; r < i; ++r)
          if (e[r].name === t) {
            (e[r] = ae), (e = e.slice(0, r).concat(e.slice(r + 1)));
            break;
          }
        return null != n && e.push({ name: t, value: n }), e;
      }
      ue.prototype = se.prototype = {
        constructor: ue,
        on: function (e, t) {
          var n,
            r = this._,
            i = ce(e + "", r),
            o = -1,
            a = i.length;
          if (!(arguments.length < 2)) {
            if (null != t && "function" !== typeof t)
              throw new Error("invalid callback: " + t);
            for (; ++o < a; )
              if ((n = (e = i[o]).type)) r[n] = fe(r[n], e.name, t);
              else if (null == t) for (n in r) r[n] = fe(r[n], e.name, null);
            return this;
          }
          for (; ++o < a; )
            if ((n = (e = i[o]).type) && (n = le(r[n], e.name))) return n;
        },
        copy: function () {
          var e = {},
            t = this._;
          for (var n in t) e[n] = t[n].slice();
          return new ue(e);
        },
        call: function (e, t) {
          if ((n = arguments.length - 2) > 0)
            for (var n, r, i = new Array(n), o = 0; o < n; ++o)
              i[o] = arguments[o + 2];
          if (!this._.hasOwnProperty(e)) throw new Error("unknown type: " + e);
          for (o = 0, n = (r = this._[e]).length; o < n; ++o)
            r[o].value.apply(t, i);
        },
        apply: function (e, t, n) {
          if (!this._.hasOwnProperty(e)) throw new Error("unknown type: " + e);
          for (var r = this._[e], i = 0, o = r.length; i < o; ++i)
            r[i].value.apply(t, n);
        },
      };
      var de = se;
      function he() {}
      function pe(e) {
        return null == e
          ? he
          : function () {
              return this.querySelector(e);
            };
      }
      function ge() {
        return [];
      }
      function me(e) {
        return new Array(e.length);
      }
      function ye(e, t) {
        (this.ownerDocument = e.ownerDocument),
          (this.namespaceURI = e.namespaceURI),
          (this._next = null),
          (this._parent = e),
          (this.__data__ = t);
      }
      ye.prototype = {
        constructor: ye,
        appendChild: function (e) {
          return this._parent.insertBefore(e, this._next);
        },
        insertBefore: function (e, t) {
          return this._parent.insertBefore(e, t);
        },
        querySelector: function (e) {
          return this._parent.querySelector(e);
        },
        querySelectorAll: function (e) {
          return this._parent.querySelectorAll(e);
        },
      };
      function be(e, t, n, r, i, o) {
        for (var a, s = 0, u = t.length, c = o.length; s < c; ++s)
          (a = t[s])
            ? ((a.__data__ = o[s]), (r[s] = a))
            : (n[s] = new ye(e, o[s]));
        for (; s < u; ++s) (a = t[s]) && (i[s] = a);
      }
      function ve(e, t, n, r, i, o, a) {
        var s,
          u,
          c,
          l = {},
          f = t.length,
          d = o.length,
          h = new Array(f);
        for (s = 0; s < f; ++s)
          (u = t[s]) &&
            ((h[s] = c = "$" + a.call(u, u.__data__, s, t)),
            c in l ? (i[s] = u) : (l[c] = u));
        for (s = 0; s < d; ++s)
          (u = l[(c = "$" + a.call(e, o[s], s, o))])
            ? ((r[s] = u), (u.__data__ = o[s]), (l[c] = null))
            : (n[s] = new ye(e, o[s]));
        for (s = 0; s < f; ++s) (u = t[s]) && l[h[s]] === u && (i[s] = u);
      }
      function _e(e, t) {
        return e < t ? -1 : e > t ? 1 : e >= t ? 0 : NaN;
      }
      var xe = "http://www.w3.org/1999/xhtml",
        Te = {
          svg: "http://www.w3.org/2000/svg",
          xhtml: xe,
          xlink: "http://www.w3.org/1999/xlink",
          xml: "http://www.w3.org/XML/1998/namespace",
          xmlns: "http://www.w3.org/2000/xmlns/",
        };
      function Me(e) {
        var t = (e += ""),
          n = t.indexOf(":");
        return (
          n >= 0 && "xmlns" !== (t = e.slice(0, n)) && (e = e.slice(n + 1)),
          Te.hasOwnProperty(t) ? { space: Te[t], local: e } : e
        );
      }
      function we(e) {
        return function () {
          this.removeAttribute(e);
        };
      }
      function Ae(e) {
        return function () {
          this.removeAttributeNS(e.space, e.local);
        };
      }
      function ke(e, t) {
        return function () {
          this.setAttribute(e, t);
        };
      }
      function Ee(e, t) {
        return function () {
          this.setAttributeNS(e.space, e.local, t);
        };
      }
      function Pe(e, t) {
        return function () {
          var n = t.apply(this, arguments);
          null == n ? this.removeAttribute(e) : this.setAttribute(e, n);
        };
      }
      function Ce(e, t) {
        return function () {
          var n = t.apply(this, arguments);
          null == n
            ? this.removeAttributeNS(e.space, e.local)
            : this.setAttributeNS(e.space, e.local, n);
        };
      }
      function Le(e) {
        return (
          (e.ownerDocument && e.ownerDocument.defaultView) ||
          (e.document && e) ||
          e.defaultView
        );
      }
      function Ie(e) {
        return function () {
          this.style.removeProperty(e);
        };
      }
      function Se(e, t, n) {
        return function () {
          this.style.setProperty(e, t, n);
        };
      }
      function Oe(e, t, n) {
        return function () {
          var r = t.apply(this, arguments);
          null == r
            ? this.style.removeProperty(e)
            : this.style.setProperty(e, r, n);
        };
      }
      function Ne(e, t) {
        return (
          e.style.getPropertyValue(t) ||
          Le(e).getComputedStyle(e, null).getPropertyValue(t)
        );
      }
      function Fe(e) {
        return function () {
          delete this[e];
        };
      }
      function De(e, t) {
        return function () {
          this[e] = t;
        };
      }
      function Re(e, t) {
        return function () {
          var n = t.apply(this, arguments);
          null == n ? delete this[e] : (this[e] = n);
        };
      }
      function Ge(e) {
        return e.trim().split(/^|\s+/);
      }
      function Be(e) {
        return e.classList || new We(e);
      }
      function We(e) {
        (this._node = e), (this._names = Ge(e.getAttribute("class") || ""));
      }
      function je(e, t) {
        for (var n = Be(e), r = -1, i = t.length; ++r < i; ) n.add(t[r]);
      }
      function ze(e, t) {
        for (var n = Be(e), r = -1, i = t.length; ++r < i; ) n.remove(t[r]);
      }
      function Ue(e) {
        return function () {
          je(this, e);
        };
      }
      function He(e) {
        return function () {
          ze(this, e);
        };
      }
      function Ve(e, t) {
        return function () {
          (t.apply(this, arguments) ? je : ze)(this, e);
        };
      }
      function qe() {
        this.textContent = "";
      }
      function Ze(e) {
        return function () {
          this.textContent = e;
        };
      }
      function Ye(e) {
        return function () {
          var t = e.apply(this, arguments);
          this.textContent = null == t ? "" : t;
        };
      }
      function Xe() {
        this.innerHTML = "";
      }
      function $e(e) {
        return function () {
          this.innerHTML = e;
        };
      }
      function Ke(e) {
        return function () {
          var t = e.apply(this, arguments);
          this.innerHTML = null == t ? "" : t;
        };
      }
      function Qe() {
        this.nextSibling && this.parentNode.appendChild(this);
      }
      function Je() {
        this.previousSibling &&
          this.parentNode.insertBefore(this, this.parentNode.firstChild);
      }
      function et(e) {
        return function () {
          var t = this.ownerDocument,
            n = this.namespaceURI;
          return n === xe && t.documentElement.namespaceURI === xe
            ? t.createElement(e)
            : t.createElementNS(n, e);
        };
      }
      function tt(e) {
        return function () {
          return this.ownerDocument.createElementNS(e.space, e.local);
        };
      }
      function nt(e) {
        var t = Me(e);
        return (t.local ? tt : et)(t);
      }
      function rt() {
        return null;
      }
      function it() {
        var e = this.parentNode;
        e && e.removeChild(this);
      }
      function ot() {
        var e = this.cloneNode(!1),
          t = this.parentNode;
        return t ? t.insertBefore(e, this.nextSibling) : e;
      }
      function at() {
        var e = this.cloneNode(!0),
          t = this.parentNode;
        return t ? t.insertBefore(e, this.nextSibling) : e;
      }
      We.prototype = {
        add: function (e) {
          this._names.indexOf(e) < 0 &&
            (this._names.push(e),
            this._node.setAttribute("class", this._names.join(" ")));
        },
        remove: function (e) {
          var t = this._names.indexOf(e);
          t >= 0 &&
            (this._names.splice(t, 1),
            this._node.setAttribute("class", this._names.join(" ")));
        },
        contains: function (e) {
          return this._names.indexOf(e) >= 0;
        },
      };
      var st = {},
        ut = null;
      "undefined" !== typeof document &&
        ("onmouseenter" in document.documentElement ||
          (st = { mouseenter: "mouseover", mouseleave: "mouseout" }));
      function ct(e, t, n) {
        return (
          (e = lt(e, t, n)),
          function (t) {
            var n = t.relatedTarget;
            (n && (n === this || 8 & n.compareDocumentPosition(this))) ||
              e.call(this, t);
          }
        );
      }
      function lt(e, t, n) {
        return function (r) {
          var i = ut;
          ut = r;
          try {
            e.call(this, this.__data__, t, n);
          } finally {
            ut = i;
          }
        };
      }
      function ft(e) {
        return e
          .trim()
          .split(/^|\s+/)
          .map(function (e) {
            var t = "",
              n = e.indexOf(".");
            return (
              n >= 0 && ((t = e.slice(n + 1)), (e = e.slice(0, n))),
              { type: e, name: t }
            );
          });
      }
      function dt(e) {
        return function () {
          var t = this.__on;
          if (t) {
            for (var n, r = 0, i = -1, o = t.length; r < o; ++r)
              (n = t[r]),
                (e.type && n.type !== e.type) || n.name !== e.name
                  ? (t[++i] = n)
                  : this.removeEventListener(n.type, n.listener, n.capture);
            ++i ? (t.length = i) : delete this.__on;
          }
        };
      }
      function ht(e, t, n) {
        var r = st.hasOwnProperty(e.type) ? ct : lt;
        return function (i, o, a) {
          var s,
            u = this.__on,
            c = r(t, o, a);
          if (u)
            for (var l = 0, f = u.length; l < f; ++l)
              if ((s = u[l]).type === e.type && s.name === e.name)
                return (
                  this.removeEventListener(s.type, s.listener, s.capture),
                  this.addEventListener(
                    s.type,
                    (s.listener = c),
                    (s.capture = n)
                  ),
                  void (s.value = t)
                );
          this.addEventListener(e.type, c, n),
            (s = {
              type: e.type,
              name: e.name,
              value: t,
              listener: c,
              capture: n,
            }),
            u ? u.push(s) : (this.__on = [s]);
        };
      }
      function pt(e, t, n, r) {
        var i = ut;
        (e.sourceEvent = ut), (ut = e);
        try {
          return t.apply(n, r);
        } finally {
          ut = i;
        }
      }
      function gt(e, t, n) {
        var r = Le(e),
          i = r.CustomEvent;
        "function" === typeof i
          ? (i = new i(t, n))
          : ((i = r.document.createEvent("Event")),
            n
              ? (i.initEvent(t, n.bubbles, n.cancelable), (i.detail = n.detail))
              : i.initEvent(t, !1, !1)),
          e.dispatchEvent(i);
      }
      function mt(e, t) {
        return function () {
          return gt(this, e, t);
        };
      }
      function yt(e, t) {
        return function () {
          return gt(this, e, t.apply(this, arguments));
        };
      }
      var bt = [null];
      function vt(e, t) {
        (this._groups = e), (this._parents = t);
      }
      function _t() {
        return new vt([[document.documentElement]], bt);
      }
      vt.prototype = _t.prototype = {
        constructor: vt,
        select: function (e) {
          "function" !== typeof e && (e = pe(e));
          for (
            var t = this._groups, n = t.length, r = new Array(n), i = 0;
            i < n;
            ++i
          )
            for (
              var o,
                a,
                s = t[i],
                u = s.length,
                c = (r[i] = new Array(u)),
                l = 0;
              l < u;
              ++l
            )
              (o = s[l]) &&
                (a = e.call(o, o.__data__, l, s)) &&
                ("__data__" in o && (a.__data__ = o.__data__), (c[l] = a));
          return new vt(r, this._parents);
        },
        selectAll: function (e) {
          "function" !== typeof e &&
            (e = (function (e) {
              return null == e
                ? ge
                : function () {
                    return this.querySelectorAll(e);
                  };
            })(e));
          for (
            var t = this._groups, n = t.length, r = [], i = [], o = 0;
            o < n;
            ++o
          )
            for (var a, s = t[o], u = s.length, c = 0; c < u; ++c)
              (a = s[c]) && (r.push(e.call(a, a.__data__, c, s)), i.push(a));
          return new vt(r, i);
        },
        filter: function (e) {
          "function" !== typeof e &&
            (e = (function (e) {
              return function () {
                return this.matches(e);
              };
            })(e));
          for (
            var t = this._groups, n = t.length, r = new Array(n), i = 0;
            i < n;
            ++i
          )
            for (
              var o, a = t[i], s = a.length, u = (r[i] = []), c = 0;
              c < s;
              ++c
            )
              (o = a[c]) && e.call(o, o.__data__, c, a) && u.push(o);
          return new vt(r, this._parents);
        },
        data: function (e, t) {
          if (!e)
            return (
              (h = new Array(this.size())),
              (c = -1),
              this.each(function (e) {
                h[++c] = e;
              }),
              h
            );
          var n = t ? ve : be,
            r = this._parents,
            i = this._groups;
          "function" !== typeof e &&
            (e = (function (e) {
              return function () {
                return e;
              };
            })(e));
          for (
            var o = i.length,
              a = new Array(o),
              s = new Array(o),
              u = new Array(o),
              c = 0;
            c < o;
            ++c
          ) {
            var l = r[c],
              f = i[c],
              d = f.length,
              h = e.call(l, l && l.__data__, c, r),
              p = h.length,
              g = (s[c] = new Array(p)),
              m = (a[c] = new Array(p));
            n(l, f, g, m, (u[c] = new Array(d)), h, t);
            for (var y, b, v = 0, _ = 0; v < p; ++v)
              if ((y = g[v])) {
                for (v >= _ && (_ = v + 1); !(b = m[_]) && ++_ < p; );
                y._next = b || null;
              }
          }
          return ((a = new vt(a, r))._enter = s), (a._exit = u), a;
        },
        enter: function () {
          return new vt(this._enter || this._groups.map(me), this._parents);
        },
        exit: function () {
          return new vt(this._exit || this._groups.map(me), this._parents);
        },
        join: function (e, t, n) {
          var r = this.enter(),
            i = this,
            o = this.exit();
          return (
            (r = "function" === typeof e ? e(r) : r.append(e + "")),
            null != t && (i = t(i)),
            null == n ? o.remove() : n(o),
            r && i ? r.merge(i).order() : i
          );
        },
        merge: function (e) {
          for (
            var t = this._groups,
              n = e._groups,
              r = t.length,
              i = n.length,
              o = Math.min(r, i),
              a = new Array(r),
              s = 0;
            s < o;
            ++s
          )
            for (
              var u,
                c = t[s],
                l = n[s],
                f = c.length,
                d = (a[s] = new Array(f)),
                h = 0;
              h < f;
              ++h
            )
              (u = c[h] || l[h]) && (d[h] = u);
          for (; s < r; ++s) a[s] = t[s];
          return new vt(a, this._parents);
        },
        order: function () {
          for (var e = this._groups, t = -1, n = e.length; ++t < n; )
            for (var r, i = e[t], o = i.length - 1, a = i[o]; --o >= 0; )
              (r = i[o]) &&
                (a &&
                  4 ^ r.compareDocumentPosition(a) &&
                  a.parentNode.insertBefore(r, a),
                (a = r));
          return this;
        },
        sort: function (e) {
          function t(t, n) {
            return t && n ? e(t.__data__, n.__data__) : !t - !n;
          }
          e || (e = _e);
          for (
            var n = this._groups, r = n.length, i = new Array(r), o = 0;
            o < r;
            ++o
          ) {
            for (
              var a, s = n[o], u = s.length, c = (i[o] = new Array(u)), l = 0;
              l < u;
              ++l
            )
              (a = s[l]) && (c[l] = a);
            c.sort(t);
          }
          return new vt(i, this._parents).order();
        },
        call: function () {
          var e = arguments[0];
          return (arguments[0] = this), e.apply(null, arguments), this;
        },
        nodes: function () {
          var e = new Array(this.size()),
            t = -1;
          return (
            this.each(function () {
              e[++t] = this;
            }),
            e
          );
        },
        node: function () {
          for (var e = this._groups, t = 0, n = e.length; t < n; ++t)
            for (var r = e[t], i = 0, o = r.length; i < o; ++i) {
              var a = r[i];
              if (a) return a;
            }
          return null;
        },
        size: function () {
          var e = 0;
          return (
            this.each(function () {
              ++e;
            }),
            e
          );
        },
        empty: function () {
          return !this.node();
        },
        each: function (e) {
          for (var t = this._groups, n = 0, r = t.length; n < r; ++n)
            for (var i, o = t[n], a = 0, s = o.length; a < s; ++a)
              (i = o[a]) && e.call(i, i.__data__, a, o);
          return this;
        },
        attr: function (e, t) {
          var n = Me(e);
          if (arguments.length < 2) {
            var r = this.node();
            return n.local
              ? r.getAttributeNS(n.space, n.local)
              : r.getAttribute(n);
          }
          return this.each(
            (null == t
              ? n.local
                ? Ae
                : we
              : "function" === typeof t
              ? n.local
                ? Ce
                : Pe
              : n.local
              ? Ee
              : ke)(n, t)
          );
        },
        style: function (e, t, n) {
          return arguments.length > 1
            ? this.each(
                (null == t ? Ie : "function" === typeof t ? Oe : Se)(
                  e,
                  t,
                  null == n ? "" : n
                )
              )
            : Ne(this.node(), e);
        },
        property: function (e, t) {
          return arguments.length > 1
            ? this.each(
                (null == t ? Fe : "function" === typeof t ? Re : De)(e, t)
              )
            : this.node()[e];
        },
        classed: function (e, t) {
          var n = Ge(e + "");
          if (arguments.length < 2) {
            for (var r = Be(this.node()), i = -1, o = n.length; ++i < o; )
              if (!r.contains(n[i])) return !1;
            return !0;
          }
          return this.each(("function" === typeof t ? Ve : t ? Ue : He)(n, t));
        },
        text: function (e) {
          return arguments.length
            ? this.each(null == e ? qe : ("function" === typeof e ? Ye : Ze)(e))
            : this.node().textContent;
        },
        html: function (e) {
          return arguments.length
            ? this.each(null == e ? Xe : ("function" === typeof e ? Ke : $e)(e))
            : this.node().innerHTML;
        },
        raise: function () {
          return this.each(Qe);
        },
        lower: function () {
          return this.each(Je);
        },
        append: function (e) {
          var t = "function" === typeof e ? e : nt(e);
          return this.select(function () {
            return this.appendChild(t.apply(this, arguments));
          });
        },
        insert: function (e, t) {
          var n = "function" === typeof e ? e : nt(e),
            r = null == t ? rt : "function" === typeof t ? t : pe(t);
          return this.select(function () {
            return this.insertBefore(
              n.apply(this, arguments),
              r.apply(this, arguments) || null
            );
          });
        },
        remove: function () {
          return this.each(it);
        },
        clone: function (e) {
          return this.select(e ? at : ot);
        },
        datum: function (e) {
          return arguments.length
            ? this.property("__data__", e)
            : this.node().__data__;
        },
        on: function (e, t, n) {
          var r,
            i,
            o = ft(e + ""),
            a = o.length;
          if (!(arguments.length < 2)) {
            for (s = t ? ht : dt, null == n && (n = !1), r = 0; r < a; ++r)
              this.each(s(o[r], t, n));
            return this;
          }
          var s = this.node().__on;
          if (s)
            for (var u, c = 0, l = s.length; c < l; ++c)
              for (r = 0, u = s[c]; r < a; ++r)
                if ((i = o[r]).type === u.type && i.name === u.name)
                  return u.value;
        },
        dispatch: function (e, t) {
          return this.each(("function" === typeof t ? yt : mt)(e, t));
        },
      };
      function xt(e) {
        return "string" === typeof e
          ? new vt([[document.querySelector(e)]], [document.documentElement])
          : new vt([[e]], bt);
      }
      function Tt() {
        ut.stopImmediatePropagation();
      }
      function Mt() {
        ut.preventDefault(), ut.stopImmediatePropagation();
      }
      function wt(e) {
        var t = e.document.documentElement,
          n = xt(e).on("dragstart.drag", Mt, !0);
        "onselectstart" in t
          ? n.on("selectstart.drag", Mt, !0)
          : ((t.__noselect = t.style.MozUserSelect),
            (t.style.MozUserSelect = "none"));
      }
      function At(e, t) {
        var n = e.document.documentElement,
          r = xt(e).on("dragstart.drag", null);
        t &&
          (r.on("click.drag", Mt, !0),
          setTimeout(function () {
            r.on("click.drag", null);
          }, 0)),
          "onselectstart" in n
            ? r.on("selectstart.drag", null)
            : ((n.style.MozUserSelect = n.__noselect), delete n.__noselect);
      }
      function kt(e, t, n) {
        (e.prototype = t.prototype = n), (n.constructor = e);
      }
      function Et(e, t) {
        var n = Object.create(e.prototype);
        for (var r in t) n[r] = t[r];
        return n;
      }
      function Pt() {}
      var Ct = 0.7,
        Lt = 1 / Ct,
        It = "\\s*([+-]?\\d+)\\s*",
        St = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",
        Ot = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
        Nt = /^#([0-9a-f]{3,8})$/,
        Ft = new RegExp("^rgb\\(" + [It, It, It] + "\\)$"),
        Dt = new RegExp("^rgb\\(" + [Ot, Ot, Ot] + "\\)$"),
        Rt = new RegExp("^rgba\\(" + [It, It, It, St] + "\\)$"),
        Gt = new RegExp("^rgba\\(" + [Ot, Ot, Ot, St] + "\\)$"),
        Bt = new RegExp("^hsl\\(" + [St, Ot, Ot] + "\\)$"),
        Wt = new RegExp("^hsla\\(" + [St, Ot, Ot, St] + "\\)$"),
        jt = {
          aliceblue: 15792383,
          antiquewhite: 16444375,
          aqua: 65535,
          aquamarine: 8388564,
          azure: 15794175,
          beige: 16119260,
          bisque: 16770244,
          black: 0,
          blanchedalmond: 16772045,
          blue: 255,
          blueviolet: 9055202,
          brown: 10824234,
          burlywood: 14596231,
          cadetblue: 6266528,
          chartreuse: 8388352,
          chocolate: 13789470,
          coral: 16744272,
          cornflowerblue: 6591981,
          cornsilk: 16775388,
          crimson: 14423100,
          cyan: 65535,
          darkblue: 139,
          darkcyan: 35723,
          darkgoldenrod: 12092939,
          darkgray: 11119017,
          darkgreen: 25600,
          darkgrey: 11119017,
          darkkhaki: 12433259,
          darkmagenta: 9109643,
          darkolivegreen: 5597999,
          darkorange: 16747520,
          darkorchid: 10040012,
          darkred: 9109504,
          darksalmon: 15308410,
          darkseagreen: 9419919,
          darkslateblue: 4734347,
          darkslategray: 3100495,
          darkslategrey: 3100495,
          darkturquoise: 52945,
          darkviolet: 9699539,
          deeppink: 16716947,
          deepskyblue: 49151,
          dimgray: 6908265,
          dimgrey: 6908265,
          dodgerblue: 2003199,
          firebrick: 11674146,
          floralwhite: 16775920,
          forestgreen: 2263842,
          fuchsia: 16711935,
          gainsboro: 14474460,
          ghostwhite: 16316671,
          gold: 16766720,
          goldenrod: 14329120,
          gray: 8421504,
          green: 32768,
          greenyellow: 11403055,
          grey: 8421504,
          honeydew: 15794160,
          hotpink: 16738740,
          indianred: 13458524,
          indigo: 4915330,
          ivory: 16777200,
          khaki: 15787660,
          lavender: 15132410,
          lavenderblush: 16773365,
          lawngreen: 8190976,
          lemonchiffon: 16775885,
          lightblue: 11393254,
          lightcoral: 15761536,
          lightcyan: 14745599,
          lightgoldenrodyellow: 16448210,
          lightgray: 13882323,
          lightgreen: 9498256,
          lightgrey: 13882323,
          lightpink: 16758465,
          lightsalmon: 16752762,
          lightseagreen: 2142890,
          lightskyblue: 8900346,
          lightslategray: 7833753,
          lightslategrey: 7833753,
          lightsteelblue: 11584734,
          lightyellow: 16777184,
          lime: 65280,
          limegreen: 3329330,
          linen: 16445670,
          magenta: 16711935,
          maroon: 8388608,
          mediumaquamarine: 6737322,
          mediumblue: 205,
          mediumorchid: 12211667,
          mediumpurple: 9662683,
          mediumseagreen: 3978097,
          mediumslateblue: 8087790,
          mediumspringgreen: 64154,
          mediumturquoise: 4772300,
          mediumvioletred: 13047173,
          midnightblue: 1644912,
          mintcream: 16121850,
          mistyrose: 16770273,
          moccasin: 16770229,
          navajowhite: 16768685,
          navy: 128,
          oldlace: 16643558,
          olive: 8421376,
          olivedrab: 7048739,
          orange: 16753920,
          orangered: 16729344,
          orchid: 14315734,
          palegoldenrod: 15657130,
          palegreen: 10025880,
          paleturquoise: 11529966,
          palevioletred: 14381203,
          papayawhip: 16773077,
          peachpuff: 16767673,
          peru: 13468991,
          pink: 16761035,
          plum: 14524637,
          powderblue: 11591910,
          purple: 8388736,
          rebeccapurple: 6697881,
          red: 16711680,
          rosybrown: 12357519,
          royalblue: 4286945,
          saddlebrown: 9127187,
          salmon: 16416882,
          sandybrown: 16032864,
          seagreen: 3050327,
          seashell: 16774638,
          sienna: 10506797,
          silver: 12632256,
          skyblue: 8900331,
          slateblue: 6970061,
          slategray: 7372944,
          slategrey: 7372944,
          snow: 16775930,
          springgreen: 65407,
          steelblue: 4620980,
          tan: 13808780,
          teal: 32896,
          thistle: 14204888,
          tomato: 16737095,
          turquoise: 4251856,
          violet: 15631086,
          wheat: 16113331,
          white: 16777215,
          whitesmoke: 16119285,
          yellow: 16776960,
          yellowgreen: 10145074,
        };
      function zt() {
        return this.rgb().formatHex();
      }
      function Ut() {
        return this.rgb().formatRgb();
      }
      function Ht(e) {
        var t, n;
        return (
          (e = (e + "").trim().toLowerCase()),
          (t = Nt.exec(e))
            ? ((n = t[1].length),
              (t = parseInt(t[1], 16)),
              6 === n
                ? Vt(t)
                : 3 === n
                ? new Xt(
                    ((t >> 8) & 15) | ((t >> 4) & 240),
                    ((t >> 4) & 15) | (240 & t),
                    ((15 & t) << 4) | (15 & t),
                    1
                  )
                : 8 === n
                ? qt(
                    (t >> 24) & 255,
                    (t >> 16) & 255,
                    (t >> 8) & 255,
                    (255 & t) / 255
                  )
                : 4 === n
                ? qt(
                    ((t >> 12) & 15) | ((t >> 8) & 240),
                    ((t >> 8) & 15) | ((t >> 4) & 240),
                    ((t >> 4) & 15) | (240 & t),
                    (((15 & t) << 4) | (15 & t)) / 255
                  )
                : null)
            : (t = Ft.exec(e))
            ? new Xt(t[1], t[2], t[3], 1)
            : (t = Dt.exec(e))
            ? new Xt(
                (255 * t[1]) / 100,
                (255 * t[2]) / 100,
                (255 * t[3]) / 100,
                1
              )
            : (t = Rt.exec(e))
            ? qt(t[1], t[2], t[3], t[4])
            : (t = Gt.exec(e))
            ? qt(
                (255 * t[1]) / 100,
                (255 * t[2]) / 100,
                (255 * t[3]) / 100,
                t[4]
              )
            : (t = Bt.exec(e))
            ? Jt(t[1], t[2] / 100, t[3] / 100, 1)
            : (t = Wt.exec(e))
            ? Jt(t[1], t[2] / 100, t[3] / 100, t[4])
            : jt.hasOwnProperty(e)
            ? Vt(jt[e])
            : "transparent" === e
            ? new Xt(NaN, NaN, NaN, 0)
            : null
        );
      }
      function Vt(e) {
        return new Xt((e >> 16) & 255, (e >> 8) & 255, 255 & e, 1);
      }
      function qt(e, t, n, r) {
        return r <= 0 && (e = t = n = NaN), new Xt(e, t, n, r);
      }
      function Zt(e) {
        return (
          e instanceof Pt || (e = Ht(e)),
          e ? new Xt((e = e.rgb()).r, e.g, e.b, e.opacity) : new Xt()
        );
      }
      function Yt(e, t, n, r) {
        return 1 === arguments.length
          ? Zt(e)
          : new Xt(e, t, n, null == r ? 1 : r);
      }
      function Xt(e, t, n, r) {
        (this.r = +e), (this.g = +t), (this.b = +n), (this.opacity = +r);
      }
      function $t() {
        return "#" + Qt(this.r) + Qt(this.g) + Qt(this.b);
      }
      function Kt() {
        var e = this.opacity;
        return (
          (1 === (e = isNaN(e) ? 1 : Math.max(0, Math.min(1, e)))
            ? "rgb("
            : "rgba(") +
          Math.max(0, Math.min(255, Math.round(this.r) || 0)) +
          ", " +
          Math.max(0, Math.min(255, Math.round(this.g) || 0)) +
          ", " +
          Math.max(0, Math.min(255, Math.round(this.b) || 0)) +
          (1 === e ? ")" : ", " + e + ")")
        );
      }
      function Qt(e) {
        return (
          ((e = Math.max(0, Math.min(255, Math.round(e) || 0))) < 16
            ? "0"
            : "") + e.toString(16)
        );
      }
      function Jt(e, t, n, r) {
        return (
          r <= 0
            ? (e = t = n = NaN)
            : n <= 0 || n >= 1
            ? (e = t = NaN)
            : t <= 0 && (e = NaN),
          new tn(e, t, n, r)
        );
      }
      function en(e) {
        if (e instanceof tn) return new tn(e.h, e.s, e.l, e.opacity);
        if ((e instanceof Pt || (e = Ht(e)), !e)) return new tn();
        if (e instanceof tn) return e;
        var t = (e = e.rgb()).r / 255,
          n = e.g / 255,
          r = e.b / 255,
          i = Math.min(t, n, r),
          o = Math.max(t, n, r),
          a = NaN,
          s = o - i,
          u = (o + i) / 2;
        return (
          s
            ? ((a =
                t === o
                  ? (n - r) / s + 6 * (n < r)
                  : n === o
                  ? (r - t) / s + 2
                  : (t - n) / s + 4),
              (s /= u < 0.5 ? o + i : 2 - o - i),
              (a *= 60))
            : (s = u > 0 && u < 1 ? 0 : a),
          new tn(a, s, u, e.opacity)
        );
      }
      function tn(e, t, n, r) {
        (this.h = +e), (this.s = +t), (this.l = +n), (this.opacity = +r);
      }
      function nn(e, t, n) {
        return (
          255 *
          (e < 60
            ? t + ((n - t) * e) / 60
            : e < 180
            ? n
            : e < 240
            ? t + ((n - t) * (240 - e)) / 60
            : t)
        );
      }
      function rn(e, t, n, r, i) {
        var o = e * e,
          a = o * e;
        return (
          ((1 - 3 * e + 3 * o - a) * t +
            (4 - 6 * o + 3 * a) * n +
            (1 + 3 * e + 3 * o - 3 * a) * r +
            a * i) /
          6
        );
      }
      function on(e) {
        return function () {
          return e;
        };
      }
      function an(e, t) {
        return function (n) {
          return e + n * t;
        };
      }
      function sn(e) {
        return 1 === (e = +e)
          ? un
          : function (t, n) {
              return n - t
                ? (function (e, t, n) {
                    return (
                      (e = Math.pow(e, n)),
                      (t = Math.pow(t, n) - e),
                      (n = 1 / n),
                      function (r) {
                        return Math.pow(e + r * t, n);
                      }
                    );
                  })(t, n, e)
                : on(isNaN(t) ? n : t);
            };
      }
      function un(e, t) {
        var n = t - e;
        return n ? an(e, n) : on(isNaN(e) ? t : e);
      }
      kt(Pt, Ht, {
        copy: function (e) {
          return Object.assign(new this.constructor(), this, e);
        },
        displayable: function () {
          return this.rgb().displayable();
        },
        hex: zt,
        formatHex: zt,
        formatHsl: function () {
          return en(this).formatHsl();
        },
        formatRgb: Ut,
        toString: Ut,
      }),
        kt(
          Xt,
          Yt,
          Et(Pt, {
            brighter: function (e) {
              return (
                (e = null == e ? Lt : Math.pow(Lt, e)),
                new Xt(this.r * e, this.g * e, this.b * e, this.opacity)
              );
            },
            darker: function (e) {
              return (
                (e = null == e ? Ct : Math.pow(Ct, e)),
                new Xt(this.r * e, this.g * e, this.b * e, this.opacity)
              );
            },
            rgb: function () {
              return this;
            },
            displayable: function () {
              return (
                -0.5 <= this.r &&
                this.r < 255.5 &&
                -0.5 <= this.g &&
                this.g < 255.5 &&
                -0.5 <= this.b &&
                this.b < 255.5 &&
                0 <= this.opacity &&
                this.opacity <= 1
              );
            },
            hex: $t,
            formatHex: $t,
            formatRgb: Kt,
            toString: Kt,
          })
        ),
        kt(
          tn,
          function (e, t, n, r) {
            return 1 === arguments.length
              ? en(e)
              : new tn(e, t, n, null == r ? 1 : r);
          },
          Et(Pt, {
            brighter: function (e) {
              return (
                (e = null == e ? Lt : Math.pow(Lt, e)),
                new tn(this.h, this.s, this.l * e, this.opacity)
              );
            },
            darker: function (e) {
              return (
                (e = null == e ? Ct : Math.pow(Ct, e)),
                new tn(this.h, this.s, this.l * e, this.opacity)
              );
            },
            rgb: function () {
              var e = (this.h % 360) + 360 * (this.h < 0),
                t = isNaN(e) || isNaN(this.s) ? 0 : this.s,
                n = this.l,
                r = n + (n < 0.5 ? n : 1 - n) * t,
                i = 2 * n - r;
              return new Xt(
                nn(e >= 240 ? e - 240 : e + 120, i, r),
                nn(e, i, r),
                nn(e < 120 ? e + 240 : e - 120, i, r),
                this.opacity
              );
            },
            displayable: function () {
              return (
                ((0 <= this.s && this.s <= 1) || isNaN(this.s)) &&
                0 <= this.l &&
                this.l <= 1 &&
                0 <= this.opacity &&
                this.opacity <= 1
              );
            },
            formatHsl: function () {
              var e = this.opacity;
              return (
                (1 === (e = isNaN(e) ? 1 : Math.max(0, Math.min(1, e)))
                  ? "hsl("
                  : "hsla(") +
                (this.h || 0) +
                ", " +
                100 * (this.s || 0) +
                "%, " +
                100 * (this.l || 0) +
                "%" +
                (1 === e ? ")" : ", " + e + ")")
              );
            },
          })
        );
      var cn = (function e(t) {
        var n = sn(t);
        function r(e, t) {
          var r = n((e = Yt(e)).r, (t = Yt(t)).r),
            i = n(e.g, t.g),
            o = n(e.b, t.b),
            a = un(e.opacity, t.opacity);
          return function (t) {
            return (
              (e.r = r(t)),
              (e.g = i(t)),
              (e.b = o(t)),
              (e.opacity = a(t)),
              e + ""
            );
          };
        }
        return (r.gamma = e), r;
      })(1);
      function ln(e) {
        return function (t) {
          var n,
            r,
            i = t.length,
            o = new Array(i),
            a = new Array(i),
            s = new Array(i);
          for (n = 0; n < i; ++n)
            (r = Yt(t[n])),
              (o[n] = r.r || 0),
              (a[n] = r.g || 0),
              (s[n] = r.b || 0);
          return (
            (o = e(o)),
            (a = e(a)),
            (s = e(s)),
            (r.opacity = 1),
            function (e) {
              return (r.r = o(e)), (r.g = a(e)), (r.b = s(e)), r + "";
            }
          );
        };
      }
      ln(function (e) {
        var t = e.length - 1;
        return function (n) {
          var r =
              n <= 0 ? (n = 0) : n >= 1 ? ((n = 1), t - 1) : Math.floor(n * t),
            i = e[r],
            o = e[r + 1],
            a = r > 0 ? e[r - 1] : 2 * i - o,
            s = r < t - 1 ? e[r + 2] : 2 * o - i;
          return rn((n - r / t) * t, a, i, o, s);
        };
      }),
        ln(function (e) {
          var t = e.length;
          return function (n) {
            var r = Math.floor(((n %= 1) < 0 ? ++n : n) * t),
              i = e[(r + t - 1) % t],
              o = e[r % t],
              a = e[(r + 1) % t],
              s = e[(r + 2) % t];
            return rn((n - r / t) * t, i, o, a, s);
          };
        });
      function fn(e, t) {
        var n,
          r = t ? t.length : 0,
          i = e ? Math.min(r, e.length) : 0,
          o = new Array(i),
          a = new Array(r);
        for (n = 0; n < i; ++n) o[n] = vn(e[n], t[n]);
        for (; n < r; ++n) a[n] = t[n];
        return function (e) {
          for (n = 0; n < i; ++n) a[n] = o[n](e);
          return a;
        };
      }
      function dn(e, t) {
        var n = new Date();
        return (
          (e = +e),
          (t = +t),
          function (r) {
            return n.setTime(e * (1 - r) + t * r), n;
          }
        );
      }
      function hn(e, t) {
        return (
          (e = +e),
          (t = +t),
          function (n) {
            return e * (1 - n) + t * n;
          }
        );
      }
      function pn(e, t) {
        var n,
          r = {},
          i = {};
        for (n in ((null !== e && "object" === typeof e) || (e = {}),
        (null !== t && "object" === typeof t) || (t = {}),
        t))
          n in e ? (r[n] = vn(e[n], t[n])) : (i[n] = t[n]);
        return function (e) {
          for (n in r) i[n] = r[n](e);
          return i;
        };
      }
      var gn = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
        mn = new RegExp(gn.source, "g");
      function yn(e, t) {
        var n,
          r,
          i,
          o = (gn.lastIndex = mn.lastIndex = 0),
          a = -1,
          s = [],
          u = [];
        for (e += "", t += ""; (n = gn.exec(e)) && (r = mn.exec(t)); )
          (i = r.index) > o &&
            ((i = t.slice(o, i)), s[a] ? (s[a] += i) : (s[++a] = i)),
            (n = n[0]) === (r = r[0])
              ? s[a]
                ? (s[a] += r)
                : (s[++a] = r)
              : ((s[++a] = null), u.push({ i: a, x: hn(n, r) })),
            (o = mn.lastIndex);
        return (
          o < t.length && ((i = t.slice(o)), s[a] ? (s[a] += i) : (s[++a] = i)),
          s.length < 2
            ? u[0]
              ? (function (e) {
                  return function (t) {
                    return e(t) + "";
                  };
                })(u[0].x)
              : (function (e) {
                  return function () {
                    return e;
                  };
                })(t)
            : ((t = u.length),
              function (e) {
                for (var n, r = 0; r < t; ++r) s[(n = u[r]).i] = n.x(e);
                return s.join("");
              })
        );
      }
      function bn(e, t) {
        t || (t = []);
        var n,
          r = e ? Math.min(t.length, e.length) : 0,
          i = t.slice();
        return function (o) {
          for (n = 0; n < r; ++n) i[n] = e[n] * (1 - o) + t[n] * o;
          return i;
        };
      }
      function vn(e, t) {
        var n,
          r = typeof t;
        return null == t || "boolean" === r
          ? on(t)
          : ("number" === r
              ? hn
              : "string" === r
              ? (n = Ht(t))
                ? ((t = n), cn)
                : yn
              : t instanceof Ht
              ? cn
              : t instanceof Date
              ? dn
              : (function (e) {
                  return ArrayBuffer.isView(e) && !(e instanceof DataView);
                })(t)
              ? bn
              : Array.isArray(t)
              ? fn
              : ("function" !== typeof t.valueOf &&
                  "function" !== typeof t.toString) ||
                isNaN(t)
              ? pn
              : hn)(e, t);
      }
      var _n = {},
        xn = null;
      "undefined" !== typeof document &&
        ("onmouseenter" in document.documentElement ||
          (_n = { mouseenter: "mouseover", mouseleave: "mouseout" }));
      function Tn(e, t, n) {
        return (
          (e = Mn(e, t, n)),
          function (t) {
            var n = t.relatedTarget;
            (n && (n === this || 8 & n.compareDocumentPosition(this))) ||
              e.call(this, t);
          }
        );
      }
      function Mn(e, t, n) {
        return function (r) {
          var i = xn;
          xn = r;
          try {
            e.call(this, this.__data__, t, n);
          } finally {
            xn = i;
          }
        };
      }
      function wn(e) {
        return e
          .trim()
          .split(/^|\s+/)
          .map(function (e) {
            var t = "",
              n = e.indexOf(".");
            return (
              n >= 0 && ((t = e.slice(n + 1)), (e = e.slice(0, n))),
              { type: e, name: t }
            );
          });
      }
      function An(e) {
        return function () {
          var t = this.__on;
          if (t) {
            for (var n, r = 0, i = -1, o = t.length; r < o; ++r)
              (n = t[r]),
                (e.type && n.type !== e.type) || n.name !== e.name
                  ? (t[++i] = n)
                  : this.removeEventListener(n.type, n.listener, n.capture);
            ++i ? (t.length = i) : delete this.__on;
          }
        };
      }
      function kn(e, t, n) {
        var r = _n.hasOwnProperty(e.type) ? Tn : Mn;
        return function (i, o, a) {
          var s,
            u = this.__on,
            c = r(t, o, a);
          if (u)
            for (var l = 0, f = u.length; l < f; ++l)
              if ((s = u[l]).type === e.type && s.name === e.name)
                return (
                  this.removeEventListener(s.type, s.listener, s.capture),
                  this.addEventListener(
                    s.type,
                    (s.listener = c),
                    (s.capture = n)
                  ),
                  void (s.value = t)
                );
          this.addEventListener(e.type, c, n),
            (s = {
              type: e.type,
              name: e.name,
              value: t,
              listener: c,
              capture: n,
            }),
            u ? u.push(s) : (this.__on = [s]);
        };
      }
      function En() {
        for (var e, t = xn; (e = t.sourceEvent); ) t = e;
        return t;
      }
      function Pn(e, t) {
        var n = e.ownerSVGElement || e;
        if (n.createSVGPoint) {
          var r = n.createSVGPoint();
          return (
            (r.x = t.clientX),
            (r.y = t.clientY),
            [(r = r.matrixTransform(e.getScreenCTM().inverse())).x, r.y]
          );
        }
        var i = e.getBoundingClientRect();
        return [
          t.clientX - i.left - e.clientLeft,
          t.clientY - i.top - e.clientTop,
        ];
      }
      function Cn() {}
      function Ln(e) {
        return null == e
          ? Cn
          : function () {
              return this.querySelector(e);
            };
      }
      function In() {
        return [];
      }
      function Sn(e) {
        return new Array(e.length);
      }
      function On(e, t) {
        (this.ownerDocument = e.ownerDocument),
          (this.namespaceURI = e.namespaceURI),
          (this._next = null),
          (this._parent = e),
          (this.__data__ = t);
      }
      On.prototype = {
        constructor: On,
        appendChild: function (e) {
          return this._parent.insertBefore(e, this._next);
        },
        insertBefore: function (e, t) {
          return this._parent.insertBefore(e, t);
        },
        querySelector: function (e) {
          return this._parent.querySelector(e);
        },
        querySelectorAll: function (e) {
          return this._parent.querySelectorAll(e);
        },
      };
      function Nn(e, t, n, r, i, o) {
        for (var a, s = 0, u = t.length, c = o.length; s < c; ++s)
          (a = t[s])
            ? ((a.__data__ = o[s]), (r[s] = a))
            : (n[s] = new On(e, o[s]));
        for (; s < u; ++s) (a = t[s]) && (i[s] = a);
      }
      function Fn(e, t, n, r, i, o, a) {
        var s,
          u,
          c,
          l = {},
          f = t.length,
          d = o.length,
          h = new Array(f);
        for (s = 0; s < f; ++s)
          (u = t[s]) &&
            ((h[s] = c = "$" + a.call(u, u.__data__, s, t)),
            c in l ? (i[s] = u) : (l[c] = u));
        for (s = 0; s < d; ++s)
          (u = l[(c = "$" + a.call(e, o[s], s, o))])
            ? ((r[s] = u), (u.__data__ = o[s]), (l[c] = null))
            : (n[s] = new On(e, o[s]));
        for (s = 0; s < f; ++s) (u = t[s]) && l[h[s]] === u && (i[s] = u);
      }
      function Dn(e, t) {
        return e < t ? -1 : e > t ? 1 : e >= t ? 0 : NaN;
      }
      var Rn = "http://www.w3.org/1999/xhtml",
        Gn = {
          svg: "http://www.w3.org/2000/svg",
          xhtml: Rn,
          xlink: "http://www.w3.org/1999/xlink",
          xml: "http://www.w3.org/XML/1998/namespace",
          xmlns: "http://www.w3.org/2000/xmlns/",
        };
      function Bn(e) {
        var t = (e += ""),
          n = t.indexOf(":");
        return (
          n >= 0 && "xmlns" !== (t = e.slice(0, n)) && (e = e.slice(n + 1)),
          Gn.hasOwnProperty(t) ? { space: Gn[t], local: e } : e
        );
      }
      function Wn(e) {
        return function () {
          this.removeAttribute(e);
        };
      }
      function jn(e) {
        return function () {
          this.removeAttributeNS(e.space, e.local);
        };
      }
      function zn(e, t) {
        return function () {
          this.setAttribute(e, t);
        };
      }
      function Un(e, t) {
        return function () {
          this.setAttributeNS(e.space, e.local, t);
        };
      }
      function Hn(e, t) {
        return function () {
          var n = t.apply(this, arguments);
          null == n ? this.removeAttribute(e) : this.setAttribute(e, n);
        };
      }
      function Vn(e, t) {
        return function () {
          var n = t.apply(this, arguments);
          null == n
            ? this.removeAttributeNS(e.space, e.local)
            : this.setAttributeNS(e.space, e.local, n);
        };
      }
      function qn(e) {
        return (
          (e.ownerDocument && e.ownerDocument.defaultView) ||
          (e.document && e) ||
          e.defaultView
        );
      }
      function Zn(e) {
        return function () {
          this.style.removeProperty(e);
        };
      }
      function Yn(e, t, n) {
        return function () {
          this.style.setProperty(e, t, n);
        };
      }
      function Xn(e, t, n) {
        return function () {
          var r = t.apply(this, arguments);
          null == r
            ? this.style.removeProperty(e)
            : this.style.setProperty(e, r, n);
        };
      }
      function $n(e, t) {
        return (
          e.style.getPropertyValue(t) ||
          qn(e).getComputedStyle(e, null).getPropertyValue(t)
        );
      }
      function Kn(e) {
        return function () {
          delete this[e];
        };
      }
      function Qn(e, t) {
        return function () {
          this[e] = t;
        };
      }
      function Jn(e, t) {
        return function () {
          var n = t.apply(this, arguments);
          null == n ? delete this[e] : (this[e] = n);
        };
      }
      function er(e) {
        return e.trim().split(/^|\s+/);
      }
      function tr(e) {
        return e.classList || new nr(e);
      }
      function nr(e) {
        (this._node = e), (this._names = er(e.getAttribute("class") || ""));
      }
      function rr(e, t) {
        for (var n = tr(e), r = -1, i = t.length; ++r < i; ) n.add(t[r]);
      }
      function ir(e, t) {
        for (var n = tr(e), r = -1, i = t.length; ++r < i; ) n.remove(t[r]);
      }
      function or(e) {
        return function () {
          rr(this, e);
        };
      }
      function ar(e) {
        return function () {
          ir(this, e);
        };
      }
      function sr(e, t) {
        return function () {
          (t.apply(this, arguments) ? rr : ir)(this, e);
        };
      }
      function ur() {
        this.textContent = "";
      }
      function cr(e) {
        return function () {
          this.textContent = e;
        };
      }
      function lr(e) {
        return function () {
          var t = e.apply(this, arguments);
          this.textContent = null == t ? "" : t;
        };
      }
      function fr() {
        this.innerHTML = "";
      }
      function dr(e) {
        return function () {
          this.innerHTML = e;
        };
      }
      function hr(e) {
        return function () {
          var t = e.apply(this, arguments);
          this.innerHTML = null == t ? "" : t;
        };
      }
      function pr() {
        this.nextSibling && this.parentNode.appendChild(this);
      }
      function gr() {
        this.previousSibling &&
          this.parentNode.insertBefore(this, this.parentNode.firstChild);
      }
      function mr(e) {
        return function () {
          var t = this.ownerDocument,
            n = this.namespaceURI;
          return n === Rn && t.documentElement.namespaceURI === Rn
            ? t.createElement(e)
            : t.createElementNS(n, e);
        };
      }
      function yr(e) {
        return function () {
          return this.ownerDocument.createElementNS(e.space, e.local);
        };
      }
      function br(e) {
        var t = Bn(e);
        return (t.local ? yr : mr)(t);
      }
      function vr() {
        return null;
      }
      function _r() {
        var e = this.parentNode;
        e && e.removeChild(this);
      }
      function xr() {
        var e = this.cloneNode(!1),
          t = this.parentNode;
        return t ? t.insertBefore(e, this.nextSibling) : e;
      }
      function Tr() {
        var e = this.cloneNode(!0),
          t = this.parentNode;
        return t ? t.insertBefore(e, this.nextSibling) : e;
      }
      function Mr(e, t, n) {
        var r = qn(e),
          i = r.CustomEvent;
        "function" === typeof i
          ? (i = new i(t, n))
          : ((i = r.document.createEvent("Event")),
            n
              ? (i.initEvent(t, n.bubbles, n.cancelable), (i.detail = n.detail))
              : i.initEvent(t, !1, !1)),
          e.dispatchEvent(i);
      }
      function wr(e, t) {
        return function () {
          return Mr(this, e, t);
        };
      }
      function Ar(e, t) {
        return function () {
          return Mr(this, e, t.apply(this, arguments));
        };
      }
      nr.prototype = {
        add: function (e) {
          this._names.indexOf(e) < 0 &&
            (this._names.push(e),
            this._node.setAttribute("class", this._names.join(" ")));
        },
        remove: function (e) {
          var t = this._names.indexOf(e);
          t >= 0 &&
            (this._names.splice(t, 1),
            this._node.setAttribute("class", this._names.join(" ")));
        },
        contains: function (e) {
          return this._names.indexOf(e) >= 0;
        },
      };
      var kr = [null];
      function Er(e, t) {
        (this._groups = e), (this._parents = t);
      }
      function Pr() {
        return new Er([[document.documentElement]], kr);
      }
      Er.prototype = Pr.prototype = {
        constructor: Er,
        select: function (e) {
          "function" !== typeof e && (e = Ln(e));
          for (
            var t = this._groups, n = t.length, r = new Array(n), i = 0;
            i < n;
            ++i
          )
            for (
              var o,
                a,
                s = t[i],
                u = s.length,
                c = (r[i] = new Array(u)),
                l = 0;
              l < u;
              ++l
            )
              (o = s[l]) &&
                (a = e.call(o, o.__data__, l, s)) &&
                ("__data__" in o && (a.__data__ = o.__data__), (c[l] = a));
          return new Er(r, this._parents);
        },
        selectAll: function (e) {
          "function" !== typeof e &&
            (e = (function (e) {
              return null == e
                ? In
                : function () {
                    return this.querySelectorAll(e);
                  };
            })(e));
          for (
            var t = this._groups, n = t.length, r = [], i = [], o = 0;
            o < n;
            ++o
          )
            for (var a, s = t[o], u = s.length, c = 0; c < u; ++c)
              (a = s[c]) && (r.push(e.call(a, a.__data__, c, s)), i.push(a));
          return new Er(r, i);
        },
        filter: function (e) {
          "function" !== typeof e &&
            (e = (function (e) {
              return function () {
                return this.matches(e);
              };
            })(e));
          for (
            var t = this._groups, n = t.length, r = new Array(n), i = 0;
            i < n;
            ++i
          )
            for (
              var o, a = t[i], s = a.length, u = (r[i] = []), c = 0;
              c < s;
              ++c
            )
              (o = a[c]) && e.call(o, o.__data__, c, a) && u.push(o);
          return new Er(r, this._parents);
        },
        data: function (e, t) {
          if (!e)
            return (
              (h = new Array(this.size())),
              (c = -1),
              this.each(function (e) {
                h[++c] = e;
              }),
              h
            );
          var n = t ? Fn : Nn,
            r = this._parents,
            i = this._groups;
          "function" !== typeof e &&
            (e = (function (e) {
              return function () {
                return e;
              };
            })(e));
          for (
            var o = i.length,
              a = new Array(o),
              s = new Array(o),
              u = new Array(o),
              c = 0;
            c < o;
            ++c
          ) {
            var l = r[c],
              f = i[c],
              d = f.length,
              h = e.call(l, l && l.__data__, c, r),
              p = h.length,
              g = (s[c] = new Array(p)),
              m = (a[c] = new Array(p));
            n(l, f, g, m, (u[c] = new Array(d)), h, t);
            for (var y, b, v = 0, _ = 0; v < p; ++v)
              if ((y = g[v])) {
                for (v >= _ && (_ = v + 1); !(b = m[_]) && ++_ < p; );
                y._next = b || null;
              }
          }
          return ((a = new Er(a, r))._enter = s), (a._exit = u), a;
        },
        enter: function () {
          return new Er(this._enter || this._groups.map(Sn), this._parents);
        },
        exit: function () {
          return new Er(this._exit || this._groups.map(Sn), this._parents);
        },
        join: function (e, t, n) {
          var r = this.enter(),
            i = this,
            o = this.exit();
          return (
            (r = "function" === typeof e ? e(r) : r.append(e + "")),
            null != t && (i = t(i)),
            null == n ? o.remove() : n(o),
            r && i ? r.merge(i).order() : i
          );
        },
        merge: function (e) {
          for (
            var t = this._groups,
              n = e._groups,
              r = t.length,
              i = n.length,
              o = Math.min(r, i),
              a = new Array(r),
              s = 0;
            s < o;
            ++s
          )
            for (
              var u,
                c = t[s],
                l = n[s],
                f = c.length,
                d = (a[s] = new Array(f)),
                h = 0;
              h < f;
              ++h
            )
              (u = c[h] || l[h]) && (d[h] = u);
          for (; s < r; ++s) a[s] = t[s];
          return new Er(a, this._parents);
        },
        order: function () {
          for (var e = this._groups, t = -1, n = e.length; ++t < n; )
            for (var r, i = e[t], o = i.length - 1, a = i[o]; --o >= 0; )
              (r = i[o]) &&
                (a &&
                  4 ^ r.compareDocumentPosition(a) &&
                  a.parentNode.insertBefore(r, a),
                (a = r));
          return this;
        },
        sort: function (e) {
          function t(t, n) {
            return t && n ? e(t.__data__, n.__data__) : !t - !n;
          }
          e || (e = Dn);
          for (
            var n = this._groups, r = n.length, i = new Array(r), o = 0;
            o < r;
            ++o
          ) {
            for (
              var a, s = n[o], u = s.length, c = (i[o] = new Array(u)), l = 0;
              l < u;
              ++l
            )
              (a = s[l]) && (c[l] = a);
            c.sort(t);
          }
          return new Er(i, this._parents).order();
        },
        call: function () {
          var e = arguments[0];
          return (arguments[0] = this), e.apply(null, arguments), this;
        },
        nodes: function () {
          var e = new Array(this.size()),
            t = -1;
          return (
            this.each(function () {
              e[++t] = this;
            }),
            e
          );
        },
        node: function () {
          for (var e = this._groups, t = 0, n = e.length; t < n; ++t)
            for (var r = e[t], i = 0, o = r.length; i < o; ++i) {
              var a = r[i];
              if (a) return a;
            }
          return null;
        },
        size: function () {
          var e = 0;
          return (
            this.each(function () {
              ++e;
            }),
            e
          );
        },
        empty: function () {
          return !this.node();
        },
        each: function (e) {
          for (var t = this._groups, n = 0, r = t.length; n < r; ++n)
            for (var i, o = t[n], a = 0, s = o.length; a < s; ++a)
              (i = o[a]) && e.call(i, i.__data__, a, o);
          return this;
        },
        attr: function (e, t) {
          var n = Bn(e);
          if (arguments.length < 2) {
            var r = this.node();
            return n.local
              ? r.getAttributeNS(n.space, n.local)
              : r.getAttribute(n);
          }
          return this.each(
            (null == t
              ? n.local
                ? jn
                : Wn
              : "function" === typeof t
              ? n.local
                ? Vn
                : Hn
              : n.local
              ? Un
              : zn)(n, t)
          );
        },
        style: function (e, t, n) {
          return arguments.length > 1
            ? this.each(
                (null == t ? Zn : "function" === typeof t ? Xn : Yn)(
                  e,
                  t,
                  null == n ? "" : n
                )
              )
            : $n(this.node(), e);
        },
        property: function (e, t) {
          return arguments.length > 1
            ? this.each(
                (null == t ? Kn : "function" === typeof t ? Jn : Qn)(e, t)
              )
            : this.node()[e];
        },
        classed: function (e, t) {
          var n = er(e + "");
          if (arguments.length < 2) {
            for (var r = tr(this.node()), i = -1, o = n.length; ++i < o; )
              if (!r.contains(n[i])) return !1;
            return !0;
          }
          return this.each(("function" === typeof t ? sr : t ? or : ar)(n, t));
        },
        text: function (e) {
          return arguments.length
            ? this.each(null == e ? ur : ("function" === typeof e ? lr : cr)(e))
            : this.node().textContent;
        },
        html: function (e) {
          return arguments.length
            ? this.each(null == e ? fr : ("function" === typeof e ? hr : dr)(e))
            : this.node().innerHTML;
        },
        raise: function () {
          return this.each(pr);
        },
        lower: function () {
          return this.each(gr);
        },
        append: function (e) {
          var t = "function" === typeof e ? e : br(e);
          return this.select(function () {
            return this.appendChild(t.apply(this, arguments));
          });
        },
        insert: function (e, t) {
          var n = "function" === typeof e ? e : br(e),
            r = null == t ? vr : "function" === typeof t ? t : Ln(t);
          return this.select(function () {
            return this.insertBefore(
              n.apply(this, arguments),
              r.apply(this, arguments) || null
            );
          });
        },
        remove: function () {
          return this.each(_r);
        },
        clone: function (e) {
          return this.select(e ? Tr : xr);
        },
        datum: function (e) {
          return arguments.length
            ? this.property("__data__", e)
            : this.node().__data__;
        },
        on: function (e, t, n) {
          var r,
            i,
            o = wn(e + ""),
            a = o.length;
          if (!(arguments.length < 2)) {
            for (s = t ? kn : An, null == n && (n = !1), r = 0; r < a; ++r)
              this.each(s(o[r], t, n));
            return this;
          }
          var s = this.node().__on;
          if (s)
            for (var u, c = 0, l = s.length; c < l; ++c)
              for (r = 0, u = s[c]; r < a; ++r)
                if ((i = o[r]).type === u.type && i.name === u.name)
                  return u.value;
        },
        dispatch: function (e, t) {
          return this.each(("function" === typeof t ? Ar : wr)(e, t));
        },
      };
      function Cr(e) {
        return "string" === typeof e
          ? new Er([[document.querySelector(e)]], [document.documentElement])
          : new Er([[e]], kr);
      }
      function Lr(e) {
        var t = En();
        return t.changedTouches && (t = t.changedTouches[0]), Pn(e, t);
      }
      function Ir() {}
      function Sr(e) {
        return null == e
          ? Ir
          : function () {
              return this.querySelector(e);
            };
      }
      function Or() {
        return [];
      }
      function Nr(e) {
        return null == e
          ? Or
          : function () {
              return this.querySelectorAll(e);
            };
      }
      function Fr(e) {
        return function () {
          return this.matches(e);
        };
      }
      function Dr(e) {
        return new Array(e.length);
      }
      function Rr(e, t) {
        (this.ownerDocument = e.ownerDocument),
          (this.namespaceURI = e.namespaceURI),
          (this._next = null),
          (this._parent = e),
          (this.__data__ = t);
      }
      Rr.prototype = {
        constructor: Rr,
        appendChild: function (e) {
          return this._parent.insertBefore(e, this._next);
        },
        insertBefore: function (e, t) {
          return this._parent.insertBefore(e, t);
        },
        querySelector: function (e) {
          return this._parent.querySelector(e);
        },
        querySelectorAll: function (e) {
          return this._parent.querySelectorAll(e);
        },
      };
      function Gr(e, t, n, r, i, o) {
        for (var a, s = 0, u = t.length, c = o.length; s < c; ++s)
          (a = t[s])
            ? ((a.__data__ = o[s]), (r[s] = a))
            : (n[s] = new Rr(e, o[s]));
        for (; s < u; ++s) (a = t[s]) && (i[s] = a);
      }
      function Br(e, t, n, r, i, o, a) {
        var s,
          u,
          c,
          l = {},
          f = t.length,
          d = o.length,
          h = new Array(f);
        for (s = 0; s < f; ++s)
          (u = t[s]) &&
            ((h[s] = c = "$" + a.call(u, u.__data__, s, t)),
            c in l ? (i[s] = u) : (l[c] = u));
        for (s = 0; s < d; ++s)
          (u = l[(c = "$" + a.call(e, o[s], s, o))])
            ? ((r[s] = u), (u.__data__ = o[s]), (l[c] = null))
            : (n[s] = new Rr(e, o[s]));
        for (s = 0; s < f; ++s) (u = t[s]) && l[h[s]] === u && (i[s] = u);
      }
      function Wr(e, t) {
        return e < t ? -1 : e > t ? 1 : e >= t ? 0 : NaN;
      }
      var jr = "http://www.w3.org/1999/xhtml",
        zr = {
          svg: "http://www.w3.org/2000/svg",
          xhtml: jr,
          xlink: "http://www.w3.org/1999/xlink",
          xml: "http://www.w3.org/XML/1998/namespace",
          xmlns: "http://www.w3.org/2000/xmlns/",
        };
      function Ur(e) {
        var t = (e += ""),
          n = t.indexOf(":");
        return (
          n >= 0 && "xmlns" !== (t = e.slice(0, n)) && (e = e.slice(n + 1)),
          zr.hasOwnProperty(t) ? { space: zr[t], local: e } : e
        );
      }
      function Hr(e) {
        return function () {
          this.removeAttribute(e);
        };
      }
      function Vr(e) {
        return function () {
          this.removeAttributeNS(e.space, e.local);
        };
      }
      function qr(e, t) {
        return function () {
          this.setAttribute(e, t);
        };
      }
      function Zr(e, t) {
        return function () {
          this.setAttributeNS(e.space, e.local, t);
        };
      }
      function Yr(e, t) {
        return function () {
          var n = t.apply(this, arguments);
          null == n ? this.removeAttribute(e) : this.setAttribute(e, n);
        };
      }
      function Xr(e, t) {
        return function () {
          var n = t.apply(this, arguments);
          null == n
            ? this.removeAttributeNS(e.space, e.local)
            : this.setAttributeNS(e.space, e.local, n);
        };
      }
      function $r(e) {
        return (
          (e.ownerDocument && e.ownerDocument.defaultView) ||
          (e.document && e) ||
          e.defaultView
        );
      }
      function Kr(e) {
        return function () {
          this.style.removeProperty(e);
        };
      }
      function Qr(e, t, n) {
        return function () {
          this.style.setProperty(e, t, n);
        };
      }
      function Jr(e, t, n) {
        return function () {
          var r = t.apply(this, arguments);
          null == r
            ? this.style.removeProperty(e)
            : this.style.setProperty(e, r, n);
        };
      }
      function ei(e, t) {
        return (
          e.style.getPropertyValue(t) ||
          $r(e).getComputedStyle(e, null).getPropertyValue(t)
        );
      }
      function ti(e) {
        return function () {
          delete this[e];
        };
      }
      function ni(e, t) {
        return function () {
          this[e] = t;
        };
      }
      function ri(e, t) {
        return function () {
          var n = t.apply(this, arguments);
          null == n ? delete this[e] : (this[e] = n);
        };
      }
      function ii(e) {
        return e.trim().split(/^|\s+/);
      }
      function oi(e) {
        return e.classList || new ai(e);
      }
      function ai(e) {
        (this._node = e), (this._names = ii(e.getAttribute("class") || ""));
      }
      function si(e, t) {
        for (var n = oi(e), r = -1, i = t.length; ++r < i; ) n.add(t[r]);
      }
      function ui(e, t) {
        for (var n = oi(e), r = -1, i = t.length; ++r < i; ) n.remove(t[r]);
      }
      function ci(e) {
        return function () {
          si(this, e);
        };
      }
      function li(e) {
        return function () {
          ui(this, e);
        };
      }
      function fi(e, t) {
        return function () {
          (t.apply(this, arguments) ? si : ui)(this, e);
        };
      }
      function di() {
        this.textContent = "";
      }
      function hi(e) {
        return function () {
          this.textContent = e;
        };
      }
      function pi(e) {
        return function () {
          var t = e.apply(this, arguments);
          this.textContent = null == t ? "" : t;
        };
      }
      function gi() {
        this.innerHTML = "";
      }
      function mi(e) {
        return function () {
          this.innerHTML = e;
        };
      }
      function yi(e) {
        return function () {
          var t = e.apply(this, arguments);
          this.innerHTML = null == t ? "" : t;
        };
      }
      function bi() {
        this.nextSibling && this.parentNode.appendChild(this);
      }
      function vi() {
        this.previousSibling &&
          this.parentNode.insertBefore(this, this.parentNode.firstChild);
      }
      function _i(e) {
        return function () {
          var t = this.ownerDocument,
            n = this.namespaceURI;
          return n === jr && t.documentElement.namespaceURI === jr
            ? t.createElement(e)
            : t.createElementNS(n, e);
        };
      }
      function xi(e) {
        return function () {
          return this.ownerDocument.createElementNS(e.space, e.local);
        };
      }
      function Ti(e) {
        var t = Ur(e);
        return (t.local ? xi : _i)(t);
      }
      function Mi() {
        return null;
      }
      function wi() {
        var e = this.parentNode;
        e && e.removeChild(this);
      }
      function Ai() {
        var e = this.cloneNode(!1),
          t = this.parentNode;
        return t ? t.insertBefore(e, this.nextSibling) : e;
      }
      function ki() {
        var e = this.cloneNode(!0),
          t = this.parentNode;
        return t ? t.insertBefore(e, this.nextSibling) : e;
      }
      ai.prototype = {
        add: function (e) {
          this._names.indexOf(e) < 0 &&
            (this._names.push(e),
            this._node.setAttribute("class", this._names.join(" ")));
        },
        remove: function (e) {
          var t = this._names.indexOf(e);
          t >= 0 &&
            (this._names.splice(t, 1),
            this._node.setAttribute("class", this._names.join(" ")));
        },
        contains: function (e) {
          return this._names.indexOf(e) >= 0;
        },
      };
      var Ei = {},
        Pi = null;
      "undefined" !== typeof document &&
        ("onmouseenter" in document.documentElement ||
          (Ei = { mouseenter: "mouseover", mouseleave: "mouseout" }));
      function Ci(e, t, n) {
        return (
          (e = Li(e, t, n)),
          function (t) {
            var n = t.relatedTarget;
            (n && (n === this || 8 & n.compareDocumentPosition(this))) ||
              e.call(this, t);
          }
        );
      }
      function Li(e, t, n) {
        return function (r) {
          var i = Pi;
          Pi = r;
          try {
            e.call(this, this.__data__, t, n);
          } finally {
            Pi = i;
          }
        };
      }
      function Ii(e) {
        return e
          .trim()
          .split(/^|\s+/)
          .map(function (e) {
            var t = "",
              n = e.indexOf(".");
            return (
              n >= 0 && ((t = e.slice(n + 1)), (e = e.slice(0, n))),
              { type: e, name: t }
            );
          });
      }
      function Si(e) {
        return function () {
          var t = this.__on;
          if (t) {
            for (var n, r = 0, i = -1, o = t.length; r < o; ++r)
              (n = t[r]),
                (e.type && n.type !== e.type) || n.name !== e.name
                  ? (t[++i] = n)
                  : this.removeEventListener(n.type, n.listener, n.capture);
            ++i ? (t.length = i) : delete this.__on;
          }
        };
      }
      function Oi(e, t, n) {
        var r = Ei.hasOwnProperty(e.type) ? Ci : Li;
        return function (i, o, a) {
          var s,
            u = this.__on,
            c = r(t, o, a);
          if (u)
            for (var l = 0, f = u.length; l < f; ++l)
              if ((s = u[l]).type === e.type && s.name === e.name)
                return (
                  this.removeEventListener(s.type, s.listener, s.capture),
                  this.addEventListener(
                    s.type,
                    (s.listener = c),
                    (s.capture = n)
                  ),
                  void (s.value = t)
                );
          this.addEventListener(e.type, c, n),
            (s = {
              type: e.type,
              name: e.name,
              value: t,
              listener: c,
              capture: n,
            }),
            u ? u.push(s) : (this.__on = [s]);
        };
      }
      function Ni(e, t, n) {
        var r = $r(e),
          i = r.CustomEvent;
        "function" === typeof i
          ? (i = new i(t, n))
          : ((i = r.document.createEvent("Event")),
            n
              ? (i.initEvent(t, n.bubbles, n.cancelable), (i.detail = n.detail))
              : i.initEvent(t, !1, !1)),
          e.dispatchEvent(i);
      }
      function Fi(e, t) {
        return function () {
          return Ni(this, e, t);
        };
      }
      function Di(e, t) {
        return function () {
          return Ni(this, e, t.apply(this, arguments));
        };
      }
      var Ri = [null];
      function Gi(e, t) {
        (this._groups = e), (this._parents = t);
      }
      function Bi() {
        return new Gi([[document.documentElement]], Ri);
      }
      Gi.prototype = Bi.prototype = {
        constructor: Gi,
        select: function (e) {
          "function" !== typeof e && (e = Sr(e));
          for (
            var t = this._groups, n = t.length, r = new Array(n), i = 0;
            i < n;
            ++i
          )
            for (
              var o,
                a,
                s = t[i],
                u = s.length,
                c = (r[i] = new Array(u)),
                l = 0;
              l < u;
              ++l
            )
              (o = s[l]) &&
                (a = e.call(o, o.__data__, l, s)) &&
                ("__data__" in o && (a.__data__ = o.__data__), (c[l] = a));
          return new Gi(r, this._parents);
        },
        selectAll: function (e) {
          "function" !== typeof e && (e = Nr(e));
          for (
            var t = this._groups, n = t.length, r = [], i = [], o = 0;
            o < n;
            ++o
          )
            for (var a, s = t[o], u = s.length, c = 0; c < u; ++c)
              (a = s[c]) && (r.push(e.call(a, a.__data__, c, s)), i.push(a));
          return new Gi(r, i);
        },
        filter: function (e) {
          "function" !== typeof e && (e = Fr(e));
          for (
            var t = this._groups, n = t.length, r = new Array(n), i = 0;
            i < n;
            ++i
          )
            for (
              var o, a = t[i], s = a.length, u = (r[i] = []), c = 0;
              c < s;
              ++c
            )
              (o = a[c]) && e.call(o, o.__data__, c, a) && u.push(o);
          return new Gi(r, this._parents);
        },
        data: function (e, t) {
          if (!e)
            return (
              (h = new Array(this.size())),
              (c = -1),
              this.each(function (e) {
                h[++c] = e;
              }),
              h
            );
          var n = t ? Br : Gr,
            r = this._parents,
            i = this._groups;
          "function" !== typeof e &&
            (e = (function (e) {
              return function () {
                return e;
              };
            })(e));
          for (
            var o = i.length,
              a = new Array(o),
              s = new Array(o),
              u = new Array(o),
              c = 0;
            c < o;
            ++c
          ) {
            var l = r[c],
              f = i[c],
              d = f.length,
              h = e.call(l, l && l.__data__, c, r),
              p = h.length,
              g = (s[c] = new Array(p)),
              m = (a[c] = new Array(p));
            n(l, f, g, m, (u[c] = new Array(d)), h, t);
            for (var y, b, v = 0, _ = 0; v < p; ++v)
              if ((y = g[v])) {
                for (v >= _ && (_ = v + 1); !(b = m[_]) && ++_ < p; );
                y._next = b || null;
              }
          }
          return ((a = new Gi(a, r))._enter = s), (a._exit = u), a;
        },
        enter: function () {
          return new Gi(this._enter || this._groups.map(Dr), this._parents);
        },
        exit: function () {
          return new Gi(this._exit || this._groups.map(Dr), this._parents);
        },
        join: function (e, t, n) {
          var r = this.enter(),
            i = this,
            o = this.exit();
          return (
            (r = "function" === typeof e ? e(r) : r.append(e + "")),
            null != t && (i = t(i)),
            null == n ? o.remove() : n(o),
            r && i ? r.merge(i).order() : i
          );
        },
        merge: function (e) {
          for (
            var t = this._groups,
              n = e._groups,
              r = t.length,
              i = n.length,
              o = Math.min(r, i),
              a = new Array(r),
              s = 0;
            s < o;
            ++s
          )
            for (
              var u,
                c = t[s],
                l = n[s],
                f = c.length,
                d = (a[s] = new Array(f)),
                h = 0;
              h < f;
              ++h
            )
              (u = c[h] || l[h]) && (d[h] = u);
          for (; s < r; ++s) a[s] = t[s];
          return new Gi(a, this._parents);
        },
        order: function () {
          for (var e = this._groups, t = -1, n = e.length; ++t < n; )
            for (var r, i = e[t], o = i.length - 1, a = i[o]; --o >= 0; )
              (r = i[o]) &&
                (a &&
                  4 ^ r.compareDocumentPosition(a) &&
                  a.parentNode.insertBefore(r, a),
                (a = r));
          return this;
        },
        sort: function (e) {
          function t(t, n) {
            return t && n ? e(t.__data__, n.__data__) : !t - !n;
          }
          e || (e = Wr);
          for (
            var n = this._groups, r = n.length, i = new Array(r), o = 0;
            o < r;
            ++o
          ) {
            for (
              var a, s = n[o], u = s.length, c = (i[o] = new Array(u)), l = 0;
              l < u;
              ++l
            )
              (a = s[l]) && (c[l] = a);
            c.sort(t);
          }
          return new Gi(i, this._parents).order();
        },
        call: function () {
          var e = arguments[0];
          return (arguments[0] = this), e.apply(null, arguments), this;
        },
        nodes: function () {
          var e = new Array(this.size()),
            t = -1;
          return (
            this.each(function () {
              e[++t] = this;
            }),
            e
          );
        },
        node: function () {
          for (var e = this._groups, t = 0, n = e.length; t < n; ++t)
            for (var r = e[t], i = 0, o = r.length; i < o; ++i) {
              var a = r[i];
              if (a) return a;
            }
          return null;
        },
        size: function () {
          var e = 0;
          return (
            this.each(function () {
              ++e;
            }),
            e
          );
        },
        empty: function () {
          return !this.node();
        },
        each: function (e) {
          for (var t = this._groups, n = 0, r = t.length; n < r; ++n)
            for (var i, o = t[n], a = 0, s = o.length; a < s; ++a)
              (i = o[a]) && e.call(i, i.__data__, a, o);
          return this;
        },
        attr: function (e, t) {
          var n = Ur(e);
          if (arguments.length < 2) {
            var r = this.node();
            return n.local
              ? r.getAttributeNS(n.space, n.local)
              : r.getAttribute(n);
          }
          return this.each(
            (null == t
              ? n.local
                ? Vr
                : Hr
              : "function" === typeof t
              ? n.local
                ? Xr
                : Yr
              : n.local
              ? Zr
              : qr)(n, t)
          );
        },
        style: function (e, t, n) {
          return arguments.length > 1
            ? this.each(
                (null == t ? Kr : "function" === typeof t ? Jr : Qr)(
                  e,
                  t,
                  null == n ? "" : n
                )
              )
            : ei(this.node(), e);
        },
        property: function (e, t) {
          return arguments.length > 1
            ? this.each(
                (null == t ? ti : "function" === typeof t ? ri : ni)(e, t)
              )
            : this.node()[e];
        },
        classed: function (e, t) {
          var n = ii(e + "");
          if (arguments.length < 2) {
            for (var r = oi(this.node()), i = -1, o = n.length; ++i < o; )
              if (!r.contains(n[i])) return !1;
            return !0;
          }
          return this.each(("function" === typeof t ? fi : t ? ci : li)(n, t));
        },
        text: function (e) {
          return arguments.length
            ? this.each(null == e ? di : ("function" === typeof e ? pi : hi)(e))
            : this.node().textContent;
        },
        html: function (e) {
          return arguments.length
            ? this.each(null == e ? gi : ("function" === typeof e ? yi : mi)(e))
            : this.node().innerHTML;
        },
        raise: function () {
          return this.each(bi);
        },
        lower: function () {
          return this.each(vi);
        },
        append: function (e) {
          var t = "function" === typeof e ? e : Ti(e);
          return this.select(function () {
            return this.appendChild(t.apply(this, arguments));
          });
        },
        insert: function (e, t) {
          var n = "function" === typeof e ? e : Ti(e),
            r = null == t ? Mi : "function" === typeof t ? t : Sr(t);
          return this.select(function () {
            return this.insertBefore(
              n.apply(this, arguments),
              r.apply(this, arguments) || null
            );
          });
        },
        remove: function () {
          return this.each(wi);
        },
        clone: function (e) {
          return this.select(e ? ki : Ai);
        },
        datum: function (e) {
          return arguments.length
            ? this.property("__data__", e)
            : this.node().__data__;
        },
        on: function (e, t, n) {
          var r,
            i,
            o = Ii(e + ""),
            a = o.length;
          if (!(arguments.length < 2)) {
            for (s = t ? Oi : Si, null == n && (n = !1), r = 0; r < a; ++r)
              this.each(s(o[r], t, n));
            return this;
          }
          var s = this.node().__on;
          if (s)
            for (var u, c = 0, l = s.length; c < l; ++c)
              for (r = 0, u = s[c]; r < a; ++r)
                if ((i = o[r]).type === u.type && i.name === u.name)
                  return u.value;
        },
        dispatch: function (e, t) {
          return this.each(("function" === typeof t ? Di : Fi)(e, t));
        },
      };
      var Wi,
        ji,
        zi = Bi,
        Ui = 0,
        Hi = 0,
        Vi = 0,
        qi = 0,
        Zi = 0,
        Yi = 0,
        Xi =
          "object" === typeof performance && performance.now
            ? performance
            : Date,
        $i =
          "object" === typeof window && window.requestAnimationFrame
            ? window.requestAnimationFrame.bind(window)
            : function (e) {
                setTimeout(e, 17);
              };
      function Ki() {
        return Zi || ($i(Qi), (Zi = Xi.now() + Yi));
      }
      function Qi() {
        Zi = 0;
      }
      function Ji() {
        this._call = this._time = this._next = null;
      }
      function eo(e, t, n) {
        var r = new Ji();
        return r.restart(e, t, n), r;
      }
      function to() {
        Ki(), ++Ui;
        for (var e, t = Wi; t; )
          (e = Zi - t._time) >= 0 && t._call.call(null, e), (t = t._next);
        --Ui;
      }
      function no() {
        (Zi = (qi = Xi.now()) + Yi), (Ui = Hi = 0);
        try {
          to();
        } finally {
          (Ui = 0),
            (function () {
              var e,
                t,
                n = Wi,
                r = 1 / 0;
              for (; n; )
                n._call
                  ? (r > n._time && (r = n._time), (e = n), (n = n._next))
                  : ((t = n._next),
                    (n._next = null),
                    (n = e ? (e._next = t) : (Wi = t)));
              (ji = e), io(r);
            })(),
            (Zi = 0);
        }
      }
      function ro() {
        var e = Xi.now(),
          t = e - qi;
        t > 1e3 && ((Yi -= t), (qi = e));
      }
      function io(e) {
        Ui ||
          (Hi && (Hi = clearTimeout(Hi)),
          e - Zi > 24
            ? (e < 1 / 0 && (Hi = setTimeout(no, e - Xi.now() - Yi)),
              Vi && (Vi = clearInterval(Vi)))
            : (Vi || ((qi = Xi.now()), (Vi = setInterval(ro, 1e3))),
              (Ui = 1),
              $i(no)));
      }
      function oo(e, t, n) {
        var r = new Ji();
        return (
          (t = null == t ? 0 : +t),
          r.restart(
            function (n) {
              r.stop(), e(n + t);
            },
            t,
            n
          ),
          r
        );
      }
      Ji.prototype = eo.prototype = {
        constructor: Ji,
        restart: function (e, t, n) {
          if ("function" !== typeof e)
            throw new TypeError("callback is not a function");
          (n = (null == n ? Ki() : +n) + (null == t ? 0 : +t)),
            this._next ||
              ji === this ||
              (ji ? (ji._next = this) : (Wi = this), (ji = this)),
            (this._call = e),
            (this._time = n),
            io();
        },
        stop: function () {
          this._call && ((this._call = null), (this._time = 1 / 0), io());
        },
      };
      var ao = de("start", "end", "cancel", "interrupt"),
        so = [];
      function uo(e, t, n, r, i, o) {
        var a = e.__transition;
        if (a) {
          if (n in a) return;
        } else e.__transition = {};
        !(function (e, t, n) {
          var r,
            i = e.__transition;
          function o(e) {
            (n.state = 1),
              n.timer.restart(a, n.delay, n.time),
              n.delay <= e && a(e - n.delay);
          }
          function a(o) {
            var c, l, f, d;
            if (1 !== n.state) return u();
            for (c in i)
              if ((d = i[c]).name === n.name) {
                if (3 === d.state) return oo(a);
                4 === d.state
                  ? ((d.state = 6),
                    d.timer.stop(),
                    d.on.call("interrupt", e, e.__data__, d.index, d.group),
                    delete i[c])
                  : +c < t &&
                    ((d.state = 6),
                    d.timer.stop(),
                    d.on.call("cancel", e, e.__data__, d.index, d.group),
                    delete i[c]);
              }
            if (
              (oo(function () {
                3 === n.state &&
                  ((n.state = 4), n.timer.restart(s, n.delay, n.time), s(o));
              }),
              (n.state = 2),
              n.on.call("start", e, e.__data__, n.index, n.group),
              2 === n.state)
            ) {
              for (
                n.state = 3, r = new Array((f = n.tween.length)), c = 0, l = -1;
                c < f;
                ++c
              )
                (d = n.tween[c].value.call(e, e.__data__, n.index, n.group)) &&
                  (r[++l] = d);
              r.length = l + 1;
            }
          }
          function s(t) {
            for (
              var i =
                  t < n.duration
                    ? n.ease.call(null, t / n.duration)
                    : (n.timer.restart(u), (n.state = 5), 1),
                o = -1,
                a = r.length;
              ++o < a;

            )
              r[o].call(e, i);
            5 === n.state &&
              (n.on.call("end", e, e.__data__, n.index, n.group), u());
          }
          function u() {
            for (var r in ((n.state = 6), n.timer.stop(), delete i[t], i))
              return;
            delete e.__transition;
          }
          (i[t] = n), (n.timer = eo(o, 0, n.time));
        })(e, n, {
          name: t,
          index: r,
          group: i,
          on: ao,
          tween: so,
          time: o.time,
          delay: o.delay,
          duration: o.duration,
          ease: o.ease,
          timer: null,
          state: 0,
        });
      }
      function co(e, t) {
        var n = fo(e, t);
        if (n.state > 0) throw new Error("too late; already scheduled");
        return n;
      }
      function lo(e, t) {
        var n = fo(e, t);
        if (n.state > 3) throw new Error("too late; already running");
        return n;
      }
      function fo(e, t) {
        var n = e.__transition;
        if (!n || !(n = n[t])) throw new Error("transition not found");
        return n;
      }
      function ho(e, t) {
        var n,
          r,
          i,
          o = e.__transition,
          a = !0;
        if (o) {
          for (i in ((t = null == t ? null : t + ""), o))
            (n = o[i]).name === t
              ? ((r = n.state > 2 && n.state < 5),
                (n.state = 6),
                n.timer.stop(),
                n.on.call(
                  r ? "interrupt" : "cancel",
                  e,
                  e.__data__,
                  n.index,
                  n.group
                ),
                delete o[i])
              : (a = !1);
          a && delete e.__transition;
        }
      }
      function po(e, t) {
        return (
          (e = +e),
          (t = +t),
          function (n) {
            return e * (1 - n) + t * n;
          }
        );
      }
      var go,
        mo,
        yo,
        bo,
        vo = 180 / Math.PI,
        _o = {
          translateX: 0,
          translateY: 0,
          rotate: 0,
          skewX: 0,
          scaleX: 1,
          scaleY: 1,
        };
      function xo(e, t, n, r, i, o) {
        var a, s, u;
        return (
          (a = Math.sqrt(e * e + t * t)) && ((e /= a), (t /= a)),
          (u = e * n + t * r) && ((n -= e * u), (r -= t * u)),
          (s = Math.sqrt(n * n + r * r)) && ((n /= s), (r /= s), (u /= s)),
          e * r < t * n && ((e = -e), (t = -t), (u = -u), (a = -a)),
          {
            translateX: i,
            translateY: o,
            rotate: Math.atan2(t, e) * vo,
            skewX: Math.atan(u) * vo,
            scaleX: a,
            scaleY: s,
          }
        );
      }
      function To(e, t, n, r) {
        function i(e) {
          return e.length ? e.pop() + " " : "";
        }
        return function (o, a) {
          var s = [],
            u = [];
          return (
            (o = e(o)),
            (a = e(a)),
            (function (e, r, i, o, a, s) {
              if (e !== i || r !== o) {
                var u = a.push("translate(", null, t, null, n);
                s.push({ i: u - 4, x: po(e, i) }, { i: u - 2, x: po(r, o) });
              } else (i || o) && a.push("translate(" + i + t + o + n);
            })(o.translateX, o.translateY, a.translateX, a.translateY, s, u),
            (function (e, t, n, o) {
              e !== t
                ? (e - t > 180 ? (t += 360) : t - e > 180 && (e += 360),
                  o.push({
                    i: n.push(i(n) + "rotate(", null, r) - 2,
                    x: po(e, t),
                  }))
                : t && n.push(i(n) + "rotate(" + t + r);
            })(o.rotate, a.rotate, s, u),
            (function (e, t, n, o) {
              e !== t
                ? o.push({
                    i: n.push(i(n) + "skewX(", null, r) - 2,
                    x: po(e, t),
                  })
                : t && n.push(i(n) + "skewX(" + t + r);
            })(o.skewX, a.skewX, s, u),
            (function (e, t, n, r, o, a) {
              if (e !== n || t !== r) {
                var s = o.push(i(o) + "scale(", null, ",", null, ")");
                a.push({ i: s - 4, x: po(e, n) }, { i: s - 2, x: po(t, r) });
              } else
                (1 === n && 1 === r) ||
                  o.push(i(o) + "scale(" + n + "," + r + ")");
            })(o.scaleX, o.scaleY, a.scaleX, a.scaleY, s, u),
            (o = a = null),
            function (e) {
              for (var t, n = -1, r = u.length; ++n < r; )
                s[(t = u[n]).i] = t.x(e);
              return s.join("");
            }
          );
        };
      }
      var Mo = To(
          function (e) {
            return "none" === e
              ? _o
              : (go ||
                  ((go = document.createElement("DIV")),
                  (mo = document.documentElement),
                  (yo = document.defaultView)),
                (go.style.transform = e),
                (e = yo
                  .getComputedStyle(mo.appendChild(go), null)
                  .getPropertyValue("transform")),
                mo.removeChild(go),
                xo(
                  +(e = e.slice(7, -1).split(","))[0],
                  +e[1],
                  +e[2],
                  +e[3],
                  +e[4],
                  +e[5]
                ));
          },
          "px, ",
          "px)",
          "deg)"
        ),
        wo = To(
          function (e) {
            return null == e
              ? _o
              : (bo ||
                  (bo = document.createElementNS(
                    "http://www.w3.org/2000/svg",
                    "g"
                  )),
                bo.setAttribute("transform", e),
                (e = bo.transform.baseVal.consolidate())
                  ? xo((e = e.matrix).a, e.b, e.c, e.d, e.e, e.f)
                  : _o);
          },
          ", ",
          ")",
          ")"
        );
      function Ao(e, t) {
        var n, r;
        return function () {
          var i = lo(this, e),
            o = i.tween;
          if (o !== n)
            for (var a = 0, s = (r = n = o).length; a < s; ++a)
              if (r[a].name === t) {
                (r = r.slice()).splice(a, 1);
                break;
              }
          i.tween = r;
        };
      }
      function ko(e, t, n) {
        var r, i;
        if ("function" !== typeof n) throw new Error();
        return function () {
          var o = lo(this, e),
            a = o.tween;
          if (a !== r) {
            i = (r = a).slice();
            for (var s = { name: t, value: n }, u = 0, c = i.length; u < c; ++u)
              if (i[u].name === t) {
                i[u] = s;
                break;
              }
            u === c && i.push(s);
          }
          o.tween = i;
        };
      }
      function Eo(e, t, n) {
        var r = e._id;
        return (
          e.each(function () {
            var e = lo(this, r);
            (e.value || (e.value = {}))[t] = n.apply(this, arguments);
          }),
          function (e) {
            return fo(e, r).value[t];
          }
        );
      }
      function Po(e, t, n) {
        (e.prototype = t.prototype = n), (n.constructor = e);
      }
      function Co(e, t) {
        var n = Object.create(e.prototype);
        for (var r in t) n[r] = t[r];
        return n;
      }
      function Lo() {}
      var Io = 0.7,
        So = 1 / Io,
        Oo = "\\s*([+-]?\\d+)\\s*",
        No = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",
        Fo = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
        Do = /^#([0-9a-f]{3,8})$/,
        Ro = new RegExp("^rgb\\(" + [Oo, Oo, Oo] + "\\)$"),
        Go = new RegExp("^rgb\\(" + [Fo, Fo, Fo] + "\\)$"),
        Bo = new RegExp("^rgba\\(" + [Oo, Oo, Oo, No] + "\\)$"),
        Wo = new RegExp("^rgba\\(" + [Fo, Fo, Fo, No] + "\\)$"),
        jo = new RegExp("^hsl\\(" + [No, Fo, Fo] + "\\)$"),
        zo = new RegExp("^hsla\\(" + [No, Fo, Fo, No] + "\\)$"),
        Uo = {
          aliceblue: 15792383,
          antiquewhite: 16444375,
          aqua: 65535,
          aquamarine: 8388564,
          azure: 15794175,
          beige: 16119260,
          bisque: 16770244,
          black: 0,
          blanchedalmond: 16772045,
          blue: 255,
          blueviolet: 9055202,
          brown: 10824234,
          burlywood: 14596231,
          cadetblue: 6266528,
          chartreuse: 8388352,
          chocolate: 13789470,
          coral: 16744272,
          cornflowerblue: 6591981,
          cornsilk: 16775388,
          crimson: 14423100,
          cyan: 65535,
          darkblue: 139,
          darkcyan: 35723,
          darkgoldenrod: 12092939,
          darkgray: 11119017,
          darkgreen: 25600,
          darkgrey: 11119017,
          darkkhaki: 12433259,
          darkmagenta: 9109643,
          darkolivegreen: 5597999,
          darkorange: 16747520,
          darkorchid: 10040012,
          darkred: 9109504,
          darksalmon: 15308410,
          darkseagreen: 9419919,
          darkslateblue: 4734347,
          darkslategray: 3100495,
          darkslategrey: 3100495,
          darkturquoise: 52945,
          darkviolet: 9699539,
          deeppink: 16716947,
          deepskyblue: 49151,
          dimgray: 6908265,
          dimgrey: 6908265,
          dodgerblue: 2003199,
          firebrick: 11674146,
          floralwhite: 16775920,
          forestgreen: 2263842,
          fuchsia: 16711935,
          gainsboro: 14474460,
          ghostwhite: 16316671,
          gold: 16766720,
          goldenrod: 14329120,
          gray: 8421504,
          green: 32768,
          greenyellow: 11403055,
          grey: 8421504,
          honeydew: 15794160,
          hotpink: 16738740,
          indianred: 13458524,
          indigo: 4915330,
          ivory: 16777200,
          khaki: 15787660,
          lavender: 15132410,
          lavenderblush: 16773365,
          lawngreen: 8190976,
          lemonchiffon: 16775885,
          lightblue: 11393254,
          lightcoral: 15761536,
          lightcyan: 14745599,
          lightgoldenrodyellow: 16448210,
          lightgray: 13882323,
          lightgreen: 9498256,
          lightgrey: 13882323,
          lightpink: 16758465,
          lightsalmon: 16752762,
          lightseagreen: 2142890,
          lightskyblue: 8900346,
          lightslategray: 7833753,
          lightslategrey: 7833753,
          lightsteelblue: 11584734,
          lightyellow: 16777184,
          lime: 65280,
          limegreen: 3329330,
          linen: 16445670,
          magenta: 16711935,
          maroon: 8388608,
          mediumaquamarine: 6737322,
          mediumblue: 205,
          mediumorchid: 12211667,
          mediumpurple: 9662683,
          mediumseagreen: 3978097,
          mediumslateblue: 8087790,
          mediumspringgreen: 64154,
          mediumturquoise: 4772300,
          mediumvioletred: 13047173,
          midnightblue: 1644912,
          mintcream: 16121850,
          mistyrose: 16770273,
          moccasin: 16770229,
          navajowhite: 16768685,
          navy: 128,
          oldlace: 16643558,
          olive: 8421376,
          olivedrab: 7048739,
          orange: 16753920,
          orangered: 16729344,
          orchid: 14315734,
          palegoldenrod: 15657130,
          palegreen: 10025880,
          paleturquoise: 11529966,
          palevioletred: 14381203,
          papayawhip: 16773077,
          peachpuff: 16767673,
          peru: 13468991,
          pink: 16761035,
          plum: 14524637,
          powderblue: 11591910,
          purple: 8388736,
          rebeccapurple: 6697881,
          red: 16711680,
          rosybrown: 12357519,
          royalblue: 4286945,
          saddlebrown: 9127187,
          salmon: 16416882,
          sandybrown: 16032864,
          seagreen: 3050327,
          seashell: 16774638,
          sienna: 10506797,
          silver: 12632256,
          skyblue: 8900331,
          slateblue: 6970061,
          slategray: 7372944,
          slategrey: 7372944,
          snow: 16775930,
          springgreen: 65407,
          steelblue: 4620980,
          tan: 13808780,
          teal: 32896,
          thistle: 14204888,
          tomato: 16737095,
          turquoise: 4251856,
          violet: 15631086,
          wheat: 16113331,
          white: 16777215,
          whitesmoke: 16119285,
          yellow: 16776960,
          yellowgreen: 10145074,
        };
      function Ho() {
        return this.rgb().formatHex();
      }
      function Vo() {
        return this.rgb().formatRgb();
      }
      function qo(e) {
        var t, n;
        return (
          (e = (e + "").trim().toLowerCase()),
          (t = Do.exec(e))
            ? ((n = t[1].length),
              (t = parseInt(t[1], 16)),
              6 === n
                ? Zo(t)
                : 3 === n
                ? new Ko(
                    ((t >> 8) & 15) | ((t >> 4) & 240),
                    ((t >> 4) & 15) | (240 & t),
                    ((15 & t) << 4) | (15 & t),
                    1
                  )
                : 8 === n
                ? Yo(
                    (t >> 24) & 255,
                    (t >> 16) & 255,
                    (t >> 8) & 255,
                    (255 & t) / 255
                  )
                : 4 === n
                ? Yo(
                    ((t >> 12) & 15) | ((t >> 8) & 240),
                    ((t >> 8) & 15) | ((t >> 4) & 240),
                    ((t >> 4) & 15) | (240 & t),
                    (((15 & t) << 4) | (15 & t)) / 255
                  )
                : null)
            : (t = Ro.exec(e))
            ? new Ko(t[1], t[2], t[3], 1)
            : (t = Go.exec(e))
            ? new Ko(
                (255 * t[1]) / 100,
                (255 * t[2]) / 100,
                (255 * t[3]) / 100,
                1
              )
            : (t = Bo.exec(e))
            ? Yo(t[1], t[2], t[3], t[4])
            : (t = Wo.exec(e))
            ? Yo(
                (255 * t[1]) / 100,
                (255 * t[2]) / 100,
                (255 * t[3]) / 100,
                t[4]
              )
            : (t = jo.exec(e))
            ? ta(t[1], t[2] / 100, t[3] / 100, 1)
            : (t = zo.exec(e))
            ? ta(t[1], t[2] / 100, t[3] / 100, t[4])
            : Uo.hasOwnProperty(e)
            ? Zo(Uo[e])
            : "transparent" === e
            ? new Ko(NaN, NaN, NaN, 0)
            : null
        );
      }
      function Zo(e) {
        return new Ko((e >> 16) & 255, (e >> 8) & 255, 255 & e, 1);
      }
      function Yo(e, t, n, r) {
        return r <= 0 && (e = t = n = NaN), new Ko(e, t, n, r);
      }
      function Xo(e) {
        return (
          e instanceof Lo || (e = qo(e)),
          e ? new Ko((e = e.rgb()).r, e.g, e.b, e.opacity) : new Ko()
        );
      }
      function $o(e, t, n, r) {
        return 1 === arguments.length
          ? Xo(e)
          : new Ko(e, t, n, null == r ? 1 : r);
      }
      function Ko(e, t, n, r) {
        (this.r = +e), (this.g = +t), (this.b = +n), (this.opacity = +r);
      }
      function Qo() {
        return "#" + ea(this.r) + ea(this.g) + ea(this.b);
      }
      function Jo() {
        var e = this.opacity;
        return (
          (1 === (e = isNaN(e) ? 1 : Math.max(0, Math.min(1, e)))
            ? "rgb("
            : "rgba(") +
          Math.max(0, Math.min(255, Math.round(this.r) || 0)) +
          ", " +
          Math.max(0, Math.min(255, Math.round(this.g) || 0)) +
          ", " +
          Math.max(0, Math.min(255, Math.round(this.b) || 0)) +
          (1 === e ? ")" : ", " + e + ")")
        );
      }
      function ea(e) {
        return (
          ((e = Math.max(0, Math.min(255, Math.round(e) || 0))) < 16
            ? "0"
            : "") + e.toString(16)
        );
      }
      function ta(e, t, n, r) {
        return (
          r <= 0
            ? (e = t = n = NaN)
            : n <= 0 || n >= 1
            ? (e = t = NaN)
            : t <= 0 && (e = NaN),
          new ra(e, t, n, r)
        );
      }
      function na(e) {
        if (e instanceof ra) return new ra(e.h, e.s, e.l, e.opacity);
        if ((e instanceof Lo || (e = qo(e)), !e)) return new ra();
        if (e instanceof ra) return e;
        var t = (e = e.rgb()).r / 255,
          n = e.g / 255,
          r = e.b / 255,
          i = Math.min(t, n, r),
          o = Math.max(t, n, r),
          a = NaN,
          s = o - i,
          u = (o + i) / 2;
        return (
          s
            ? ((a =
                t === o
                  ? (n - r) / s + 6 * (n < r)
                  : n === o
                  ? (r - t) / s + 2
                  : (t - n) / s + 4),
              (s /= u < 0.5 ? o + i : 2 - o - i),
              (a *= 60))
            : (s = u > 0 && u < 1 ? 0 : a),
          new ra(a, s, u, e.opacity)
        );
      }
      function ra(e, t, n, r) {
        (this.h = +e), (this.s = +t), (this.l = +n), (this.opacity = +r);
      }
      function ia(e, t, n) {
        return (
          255 *
          (e < 60
            ? t + ((n - t) * e) / 60
            : e < 180
            ? n
            : e < 240
            ? t + ((n - t) * (240 - e)) / 60
            : t)
        );
      }
      function oa(e, t, n, r, i) {
        var o = e * e,
          a = o * e;
        return (
          ((1 - 3 * e + 3 * o - a) * t +
            (4 - 6 * o + 3 * a) * n +
            (1 + 3 * e + 3 * o - 3 * a) * r +
            a * i) /
          6
        );
      }
      function aa(e) {
        return function () {
          return e;
        };
      }
      function sa(e, t) {
        return function (n) {
          return e + n * t;
        };
      }
      function ua(e) {
        return 1 === (e = +e)
          ? ca
          : function (t, n) {
              return n - t
                ? (function (e, t, n) {
                    return (
                      (e = Math.pow(e, n)),
                      (t = Math.pow(t, n) - e),
                      (n = 1 / n),
                      function (r) {
                        return Math.pow(e + r * t, n);
                      }
                    );
                  })(t, n, e)
                : aa(isNaN(t) ? n : t);
            };
      }
      function ca(e, t) {
        var n = t - e;
        return n ? sa(e, n) : aa(isNaN(e) ? t : e);
      }
      Po(Lo, qo, {
        copy: function (e) {
          return Object.assign(new this.constructor(), this, e);
        },
        displayable: function () {
          return this.rgb().displayable();
        },
        hex: Ho,
        formatHex: Ho,
        formatHsl: function () {
          return na(this).formatHsl();
        },
        formatRgb: Vo,
        toString: Vo,
      }),
        Po(
          Ko,
          $o,
          Co(Lo, {
            brighter: function (e) {
              return (
                (e = null == e ? So : Math.pow(So, e)),
                new Ko(this.r * e, this.g * e, this.b * e, this.opacity)
              );
            },
            darker: function (e) {
              return (
                (e = null == e ? Io : Math.pow(Io, e)),
                new Ko(this.r * e, this.g * e, this.b * e, this.opacity)
              );
            },
            rgb: function () {
              return this;
            },
            displayable: function () {
              return (
                -0.5 <= this.r &&
                this.r < 255.5 &&
                -0.5 <= this.g &&
                this.g < 255.5 &&
                -0.5 <= this.b &&
                this.b < 255.5 &&
                0 <= this.opacity &&
                this.opacity <= 1
              );
            },
            hex: Qo,
            formatHex: Qo,
            formatRgb: Jo,
            toString: Jo,
          })
        ),
        Po(
          ra,
          function (e, t, n, r) {
            return 1 === arguments.length
              ? na(e)
              : new ra(e, t, n, null == r ? 1 : r);
          },
          Co(Lo, {
            brighter: function (e) {
              return (
                (e = null == e ? So : Math.pow(So, e)),
                new ra(this.h, this.s, this.l * e, this.opacity)
              );
            },
            darker: function (e) {
              return (
                (e = null == e ? Io : Math.pow(Io, e)),
                new ra(this.h, this.s, this.l * e, this.opacity)
              );
            },
            rgb: function () {
              var e = (this.h % 360) + 360 * (this.h < 0),
                t = isNaN(e) || isNaN(this.s) ? 0 : this.s,
                n = this.l,
                r = n + (n < 0.5 ? n : 1 - n) * t,
                i = 2 * n - r;
              return new Ko(
                ia(e >= 240 ? e - 240 : e + 120, i, r),
                ia(e, i, r),
                ia(e < 120 ? e + 240 : e - 120, i, r),
                this.opacity
              );
            },
            displayable: function () {
              return (
                ((0 <= this.s && this.s <= 1) || isNaN(this.s)) &&
                0 <= this.l &&
                this.l <= 1 &&
                0 <= this.opacity &&
                this.opacity <= 1
              );
            },
            formatHsl: function () {
              var e = this.opacity;
              return (
                (1 === (e = isNaN(e) ? 1 : Math.max(0, Math.min(1, e)))
                  ? "hsl("
                  : "hsla(") +
                (this.h || 0) +
                ", " +
                100 * (this.s || 0) +
                "%, " +
                100 * (this.l || 0) +
                "%" +
                (1 === e ? ")" : ", " + e + ")")
              );
            },
          })
        );
      var la = (function e(t) {
        var n = ua(t);
        function r(e, t) {
          var r = n((e = $o(e)).r, (t = $o(t)).r),
            i = n(e.g, t.g),
            o = n(e.b, t.b),
            a = ca(e.opacity, t.opacity);
          return function (t) {
            return (
              (e.r = r(t)),
              (e.g = i(t)),
              (e.b = o(t)),
              (e.opacity = a(t)),
              e + ""
            );
          };
        }
        return (r.gamma = e), r;
      })(1);
      function fa(e) {
        return function (t) {
          var n,
            r,
            i = t.length,
            o = new Array(i),
            a = new Array(i),
            s = new Array(i);
          for (n = 0; n < i; ++n)
            (r = $o(t[n])),
              (o[n] = r.r || 0),
              (a[n] = r.g || 0),
              (s[n] = r.b || 0);
          return (
            (o = e(o)),
            (a = e(a)),
            (s = e(s)),
            (r.opacity = 1),
            function (e) {
              return (r.r = o(e)), (r.g = a(e)), (r.b = s(e)), r + "";
            }
          );
        };
      }
      fa(function (e) {
        var t = e.length - 1;
        return function (n) {
          var r =
              n <= 0 ? (n = 0) : n >= 1 ? ((n = 1), t - 1) : Math.floor(n * t),
            i = e[r],
            o = e[r + 1],
            a = r > 0 ? e[r - 1] : 2 * i - o,
            s = r < t - 1 ? e[r + 2] : 2 * o - i;
          return oa((n - r / t) * t, a, i, o, s);
        };
      }),
        fa(function (e) {
          var t = e.length;
          return function (n) {
            var r = Math.floor(((n %= 1) < 0 ? ++n : n) * t),
              i = e[(r + t - 1) % t],
              o = e[r % t],
              a = e[(r + 1) % t],
              s = e[(r + 2) % t];
            return oa((n - r / t) * t, i, o, a, s);
          };
        });
      var da = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
        ha = new RegExp(da.source, "g");
      function pa(e, t) {
        var n,
          r,
          i,
          o = (da.lastIndex = ha.lastIndex = 0),
          a = -1,
          s = [],
          u = [];
        for (e += "", t += ""; (n = da.exec(e)) && (r = ha.exec(t)); )
          (i = r.index) > o &&
            ((i = t.slice(o, i)), s[a] ? (s[a] += i) : (s[++a] = i)),
            (n = n[0]) === (r = r[0])
              ? s[a]
                ? (s[a] += r)
                : (s[++a] = r)
              : ((s[++a] = null), u.push({ i: a, x: po(n, r) })),
            (o = ha.lastIndex);
        return (
          o < t.length && ((i = t.slice(o)), s[a] ? (s[a] += i) : (s[++a] = i)),
          s.length < 2
            ? u[0]
              ? (function (e) {
                  return function (t) {
                    return e(t) + "";
                  };
                })(u[0].x)
              : (function (e) {
                  return function () {
                    return e;
                  };
                })(t)
            : ((t = u.length),
              function (e) {
                for (var n, r = 0; r < t; ++r) s[(n = u[r]).i] = n.x(e);
                return s.join("");
              })
        );
      }
      function ga(e, t) {
        var n;
        return (
          "number" === typeof t
            ? po
            : t instanceof qo
            ? la
            : (n = qo(t))
            ? ((t = n), la)
            : pa
        )(e, t);
      }
      function ma(e) {
        return function () {
          this.removeAttribute(e);
        };
      }
      function ya(e) {
        return function () {
          this.removeAttributeNS(e.space, e.local);
        };
      }
      function ba(e, t, n) {
        var r,
          i,
          o = n + "";
        return function () {
          var a = this.getAttribute(e);
          return a === o ? null : a === r ? i : (i = t((r = a), n));
        };
      }
      function va(e, t, n) {
        var r,
          i,
          o = n + "";
        return function () {
          var a = this.getAttributeNS(e.space, e.local);
          return a === o ? null : a === r ? i : (i = t((r = a), n));
        };
      }
      function _a(e, t, n) {
        var r, i, o;
        return function () {
          var a,
            s,
            u = n(this);
          if (null != u)
            return (a = this.getAttribute(e)) === (s = u + "")
              ? null
              : a === r && s === i
              ? o
              : ((i = s), (o = t((r = a), u)));
          this.removeAttribute(e);
        };
      }
      function xa(e, t, n) {
        var r, i, o;
        return function () {
          var a,
            s,
            u = n(this);
          if (null != u)
            return (a = this.getAttributeNS(e.space, e.local)) === (s = u + "")
              ? null
              : a === r && s === i
              ? o
              : ((i = s), (o = t((r = a), u)));
          this.removeAttributeNS(e.space, e.local);
        };
      }
      function Ta(e, t) {
        return function (n) {
          this.setAttribute(e, t.call(this, n));
        };
      }
      function Ma(e, t) {
        return function (n) {
          this.setAttributeNS(e.space, e.local, t.call(this, n));
        };
      }
      function wa(e, t) {
        var n, r;
        function i() {
          var i = t.apply(this, arguments);
          return i !== r && (n = (r = i) && Ma(e, i)), n;
        }
        return (i._value = t), i;
      }
      function Aa(e, t) {
        var n, r;
        function i() {
          var i = t.apply(this, arguments);
          return i !== r && (n = (r = i) && Ta(e, i)), n;
        }
        return (i._value = t), i;
      }
      function ka(e, t) {
        return function () {
          co(this, e).delay = +t.apply(this, arguments);
        };
      }
      function Ea(e, t) {
        return (
          (t = +t),
          function () {
            co(this, e).delay = t;
          }
        );
      }
      function Pa(e, t) {
        return function () {
          lo(this, e).duration = +t.apply(this, arguments);
        };
      }
      function Ca(e, t) {
        return (
          (t = +t),
          function () {
            lo(this, e).duration = t;
          }
        );
      }
      function La(e, t) {
        if ("function" !== typeof t) throw new Error();
        return function () {
          lo(this, e).ease = t;
        };
      }
      function Ia(e, t, n) {
        var r,
          i,
          o = (function (e) {
            return (e + "")
              .trim()
              .split(/^|\s+/)
              .every(function (e) {
                var t = e.indexOf(".");
                return t >= 0 && (e = e.slice(0, t)), !e || "start" === e;
              });
          })(t)
            ? co
            : lo;
        return function () {
          var a = o(this, e),
            s = a.on;
          s !== r && (i = (r = s).copy()).on(t, n), (a.on = i);
        };
      }
      var Sa = zi.prototype.constructor;
      function Oa(e) {
        return function () {
          this.style.removeProperty(e);
        };
      }
      function Na(e, t, n) {
        return function (r) {
          this.style.setProperty(e, t.call(this, r), n);
        };
      }
      function Fa(e, t, n) {
        var r, i;
        function o() {
          var o = t.apply(this, arguments);
          return o !== i && (r = (i = o) && Na(e, o, n)), r;
        }
        return (o._value = t), o;
      }
      function Da(e) {
        return function (t) {
          this.textContent = e.call(this, t);
        };
      }
      function Ra(e) {
        var t, n;
        function r() {
          var r = e.apply(this, arguments);
          return r !== n && (t = (n = r) && Da(r)), t;
        }
        return (r._value = e), r;
      }
      var Ga = 0;
      function Ba(e, t, n, r) {
        (this._groups = e),
          (this._parents = t),
          (this._name = n),
          (this._id = r);
      }
      function Wa(e) {
        return zi().transition(e);
      }
      function ja() {
        return ++Ga;
      }
      var za = zi.prototype;
      Ba.prototype = Wa.prototype = {
        constructor: Ba,
        select: function (e) {
          var t = this._name,
            n = this._id;
          "function" !== typeof e && (e = Sr(e));
          for (
            var r = this._groups, i = r.length, o = new Array(i), a = 0;
            a < i;
            ++a
          )
            for (
              var s,
                u,
                c = r[a],
                l = c.length,
                f = (o[a] = new Array(l)),
                d = 0;
              d < l;
              ++d
            )
              (s = c[d]) &&
                (u = e.call(s, s.__data__, d, c)) &&
                ("__data__" in s && (u.__data__ = s.__data__),
                (f[d] = u),
                uo(f[d], t, n, d, f, fo(s, n)));
          return new Ba(o, this._parents, t, n);
        },
        selectAll: function (e) {
          var t = this._name,
            n = this._id;
          "function" !== typeof e && (e = Nr(e));
          for (
            var r = this._groups, i = r.length, o = [], a = [], s = 0;
            s < i;
            ++s
          )
            for (var u, c = r[s], l = c.length, f = 0; f < l; ++f)
              if ((u = c[f])) {
                for (
                  var d,
                    h = e.call(u, u.__data__, f, c),
                    p = fo(u, n),
                    g = 0,
                    m = h.length;
                  g < m;
                  ++g
                )
                  (d = h[g]) && uo(d, t, n, g, h, p);
                o.push(h), a.push(u);
              }
          return new Ba(o, a, t, n);
        },
        filter: function (e) {
          "function" !== typeof e && (e = Fr(e));
          for (
            var t = this._groups, n = t.length, r = new Array(n), i = 0;
            i < n;
            ++i
          )
            for (
              var o, a = t[i], s = a.length, u = (r[i] = []), c = 0;
              c < s;
              ++c
            )
              (o = a[c]) && e.call(o, o.__data__, c, a) && u.push(o);
          return new Ba(r, this._parents, this._name, this._id);
        },
        merge: function (e) {
          if (e._id !== this._id) throw new Error();
          for (
            var t = this._groups,
              n = e._groups,
              r = t.length,
              i = n.length,
              o = Math.min(r, i),
              a = new Array(r),
              s = 0;
            s < o;
            ++s
          )
            for (
              var u,
                c = t[s],
                l = n[s],
                f = c.length,
                d = (a[s] = new Array(f)),
                h = 0;
              h < f;
              ++h
            )
              (u = c[h] || l[h]) && (d[h] = u);
          for (; s < r; ++s) a[s] = t[s];
          return new Ba(a, this._parents, this._name, this._id);
        },
        selection: function () {
          return new Sa(this._groups, this._parents);
        },
        transition: function () {
          for (
            var e = this._name,
              t = this._id,
              n = ja(),
              r = this._groups,
              i = r.length,
              o = 0;
            o < i;
            ++o
          )
            for (var a, s = r[o], u = s.length, c = 0; c < u; ++c)
              if ((a = s[c])) {
                var l = fo(a, t);
                uo(a, e, n, c, s, {
                  time: l.time + l.delay + l.duration,
                  delay: 0,
                  duration: l.duration,
                  ease: l.ease,
                });
              }
          return new Ba(r, this._parents, e, n);
        },
        call: za.call,
        nodes: za.nodes,
        node: za.node,
        size: za.size,
        empty: za.empty,
        each: za.each,
        on: function (e, t) {
          var n = this._id;
          return arguments.length < 2
            ? fo(this.node(), n).on.on(e)
            : this.each(Ia(n, e, t));
        },
        attr: function (e, t) {
          var n = Ur(e),
            r = "transform" === n ? wo : ga;
          return this.attrTween(
            e,
            "function" === typeof t
              ? (n.local ? xa : _a)(n, r, Eo(this, "attr." + e, t))
              : null == t
              ? (n.local ? ya : ma)(n)
              : (n.local ? va : ba)(n, r, t)
          );
        },
        attrTween: function (e, t) {
          var n = "attr." + e;
          if (arguments.length < 2) return (n = this.tween(n)) && n._value;
          if (null == t) return this.tween(n, null);
          if ("function" !== typeof t) throw new Error();
          var r = Ur(e);
          return this.tween(n, (r.local ? wa : Aa)(r, t));
        },
        style: function (e, t, n) {
          var r = "transform" === (e += "") ? Mo : ga;
          return null == t
            ? this.styleTween(
                e,
                (function (e, t) {
                  var n, r, i;
                  return function () {
                    var o = ei(this, e),
                      a = (this.style.removeProperty(e), ei(this, e));
                    return o === a
                      ? null
                      : o === n && a === r
                      ? i
                      : (i = t((n = o), (r = a)));
                  };
                })(e, r)
              ).on("end.style." + e, Oa(e))
            : "function" === typeof t
            ? this.styleTween(
                e,
                (function (e, t, n) {
                  var r, i, o;
                  return function () {
                    var a = ei(this, e),
                      s = n(this),
                      u = s + "";
                    return (
                      null == s &&
                        (this.style.removeProperty(e), (u = s = ei(this, e))),
                      a === u
                        ? null
                        : a === r && u === i
                        ? o
                        : ((i = u), (o = t((r = a), s)))
                    );
                  };
                })(e, r, Eo(this, "style." + e, t))
              ).each(
                (function (e, t) {
                  var n,
                    r,
                    i,
                    o,
                    a = "style." + t,
                    s = "end." + a;
                  return function () {
                    var u = lo(this, e),
                      c = u.on,
                      l = null == u.value[a] ? o || (o = Oa(t)) : void 0;
                    (c === n && i === l) || (r = (n = c).copy()).on(s, (i = l)),
                      (u.on = r);
                  };
                })(this._id, e)
              )
            : this.styleTween(
                e,
                (function (e, t, n) {
                  var r,
                    i,
                    o = n + "";
                  return function () {
                    var a = ei(this, e);
                    return a === o ? null : a === r ? i : (i = t((r = a), n));
                  };
                })(e, r, t),
                n
              ).on("end.style." + e, null);
        },
        styleTween: function (e, t, n) {
          var r = "style." + (e += "");
          if (arguments.length < 2) return (r = this.tween(r)) && r._value;
          if (null == t) return this.tween(r, null);
          if ("function" !== typeof t) throw new Error();
          return this.tween(r, Fa(e, t, null == n ? "" : n));
        },
        text: function (e) {
          return this.tween(
            "text",
            "function" === typeof e
              ? (function (e) {
                  return function () {
                    var t = e(this);
                    this.textContent = null == t ? "" : t;
                  };
                })(Eo(this, "text", e))
              : (function (e) {
                  return function () {
                    this.textContent = e;
                  };
                })(null == e ? "" : e + "")
          );
        },
        textTween: function (e) {
          var t = "text";
          if (arguments.length < 1) return (t = this.tween(t)) && t._value;
          if (null == e) return this.tween(t, null);
          if ("function" !== typeof e) throw new Error();
          return this.tween(t, Ra(e));
        },
        remove: function () {
          return this.on(
            "end.remove",
            (function (e) {
              return function () {
                var t = this.parentNode;
                for (var n in this.__transition) if (+n !== e) return;
                t && t.removeChild(this);
              };
            })(this._id)
          );
        },
        tween: function (e, t) {
          var n = this._id;
          if (((e += ""), arguments.length < 2)) {
            for (
              var r, i = fo(this.node(), n).tween, o = 0, a = i.length;
              o < a;
              ++o
            )
              if ((r = i[o]).name === e) return r.value;
            return null;
          }
          return this.each((null == t ? Ao : ko)(n, e, t));
        },
        delay: function (e) {
          var t = this._id;
          return arguments.length
            ? this.each(("function" === typeof e ? ka : Ea)(t, e))
            : fo(this.node(), t).delay;
        },
        duration: function (e) {
          var t = this._id;
          return arguments.length
            ? this.each(("function" === typeof e ? Pa : Ca)(t, e))
            : fo(this.node(), t).duration;
        },
        ease: function (e) {
          var t = this._id;
          return arguments.length
            ? this.each(La(t, e))
            : fo(this.node(), t).ease;
        },
        end: function () {
          var e,
            t,
            n = this,
            r = n._id,
            i = n.size();
          return new Promise(function (o, a) {
            var s = { value: a },
              u = {
                value: function () {
                  0 === --i && o();
                },
              };
            n.each(function () {
              var n = lo(this, r),
                i = n.on;
              i !== e &&
                ((t = (e = i).copy())._.cancel.push(s),
                t._.interrupt.push(s),
                t._.end.push(u)),
                (n.on = t);
            });
          });
        },
      };
      var Ua = {
        time: null,
        delay: 0,
        duration: 250,
        ease: function (e) {
          return ((e *= 2) <= 1 ? e * e * e : (e -= 2) * e * e + 2) / 2;
        },
      };
      function Ha(e, t) {
        for (var n; !(n = e.__transition) || !(n = n[t]); )
          if (!(e = e.parentNode)) return (Ua.time = Ki()), Ua;
        return n;
      }
      (zi.prototype.interrupt = function (e) {
        return this.each(function () {
          ho(this, e);
        });
      }),
        (zi.prototype.transition = function (e) {
          var t, n;
          e instanceof Ba
            ? ((t = e._id), (e = e._name))
            : ((t = ja()),
              ((n = Ua).time = Ki()),
              (e = null == e ? null : e + ""));
          for (var r = this._groups, i = r.length, o = 0; o < i; ++o)
            for (var a, s = r[o], u = s.length, c = 0; c < u; ++c)
              (a = s[c]) && uo(a, e, t, c, s, n || Ha(a, t));
          return new Ba(r, this._parents, e, t);
        });
      var Va = [null];
      function qa(e, t) {
        var n,
          r,
          i = e.__transition;
        if (i)
          for (r in ((t = null == t ? null : t + ""), i))
            if ((n = i[r]).state > 1 && n.name === t)
              return new Ba([[e]], Va, t, +r);
        return null;
      }
      function Za(e) {
        return function () {
          return e;
        };
      }
      function Ya(e, t, n) {
        (this.target = e), (this.type = t), (this.selection = n);
      }
      function Xa() {
        xn.stopImmediatePropagation();
      }
      function $a() {
        xn.preventDefault(), xn.stopImmediatePropagation();
      }
      var Ka = { name: "drag" },
        Qa = { name: "space" },
        Ja = { name: "handle" },
        es = { name: "center" };
      function ts(e) {
        return [+e[0], +e[1]];
      }
      function ns(e) {
        return [ts(e[0]), ts(e[1])];
      }
      function rs(e) {
        return function (t) {
          return (function (e, t, n) {
            arguments.length < 3 && ((n = t), (t = En().changedTouches));
            for (var r, i = 0, o = t ? t.length : 0; i < o; ++i)
              if ((r = t[i]).identifier === n) return Pn(e, r);
            return null;
          })(t, xn.touches, e);
        };
      }
      var is = {
          name: "x",
          handles: ["w", "e"].map(ds),
          input: function (e, t) {
            return null == e
              ? null
              : [
                  [+e[0], t[0][1]],
                  [+e[1], t[1][1]],
                ];
          },
          output: function (e) {
            return e && [e[0][0], e[1][0]];
          },
        },
        os = {
          name: "y",
          handles: ["n", "s"].map(ds),
          input: function (e, t) {
            return null == e
              ? null
              : [
                  [t[0][0], +e[0]],
                  [t[1][0], +e[1]],
                ];
          },
          output: function (e) {
            return e && [e[0][1], e[1][1]];
          },
        },
        as = {
          name: "xy",
          handles: ["n", "w", "e", "s", "nw", "ne", "sw", "se"].map(ds),
          input: function (e) {
            return null == e ? null : ns(e);
          },
          output: function (e) {
            return e;
          },
        },
        ss = {
          overlay: "crosshair",
          selection: "move",
          n: "ns-resize",
          e: "ew-resize",
          s: "ns-resize",
          w: "ew-resize",
          nw: "nwse-resize",
          ne: "nesw-resize",
          se: "nwse-resize",
          sw: "nesw-resize",
        },
        us = { e: "w", w: "e", nw: "ne", ne: "nw", se: "sw", sw: "se" },
        cs = { n: "s", s: "n", nw: "sw", ne: "se", se: "ne", sw: "nw" },
        ls = {
          overlay: 1,
          selection: 1,
          n: null,
          e: 1,
          s: null,
          w: -1,
          nw: -1,
          ne: 1,
          se: 1,
          sw: -1,
        },
        fs = {
          overlay: 1,
          selection: 1,
          n: -1,
          e: null,
          s: 1,
          w: null,
          nw: -1,
          ne: -1,
          se: 1,
          sw: 1,
        };
      function ds(e) {
        return { type: e };
      }
      function hs() {
        return !xn.ctrlKey && !xn.button;
      }
      function ps() {
        var e = this.ownerSVGElement || this;
        return e.hasAttribute("viewBox")
          ? [
              [(e = e.viewBox.baseVal).x, e.y],
              [e.x + e.width, e.y + e.height],
            ]
          : [
              [0, 0],
              [e.width.baseVal.value, e.height.baseVal.value],
            ];
      }
      function gs() {
        return navigator.maxTouchPoints || "ontouchstart" in this;
      }
      function ms(e) {
        for (; !e.__brush; ) if (!(e = e.parentNode)) return;
        return e.__brush;
      }
      function ys(e) {
        return e[0][0] === e[1][0] || e[0][1] === e[1][1];
      }
      function bs(e) {
        var t = e.__brush;
        return t ? t.dim.output(t.selection) : null;
      }
      function vs() {
        return Ts(is);
      }
      function _s() {
        return Ts(os);
      }
      function xs() {
        return Ts(as);
      }
      function Ts(e) {
        var t,
          n = ps,
          r = hs,
          i = gs,
          o = !0,
          a = de("start", "brush", "end"),
          s = 6;
        function u(t) {
          var n = t
            .property("__brush", g)
            .selectAll(".overlay")
            .data([ds("overlay")]);
          n
            .enter()
            .append("rect")
            .attr("class", "overlay")
            .attr("pointer-events", "all")
            .attr("cursor", ss.overlay)
            .merge(n)
            .each(function () {
              var e = ms(this).extent;
              Cr(this)
                .attr("x", e[0][0])
                .attr("y", e[0][1])
                .attr("width", e[1][0] - e[0][0])
                .attr("height", e[1][1] - e[0][1]);
            }),
            t
              .selectAll(".selection")
              .data([ds("selection")])
              .enter()
              .append("rect")
              .attr("class", "selection")
              .attr("cursor", ss.selection)
              .attr("fill", "#777")
              .attr("fill-opacity", 0.3)
              .attr("stroke", "#fff")
              .attr("shape-rendering", "crispEdges");
          var r = t.selectAll(".handle").data(e.handles, function (e) {
            return e.type;
          });
          r.exit().remove(),
            r
              .enter()
              .append("rect")
              .attr("class", function (e) {
                return "handle handle--" + e.type;
              })
              .attr("cursor", function (e) {
                return ss[e.type];
              }),
            t
              .each(c)
              .attr("fill", "none")
              .attr("pointer-events", "all")
              .on("mousedown.brush", d)
              .filter(i)
              .on("touchstart.brush", d)
              .on("touchmove.brush", h)
              .on("touchend.brush touchcancel.brush", p)
              .style("touch-action", "none")
              .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
        }
        function c() {
          var e = Cr(this),
            t = ms(this).selection;
          t
            ? (e
                .selectAll(".selection")
                .style("display", null)
                .attr("x", t[0][0])
                .attr("y", t[0][1])
                .attr("width", t[1][0] - t[0][0])
                .attr("height", t[1][1] - t[0][1]),
              e
                .selectAll(".handle")
                .style("display", null)
                .attr("x", function (e) {
                  return "e" === e.type[e.type.length - 1]
                    ? t[1][0] - s / 2
                    : t[0][0] - s / 2;
                })
                .attr("y", function (e) {
                  return "s" === e.type[0] ? t[1][1] - s / 2 : t[0][1] - s / 2;
                })
                .attr("width", function (e) {
                  return "n" === e.type || "s" === e.type
                    ? t[1][0] - t[0][0] + s
                    : s;
                })
                .attr("height", function (e) {
                  return "e" === e.type || "w" === e.type
                    ? t[1][1] - t[0][1] + s
                    : s;
                }))
            : e
                .selectAll(".selection,.handle")
                .style("display", "none")
                .attr("x", null)
                .attr("y", null)
                .attr("width", null)
                .attr("height", null);
        }
        function l(e, t, n) {
          var r = e.__brush.emitter;
          return !r || (n && r.clean) ? new f(e, t, n) : r;
        }
        function f(e, t, n) {
          (this.that = e),
            (this.args = t),
            (this.state = e.__brush),
            (this.active = 0),
            (this.clean = n);
        }
        function d() {
          if ((!t || xn.touches) && r.apply(this, arguments)) {
            var n,
              i,
              a,
              s,
              u,
              f,
              d,
              h,
              p,
              g,
              m,
              y = this,
              b = xn.target.__data__.type,
              v =
                "selection" === (o && xn.metaKey ? (b = "overlay") : b)
                  ? Ka
                  : o && xn.altKey
                  ? es
                  : Ja,
              _ = e === os ? null : ls[b],
              x = e === is ? null : fs[b],
              T = ms(y),
              M = T.extent,
              w = T.selection,
              A = M[0][0],
              k = M[0][1],
              E = M[1][0],
              P = M[1][1],
              C = 0,
              L = 0,
              I = _ && x && o && xn.shiftKey,
              S = xn.touches ? rs(xn.changedTouches[0].identifier) : Lr,
              O = S(y),
              N = O,
              F = l(y, arguments, !0).beforestart();
            "overlay" === b
              ? (w && (p = !0),
                (T.selection = w =
                  [
                    [(n = e === os ? A : O[0]), (a = e === is ? k : O[1])],
                    [(u = e === os ? E : n), (d = e === is ? P : a)],
                  ]))
              : ((n = w[0][0]), (a = w[0][1]), (u = w[1][0]), (d = w[1][1])),
              (i = n),
              (s = a),
              (f = u),
              (h = d);
            var D = Cr(y).attr("pointer-events", "none"),
              R = D.selectAll(".overlay").attr("cursor", ss[b]);
            if (xn.touches) (F.moved = B), (F.ended = j);
            else {
              var G = Cr(xn.view)
                .on("mousemove.brush", B, !0)
                .on("mouseup.brush", j, !0);
              o && G.on("keydown.brush", z, !0).on("keyup.brush", U, !0),
                wt(xn.view);
            }
            Xa(), ho(y), c.call(y), F.start();
          }
          function B() {
            var e = S(y);
            !I ||
              g ||
              m ||
              (Math.abs(e[0] - N[0]) > Math.abs(e[1] - N[1])
                ? (m = !0)
                : (g = !0)),
              (N = e),
              (p = !0),
              $a(),
              W();
          }
          function W() {
            var e;
            switch (((C = N[0] - O[0]), (L = N[1] - O[1]), v)) {
              case Qa:
              case Ka:
                _ &&
                  ((C = Math.max(A - n, Math.min(E - u, C))),
                  (i = n + C),
                  (f = u + C)),
                  x &&
                    ((L = Math.max(k - a, Math.min(P - d, L))),
                    (s = a + L),
                    (h = d + L));
                break;
              case Ja:
                _ < 0
                  ? ((C = Math.max(A - n, Math.min(E - n, C))),
                    (i = n + C),
                    (f = u))
                  : _ > 0 &&
                    ((C = Math.max(A - u, Math.min(E - u, C))),
                    (i = n),
                    (f = u + C)),
                  x < 0
                    ? ((L = Math.max(k - a, Math.min(P - a, L))),
                      (s = a + L),
                      (h = d))
                    : x > 0 &&
                      ((L = Math.max(k - d, Math.min(P - d, L))),
                      (s = a),
                      (h = d + L));
                break;
              case es:
                _ &&
                  ((i = Math.max(A, Math.min(E, n - C * _))),
                  (f = Math.max(A, Math.min(E, u + C * _)))),
                  x &&
                    ((s = Math.max(k, Math.min(P, a - L * x))),
                    (h = Math.max(k, Math.min(P, d + L * x))));
            }
            f < i &&
              ((_ *= -1),
              (e = n),
              (n = u),
              (u = e),
              (e = i),
              (i = f),
              (f = e),
              b in us && R.attr("cursor", ss[(b = us[b])])),
              h < s &&
                ((x *= -1),
                (e = a),
                (a = d),
                (d = e),
                (e = s),
                (s = h),
                (h = e),
                b in cs && R.attr("cursor", ss[(b = cs[b])])),
              T.selection && (w = T.selection),
              g && ((i = w[0][0]), (f = w[1][0])),
              m && ((s = w[0][1]), (h = w[1][1])),
              (w[0][0] === i &&
                w[0][1] === s &&
                w[1][0] === f &&
                w[1][1] === h) ||
                ((T.selection = [
                  [i, s],
                  [f, h],
                ]),
                c.call(y),
                F.brush());
          }
          function j() {
            if ((Xa(), xn.touches)) {
              if (xn.touches.length) return;
              t && clearTimeout(t),
                (t = setTimeout(function () {
                  t = null;
                }, 500));
            } else
              At(xn.view, p),
                G.on(
                  "keydown.brush keyup.brush mousemove.brush mouseup.brush",
                  null
                );
            D.attr("pointer-events", "all"),
              R.attr("cursor", ss.overlay),
              T.selection && (w = T.selection),
              ys(w) && ((T.selection = null), c.call(y)),
              F.end();
          }
          function z() {
            switch (xn.keyCode) {
              case 16:
                I = _ && x;
                break;
              case 18:
                v === Ja &&
                  (_ && ((u = f - C * _), (n = i + C * _)),
                  x && ((d = h - L * x), (a = s + L * x)),
                  (v = es),
                  W());
                break;
              case 32:
                (v !== Ja && v !== es) ||
                  (_ < 0 ? (u = f - C) : _ > 0 && (n = i - C),
                  x < 0 ? (d = h - L) : x > 0 && (a = s - L),
                  (v = Qa),
                  R.attr("cursor", ss.selection),
                  W());
                break;
              default:
                return;
            }
            $a();
          }
          function U() {
            switch (xn.keyCode) {
              case 16:
                I && ((g = m = I = !1), W());
                break;
              case 18:
                v === es &&
                  (_ < 0 ? (u = f) : _ > 0 && (n = i),
                  x < 0 ? (d = h) : x > 0 && (a = s),
                  (v = Ja),
                  W());
                break;
              case 32:
                v === Qa &&
                  (xn.altKey
                    ? (_ && ((u = f - C * _), (n = i + C * _)),
                      x && ((d = h - L * x), (a = s + L * x)),
                      (v = es))
                    : (_ < 0 ? (u = f) : _ > 0 && (n = i),
                      x < 0 ? (d = h) : x > 0 && (a = s),
                      (v = Ja)),
                  R.attr("cursor", ss[b]),
                  W());
                break;
              default:
                return;
            }
            $a();
          }
        }
        function h() {
          l(this, arguments).moved();
        }
        function p() {
          l(this, arguments).ended();
        }
        function g() {
          var t = this.__brush || { selection: null };
          return (t.extent = ns(n.apply(this, arguments))), (t.dim = e), t;
        }
        return (
          (u.move = function (t, n) {
            t.selection
              ? t
                  .on("start.brush", function () {
                    l(this, arguments).beforestart().start();
                  })
                  .on("interrupt.brush end.brush", function () {
                    l(this, arguments).end();
                  })
                  .tween("brush", function () {
                    var t = this,
                      r = t.__brush,
                      i = l(t, arguments),
                      o = r.selection,
                      a = e.input(
                        "function" === typeof n ? n.apply(this, arguments) : n,
                        r.extent
                      ),
                      s = vn(o, a);
                    function u(e) {
                      (r.selection = 1 === e && null === a ? null : s(e)),
                        c.call(t),
                        i.brush();
                    }
                    return null !== o && null !== a ? u : u(1);
                  })
              : t.each(function () {
                  var t = this,
                    r = arguments,
                    i = t.__brush,
                    o = e.input(
                      "function" === typeof n ? n.apply(t, r) : n,
                      i.extent
                    ),
                    a = l(t, r).beforestart();
                  ho(t),
                    (i.selection = null === o ? null : o),
                    c.call(t),
                    a.start().brush().end();
                });
          }),
          (u.clear = function (e) {
            u.move(e, null);
          }),
          (f.prototype = {
            beforestart: function () {
              return (
                1 === ++this.active &&
                  ((this.state.emitter = this), (this.starting = !0)),
                this
              );
            },
            start: function () {
              return (
                this.starting
                  ? ((this.starting = !1), this.emit("start"))
                  : this.emit("brush"),
                this
              );
            },
            brush: function () {
              return this.emit("brush"), this;
            },
            end: function () {
              return (
                0 === --this.active &&
                  (delete this.state.emitter, this.emit("end")),
                this
              );
            },
            emit: function (t) {
              !(function (e, t, n, r) {
                var i = xn;
                (e.sourceEvent = xn), (xn = e);
                try {
                  t.apply(n, r);
                } finally {
                  xn = i;
                }
              })(new Ya(u, t, e.output(this.state.selection)), a.apply, a, [
                t,
                this.that,
                this.args,
              ]);
            },
          }),
          (u.extent = function (e) {
            return arguments.length
              ? ((n = "function" === typeof e ? e : Za(ns(e))), u)
              : n;
          }),
          (u.filter = function (e) {
            return arguments.length
              ? ((r = "function" === typeof e ? e : Za(!!e)), u)
              : r;
          }),
          (u.touchable = function (e) {
            return arguments.length
              ? ((i = "function" === typeof e ? e : Za(!!e)), u)
              : i;
          }),
          (u.handleSize = function (e) {
            return arguments.length ? ((s = +e), u) : s;
          }),
          (u.keyModifiers = function (e) {
            return arguments.length ? ((o = !!e), u) : o;
          }),
          (u.on = function () {
            var e = a.on.apply(a, arguments);
            return e === a ? u : e;
          }),
          u
        );
      }
      var Ms = Math.cos,
        ws = Math.sin,
        As = Math.PI,
        ks = As / 2,
        Es = 2 * As,
        Ps = Math.max;
      function Cs(e) {
        return function (t, n) {
          return e(
            t.source.value + t.target.value,
            n.source.value + n.target.value
          );
        };
      }
      function Ls() {
        var e = 0,
          t = null,
          n = null,
          r = null;
        function i(i) {
          var o,
            a,
            s,
            u,
            c,
            l,
            f = i.length,
            d = [],
            h = M(f),
            p = [],
            g = [],
            m = (g.groups = new Array(f)),
            y = new Array(f * f);
          for (o = 0, c = -1; ++c < f; ) {
            for (a = 0, l = -1; ++l < f; ) a += i[c][l];
            d.push(a), p.push(M(f)), (o += a);
          }
          for (
            t &&
              h.sort(function (e, n) {
                return t(d[e], d[n]);
              }),
              n &&
                p.forEach(function (e, t) {
                  e.sort(function (e, r) {
                    return n(i[t][e], i[t][r]);
                  });
                }),
              u = (o = Ps(0, Es - e * f) / o) ? e : Es / f,
              a = 0,
              c = -1;
            ++c < f;

          ) {
            for (s = a, l = -1; ++l < f; ) {
              var b = h[c],
                v = p[b][l],
                _ = i[b][v],
                x = a,
                T = (a += _ * o);
              y[v * f + b] = {
                index: b,
                subindex: v,
                startAngle: x,
                endAngle: T,
                value: _,
              };
            }
            (m[b] = { index: b, startAngle: s, endAngle: a, value: d[b] }),
              (a += u);
          }
          for (c = -1; ++c < f; )
            for (l = c - 1; ++l < f; ) {
              var w = y[l * f + c],
                A = y[c * f + l];
              (w.value || A.value) &&
                g.push(
                  w.value < A.value
                    ? { source: A, target: w }
                    : { source: w, target: A }
                );
            }
          return r ? g.sort(r) : g;
        }
        return (
          (i.padAngle = function (t) {
            return arguments.length ? ((e = Ps(0, t)), i) : e;
          }),
          (i.sortGroups = function (e) {
            return arguments.length ? ((t = e), i) : t;
          }),
          (i.sortSubgroups = function (e) {
            return arguments.length ? ((n = e), i) : n;
          }),
          (i.sortChords = function (e) {
            return arguments.length
              ? (null == e ? (r = null) : ((r = Cs(e))._ = e), i)
              : r && r._;
          }),
          i
        );
      }
      var Is = Array.prototype.slice;
      function Ss(e) {
        return function () {
          return e;
        };
      }
      var Os = n(603791);
      function Ns(e) {
        return e.source;
      }
      function Fs(e) {
        return e.target;
      }
      function Ds(e) {
        return e.radius;
      }
      function Rs(e) {
        return e.startAngle;
      }
      function Gs(e) {
        return e.endAngle;
      }
      function Bs() {
        var e = Ns,
          t = Fs,
          n = Ds,
          r = Rs,
          i = Gs,
          o = null;
        function a() {
          var a,
            s = Is.call(arguments),
            u = e.apply(this, s),
            c = t.apply(this, s),
            l = +n.apply(this, ((s[0] = u), s)),
            f = r.apply(this, s) - ks,
            d = i.apply(this, s) - ks,
            h = l * Ms(f),
            p = l * ws(f),
            g = +n.apply(this, ((s[0] = c), s)),
            m = r.apply(this, s) - ks,
            y = i.apply(this, s) - ks;
          if (
            (o || (o = a = (0, Os.Z)()),
            o.moveTo(h, p),
            o.arc(0, 0, l, f, d),
            (f === m && d === y) ||
              (o.quadraticCurveTo(0, 0, g * Ms(m), g * ws(m)),
              o.arc(0, 0, g, m, y)),
            o.quadraticCurveTo(0, 0, h, p),
            o.closePath(),
            a)
          )
            return (o = null), a + "" || null;
        }
        return (
          (a.radius = function (e) {
            return arguments.length
              ? ((n = "function" === typeof e ? e : Ss(+e)), a)
              : n;
          }),
          (a.startAngle = function (e) {
            return arguments.length
              ? ((r = "function" === typeof e ? e : Ss(+e)), a)
              : r;
          }),
          (a.endAngle = function (e) {
            return arguments.length
              ? ((i = "function" === typeof e ? e : Ss(+e)), a)
              : i;
          }),
          (a.source = function (t) {
            return arguments.length ? ((e = t), a) : e;
          }),
          (a.target = function (e) {
            return arguments.length ? ((t = e), a) : t;
          }),
          (a.context = function (e) {
            return arguments.length ? ((o = null == e ? null : e), a) : o;
          }),
          a
        );
      }
      var Ws = "$";
      function js() {}
      function zs(e, t) {
        var n = new js();
        if (e instanceof js)
          e.each(function (e, t) {
            n.set(t, e);
          });
        else if (Array.isArray(e)) {
          var r,
            i = -1,
            o = e.length;
          if (null == t) for (; ++i < o; ) n.set(i, e[i]);
          else for (; ++i < o; ) n.set(t((r = e[i]), i, e), r);
        } else if (e) for (var a in e) n.set(a, e[a]);
        return n;
      }
      js.prototype = zs.prototype = {
        constructor: js,
        has: function (e) {
          return Ws + e in this;
        },
        get: function (e) {
          return this[Ws + e];
        },
        set: function (e, t) {
          return (this[Ws + e] = t), this;
        },
        remove: function (e) {
          var t = Ws + e;
          return t in this && delete this[t];
        },
        clear: function () {
          for (var e in this) e[0] === Ws && delete this[e];
        },
        keys: function () {
          var e = [];
          for (var t in this) t[0] === Ws && e.push(t.slice(1));
          return e;
        },
        values: function () {
          var e = [];
          for (var t in this) t[0] === Ws && e.push(this[t]);
          return e;
        },
        entries: function () {
          var e = [];
          for (var t in this)
            t[0] === Ws && e.push({ key: t.slice(1), value: this[t] });
          return e;
        },
        size: function () {
          var e = 0;
          for (var t in this) t[0] === Ws && ++e;
          return e;
        },
        empty: function () {
          for (var e in this) if (e[0] === Ws) return !1;
          return !0;
        },
        each: function (e) {
          for (var t in this) t[0] === Ws && e(this[t], t.slice(1), this);
        },
      };
      var Us = zs;
      function Hs() {
        var e,
          t,
          n,
          r = [],
          i = [];
        function o(n, i, a, s) {
          if (i >= r.length)
            return null != e && n.sort(e), null != t ? t(n) : n;
          for (
            var u, c, l, f = -1, d = n.length, h = r[i++], p = Us(), g = a();
            ++f < d;

          )
            (l = p.get((u = h((c = n[f])) + ""))) ? l.push(c) : p.set(u, [c]);
          return (
            p.each(function (e, t) {
              s(g, t, o(e, i, a, s));
            }),
            g
          );
        }
        function a(e, n) {
          if (++n > r.length) return e;
          var o,
            s = i[n - 1];
          return (
            null != t && n >= r.length
              ? (o = e.entries())
              : ((o = []),
                e.each(function (e, t) {
                  o.push({ key: t, values: a(e, n) });
                })),
            null != s
              ? o.sort(function (e, t) {
                  return s(e.key, t.key);
                })
              : o
          );
        }
        return (n = {
          object: function (e) {
            return o(e, 0, Vs, qs);
          },
          map: function (e) {
            return o(e, 0, Zs, Ys);
          },
          entries: function (e) {
            return a(o(e, 0, Zs, Ys), 0);
          },
          key: function (e) {
            return r.push(e), n;
          },
          sortKeys: function (e) {
            return (i[r.length - 1] = e), n;
          },
          sortValues: function (t) {
            return (e = t), n;
          },
          rollup: function (e) {
            return (t = e), n;
          },
        });
      }
      function Vs() {
        return {};
      }
      function qs(e, t, n) {
        e[t] = n;
      }
      function Zs() {
        return Us();
      }
      function Ys(e, t, n) {
        e.set(t, n);
      }
      function Xs() {}
      var $s = Us.prototype;
      function Ks(e, t) {
        var n = new Xs();
        if (e instanceof Xs)
          e.each(function (e) {
            n.add(e);
          });
        else if (e) {
          var r = -1,
            i = e.length;
          if (null == t) for (; ++r < i; ) n.add(e[r]);
          else for (; ++r < i; ) n.add(t(e[r], r, e));
        }
        return n;
      }
      Xs.prototype = Ks.prototype = {
        constructor: Xs,
        has: $s.has,
        add: function (e) {
          return (this[Ws + (e += "")] = e), this;
        },
        remove: $s.remove,
        clear: $s.clear,
        values: $s.keys,
        size: $s.size,
        empty: $s.empty,
        each: $s.each,
      };
      var Qs = Ks;
      function Js(e) {
        var t = [];
        for (var n in e) t.push(n);
        return t;
      }
      function eu(e) {
        var t = [];
        for (var n in e) t.push(e[n]);
        return t;
      }
      function tu(e) {
        var t = [];
        for (var n in e) t.push({ key: n, value: e[n] });
        return t;
      }
      function nu(e, t, n) {
        (e.prototype = t.prototype = n), (n.constructor = e);
      }
      function ru(e, t) {
        var n = Object.create(e.prototype);
        for (var r in t) n[r] = t[r];
        return n;
      }
      function iu() {}
      var ou = 0.7,
        au = 1.4285714285714286,
        su = "\\s*([+-]?\\d+)\\s*",
        uu = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",
        cu = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
        lu = /^#([0-9a-f]{3,8})$/,
        fu = new RegExp("^rgb\\(" + [su, su, su] + "\\)$"),
        du = new RegExp("^rgb\\(" + [cu, cu, cu] + "\\)$"),
        hu = new RegExp("^rgba\\(" + [su, su, su, uu] + "\\)$"),
        pu = new RegExp("^rgba\\(" + [cu, cu, cu, uu] + "\\)$"),
        gu = new RegExp("^hsl\\(" + [uu, cu, cu] + "\\)$"),
        mu = new RegExp("^hsla\\(" + [uu, cu, cu, uu] + "\\)$"),
        yu = {
          aliceblue: 15792383,
          antiquewhite: 16444375,
          aqua: 65535,
          aquamarine: 8388564,
          azure: 15794175,
          beige: 16119260,
          bisque: 16770244,
          black: 0,
          blanchedalmond: 16772045,
          blue: 255,
          blueviolet: 9055202,
          brown: 10824234,
          burlywood: 14596231,
          cadetblue: 6266528,
          chartreuse: 8388352,
          chocolate: 13789470,
          coral: 16744272,
          cornflowerblue: 6591981,
          cornsilk: 16775388,
          crimson: 14423100,
          cyan: 65535,
          darkblue: 139,
          darkcyan: 35723,
          darkgoldenrod: 12092939,
          darkgray: 11119017,
          darkgreen: 25600,
          darkgrey: 11119017,
          darkkhaki: 12433259,
          darkmagenta: 9109643,
          darkolivegreen: 5597999,
          darkorange: 16747520,
          darkorchid: 10040012,
          darkred: 9109504,
          darksalmon: 15308410,
          darkseagreen: 9419919,
          darkslateblue: 4734347,
          darkslategray: 3100495,
          darkslategrey: 3100495,
          darkturquoise: 52945,
          darkviolet: 9699539,
          deeppink: 16716947,
          deepskyblue: 49151,
          dimgray: 6908265,
          dimgrey: 6908265,
          dodgerblue: 2003199,
          firebrick: 11674146,
          floralwhite: 16775920,
          forestgreen: 2263842,
          fuchsia: 16711935,
          gainsboro: 14474460,
          ghostwhite: 16316671,
          gold: 16766720,
          goldenrod: 14329120,
          gray: 8421504,
          green: 32768,
          greenyellow: 11403055,
          grey: 8421504,
          honeydew: 15794160,
          hotpink: 16738740,
          indianred: 13458524,
          indigo: 4915330,
          ivory: 16777200,
          khaki: 15787660,
          lavender: 15132410,
          lavenderblush: 16773365,
          lawngreen: 8190976,
          lemonchiffon: 16775885,
          lightblue: 11393254,
          lightcoral: 15761536,
          lightcyan: 14745599,
          lightgoldenrodyellow: 16448210,
          lightgray: 13882323,
          lightgreen: 9498256,
          lightgrey: 13882323,
          lightpink: 16758465,
          lightsalmon: 16752762,
          lightseagreen: 2142890,
          lightskyblue: 8900346,
          lightslategray: 7833753,
          lightslategrey: 7833753,
          lightsteelblue: 11584734,
          lightyellow: 16777184,
          lime: 65280,
          limegreen: 3329330,
          linen: 16445670,
          magenta: 16711935,
          maroon: 8388608,
          mediumaquamarine: 6737322,
          mediumblue: 205,
          mediumorchid: 12211667,
          mediumpurple: 9662683,
          mediumseagreen: 3978097,
          mediumslateblue: 8087790,
          mediumspringgreen: 64154,
          mediumturquoise: 4772300,
          mediumvioletred: 13047173,
          midnightblue: 1644912,
          mintcream: 16121850,
          mistyrose: 16770273,
          moccasin: 16770229,
          navajowhite: 16768685,
          navy: 128,
          oldlace: 16643558,
          olive: 8421376,
          olivedrab: 7048739,
          orange: 16753920,
          orangered: 16729344,
          orchid: 14315734,
          palegoldenrod: 15657130,
          palegreen: 10025880,
          paleturquoise: 11529966,
          palevioletred: 14381203,
          papayawhip: 16773077,
          peachpuff: 16767673,
          peru: 13468991,
          pink: 16761035,
          plum: 14524637,
          powderblue: 11591910,
          purple: 8388736,
          rebeccapurple: 6697881,
          red: 16711680,
          rosybrown: 12357519,
          royalblue: 4286945,
          saddlebrown: 9127187,
          salmon: 16416882,
          sandybrown: 16032864,
          seagreen: 3050327,
          seashell: 16774638,
          sienna: 10506797,
          silver: 12632256,
          skyblue: 8900331,
          slateblue: 6970061,
          slategray: 7372944,
          slategrey: 7372944,
          snow: 16775930,
          springgreen: 65407,
          steelblue: 4620980,
          tan: 13808780,
          teal: 32896,
          thistle: 14204888,
          tomato: 16737095,
          turquoise: 4251856,
          violet: 15631086,
          wheat: 16113331,
          white: 16777215,
          whitesmoke: 16119285,
          yellow: 16776960,
          yellowgreen: 10145074,
        };
      function bu() {
        return this.rgb().formatHex();
      }
      function vu() {
        return this.rgb().formatRgb();
      }
      function _u(e) {
        var t, n;
        return (
          (e = (e + "").trim().toLowerCase()),
          (t = lu.exec(e))
            ? ((n = t[1].length),
              (t = parseInt(t[1], 16)),
              6 === n
                ? xu(t)
                : 3 === n
                ? new Au(
                    ((t >> 8) & 15) | ((t >> 4) & 240),
                    ((t >> 4) & 15) | (240 & t),
                    ((15 & t) << 4) | (15 & t),
                    1
                  )
                : 8 === n
                ? Tu(
                    (t >> 24) & 255,
                    (t >> 16) & 255,
                    (t >> 8) & 255,
                    (255 & t) / 255
                  )
                : 4 === n
                ? Tu(
                    ((t >> 12) & 15) | ((t >> 8) & 240),
                    ((t >> 8) & 15) | ((t >> 4) & 240),
                    ((t >> 4) & 15) | (240 & t),
                    (((15 & t) << 4) | (15 & t)) / 255
                  )
                : null)
            : (t = fu.exec(e))
            ? new Au(t[1], t[2], t[3], 1)
            : (t = du.exec(e))
            ? new Au(
                (255 * t[1]) / 100,
                (255 * t[2]) / 100,
                (255 * t[3]) / 100,
                1
              )
            : (t = hu.exec(e))
            ? Tu(t[1], t[2], t[3], t[4])
            : (t = pu.exec(e))
            ? Tu(
                (255 * t[1]) / 100,
                (255 * t[2]) / 100,
                (255 * t[3]) / 100,
                t[4]
              )
            : (t = gu.exec(e))
            ? Cu(t[1], t[2] / 100, t[3] / 100, 1)
            : (t = mu.exec(e))
            ? Cu(t[1], t[2] / 100, t[3] / 100, t[4])
            : yu.hasOwnProperty(e)
            ? xu(yu[e])
            : "transparent" === e
            ? new Au(NaN, NaN, NaN, 0)
            : null
        );
      }
      function xu(e) {
        return new Au((e >> 16) & 255, (e >> 8) & 255, 255 & e, 1);
      }
      function Tu(e, t, n, r) {
        return r <= 0 && (e = t = n = NaN), new Au(e, t, n, r);
      }
      function Mu(e) {
        return (
          e instanceof iu || (e = _u(e)),
          e ? new Au((e = e.rgb()).r, e.g, e.b, e.opacity) : new Au()
        );
      }
      function wu(e, t, n, r) {
        return 1 === arguments.length
          ? Mu(e)
          : new Au(e, t, n, null == r ? 1 : r);
      }
      function Au(e, t, n, r) {
        (this.r = +e), (this.g = +t), (this.b = +n), (this.opacity = +r);
      }
      function ku() {
        return "#" + Pu(this.r) + Pu(this.g) + Pu(this.b);
      }
      function Eu() {
        var e = this.opacity;
        return (
          (1 === (e = isNaN(e) ? 1 : Math.max(0, Math.min(1, e)))
            ? "rgb("
            : "rgba(") +
          Math.max(0, Math.min(255, Math.round(this.r) || 0)) +
          ", " +
          Math.max(0, Math.min(255, Math.round(this.g) || 0)) +
          ", " +
          Math.max(0, Math.min(255, Math.round(this.b) || 0)) +
          (1 === e ? ")" : ", " + e + ")")
        );
      }
      function Pu(e) {
        return (
          ((e = Math.max(0, Math.min(255, Math.round(e) || 0))) < 16
            ? "0"
            : "") + e.toString(16)
        );
      }
      function Cu(e, t, n, r) {
        return (
          r <= 0
            ? (e = t = n = NaN)
            : n <= 0 || n >= 1
            ? (e = t = NaN)
            : t <= 0 && (e = NaN),
          new Su(e, t, n, r)
        );
      }
      function Lu(e) {
        if (e instanceof Su) return new Su(e.h, e.s, e.l, e.opacity);
        if ((e instanceof iu || (e = _u(e)), !e)) return new Su();
        if (e instanceof Su) return e;
        var t = (e = e.rgb()).r / 255,
          n = e.g / 255,
          r = e.b / 255,
          i = Math.min(t, n, r),
          o = Math.max(t, n, r),
          a = NaN,
          s = o - i,
          u = (o + i) / 2;
        return (
          s
            ? ((a =
                t === o
                  ? (n - r) / s + 6 * (n < r)
                  : n === o
                  ? (r - t) / s + 2
                  : (t - n) / s + 4),
              (s /= u < 0.5 ? o + i : 2 - o - i),
              (a *= 60))
            : (s = u > 0 && u < 1 ? 0 : a),
          new Su(a, s, u, e.opacity)
        );
      }
      function Iu(e, t, n, r) {
        return 1 === arguments.length
          ? Lu(e)
          : new Su(e, t, n, null == r ? 1 : r);
      }
      function Su(e, t, n, r) {
        (this.h = +e), (this.s = +t), (this.l = +n), (this.opacity = +r);
      }
      function Ou(e, t, n) {
        return (
          255 *
          (e < 60
            ? t + ((n - t) * e) / 60
            : e < 180
            ? n
            : e < 240
            ? t + ((n - t) * (240 - e)) / 60
            : t)
        );
      }
      nu(iu, _u, {
        copy: function (e) {
          return Object.assign(new this.constructor(), this, e);
        },
        displayable: function () {
          return this.rgb().displayable();
        },
        hex: bu,
        formatHex: bu,
        formatHsl: function () {
          return Lu(this).formatHsl();
        },
        formatRgb: vu,
        toString: vu,
      }),
        nu(
          Au,
          wu,
          ru(iu, {
            brighter: function (e) {
              return (
                (e = null == e ? au : Math.pow(au, e)),
                new Au(this.r * e, this.g * e, this.b * e, this.opacity)
              );
            },
            darker: function (e) {
              return (
                (e = null == e ? ou : Math.pow(ou, e)),
                new Au(this.r * e, this.g * e, this.b * e, this.opacity)
              );
            },
            rgb: function () {
              return this;
            },
            displayable: function () {
              return (
                -0.5 <= this.r &&
                this.r < 255.5 &&
                -0.5 <= this.g &&
                this.g < 255.5 &&
                -0.5 <= this.b &&
                this.b < 255.5 &&
                0 <= this.opacity &&
                this.opacity <= 1
              );
            },
            hex: ku,
            formatHex: ku,
            formatRgb: Eu,
            toString: Eu,
          })
        ),
        nu(
          Su,
          Iu,
          ru(iu, {
            brighter: function (e) {
              return (
                (e = null == e ? au : Math.pow(au, e)),
                new Su(this.h, this.s, this.l * e, this.opacity)
              );
            },
            darker: function (e) {
              return (
                (e = null == e ? ou : Math.pow(ou, e)),
                new Su(this.h, this.s, this.l * e, this.opacity)
              );
            },
            rgb: function () {
              var e = (this.h % 360) + 360 * (this.h < 0),
                t = isNaN(e) || isNaN(this.s) ? 0 : this.s,
                n = this.l,
                r = n + (n < 0.5 ? n : 1 - n) * t,
                i = 2 * n - r;
              return new Au(
                Ou(e >= 240 ? e - 240 : e + 120, i, r),
                Ou(e, i, r),
                Ou(e < 120 ? e + 240 : e - 120, i, r),
                this.opacity
              );
            },
            displayable: function () {
              return (
                ((0 <= this.s && this.s <= 1) || isNaN(this.s)) &&
                0 <= this.l &&
                this.l <= 1 &&
                0 <= this.opacity &&
                this.opacity <= 1
              );
            },
            formatHsl: function () {
              var e = this.opacity;
              return (
                (1 === (e = isNaN(e) ? 1 : Math.max(0, Math.min(1, e)))
                  ? "hsl("
                  : "hsla(") +
                (this.h || 0) +
                ", " +
                100 * (this.s || 0) +
                "%, " +
                100 * (this.l || 0) +
                "%" +
                (1 === e ? ")" : ", " + e + ")")
              );
            },
          })
        );
      var Nu = Math.PI / 180,
        Fu = 180 / Math.PI,
        Du = 0.96422,
        Ru = 0.82521,
        Gu = 4 / 29,
        Bu = 6 / 29,
        Wu = 3 * Bu * Bu;
      function ju(e) {
        if (e instanceof Hu) return new Hu(e.l, e.a, e.b, e.opacity);
        if (e instanceof Qu) return Ju(e);
        e instanceof Au || (e = Mu(e));
        var t,
          n,
          r = Yu(e.r),
          i = Yu(e.g),
          o = Yu(e.b),
          a = Vu((0.2225045 * r + 0.7168786 * i + 0.0606169 * o) / 1);
        return (
          r === i && i === o
            ? (t = n = a)
            : ((t = Vu((0.4360747 * r + 0.3850649 * i + 0.1430804 * o) / Du)),
              (n = Vu((0.0139322 * r + 0.0971045 * i + 0.7141733 * o) / Ru))),
          new Hu(116 * a - 16, 500 * (t - a), 200 * (a - n), e.opacity)
        );
      }
      function zu(e, t) {
        return new Hu(e, 0, 0, null == t ? 1 : t);
      }
      function Uu(e, t, n, r) {
        return 1 === arguments.length
          ? ju(e)
          : new Hu(e, t, n, null == r ? 1 : r);
      }
      function Hu(e, t, n, r) {
        (this.l = +e), (this.a = +t), (this.b = +n), (this.opacity = +r);
      }
      function Vu(e) {
        return e > 0.008856451679035631 ? Math.pow(e, 1 / 3) : e / Wu + Gu;
      }
      function qu(e) {
        return e > Bu ? e * e * e : Wu * (e - Gu);
      }
      function Zu(e) {
        return (
          255 *
          (e <= 0.0031308 ? 12.92 * e : 1.055 * Math.pow(e, 1 / 2.4) - 0.055)
        );
      }
      function Yu(e) {
        return (e /= 255) <= 0.04045
          ? e / 12.92
          : Math.pow((e + 0.055) / 1.055, 2.4);
      }
      function Xu(e) {
        if (e instanceof Qu) return new Qu(e.h, e.c, e.l, e.opacity);
        if ((e instanceof Hu || (e = ju(e)), 0 === e.a && 0 === e.b))
          return new Qu(NaN, 0 < e.l && e.l < 100 ? 0 : NaN, e.l, e.opacity);
        var t = Math.atan2(e.b, e.a) * Fu;
        return new Qu(
          t < 0 ? t + 360 : t,
          Math.sqrt(e.a * e.a + e.b * e.b),
          e.l,
          e.opacity
        );
      }
      function $u(e, t, n, r) {
        return 1 === arguments.length
          ? Xu(e)
          : new Qu(n, t, e, null == r ? 1 : r);
      }
      function Ku(e, t, n, r) {
        return 1 === arguments.length
          ? Xu(e)
          : new Qu(e, t, n, null == r ? 1 : r);
      }
      function Qu(e, t, n, r) {
        (this.h = +e), (this.c = +t), (this.l = +n), (this.opacity = +r);
      }
      function Ju(e) {
        if (isNaN(e.h)) return new Hu(e.l, 0, 0, e.opacity);
        var t = e.h * Nu;
        return new Hu(e.l, Math.cos(t) * e.c, Math.sin(t) * e.c, e.opacity);
      }
      nu(
        Hu,
        Uu,
        ru(iu, {
          brighter: function (e) {
            return new Hu(
              this.l + 18 * (null == e ? 1 : e),
              this.a,
              this.b,
              this.opacity
            );
          },
          darker: function (e) {
            return new Hu(
              this.l - 18 * (null == e ? 1 : e),
              this.a,
              this.b,
              this.opacity
            );
          },
          rgb: function () {
            var e = (this.l + 16) / 116,
              t = isNaN(this.a) ? e : e + this.a / 500,
              n = isNaN(this.b) ? e : e - this.b / 200;
            return new Au(
              Zu(
                3.1338561 * (t = Du * qu(t)) -
                  1.6168667 * (e = 1 * qu(e)) -
                  0.4906146 * (n = Ru * qu(n))
              ),
              Zu(-0.9787684 * t + 1.9161415 * e + 0.033454 * n),
              Zu(0.0719453 * t - 0.2289914 * e + 1.4052427 * n),
              this.opacity
            );
          },
        })
      ),
        nu(
          Qu,
          Ku,
          ru(iu, {
            brighter: function (e) {
              return new Qu(
                this.h,
                this.c,
                this.l + 18 * (null == e ? 1 : e),
                this.opacity
              );
            },
            darker: function (e) {
              return new Qu(
                this.h,
                this.c,
                this.l - 18 * (null == e ? 1 : e),
                this.opacity
              );
            },
            rgb: function () {
              return Ju(this).rgb();
            },
          })
        );
      var ec = -0.14861,
        tc = 1.78277,
        nc = -0.29227,
        rc = -0.90649,
        ic = 1.97294,
        oc = ic * rc,
        ac = ic * tc,
        sc = tc * nc - rc * ec;
      function uc(e) {
        if (e instanceof lc) return new lc(e.h, e.s, e.l, e.opacity);
        e instanceof Au || (e = Mu(e));
        var t = e.r / 255,
          n = e.g / 255,
          r = e.b / 255,
          i = (sc * r + oc * t - ac * n) / (sc + oc - ac),
          o = r - i,
          a = (ic * (n - i) - nc * o) / rc,
          s = Math.sqrt(a * a + o * o) / (ic * i * (1 - i)),
          u = s ? Math.atan2(a, o) * Fu - 120 : NaN;
        return new lc(u < 0 ? u + 360 : u, s, i, e.opacity);
      }
      function cc(e, t, n, r) {
        return 1 === arguments.length
          ? uc(e)
          : new lc(e, t, n, null == r ? 1 : r);
      }
      function lc(e, t, n, r) {
        (this.h = +e), (this.s = +t), (this.l = +n), (this.opacity = +r);
      }
      nu(
        lc,
        cc,
        ru(iu, {
          brighter: function (e) {
            return (
              (e = null == e ? au : Math.pow(au, e)),
              new lc(this.h, this.s, this.l * e, this.opacity)
            );
          },
          darker: function (e) {
            return (
              (e = null == e ? ou : Math.pow(ou, e)),
              new lc(this.h, this.s, this.l * e, this.opacity)
            );
          },
          rgb: function () {
            var e = isNaN(this.h) ? 0 : (this.h + 120) * Nu,
              t = +this.l,
              n = isNaN(this.s) ? 0 : this.s * t * (1 - t),
              r = Math.cos(e),
              i = Math.sin(e);
            return new Au(
              255 * (t + n * (ec * r + tc * i)),
              255 * (t + n * (nc * r + rc * i)),
              255 * (t + n * (ic * r)),
              this.opacity
            );
          },
        })
      );
      var fc = Array.prototype.slice;
      function dc(e, t) {
        return e - t;
      }
      function hc(e) {
        return function () {
          return e;
        };
      }
      function pc(e, t) {
        for (var n, r = -1, i = t.length; ++r < i; )
          if ((n = gc(e, t[r]))) return n;
        return 0;
      }
      function gc(e, t) {
        for (
          var n = t[0], r = t[1], i = -1, o = 0, a = e.length, s = a - 1;
          o < a;
          s = o++
        ) {
          var u = e[o],
            c = u[0],
            l = u[1],
            f = e[s],
            d = f[0],
            h = f[1];
          if (mc(u, f, t)) return 0;
          l > r !== h > r && n < ((d - c) * (r - l)) / (h - l) + c && (i = -i);
        }
        return i;
      }
      function mc(e, t, n) {
        var r, i, o, a;
        return (
          (function (e, t, n) {
            return (
              (t[0] - e[0]) * (n[1] - e[1]) === (n[0] - e[0]) * (t[1] - e[1])
            );
          })(e, t, n) &&
          ((i = e[(r = +(e[0] === t[0]))]),
          (o = n[r]),
          (a = t[r]),
          (i <= o && o <= a) || (a <= o && o <= i))
        );
      }
      function yc() {}
      var bc = [
        [],
        [
          [
            [1, 1.5],
            [0.5, 1],
          ],
        ],
        [
          [
            [1.5, 1],
            [1, 1.5],
          ],
        ],
        [
          [
            [1.5, 1],
            [0.5, 1],
          ],
        ],
        [
          [
            [1, 0.5],
            [1.5, 1],
          ],
        ],
        [
          [
            [1, 1.5],
            [0.5, 1],
          ],
          [
            [1, 0.5],
            [1.5, 1],
          ],
        ],
        [
          [
            [1, 0.5],
            [1, 1.5],
          ],
        ],
        [
          [
            [1, 0.5],
            [0.5, 1],
          ],
        ],
        [
          [
            [0.5, 1],
            [1, 0.5],
          ],
        ],
        [
          [
            [1, 1.5],
            [1, 0.5],
          ],
        ],
        [
          [
            [0.5, 1],
            [1, 0.5],
          ],
          [
            [1.5, 1],
            [1, 1.5],
          ],
        ],
        [
          [
            [1.5, 1],
            [1, 0.5],
          ],
        ],
        [
          [
            [0.5, 1],
            [1.5, 1],
          ],
        ],
        [
          [
            [1, 1.5],
            [1.5, 1],
          ],
        ],
        [
          [
            [0.5, 1],
            [1, 1.5],
          ],
        ],
        [],
      ];
      function vc() {
        var e = 1,
          t = 1,
          n = L,
          r = s;
        function i(e) {
          var t = n(e);
          if (Array.isArray(t)) t = t.slice().sort(dc);
          else {
            var r = y(e),
              i = r[0],
              a = r[1];
            (t = C(i, a, t)),
              (t = M(Math.floor(i / t) * t, Math.floor(a / t) * t, t));
          }
          return t.map(function (t) {
            return o(e, t);
          });
        }
        function o(n, i) {
          var o = [],
            s = [];
          return (
            (function (n, r, i) {
              var o,
                s,
                u,
                c,
                l,
                f,
                d = new Array(),
                h = new Array();
              (o = s = -1), (c = n[0] >= r), bc[c << 1].forEach(p);
              for (; ++o < e - 1; )
                (u = c), (c = n[o + 1] >= r), bc[u | (c << 1)].forEach(p);
              bc[c << 0].forEach(p);
              for (; ++s < t - 1; ) {
                for (
                  o = -1,
                    c = n[s * e + e] >= r,
                    l = n[s * e] >= r,
                    bc[(c << 1) | (l << 2)].forEach(p);
                  ++o < e - 1;

                )
                  (u = c),
                    (c = n[s * e + e + o + 1] >= r),
                    (f = l),
                    (l = n[s * e + o + 1] >= r),
                    bc[u | (c << 1) | (l << 2) | (f << 3)].forEach(p);
                bc[c | (l << 3)].forEach(p);
              }
              (o = -1), (l = n[s * e] >= r), bc[l << 2].forEach(p);
              for (; ++o < e - 1; )
                (f = l),
                  (l = n[s * e + o + 1] >= r),
                  bc[(l << 2) | (f << 3)].forEach(p);
              function p(e) {
                var t,
                  n,
                  r = [e[0][0] + o, e[0][1] + s],
                  u = [e[1][0] + o, e[1][1] + s],
                  c = a(r),
                  l = a(u);
                (t = h[c])
                  ? (n = d[l])
                    ? (delete h[t.end],
                      delete d[n.start],
                      t === n
                        ? (t.ring.push(u), i(t.ring))
                        : (d[t.start] = h[n.end] =
                            {
                              start: t.start,
                              end: n.end,
                              ring: t.ring.concat(n.ring),
                            }))
                    : (delete h[t.end], t.ring.push(u), (h[(t.end = l)] = t))
                  : (t = d[l])
                  ? (n = h[c])
                    ? (delete d[t.start],
                      delete h[n.end],
                      t === n
                        ? (t.ring.push(u), i(t.ring))
                        : (d[n.start] = h[t.end] =
                            {
                              start: n.start,
                              end: t.end,
                              ring: n.ring.concat(t.ring),
                            }))
                    : (delete d[t.start],
                      t.ring.unshift(r),
                      (d[(t.start = c)] = t))
                  : (d[c] = h[l] = { start: c, end: l, ring: [r, u] });
              }
              bc[l << 3].forEach(p);
            })(n, i, function (e) {
              r(e, n, i),
                (function (e) {
                  for (
                    var t = 0,
                      n = e.length,
                      r = e[n - 1][1] * e[0][0] - e[n - 1][0] * e[0][1];
                    ++t < n;

                  )
                    r += e[t - 1][1] * e[t][0] - e[t - 1][0] * e[t][1];
                  return r;
                })(e) > 0
                  ? o.push([e])
                  : s.push(e);
            }),
            s.forEach(function (e) {
              for (var t, n = 0, r = o.length; n < r; ++n)
                if (-1 !== pc((t = o[n])[0], e)) return void t.push(e);
            }),
            { type: "MultiPolygon", value: i, coordinates: o }
          );
        }
        function a(t) {
          return 2 * t[0] + t[1] * (e + 1) * 4;
        }
        function s(n, r, i) {
          n.forEach(function (n) {
            var o,
              a = n[0],
              s = n[1],
              u = 0 | a,
              c = 0 | s,
              l = r[c * e + u];
            a > 0 &&
              a < e &&
              u === a &&
              ((o = r[c * e + u - 1]), (n[0] = a + (i - o) / (l - o) - 0.5)),
              s > 0 &&
                s < t &&
                c === s &&
                ((o = r[(c - 1) * e + u]),
                (n[1] = s + (i - o) / (l - o) - 0.5));
          });
        }
        return (
          (i.contour = o),
          (i.size = function (n) {
            if (!arguments.length) return [e, t];
            var r = Math.ceil(n[0]),
              o = Math.ceil(n[1]);
            if (!(r > 0) || !(o > 0)) throw new Error("invalid size");
            return (e = r), (t = o), i;
          }),
          (i.thresholds = function (e) {
            return arguments.length
              ? ((n =
                  "function" === typeof e
                    ? e
                    : Array.isArray(e)
                    ? hc(fc.call(e))
                    : hc(e)),
                i)
              : n;
          }),
          (i.smooth = function (e) {
            return arguments.length ? ((r = e ? s : yc), i) : r === s;
          }),
          i
        );
      }
      function _c(e, t, n) {
        for (var r = e.width, i = e.height, o = 1 + (n << 1), a = 0; a < i; ++a)
          for (var s = 0, u = 0; s < r + n; ++s)
            s < r && (u += e.data[s + a * r]),
              s >= n &&
                (s >= o && (u -= e.data[s - o + a * r]),
                (t.data[s - n + a * r] =
                  u / Math.min(s + 1, r - 1 + o - s, o)));
      }
      function xc(e, t, n) {
        for (var r = e.width, i = e.height, o = 1 + (n << 1), a = 0; a < r; ++a)
          for (var s = 0, u = 0; s < i + n; ++s)
            s < i && (u += e.data[a + s * r]),
              s >= n &&
                (s >= o && (u -= e.data[a + (s - o) * r]),
                (t.data[a + (s - n) * r] =
                  u / Math.min(s + 1, i - 1 + o - s, o)));
      }
      function Tc(e) {
        return e[0];
      }
      function Mc(e) {
        return e[1];
      }
      function wc() {
        return 1;
      }
      function Ac() {
        var e = Tc,
          t = Mc,
          n = wc,
          r = 960,
          i = 500,
          o = 20,
          a = 2,
          s = 3 * o,
          u = (r + 2 * s) >> a,
          c = (i + 2 * s) >> a,
          l = hc(20);
        function f(r) {
          var i = new Float32Array(u * c),
            f = new Float32Array(u * c);
          r.forEach(function (r, o, l) {
            var f = (+e(r, o, l) + s) >> a,
              d = (+t(r, o, l) + s) >> a,
              h = +n(r, o, l);
            f >= 0 && f < u && d >= 0 && d < c && (i[f + d * u] += h);
          }),
            _c(
              { width: u, height: c, data: i },
              { width: u, height: c, data: f },
              o >> a
            ),
            xc(
              { width: u, height: c, data: f },
              { width: u, height: c, data: i },
              o >> a
            ),
            _c(
              { width: u, height: c, data: i },
              { width: u, height: c, data: f },
              o >> a
            ),
            xc(
              { width: u, height: c, data: f },
              { width: u, height: c, data: i },
              o >> a
            ),
            _c(
              { width: u, height: c, data: i },
              { width: u, height: c, data: f },
              o >> a
            ),
            xc(
              { width: u, height: c, data: f },
              { width: u, height: c, data: i },
              o >> a
            );
          var h = l(i);
          if (!Array.isArray(h)) {
            var p = F(i);
            (h = C(0, p, h)), (h = M(0, Math.floor(p / h) * h, h)).shift();
          }
          return vc().thresholds(h).size([u, c])(i).map(d);
        }
        function d(e) {
          return (e.value *= Math.pow(2, -2 * a)), e.coordinates.forEach(h), e;
        }
        function h(e) {
          e.forEach(p);
        }
        function p(e) {
          e.forEach(g);
        }
        function g(e) {
          (e[0] = e[0] * Math.pow(2, a) - s),
            (e[1] = e[1] * Math.pow(2, a) - s);
        }
        function m() {
          return (u = (r + 2 * (s = 3 * o)) >> a), (c = (i + 2 * s) >> a), f;
        }
        return (
          (f.x = function (t) {
            return arguments.length
              ? ((e = "function" === typeof t ? t : hc(+t)), f)
              : e;
          }),
          (f.y = function (e) {
            return arguments.length
              ? ((t = "function" === typeof e ? e : hc(+e)), f)
              : t;
          }),
          (f.weight = function (e) {
            return arguments.length
              ? ((n = "function" === typeof e ? e : hc(+e)), f)
              : n;
          }),
          (f.size = function (e) {
            if (!arguments.length) return [r, i];
            var t = Math.ceil(e[0]),
              n = Math.ceil(e[1]);
            if (!(t >= 0) && !(t >= 0)) throw new Error("invalid size");
            return (r = t), (i = n), m();
          }),
          (f.cellSize = function (e) {
            if (!arguments.length) return 1 << a;
            if (!((e = +e) >= 1)) throw new Error("invalid cell size");
            return (a = Math.floor(Math.log(e) / Math.LN2)), m();
          }),
          (f.thresholds = function (e) {
            return arguments.length
              ? ((l =
                  "function" === typeof e
                    ? e
                    : Array.isArray(e)
                    ? hc(fc.call(e))
                    : hc(e)),
                f)
              : l;
          }),
          (f.bandwidth = function (e) {
            if (!arguments.length) return Math.sqrt(o * (o + 1));
            if (!((e = +e) >= 0)) throw new Error("invalid bandwidth");
            return (o = Math.round((Math.sqrt(4 * e * e + 1) - 1) / 2)), m();
          }),
          f
        );
      }
      function kc() {
        for (var e, t = ut; (e = t.sourceEvent); ) t = e;
        return t;
      }
      function Ec(e, t) {
        var n = e.ownerSVGElement || e;
        if (n.createSVGPoint) {
          var r = n.createSVGPoint();
          return (
            (r.x = t.clientX),
            (r.y = t.clientY),
            [(r = r.matrixTransform(e.getScreenCTM().inverse())).x, r.y]
          );
        }
        var i = e.getBoundingClientRect();
        return [
          t.clientX - i.left - e.clientLeft,
          t.clientY - i.top - e.clientTop,
        ];
      }
      function Pc(e) {
        var t = kc();
        return t.changedTouches && (t = t.changedTouches[0]), Ec(e, t);
      }
      function Cc(e, t, n) {
        arguments.length < 3 && ((n = t), (t = kc().changedTouches));
        for (var r, i = 0, o = t ? t.length : 0; i < o; ++i)
          if ((r = t[i]).identifier === n) return Ec(e, r);
        return null;
      }
      function Lc(e) {
        return function () {
          return e;
        };
      }
      function Ic(e, t, n, r, i, o, a, s, u, c) {
        (this.target = e),
          (this.type = t),
          (this.subject = n),
          (this.identifier = r),
          (this.active = i),
          (this.x = o),
          (this.y = a),
          (this.dx = s),
          (this.dy = u),
          (this._ = c);
      }
      function Sc() {
        return !ut.ctrlKey && !ut.button;
      }
      function Oc() {
        return this.parentNode;
      }
      function Nc(e) {
        return null == e ? { x: ut.x, y: ut.y } : e;
      }
      function Fc() {
        return navigator.maxTouchPoints || "ontouchstart" in this;
      }
      function Dc() {
        var e,
          t,
          n,
          r,
          i = Sc,
          o = Oc,
          a = Nc,
          s = Fc,
          u = {},
          c = de("start", "drag", "end"),
          l = 0,
          f = 0;
        function d(e) {
          e.on("mousedown.drag", h)
            .filter(s)
            .on("touchstart.drag", m)
            .on("touchmove.drag", y)
            .on("touchend.drag touchcancel.drag", b)
            .style("touch-action", "none")
            .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
        }
        function h() {
          if (!r && i.apply(this, arguments)) {
            var a = v("mouse", o.apply(this, arguments), Pc, this, arguments);
            a &&
              (xt(ut.view)
                .on("mousemove.drag", p, !0)
                .on("mouseup.drag", g, !0),
              wt(ut.view),
              Tt(),
              (n = !1),
              (e = ut.clientX),
              (t = ut.clientY),
              a("start"));
          }
        }
        function p() {
          if ((Mt(), !n)) {
            var r = ut.clientX - e,
              i = ut.clientY - t;
            n = r * r + i * i > f;
          }
          u.mouse("drag");
        }
        function g() {
          xt(ut.view).on("mousemove.drag mouseup.drag", null),
            At(ut.view, n),
            Mt(),
            u.mouse("end");
        }
        function m() {
          if (i.apply(this, arguments)) {
            var e,
              t,
              n = ut.changedTouches,
              r = o.apply(this, arguments),
              a = n.length;
            for (e = 0; e < a; ++e)
              (t = v(n[e].identifier, r, Cc, this, arguments)) &&
                (Tt(), t("start"));
          }
        }
        function y() {
          var e,
            t,
            n = ut.changedTouches,
            r = n.length;
          for (e = 0; e < r; ++e) (t = u[n[e].identifier]) && (Mt(), t("drag"));
        }
        function b() {
          var e,
            t,
            n = ut.changedTouches,
            i = n.length;
          for (
            r && clearTimeout(r),
              r = setTimeout(function () {
                r = null;
              }, 500),
              e = 0;
            e < i;
            ++e
          )
            (t = u[n[e].identifier]) && (Tt(), t("end"));
        }
        function v(e, t, n, r, i) {
          var o,
            s,
            f,
            h = n(t, e),
            p = c.copy();
          if (
            pt(
              new Ic(d, "beforestart", o, e, l, h[0], h[1], 0, 0, p),
              function () {
                return (
                  null != (ut.subject = o = a.apply(r, i)) &&
                  ((s = o.x - h[0] || 0), (f = o.y - h[1] || 0), !0)
                );
              }
            )
          )
            return function a(c) {
              var g,
                m = h;
              switch (c) {
                case "start":
                  (u[e] = a), (g = l++);
                  break;
                case "end":
                  delete u[e], --l;
                case "drag":
                  (h = n(t, e)), (g = l);
              }
              pt(
                new Ic(
                  d,
                  c,
                  o,
                  e,
                  g,
                  h[0] + s,
                  h[1] + f,
                  h[0] - m[0],
                  h[1] - m[1],
                  p
                ),
                p.apply,
                p,
                [c, r, i]
              );
            };
        }
        return (
          (d.filter = function (e) {
            return arguments.length
              ? ((i = "function" === typeof e ? e : Lc(!!e)), d)
              : i;
          }),
          (d.container = function (e) {
            return arguments.length
              ? ((o = "function" === typeof e ? e : Lc(e)), d)
              : o;
          }),
          (d.subject = function (e) {
            return arguments.length
              ? ((a = "function" === typeof e ? e : Lc(e)), d)
              : a;
          }),
          (d.touchable = function (e) {
            return arguments.length
              ? ((s = "function" === typeof e ? e : Lc(!!e)), d)
              : s;
          }),
          (d.on = function () {
            var e = c.on.apply(c, arguments);
            return e === c ? d : e;
          }),
          (d.clickDistance = function (e) {
            return arguments.length ? ((f = (e = +e) * e), d) : Math.sqrt(f);
          }),
          d
        );
      }
      Ic.prototype.on = function () {
        var e = this._.on.apply(this._, arguments);
        return e === this._ ? this : e;
      };
      var Rc = {},
        Gc = {};
      function Bc(e) {
        return new Function(
          "d",
          "return {" +
            e
              .map(function (e, t) {
                return JSON.stringify(e) + ": d[" + t + "]";
              })
              .join(",") +
            "}"
        );
      }
      function Wc(e) {
        var t = new RegExp('["' + e + "\n\r]"),
          n = e.charCodeAt(0);
        function r(e, t) {
          var r,
            i = [],
            o = e.length,
            a = 0,
            s = 0,
            u = o <= 0,
            c = !1;
          function l() {
            if (u) return Gc;
            if (c) return (c = !1), Rc;
            var t,
              r,
              i = a;
            if (34 === e.charCodeAt(i)) {
              for (
                ;
                (a++ < o && 34 !== e.charCodeAt(a)) || 34 === e.charCodeAt(++a);

              );
              return (
                (t = a) >= o
                  ? (u = !0)
                  : 10 === (r = e.charCodeAt(a++))
                  ? (c = !0)
                  : 13 === r && ((c = !0), 10 === e.charCodeAt(a) && ++a),
                e.slice(i + 1, t - 1).replace(/""/g, '"')
              );
            }
            for (; a < o; ) {
              if (10 === (r = e.charCodeAt((t = a++)))) c = !0;
              else if (13 === r) (c = !0), 10 === e.charCodeAt(a) && ++a;
              else if (r !== n) continue;
              return e.slice(i, t);
            }
            return (u = !0), e.slice(i, o);
          }
          for (
            10 === e.charCodeAt(o - 1) && --o,
              13 === e.charCodeAt(o - 1) && --o;
            (r = l()) !== Gc;

          ) {
            for (var f = []; r !== Rc && r !== Gc; ) f.push(r), (r = l());
            (t && null == (f = t(f, s++))) || i.push(f);
          }
          return i;
        }
        function i(t) {
          return t.map(o).join(e);
        }
        function o(e) {
          return null == e
            ? ""
            : t.test((e += ""))
            ? '"' + e.replace(/"/g, '""') + '"'
            : e;
        }
        return {
          parse: function (e, t) {
            var n,
              i,
              o = r(e, function (e, r) {
                if (n) return n(e, r - 1);
                (i = e),
                  (n = t
                    ? (function (e, t) {
                        var n = Bc(e);
                        return function (r, i) {
                          return t(n(r), i, e);
                        };
                      })(e, t)
                    : Bc(e));
              });
            return (o.columns = i), o;
          },
          parseRows: r,
          format: function (t, n) {
            return (
              null == n &&
                (n = (function (e) {
                  var t = Object.create(null),
                    n = [];
                  return (
                    e.forEach(function (e) {
                      for (var r in e) r in t || n.push((t[r] = r));
                    }),
                    n
                  );
                })(t)),
              [n.map(o).join(e)]
                .concat(
                  t.map(function (t) {
                    return n
                      .map(function (e) {
                        return o(t[e]);
                      })
                      .join(e);
                  })
                )
                .join("\n")
            );
          },
          formatRows: function (e) {
            return e.map(i).join("\n");
          },
        };
      }
      var jc = Wc(","),
        zc = jc.parse,
        Uc = jc.parseRows,
        Hc = jc.format,
        Vc = jc.formatRows,
        qc = Wc("\t"),
        Zc = qc.parse,
        Yc = qc.parseRows,
        Xc = qc.format,
        $c = qc.formatRows;
      function Kc(e) {
        return +e;
      }
      function Qc(e) {
        return e * e;
      }
      function Jc(e) {
        return e * (2 - e);
      }
      function el(e) {
        return ((e *= 2) <= 1 ? e * e : --e * (2 - e) + 1) / 2;
      }
      function tl(e) {
        return e * e * e;
      }
      function nl(e) {
        return --e * e * e + 1;
      }
      function rl(e) {
        return ((e *= 2) <= 1 ? e * e * e : (e -= 2) * e * e + 2) / 2;
      }
      var il = (function e(t) {
          function n(e) {
            return Math.pow(e, t);
          }
          return (t = +t), (n.exponent = e), n;
        })(3),
        ol = (function e(t) {
          function n(e) {
            return 1 - Math.pow(1 - e, t);
          }
          return (t = +t), (n.exponent = e), n;
        })(3),
        al = (function e(t) {
          function n(e) {
            return (
              ((e *= 2) <= 1 ? Math.pow(e, t) : 2 - Math.pow(2 - e, t)) / 2
            );
          }
          return (t = +t), (n.exponent = e), n;
        })(3),
        sl = Math.PI,
        ul = sl / 2;
      function cl(e) {
        return 1 === +e ? 1 : 1 - Math.cos(e * ul);
      }
      function ll(e) {
        return Math.sin(e * ul);
      }
      function fl(e) {
        return (1 - Math.cos(sl * e)) / 2;
      }
      function dl(e) {
        return 1.0009775171065494 * (Math.pow(2, -10 * e) - 0.0009765625);
      }
      function hl(e) {
        return dl(1 - +e);
      }
      function pl(e) {
        return 1 - dl(e);
      }
      function gl(e) {
        return ((e *= 2) <= 1 ? dl(1 - e) : 2 - dl(e - 1)) / 2;
      }
      function ml(e) {
        return 1 - Math.sqrt(1 - e * e);
      }
      function yl(e) {
        return Math.sqrt(1 - --e * e);
      }
      function bl(e) {
        return (
          ((e *= 2) <= 1
            ? 1 - Math.sqrt(1 - e * e)
            : Math.sqrt(1 - (e -= 2) * e) + 1) / 2
        );
      }
      var vl = 4 / 11,
        _l = 7.5625;
      function xl(e) {
        return 1 - Tl(1 - e);
      }
      function Tl(e) {
        return (e = +e) < vl
          ? _l * e * e
          : e < 0.7272727272727273
          ? _l * (e -= 0.5454545454545454) * e + 0.75
          : e < 0.9090909090909091
          ? _l * (e -= 0.8181818181818182) * e + 0.9375
          : _l * (e -= 0.9545454545454546) * e + 0.984375;
      }
      function Ml(e) {
        return ((e *= 2) <= 1 ? 1 - Tl(1 - e) : Tl(e - 1) + 1) / 2;
      }
      var wl = 1.70158,
        Al = (function e(t) {
          function n(e) {
            return (e = +e) * e * (t * (e - 1) + e);
          }
          return (t = +t), (n.overshoot = e), n;
        })(wl),
        kl = (function e(t) {
          function n(e) {
            return --e * e * ((e + 1) * t + e) + 1;
          }
          return (t = +t), (n.overshoot = e), n;
        })(wl),
        El = (function e(t) {
          function n(e) {
            return (
              ((e *= 2) < 1
                ? e * e * ((t + 1) * e - t)
                : (e -= 2) * e * ((t + 1) * e + t) + 2) / 2
            );
          }
          return (t = +t), (n.overshoot = e), n;
        })(wl),
        Pl = 2 * Math.PI,
        Cl = (function e(t, n) {
          var r = Math.asin(1 / (t = Math.max(1, t))) * (n /= Pl);
          function i(e) {
            return t * dl(-(--e)) * Math.sin((r - e) / n);
          }
          return (
            (i.amplitude = function (t) {
              return e(t, n * Pl);
            }),
            (i.period = function (n) {
              return e(t, n);
            }),
            i
          );
        })(1, 0.3),
        Ll = (function e(t, n) {
          var r = Math.asin(1 / (t = Math.max(1, t))) * (n /= Pl);
          function i(e) {
            return 1 - t * dl((e = +e)) * Math.sin((e + r) / n);
          }
          return (
            (i.amplitude = function (t) {
              return e(t, n * Pl);
            }),
            (i.period = function (n) {
              return e(t, n);
            }),
            i
          );
        })(1, 0.3),
        Il = (function e(t, n) {
          var r = Math.asin(1 / (t = Math.max(1, t))) * (n /= Pl);
          function i(e) {
            return (
              ((e = 2 * e - 1) < 0
                ? t * dl(-e) * Math.sin((r - e) / n)
                : 2 - t * dl(e) * Math.sin((r + e) / n)) / 2
            );
          }
          return (
            (i.amplitude = function (t) {
              return e(t, n * Pl);
            }),
            (i.period = function (n) {
              return e(t, n);
            }),
            i
          );
        })(1, 0.3);
      function Sl(e) {
        if (!e.ok) throw new Error(e.status + " " + e.statusText);
        return e.blob();
      }
      function Ol(e, t) {
        return fetch(e, t).then(Sl);
      }
      function Nl(e) {
        if (!e.ok) throw new Error(e.status + " " + e.statusText);
        return e.arrayBuffer();
      }
      function Fl(e, t) {
        return fetch(e, t).then(Nl);
      }
      function Dl(e) {
        if (!e.ok) throw new Error(e.status + " " + e.statusText);
        return e.text();
      }
      function Rl(e, t) {
        return fetch(e, t).then(Dl);
      }
      function Gl(e) {
        return function (t, n, r) {
          return (
            2 === arguments.length &&
              "function" === typeof n &&
              ((r = n), (n = void 0)),
            Rl(t, n).then(function (t) {
              return e(t, r);
            })
          );
        };
      }
      function Bl(e, t, n, r) {
        3 === arguments.length &&
          "function" === typeof n &&
          ((r = n), (n = void 0));
        var i = Wc(e);
        return Rl(t, n).then(function (e) {
          return i.parse(e, r);
        });
      }
      var Wl = Gl(zc),
        jl = Gl(Zc);
      function zl(e, t) {
        return new Promise(function (n, r) {
          var i = new Image();
          for (var o in t) i[o] = t[o];
          (i.onerror = r),
            (i.onload = function () {
              n(i);
            }),
            (i.src = e);
        });
      }
      function Ul(e) {
        if (!e.ok) throw new Error(e.status + " " + e.statusText);
        if (204 !== e.status && 205 !== e.status) return e.json();
      }
      function Hl(e, t) {
        return fetch(e, t).then(Ul);
      }
      function Vl(e) {
        return function (t, n) {
          return Rl(t, n).then(function (t) {
            return new DOMParser().parseFromString(t, e);
          });
        };
      }
      var ql = Vl("application/xml"),
        Zl = Vl("text/html"),
        Yl = Vl("image/svg+xml");
      function Xl(e, t) {
        var n;
        function r() {
          var r,
            i,
            o = n.length,
            a = 0,
            s = 0;
          for (r = 0; r < o; ++r) (a += (i = n[r]).x), (s += i.y);
          for (a = a / o - e, s = s / o - t, r = 0; r < o; ++r)
            ((i = n[r]).x -= a), (i.y -= s);
        }
        return (
          null == e && (e = 0),
          null == t && (t = 0),
          (r.initialize = function (e) {
            n = e;
          }),
          (r.x = function (t) {
            return arguments.length ? ((e = +t), r) : e;
          }),
          (r.y = function (e) {
            return arguments.length ? ((t = +e), r) : t;
          }),
          r
        );
      }
      function $l(e) {
        return function () {
          return e;
        };
      }
      function Kl() {
        return 1e-6 * (Math.random() - 0.5);
      }
      function Ql(e, t, n, r) {
        if (isNaN(t) || isNaN(n)) return e;
        var i,
          o,
          a,
          s,
          u,
          c,
          l,
          f,
          d,
          h = e._root,
          p = { data: r },
          g = e._x0,
          m = e._y0,
          y = e._x1,
          b = e._y1;
        if (!h) return (e._root = p), e;
        for (; h.length; )
          if (
            ((c = t >= (o = (g + y) / 2)) ? (g = o) : (y = o),
            (l = n >= (a = (m + b) / 2)) ? (m = a) : (b = a),
            (i = h),
            !(h = h[(f = (l << 1) | c)]))
          )
            return (i[f] = p), e;
        if (
          ((s = +e._x.call(null, h.data)),
          (u = +e._y.call(null, h.data)),
          t === s && n === u)
        )
          return (p.next = h), i ? (i[f] = p) : (e._root = p), e;
        do {
          (i = i ? (i[f] = new Array(4)) : (e._root = new Array(4))),
            (c = t >= (o = (g + y) / 2)) ? (g = o) : (y = o),
            (l = n >= (a = (m + b) / 2)) ? (m = a) : (b = a);
        } while ((f = (l << 1) | c) === (d = ((u >= a) << 1) | (s >= o)));
        return (i[d] = h), (i[f] = p), e;
      }
      function Jl(e, t, n, r, i) {
        (this.node = e),
          (this.x0 = t),
          (this.y0 = n),
          (this.x1 = r),
          (this.y1 = i);
      }
      function ef(e) {
        return e[0];
      }
      function tf(e) {
        return e[1];
      }
      function nf(e, t, n) {
        var r = new rf(
          null == t ? ef : t,
          null == n ? tf : n,
          NaN,
          NaN,
          NaN,
          NaN
        );
        return null == e ? r : r.addAll(e);
      }
      function rf(e, t, n, r, i, o) {
        (this._x = e),
          (this._y = t),
          (this._x0 = n),
          (this._y0 = r),
          (this._x1 = i),
          (this._y1 = o),
          (this._root = void 0);
      }
      function of(e) {
        for (var t = { data: e.data }, n = t; (e = e.next); )
          n = n.next = { data: e.data };
        return t;
      }
      var af = (nf.prototype = rf.prototype);
      function sf(e) {
        return e.x + e.vx;
      }
      function uf(e) {
        return e.y + e.vy;
      }
      function cf(e) {
        var t,
          n,
          r = 1,
          i = 1;
        function o() {
          for (var e, o, s, u, c, l, f, d = t.length, h = 0; h < i; ++h)
            for (o = nf(t, sf, uf).visitAfter(a), e = 0; e < d; ++e)
              (s = t[e]),
                (l = n[s.index]),
                (f = l * l),
                (u = s.x + s.vx),
                (c = s.y + s.vy),
                o.visit(p);
          function p(e, t, n, i, o) {
            var a = e.data,
              d = e.r,
              h = l + d;
            if (!a) return t > u + h || i < u - h || n > c + h || o < c - h;
            if (a.index > s.index) {
              var p = u - a.x - a.vx,
                g = c - a.y - a.vy,
                m = p * p + g * g;
              m < h * h &&
                (0 === p && (m += (p = Kl()) * p),
                0 === g && (m += (g = Kl()) * g),
                (m = ((h - (m = Math.sqrt(m))) / m) * r),
                (s.vx += (p *= m) * (h = (d *= d) / (f + d))),
                (s.vy += (g *= m) * h),
                (a.vx -= p * (h = 1 - h)),
                (a.vy -= g * h));
            }
          }
        }
        function a(e) {
          if (e.data) return (e.r = n[e.data.index]);
          for (var t = (e.r = 0); t < 4; ++t)
            e[t] && e[t].r > e.r && (e.r = e[t].r);
        }
        function s() {
          if (t) {
            var r,
              i,
              o = t.length;
            for (n = new Array(o), r = 0; r < o; ++r)
              (i = t[r]), (n[i.index] = +e(i, r, t));
          }
        }
        return (
          "function" !== typeof e && (e = $l(null == e ? 1 : +e)),
          (o.initialize = function (e) {
            (t = e), s();
          }),
          (o.iterations = function (e) {
            return arguments.length ? ((i = +e), o) : i;
          }),
          (o.strength = function (e) {
            return arguments.length ? ((r = +e), o) : r;
          }),
          (o.radius = function (t) {
            return arguments.length
              ? ((e = "function" === typeof t ? t : $l(+t)), s(), o)
              : e;
          }),
          o
        );
      }
      function lf(e) {
        return e.index;
      }
      function ff(e, t) {
        var n = e.get(t);
        if (!n) throw new Error("missing: " + t);
        return n;
      }
      function df(e) {
        var t,
          n,
          r,
          i,
          o,
          a = lf,
          s = function (e) {
            return 1 / Math.min(i[e.source.index], i[e.target.index]);
          },
          u = $l(30),
          c = 1;
        function l(r) {
          for (var i = 0, a = e.length; i < c; ++i)
            for (var s, u, l, f, d, h, p, g = 0; g < a; ++g)
              (u = (s = e[g]).source),
                (f = (l = s.target).x + l.vx - u.x - u.vx || Kl()),
                (d = l.y + l.vy - u.y - u.vy || Kl()),
                (f *= h =
                  (((h = Math.sqrt(f * f + d * d)) - n[g]) / h) * r * t[g]),
                (d *= h),
                (l.vx -= f * (p = o[g])),
                (l.vy -= d * p),
                (u.vx += f * (p = 1 - p)),
                (u.vy += d * p);
        }
        function f() {
          if (r) {
            var s,
              u,
              c = r.length,
              l = e.length,
              f = Us(r, a);
            for (s = 0, i = new Array(c); s < l; ++s)
              ((u = e[s]).index = s),
                "object" !== typeof u.source && (u.source = ff(f, u.source)),
                "object" !== typeof u.target && (u.target = ff(f, u.target)),
                (i[u.source.index] = (i[u.source.index] || 0) + 1),
                (i[u.target.index] = (i[u.target.index] || 0) + 1);
            for (s = 0, o = new Array(l); s < l; ++s)
              (u = e[s]),
                (o[s] =
                  i[u.source.index] / (i[u.source.index] + i[u.target.index]));
            (t = new Array(l)), d(), (n = new Array(l)), h();
          }
        }
        function d() {
          if (r)
            for (var n = 0, i = e.length; n < i; ++n) t[n] = +s(e[n], n, e);
        }
        function h() {
          if (r)
            for (var t = 0, i = e.length; t < i; ++t) n[t] = +u(e[t], t, e);
        }
        return (
          null == e && (e = []),
          (l.initialize = function (e) {
            (r = e), f();
          }),
          (l.links = function (t) {
            return arguments.length ? ((e = t), f(), l) : e;
          }),
          (l.id = function (e) {
            return arguments.length ? ((a = e), l) : a;
          }),
          (l.iterations = function (e) {
            return arguments.length ? ((c = +e), l) : c;
          }),
          (l.strength = function (e) {
            return arguments.length
              ? ((s = "function" === typeof e ? e : $l(+e)), d(), l)
              : s;
          }),
          (l.distance = function (e) {
            return arguments.length
              ? ((u = "function" === typeof e ? e : $l(+e)), h(), l)
              : u;
          }),
          l
        );
      }
      function hf(e) {
        return e.x;
      }
      function pf(e) {
        return e.y;
      }
      (af.copy = function () {
        var e,
          t,
          n = new rf(this._x, this._y, this._x0, this._y0, this._x1, this._y1),
          r = this._root;
        if (!r) return n;
        if (!r.length) return (n._root = of(r)), n;
        for (
          e = [{ source: r, target: (n._root = new Array(4)) }];
          (r = e.pop());

        )
          for (var i = 0; i < 4; ++i)
            (t = r.source[i]) &&
              (t.length
                ? e.push({ source: t, target: (r.target[i] = new Array(4)) })
                : (r.target[i] = of(t)));
        return n;
      }),
        (af.add = function (e) {
          var t = +this._x.call(null, e),
            n = +this._y.call(null, e);
          return Ql(this.cover(t, n), t, n, e);
        }),
        (af.addAll = function (e) {
          var t,
            n,
            r,
            i,
            o = e.length,
            a = new Array(o),
            s = new Array(o),
            u = 1 / 0,
            c = 1 / 0,
            l = -1 / 0,
            f = -1 / 0;
          for (n = 0; n < o; ++n)
            isNaN((r = +this._x.call(null, (t = e[n])))) ||
              isNaN((i = +this._y.call(null, t))) ||
              ((a[n] = r),
              (s[n] = i),
              r < u && (u = r),
              r > l && (l = r),
              i < c && (c = i),
              i > f && (f = i));
          for (
            l < u && ((u = this._x0), (l = this._x1)),
              f < c && ((c = this._y0), (f = this._y1)),
              this.cover(u, c).cover(l, f),
              n = 0;
            n < o;
            ++n
          )
            Ql(this, a[n], s[n], e[n]);
          return this;
        }),
        (af.cover = function (e, t) {
          if (isNaN((e = +e)) || isNaN((t = +t))) return this;
          var n = this._x0,
            r = this._y0,
            i = this._x1,
            o = this._y1;
          if (isNaN(n))
            (i = (n = Math.floor(e)) + 1), (o = (r = Math.floor(t)) + 1);
          else {
            if (!(n > e || e > i || r > t || t > o)) return this;
            var a,
              s,
              u = i - n,
              c = this._root;
            switch ((s = ((t < (r + o) / 2) << 1) | (e < (n + i) / 2))) {
              case 0:
                do {
                  ((a = new Array(4))[s] = c), (c = a);
                } while (((o = r + (u *= 2)), e > (i = n + u) || t > o));
                break;
              case 1:
                do {
                  ((a = new Array(4))[s] = c), (c = a);
                } while (((o = r + (u *= 2)), (n = i - u) > e || t > o));
                break;
              case 2:
                do {
                  ((a = new Array(4))[s] = c), (c = a);
                } while (((r = o - (u *= 2)), e > (i = n + u) || r > t));
                break;
              case 3:
                do {
                  ((a = new Array(4))[s] = c), (c = a);
                } while (((r = o - (u *= 2)), (n = i - u) > e || r > t));
            }
            this._root && this._root.length && (this._root = c);
          }
          return (
            (this._x0 = n), (this._y0 = r), (this._x1 = i), (this._y1 = o), this
          );
        }),
        (af.data = function () {
          var e = [];
          return (
            this.visit(function (t) {
              if (!t.length)
                do {
                  e.push(t.data);
                } while ((t = t.next));
            }),
            e
          );
        }),
        (af.extent = function (e) {
          return arguments.length
            ? this.cover(+e[0][0], +e[0][1]).cover(+e[1][0], +e[1][1])
            : isNaN(this._x0)
            ? void 0
            : [
                [this._x0, this._y0],
                [this._x1, this._y1],
              ];
        }),
        (af.find = function (e, t, n) {
          var r,
            i,
            o,
            a,
            s,
            u,
            c,
            l = this._x0,
            f = this._y0,
            d = this._x1,
            h = this._y1,
            p = [],
            g = this._root;
          for (
            g && p.push(new Jl(g, l, f, d, h)),
              null == n
                ? (n = 1 / 0)
                : ((l = e - n),
                  (f = t - n),
                  (d = e + n),
                  (h = t + n),
                  (n *= n));
            (u = p.pop());

          )
            if (
              !(
                !(g = u.node) ||
                (i = u.x0) > d ||
                (o = u.y0) > h ||
                (a = u.x1) < l ||
                (s = u.y1) < f
              )
            )
              if (g.length) {
                var m = (i + a) / 2,
                  y = (o + s) / 2;
                p.push(
                  new Jl(g[3], m, y, a, s),
                  new Jl(g[2], i, y, m, s),
                  new Jl(g[1], m, o, a, y),
                  new Jl(g[0], i, o, m, y)
                ),
                  (c = ((t >= y) << 1) | (e >= m)) &&
                    ((u = p[p.length - 1]),
                    (p[p.length - 1] = p[p.length - 1 - c]),
                    (p[p.length - 1 - c] = u));
              } else {
                var b = e - +this._x.call(null, g.data),
                  v = t - +this._y.call(null, g.data),
                  _ = b * b + v * v;
                if (_ < n) {
                  var x = Math.sqrt((n = _));
                  (l = e - x),
                    (f = t - x),
                    (d = e + x),
                    (h = t + x),
                    (r = g.data);
                }
              }
          return r;
        }),
        (af.remove = function (e) {
          if (
            isNaN((o = +this._x.call(null, e))) ||
            isNaN((a = +this._y.call(null, e)))
          )
            return this;
          var t,
            n,
            r,
            i,
            o,
            a,
            s,
            u,
            c,
            l,
            f,
            d,
            h = this._root,
            p = this._x0,
            g = this._y0,
            m = this._x1,
            y = this._y1;
          if (!h) return this;
          if (h.length)
            for (;;) {
              if (
                ((c = o >= (s = (p + m) / 2)) ? (p = s) : (m = s),
                (l = a >= (u = (g + y) / 2)) ? (g = u) : (y = u),
                (t = h),
                !(h = h[(f = (l << 1) | c)]))
              )
                return this;
              if (!h.length) break;
              (t[(f + 1) & 3] || t[(f + 2) & 3] || t[(f + 3) & 3]) &&
                ((n = t), (d = f));
            }
          for (; h.data !== e; ) if (((r = h), !(h = h.next))) return this;
          return (
            (i = h.next) && delete h.next,
            r
              ? (i ? (r.next = i) : delete r.next, this)
              : t
              ? (i ? (t[f] = i) : delete t[f],
                (h = t[0] || t[1] || t[2] || t[3]) &&
                  h === (t[3] || t[2] || t[1] || t[0]) &&
                  !h.length &&
                  (n ? (n[d] = h) : (this._root = h)),
                this)
              : ((this._root = i), this)
          );
        }),
        (af.removeAll = function (e) {
          for (var t = 0, n = e.length; t < n; ++t) this.remove(e[t]);
          return this;
        }),
        (af.root = function () {
          return this._root;
        }),
        (af.size = function () {
          var e = 0;
          return (
            this.visit(function (t) {
              if (!t.length)
                do {
                  ++e;
                } while ((t = t.next));
            }),
            e
          );
        }),
        (af.visit = function (e) {
          var t,
            n,
            r,
            i,
            o,
            a,
            s = [],
            u = this._root;
          for (
            u && s.push(new Jl(u, this._x0, this._y0, this._x1, this._y1));
            (t = s.pop());

          )
            if (
              !e(
                (u = t.node),
                (r = t.x0),
                (i = t.y0),
                (o = t.x1),
                (a = t.y1)
              ) &&
              u.length
            ) {
              var c = (r + o) / 2,
                l = (i + a) / 2;
              (n = u[3]) && s.push(new Jl(n, c, l, o, a)),
                (n = u[2]) && s.push(new Jl(n, r, l, c, a)),
                (n = u[1]) && s.push(new Jl(n, c, i, o, l)),
                (n = u[0]) && s.push(new Jl(n, r, i, c, l));
            }
          return this;
        }),
        (af.visitAfter = function (e) {
          var t,
            n = [],
            r = [];
          for (
            this._root &&
            n.push(new Jl(this._root, this._x0, this._y0, this._x1, this._y1));
            (t = n.pop());

          ) {
            var i = t.node;
            if (i.length) {
              var o,
                a = t.x0,
                s = t.y0,
                u = t.x1,
                c = t.y1,
                l = (a + u) / 2,
                f = (s + c) / 2;
              (o = i[0]) && n.push(new Jl(o, a, s, l, f)),
                (o = i[1]) && n.push(new Jl(o, l, s, u, f)),
                (o = i[2]) && n.push(new Jl(o, a, f, l, c)),
                (o = i[3]) && n.push(new Jl(o, l, f, u, c));
            }
            r.push(t);
          }
          for (; (t = r.pop()); ) e(t.node, t.x0, t.y0, t.x1, t.y1);
          return this;
        }),
        (af.x = function (e) {
          return arguments.length ? ((this._x = e), this) : this._x;
        }),
        (af.y = function (e) {
          return arguments.length ? ((this._y = e), this) : this._y;
        });
      var gf = Math.PI * (3 - Math.sqrt(5));
      function mf(e) {
        var t,
          n = 1,
          r = 0.001,
          i = 1 - Math.pow(r, 1 / 300),
          o = 0,
          a = 0.6,
          s = Us(),
          u = eo(l),
          c = de("tick", "end");
        function l() {
          f(), c.call("tick", t), n < r && (u.stop(), c.call("end", t));
        }
        function f(r) {
          var u,
            c,
            l = e.length;
          void 0 === r && (r = 1);
          for (var f = 0; f < r; ++f)
            for (
              n += (o - n) * i,
                s.each(function (e) {
                  e(n);
                }),
                u = 0;
              u < l;
              ++u
            )
              null == (c = e[u]).fx
                ? (c.x += c.vx *= a)
                : ((c.x = c.fx), (c.vx = 0)),
                null == c.fy ? (c.y += c.vy *= a) : ((c.y = c.fy), (c.vy = 0));
          return t;
        }
        function d() {
          for (var t, n = 0, r = e.length; n < r; ++n) {
            if (
              (((t = e[n]).index = n),
              null != t.fx && (t.x = t.fx),
              null != t.fy && (t.y = t.fy),
              isNaN(t.x) || isNaN(t.y))
            ) {
              var i = 10 * Math.sqrt(n),
                o = n * gf;
              (t.x = i * Math.cos(o)), (t.y = i * Math.sin(o));
            }
            (isNaN(t.vx) || isNaN(t.vy)) && (t.vx = t.vy = 0);
          }
        }
        function h(t) {
          return t.initialize && t.initialize(e), t;
        }
        return (
          null == e && (e = []),
          d(),
          (t = {
            tick: f,
            restart: function () {
              return u.restart(l), t;
            },
            stop: function () {
              return u.stop(), t;
            },
            nodes: function (n) {
              return arguments.length ? ((e = n), d(), s.each(h), t) : e;
            },
            alpha: function (e) {
              return arguments.length ? ((n = +e), t) : n;
            },
            alphaMin: function (e) {
              return arguments.length ? ((r = +e), t) : r;
            },
            alphaDecay: function (e) {
              return arguments.length ? ((i = +e), t) : +i;
            },
            alphaTarget: function (e) {
              return arguments.length ? ((o = +e), t) : o;
            },
            velocityDecay: function (e) {
              return arguments.length ? ((a = 1 - e), t) : 1 - a;
            },
            force: function (e, n) {
              return arguments.length > 1
                ? (null == n ? s.remove(e) : s.set(e, h(n)), t)
                : s.get(e);
            },
            find: function (t, n, r) {
              var i,
                o,
                a,
                s,
                u,
                c = 0,
                l = e.length;
              for (null == r ? (r = 1 / 0) : (r *= r), c = 0; c < l; ++c)
                (a = (i = t - (s = e[c]).x) * i + (o = n - s.y) * o) < r &&
                  ((u = s), (r = a));
              return u;
            },
            on: function (e, n) {
              return arguments.length > 1 ? (c.on(e, n), t) : c.on(e);
            },
          })
        );
      }
      function yf() {
        var e,
          t,
          n,
          r,
          i = $l(-30),
          o = 1,
          a = 1 / 0,
          s = 0.81;
        function u(r) {
          var i,
            o = e.length,
            a = nf(e, hf, pf).visitAfter(l);
          for (n = r, i = 0; i < o; ++i) (t = e[i]), a.visit(f);
        }
        function c() {
          if (e) {
            var t,
              n,
              o = e.length;
            for (r = new Array(o), t = 0; t < o; ++t)
              (n = e[t]), (r[n.index] = +i(n, t, e));
          }
        }
        function l(e) {
          var t,
            n,
            i,
            o,
            a,
            s = 0,
            u = 0;
          if (e.length) {
            for (i = o = a = 0; a < 4; ++a)
              (t = e[a]) &&
                (n = Math.abs(t.value)) &&
                ((s += t.value), (u += n), (i += n * t.x), (o += n * t.y));
            (e.x = i / u), (e.y = o / u);
          } else {
            ((t = e).x = t.data.x), (t.y = t.data.y);
            do {
              s += r[t.data.index];
            } while ((t = t.next));
          }
          e.value = s;
        }
        function f(e, i, u, c) {
          if (!e.value) return !0;
          var l = e.x - t.x,
            f = e.y - t.y,
            d = c - i,
            h = l * l + f * f;
          if ((d * d) / s < h)
            return (
              h < a &&
                (0 === l && (h += (l = Kl()) * l),
                0 === f && (h += (f = Kl()) * f),
                h < o && (h = Math.sqrt(o * h)),
                (t.vx += (l * e.value * n) / h),
                (t.vy += (f * e.value * n) / h)),
              !0
            );
          if (!(e.length || h >= a)) {
            (e.data !== t || e.next) &&
              (0 === l && (h += (l = Kl()) * l),
              0 === f && (h += (f = Kl()) * f),
              h < o && (h = Math.sqrt(o * h)));
            do {
              e.data !== t &&
                ((d = (r[e.data.index] * n) / h),
                (t.vx += l * d),
                (t.vy += f * d));
            } while ((e = e.next));
          }
        }
        return (
          (u.initialize = function (t) {
            (e = t), c();
          }),
          (u.strength = function (e) {
            return arguments.length
              ? ((i = "function" === typeof e ? e : $l(+e)), c(), u)
              : i;
          }),
          (u.distanceMin = function (e) {
            return arguments.length ? ((o = e * e), u) : Math.sqrt(o);
          }),
          (u.distanceMax = function (e) {
            return arguments.length ? ((a = e * e), u) : Math.sqrt(a);
          }),
          (u.theta = function (e) {
            return arguments.length ? ((s = e * e), u) : Math.sqrt(s);
          }),
          u
        );
      }
      function bf(e, t, n) {
        var r,
          i,
          o,
          a = $l(0.1);
        function s(e) {
          for (var a = 0, s = r.length; a < s; ++a) {
            var u = r[a],
              c = u.x - t || 1e-6,
              l = u.y - n || 1e-6,
              f = Math.sqrt(c * c + l * l),
              d = ((o[a] - f) * i[a] * e) / f;
            (u.vx += c * d), (u.vy += l * d);
          }
        }
        function u() {
          if (r) {
            var t,
              n = r.length;
            for (i = new Array(n), o = new Array(n), t = 0; t < n; ++t)
              (o[t] = +e(r[t], t, r)),
                (i[t] = isNaN(o[t]) ? 0 : +a(r[t], t, r));
          }
        }
        return (
          "function" !== typeof e && (e = $l(+e)),
          null == t && (t = 0),
          null == n && (n = 0),
          (s.initialize = function (e) {
            (r = e), u();
          }),
          (s.strength = function (e) {
            return arguments.length
              ? ((a = "function" === typeof e ? e : $l(+e)), u(), s)
              : a;
          }),
          (s.radius = function (t) {
            return arguments.length
              ? ((e = "function" === typeof t ? t : $l(+t)), u(), s)
              : e;
          }),
          (s.x = function (e) {
            return arguments.length ? ((t = +e), s) : t;
          }),
          (s.y = function (e) {
            return arguments.length ? ((n = +e), s) : n;
          }),
          s
        );
      }
      function vf(e) {
        var t,
          n,
          r,
          i = $l(0.1);
        function o(e) {
          for (var i, o = 0, a = t.length; o < a; ++o)
            (i = t[o]).vx += (r[o] - i.x) * n[o] * e;
        }
        function a() {
          if (t) {
            var o,
              a = t.length;
            for (n = new Array(a), r = new Array(a), o = 0; o < a; ++o)
              n[o] = isNaN((r[o] = +e(t[o], o, t))) ? 0 : +i(t[o], o, t);
          }
        }
        return (
          "function" !== typeof e && (e = $l(null == e ? 0 : +e)),
          (o.initialize = function (e) {
            (t = e), a();
          }),
          (o.strength = function (e) {
            return arguments.length
              ? ((i = "function" === typeof e ? e : $l(+e)), a(), o)
              : i;
          }),
          (o.x = function (t) {
            return arguments.length
              ? ((e = "function" === typeof t ? t : $l(+t)), a(), o)
              : e;
          }),
          o
        );
      }
      function _f(e) {
        var t,
          n,
          r,
          i = $l(0.1);
        function o(e) {
          for (var i, o = 0, a = t.length; o < a; ++o)
            (i = t[o]).vy += (r[o] - i.y) * n[o] * e;
        }
        function a() {
          if (t) {
            var o,
              a = t.length;
            for (n = new Array(a), r = new Array(a), o = 0; o < a; ++o)
              n[o] = isNaN((r[o] = +e(t[o], o, t))) ? 0 : +i(t[o], o, t);
          }
        }
        return (
          "function" !== typeof e && (e = $l(null == e ? 0 : +e)),
          (o.initialize = function (e) {
            (t = e), a();
          }),
          (o.strength = function (e) {
            return arguments.length
              ? ((i = "function" === typeof e ? e : $l(+e)), a(), o)
              : i;
          }),
          (o.y = function (t) {
            return arguments.length
              ? ((e = "function" === typeof t ? t : $l(+t)), a(), o)
              : e;
          }),
          o
        );
      }
      var xf = n(490741),
        Tf = n(805331),
        Mf = n(632159),
        wf = n(203044);
      function Af(e) {
        return Math.max(0, -(0, wf.Z)(Math.abs(e)));
      }
      function kf(e, t) {
        return Math.max(
          0,
          3 * Math.max(-8, Math.min(8, Math.floor((0, wf.Z)(t) / 3))) -
            (0, wf.Z)(Math.abs(e))
        );
      }
      function Ef(e, t) {
        return (
          (e = Math.abs(e)),
          (t = Math.abs(t) - e),
          Math.max(0, (0, wf.Z)(t) - (0, wf.Z)(e)) + 1
        );
      }
      function Pf() {
        return new Cf();
      }
      function Cf() {
        this.reset();
      }
      Cf.prototype = {
        constructor: Cf,
        reset: function () {
          this.s = this.t = 0;
        },
        add: function (e) {
          If(Lf, e, this.t),
            If(this, Lf.s, this.s),
            this.s ? (this.t += Lf.t) : (this.s = Lf.t);
        },
        valueOf: function () {
          return this.s;
        },
      };
      var Lf = new Cf();
      function If(e, t, n) {
        var r = (e.s = t + n),
          i = r - t,
          o = r - i;
        e.t = t - o + (n - i);
      }
      var Sf = 1e-6,
        Of = 1e-12,
        Nf = Math.PI,
        Ff = Nf / 2,
        Df = Nf / 4,
        Rf = 2 * Nf,
        Gf = 180 / Nf,
        Bf = Nf / 180,
        Wf = Math.abs,
        jf = Math.atan,
        zf = Math.atan2,
        Uf = Math.cos,
        Hf = Math.ceil,
        Vf = Math.exp,
        qf = (Math.floor, Math.log),
        Zf = Math.pow,
        Yf = Math.sin,
        Xf =
          Math.sign ||
          function (e) {
            return e > 0 ? 1 : e < 0 ? -1 : 0;
          },
        $f = Math.sqrt,
        Kf = Math.tan;
      function Qf(e) {
        return e > 1 ? 0 : e < -1 ? Nf : Math.acos(e);
      }
      function Jf(e) {
        return e > 1 ? Ff : e < -1 ? -Ff : Math.asin(e);
      }
      function ed(e) {
        return (e = Yf(e / 2)) * e;
      }
      function td() {}
      function nd(e, t) {
        e && id.hasOwnProperty(e.type) && id[e.type](e, t);
      }
      var rd = {
          Feature: function (e, t) {
            nd(e.geometry, t);
          },
          FeatureCollection: function (e, t) {
            for (var n = e.features, r = -1, i = n.length; ++r < i; )
              nd(n[r].geometry, t);
          },
        },
        id = {
          Sphere: function (e, t) {
            t.sphere();
          },
          Point: function (e, t) {
            (e = e.coordinates), t.point(e[0], e[1], e[2]);
          },
          MultiPoint: function (e, t) {
            for (var n = e.coordinates, r = -1, i = n.length; ++r < i; )
              (e = n[r]), t.point(e[0], e[1], e[2]);
          },
          LineString: function (e, t) {
            od(e.coordinates, t, 0);
          },
          MultiLineString: function (e, t) {
            for (var n = e.coordinates, r = -1, i = n.length; ++r < i; )
              od(n[r], t, 0);
          },
          Polygon: function (e, t) {
            ad(e.coordinates, t);
          },
          MultiPolygon: function (e, t) {
            for (var n = e.coordinates, r = -1, i = n.length; ++r < i; )
              ad(n[r], t);
          },
          GeometryCollection: function (e, t) {
            for (var n = e.geometries, r = -1, i = n.length; ++r < i; )
              nd(n[r], t);
          },
        };
      function od(e, t, n) {
        var r,
          i = -1,
          o = e.length - n;
        for (t.lineStart(); ++i < o; ) (r = e[i]), t.point(r[0], r[1], r[2]);
        t.lineEnd();
      }
      function ad(e, t) {
        var n = -1,
          r = e.length;
        for (t.polygonStart(); ++n < r; ) od(e[n], t, 1);
        t.polygonEnd();
      }
      function sd(e, t) {
        e && rd.hasOwnProperty(e.type) ? rd[e.type](e, t) : nd(e, t);
      }
      var ud,
        cd,
        ld,
        fd,
        dd,
        hd = Pf(),
        pd = Pf(),
        gd = {
          point: td,
          lineStart: td,
          lineEnd: td,
          polygonStart: function () {
            hd.reset(), (gd.lineStart = md), (gd.lineEnd = yd);
          },
          polygonEnd: function () {
            var e = +hd;
            pd.add(e < 0 ? Rf + e : e),
              (this.lineStart = this.lineEnd = this.point = td);
          },
          sphere: function () {
            pd.add(Rf);
          },
        };
      function md() {
        gd.point = bd;
      }
      function yd() {
        vd(ud, cd);
      }
      function bd(e, t) {
        (gd.point = vd),
          (ud = e),
          (cd = t),
          (ld = e *= Bf),
          (fd = Uf((t = (t *= Bf) / 2 + Df))),
          (dd = Yf(t));
      }
      function vd(e, t) {
        var n = (e *= Bf) - ld,
          r = n >= 0 ? 1 : -1,
          i = r * n,
          o = Uf((t = (t *= Bf) / 2 + Df)),
          a = Yf(t),
          s = dd * a,
          u = fd * o + s * Uf(i),
          c = s * r * Yf(i);
        hd.add(zf(c, u)), (ld = e), (fd = o), (dd = a);
      }
      function _d(e) {
        return pd.reset(), sd(e, gd), 2 * pd;
      }
      function xd(e) {
        return [zf(e[1], e[0]), Jf(e[2])];
      }
      function Td(e) {
        var t = e[0],
          n = e[1],
          r = Uf(n);
        return [r * Uf(t), r * Yf(t), Yf(n)];
      }
      function Md(e, t) {
        return e[0] * t[0] + e[1] * t[1] + e[2] * t[2];
      }
      function wd(e, t) {
        return [
          e[1] * t[2] - e[2] * t[1],
          e[2] * t[0] - e[0] * t[2],
          e[0] * t[1] - e[1] * t[0],
        ];
      }
      function Ad(e, t) {
        (e[0] += t[0]), (e[1] += t[1]), (e[2] += t[2]);
      }
      function kd(e, t) {
        return [e[0] * t, e[1] * t, e[2] * t];
      }
      function Ed(e) {
        var t = $f(e[0] * e[0] + e[1] * e[1] + e[2] * e[2]);
        (e[0] /= t), (e[1] /= t), (e[2] /= t);
      }
      var Pd,
        Cd,
        Ld,
        Id,
        Sd,
        Od,
        Nd,
        Fd,
        Dd,
        Rd,
        Gd,
        Bd,
        Wd,
        jd,
        zd,
        Ud,
        Hd,
        Vd,
        qd,
        Zd,
        Yd,
        Xd,
        $d,
        Kd,
        Qd,
        Jd,
        eh = Pf(),
        th = {
          point: nh,
          lineStart: ih,
          lineEnd: oh,
          polygonStart: function () {
            (th.point = ah),
              (th.lineStart = sh),
              (th.lineEnd = uh),
              eh.reset(),
              gd.polygonStart();
          },
          polygonEnd: function () {
            gd.polygonEnd(),
              (th.point = nh),
              (th.lineStart = ih),
              (th.lineEnd = oh),
              hd < 0
                ? ((Pd = -(Ld = 180)), (Cd = -(Id = 90)))
                : eh > Sf
                ? (Id = 90)
                : eh < -1e-6 && (Cd = -90),
              (Rd[0] = Pd),
              (Rd[1] = Ld);
          },
          sphere: function () {
            (Pd = -(Ld = 180)), (Cd = -(Id = 90));
          },
        };
      function nh(e, t) {
        Dd.push((Rd = [(Pd = e), (Ld = e)])),
          t < Cd && (Cd = t),
          t > Id && (Id = t);
      }
      function rh(e, t) {
        var n = Td([e * Bf, t * Bf]);
        if (Fd) {
          var r = wd(Fd, n),
            i = wd([r[1], -r[0], 0], r);
          Ed(i), (i = xd(i));
          var o,
            a = e - Sd,
            s = a > 0 ? 1 : -1,
            u = i[0] * Gf * s,
            c = Wf(a) > 180;
          c ^ (s * Sd < u && u < s * e)
            ? (o = i[1] * Gf) > Id && (Id = o)
            : c ^ (s * Sd < (u = ((u + 360) % 360) - 180) && u < s * e)
            ? (o = -i[1] * Gf) < Cd && (Cd = o)
            : (t < Cd && (Cd = t), t > Id && (Id = t)),
            c
              ? e < Sd
                ? ch(Pd, e) > ch(Pd, Ld) && (Ld = e)
                : ch(e, Ld) > ch(Pd, Ld) && (Pd = e)
              : Ld >= Pd
              ? (e < Pd && (Pd = e), e > Ld && (Ld = e))
              : e > Sd
              ? ch(Pd, e) > ch(Pd, Ld) && (Ld = e)
              : ch(e, Ld) > ch(Pd, Ld) && (Pd = e);
        } else Dd.push((Rd = [(Pd = e), (Ld = e)]));
        t < Cd && (Cd = t), t > Id && (Id = t), (Fd = n), (Sd = e);
      }
      function ih() {
        th.point = rh;
      }
      function oh() {
        (Rd[0] = Pd), (Rd[1] = Ld), (th.point = nh), (Fd = null);
      }
      function ah(e, t) {
        if (Fd) {
          var n = e - Sd;
          eh.add(Wf(n) > 180 ? n + (n > 0 ? 360 : -360) : n);
        } else (Od = e), (Nd = t);
        gd.point(e, t), rh(e, t);
      }
      function sh() {
        gd.lineStart();
      }
      function uh() {
        ah(Od, Nd),
          gd.lineEnd(),
          Wf(eh) > Sf && (Pd = -(Ld = 180)),
          (Rd[0] = Pd),
          (Rd[1] = Ld),
          (Fd = null);
      }
      function ch(e, t) {
        return (t -= e) < 0 ? t + 360 : t;
      }
      function lh(e, t) {
        return e[0] - t[0];
      }
      function fh(e, t) {
        return e[0] <= e[1] ? e[0] <= t && t <= e[1] : t < e[0] || e[1] < t;
      }
      function dh(e) {
        var t, n, r, i, o, a, s;
        if (
          ((Id = Ld = -(Pd = Cd = 1 / 0)),
          (Dd = []),
          sd(e, th),
          (n = Dd.length))
        ) {
          for (Dd.sort(lh), t = 1, o = [(r = Dd[0])]; t < n; ++t)
            fh(r, (i = Dd[t])[0]) || fh(r, i[1])
              ? (ch(r[0], i[1]) > ch(r[0], r[1]) && (r[1] = i[1]),
                ch(i[0], r[1]) > ch(r[0], r[1]) && (r[0] = i[0]))
              : o.push((r = i));
          for (a = -1 / 0, t = 0, r = o[(n = o.length - 1)]; t <= n; r = i, ++t)
            (i = o[t]),
              (s = ch(r[1], i[0])) > a && ((a = s), (Pd = i[0]), (Ld = r[1]));
        }
        return (
          (Dd = Rd = null),
          Pd === 1 / 0 || Cd === 1 / 0
            ? [
                [NaN, NaN],
                [NaN, NaN],
              ]
            : [
                [Pd, Cd],
                [Ld, Id],
              ]
        );
      }
      var hh = {
        sphere: td,
        point: ph,
        lineStart: mh,
        lineEnd: vh,
        polygonStart: function () {
          (hh.lineStart = _h), (hh.lineEnd = xh);
        },
        polygonEnd: function () {
          (hh.lineStart = mh), (hh.lineEnd = vh);
        },
      };
      function ph(e, t) {
        e *= Bf;
        var n = Uf((t *= Bf));
        gh(n * Uf(e), n * Yf(e), Yf(t));
      }
      function gh(e, t, n) {
        ++Gd,
          (Wd += (e - Wd) / Gd),
          (jd += (t - jd) / Gd),
          (zd += (n - zd) / Gd);
      }
      function mh() {
        hh.point = yh;
      }
      function yh(e, t) {
        e *= Bf;
        var n = Uf((t *= Bf));
        (Kd = n * Uf(e)),
          (Qd = n * Yf(e)),
          (Jd = Yf(t)),
          (hh.point = bh),
          gh(Kd, Qd, Jd);
      }
      function bh(e, t) {
        e *= Bf;
        var n = Uf((t *= Bf)),
          r = n * Uf(e),
          i = n * Yf(e),
          o = Yf(t),
          a = zf(
            $f(
              (a = Qd * o - Jd * i) * a +
                (a = Jd * r - Kd * o) * a +
                (a = Kd * i - Qd * r) * a
            ),
            Kd * r + Qd * i + Jd * o
          );
        (Bd += a),
          (Ud += a * (Kd + (Kd = r))),
          (Hd += a * (Qd + (Qd = i))),
          (Vd += a * (Jd + (Jd = o))),
          gh(Kd, Qd, Jd);
      }
      function vh() {
        hh.point = ph;
      }
      function _h() {
        hh.point = Th;
      }
      function xh() {
        Mh(Xd, $d), (hh.point = ph);
      }
      function Th(e, t) {
        (Xd = e), ($d = t), (e *= Bf), (t *= Bf), (hh.point = Mh);
        var n = Uf(t);
        (Kd = n * Uf(e)), (Qd = n * Yf(e)), (Jd = Yf(t)), gh(Kd, Qd, Jd);
      }
      function Mh(e, t) {
        e *= Bf;
        var n = Uf((t *= Bf)),
          r = n * Uf(e),
          i = n * Yf(e),
          o = Yf(t),
          a = Qd * o - Jd * i,
          s = Jd * r - Kd * o,
          u = Kd * i - Qd * r,
          c = $f(a * a + s * s + u * u),
          l = Jf(c),
          f = c && -l / c;
        (qd += f * a),
          (Zd += f * s),
          (Yd += f * u),
          (Bd += l),
          (Ud += l * (Kd + (Kd = r))),
          (Hd += l * (Qd + (Qd = i))),
          (Vd += l * (Jd + (Jd = o))),
          gh(Kd, Qd, Jd);
      }
      function wh(e) {
        (Gd = Bd = Wd = jd = zd = Ud = Hd = Vd = qd = Zd = Yd = 0), sd(e, hh);
        var t = qd,
          n = Zd,
          r = Yd,
          i = t * t + n * n + r * r;
        return i < Of &&
          ((t = Ud),
          (n = Hd),
          (r = Vd),
          Bd < Sf && ((t = Wd), (n = jd), (r = zd)),
          (i = t * t + n * n + r * r) < Of)
          ? [NaN, NaN]
          : [zf(n, t) * Gf, Jf(r / $f(i)) * Gf];
      }
      function Ah(e) {
        return function () {
          return e;
        };
      }
      function kh(e, t) {
        function n(n, r) {
          return (n = e(n, r)), t(n[0], n[1]);
        }
        return (
          e.invert &&
            t.invert &&
            (n.invert = function (n, r) {
              return (n = t.invert(n, r)) && e.invert(n[0], n[1]);
            }),
          n
        );
      }
      function Eh(e, t) {
        return [Wf(e) > Nf ? e + Math.round(-e / Rf) * Rf : e, t];
      }
      function Ph(e, t, n) {
        return (e %= Rf)
          ? t || n
            ? kh(Lh(e), Ih(t, n))
            : Lh(e)
          : t || n
          ? Ih(t, n)
          : Eh;
      }
      function Ch(e) {
        return function (t, n) {
          return [(t += e) > Nf ? t - Rf : t < -Nf ? t + Rf : t, n];
        };
      }
      function Lh(e) {
        var t = Ch(e);
        return (t.invert = Ch(-e)), t;
      }
      function Ih(e, t) {
        var n = Uf(e),
          r = Yf(e),
          i = Uf(t),
          o = Yf(t);
        function a(e, t) {
          var a = Uf(t),
            s = Uf(e) * a,
            u = Yf(e) * a,
            c = Yf(t),
            l = c * n + s * r;
          return [zf(u * i - l * o, s * n - c * r), Jf(l * i + u * o)];
        }
        return (
          (a.invert = function (e, t) {
            var a = Uf(t),
              s = Uf(e) * a,
              u = Yf(e) * a,
              c = Yf(t),
              l = c * i - u * o;
            return [zf(u * i + c * o, s * n + l * r), Jf(l * n - s * r)];
          }),
          a
        );
      }
      function Sh(e) {
        function t(t) {
          return ((t = e(t[0] * Bf, t[1] * Bf))[0] *= Gf), (t[1] *= Gf), t;
        }
        return (
          (e = Ph(e[0] * Bf, e[1] * Bf, e.length > 2 ? e[2] * Bf : 0)),
          (t.invert = function (t) {
            return (
              ((t = e.invert(t[0] * Bf, t[1] * Bf))[0] *= Gf), (t[1] *= Gf), t
            );
          }),
          t
        );
      }
      function Oh(e, t, n, r, i, o) {
        if (n) {
          var a = Uf(t),
            s = Yf(t),
            u = r * n;
          null == i
            ? ((i = t + r * Rf), (o = t - u / 2))
            : ((i = Nh(a, i)),
              (o = Nh(a, o)),
              (r > 0 ? i < o : i > o) && (i += r * Rf));
          for (var c, l = i; r > 0 ? l > o : l < o; l -= u)
            (c = xd([a, -s * Uf(l), -s * Yf(l)])), e.point(c[0], c[1]);
        }
      }
      function Nh(e, t) {
        ((t = Td(t))[0] -= e), Ed(t);
        var n = Qf(-t[1]);
        return ((-t[2] < 0 ? -n : n) + Rf - Sf) % Rf;
      }
      function Fh() {
        var e,
          t,
          n = Ah([0, 0]),
          r = Ah(90),
          i = Ah(6),
          o = {
            point: function (n, r) {
              e.push((n = t(n, r))), (n[0] *= Gf), (n[1] *= Gf);
            },
          };
        function a() {
          var a = n.apply(this, arguments),
            s = r.apply(this, arguments) * Bf,
            u = i.apply(this, arguments) * Bf;
          return (
            (e = []),
            (t = Ph(-a[0] * Bf, -a[1] * Bf, 0).invert),
            Oh(o, s, u, 1),
            (a = { type: "Polygon", coordinates: [e] }),
            (e = t = null),
            a
          );
        }
        return (
          (a.center = function (e) {
            return arguments.length
              ? ((n = "function" === typeof e ? e : Ah([+e[0], +e[1]])), a)
              : n;
          }),
          (a.radius = function (e) {
            return arguments.length
              ? ((r = "function" === typeof e ? e : Ah(+e)), a)
              : r;
          }),
          (a.precision = function (e) {
            return arguments.length
              ? ((i = "function" === typeof e ? e : Ah(+e)), a)
              : i;
          }),
          a
        );
      }
      function Dh() {
        var e,
          t = [];
        return {
          point: function (t, n, r) {
            e.push([t, n, r]);
          },
          lineStart: function () {
            t.push((e = []));
          },
          lineEnd: td,
          rejoin: function () {
            t.length > 1 && t.push(t.pop().concat(t.shift()));
          },
          result: function () {
            var n = t;
            return (t = []), (e = null), n;
          },
        };
      }
      function Rh(e, t) {
        return Wf(e[0] - t[0]) < Sf && Wf(e[1] - t[1]) < Sf;
      }
      function Gh(e, t, n, r) {
        (this.x = e),
          (this.z = t),
          (this.o = n),
          (this.e = r),
          (this.v = !1),
          (this.n = this.p = null);
      }
      function Bh(e, t, n, r, i) {
        var o,
          a,
          s = [],
          u = [];
        if (
          (e.forEach(function (e) {
            if (!((t = e.length - 1) <= 0)) {
              var t,
                n,
                r = e[0],
                a = e[t];
              if (Rh(r, a)) {
                if (!r[2] && !a[2]) {
                  for (i.lineStart(), o = 0; o < t; ++o)
                    i.point((r = e[o])[0], r[1]);
                  return void i.lineEnd();
                }
                a[0] += 2e-6;
              }
              s.push((n = new Gh(r, e, null, !0))),
                u.push((n.o = new Gh(r, null, n, !1))),
                s.push((n = new Gh(a, e, null, !1))),
                u.push((n.o = new Gh(a, null, n, !0)));
            }
          }),
          s.length)
        ) {
          for (u.sort(t), Wh(s), Wh(u), o = 0, a = u.length; o < a; ++o)
            u[o].e = n = !n;
          for (var c, l, f = s[0]; ; ) {
            for (var d = f, h = !0; d.v; ) if ((d = d.n) === f) return;
            (c = d.z), i.lineStart();
            do {
              if (((d.v = d.o.v = !0), d.e)) {
                if (h)
                  for (o = 0, a = c.length; o < a; ++o)
                    i.point((l = c[o])[0], l[1]);
                else r(d.x, d.n.x, 1, i);
                d = d.n;
              } else {
                if (h)
                  for (c = d.p.z, o = c.length - 1; o >= 0; --o)
                    i.point((l = c[o])[0], l[1]);
                else r(d.x, d.p.x, -1, i);
                d = d.p;
              }
              (c = (d = d.o).z), (h = !h);
            } while (!d.v);
            i.lineEnd();
          }
        }
      }
      function Wh(e) {
        if ((t = e.length)) {
          for (var t, n, r = 0, i = e[0]; ++r < t; )
            (i.n = n = e[r]), (n.p = i), (i = n);
          (i.n = n = e[0]), (n.p = i);
        }
      }
      Eh.invert = Eh;
      var jh = Pf();
      function zh(e) {
        return Wf(e[0]) <= Nf ? e[0] : Xf(e[0]) * (((Wf(e[0]) + Nf) % Rf) - Nf);
      }
      function Uh(e, t) {
        var n = zh(t),
          r = t[1],
          i = Yf(r),
          o = [Yf(n), -Uf(n), 0],
          a = 0,
          s = 0;
        jh.reset(), 1 === i ? (r = Ff + Sf) : -1 === i && (r = -Ff - Sf);
        for (var u = 0, c = e.length; u < c; ++u)
          if ((f = (l = e[u]).length))
            for (
              var l,
                f,
                d = l[f - 1],
                h = zh(d),
                p = d[1] / 2 + Df,
                g = Yf(p),
                m = Uf(p),
                y = 0;
              y < f;
              ++y, h = v, g = x, m = T, d = b
            ) {
              var b = l[y],
                v = zh(b),
                _ = b[1] / 2 + Df,
                x = Yf(_),
                T = Uf(_),
                M = v - h,
                w = M >= 0 ? 1 : -1,
                A = w * M,
                k = A > Nf,
                E = g * x;
              if (
                (jh.add(zf(E * w * Yf(A), m * T + E * Uf(A))),
                (a += k ? M + w * Rf : M),
                k ^ (h >= n) ^ (v >= n))
              ) {
                var P = wd(Td(d), Td(b));
                Ed(P);
                var C = wd(o, P);
                Ed(C);
                var L = (k ^ (M >= 0) ? -1 : 1) * Jf(C[2]);
                (r > L || (r === L && (P[0] || P[1]))) &&
                  (s += k ^ (M >= 0) ? 1 : -1);
              }
            }
        return (a < -1e-6 || (a < Sf && jh < -1e-6)) ^ (1 & s);
      }
      function Hh(e, t, n, r) {
        return function (i) {
          var o,
            a,
            s,
            u = t(i),
            c = Dh(),
            l = t(c),
            f = !1,
            d = {
              point: h,
              lineStart: g,
              lineEnd: m,
              polygonStart: function () {
                (d.point = y),
                  (d.lineStart = b),
                  (d.lineEnd = v),
                  (a = []),
                  (o = []);
              },
              polygonEnd: function () {
                (d.point = h), (d.lineStart = g), (d.lineEnd = m), (a = G(a));
                var e = Uh(o, r);
                a.length
                  ? (f || (i.polygonStart(), (f = !0)), Bh(a, qh, e, n, i))
                  : e &&
                    (f || (i.polygonStart(), (f = !0)),
                    i.lineStart(),
                    n(null, null, 1, i),
                    i.lineEnd()),
                  f && (i.polygonEnd(), (f = !1)),
                  (a = o = null);
              },
              sphere: function () {
                i.polygonStart(),
                  i.lineStart(),
                  n(null, null, 1, i),
                  i.lineEnd(),
                  i.polygonEnd();
              },
            };
          function h(t, n) {
            e(t, n) && i.point(t, n);
          }
          function p(e, t) {
            u.point(e, t);
          }
          function g() {
            (d.point = p), u.lineStart();
          }
          function m() {
            (d.point = h), u.lineEnd();
          }
          function y(e, t) {
            s.push([e, t]), l.point(e, t);
          }
          function b() {
            l.lineStart(), (s = []);
          }
          function v() {
            y(s[0][0], s[0][1]), l.lineEnd();
            var e,
              t,
              n,
              r,
              u = l.clean(),
              d = c.result(),
              h = d.length;
            if ((s.pop(), o.push(s), (s = null), h))
              if (1 & u) {
                if ((t = (n = d[0]).length - 1) > 0) {
                  for (
                    f || (i.polygonStart(), (f = !0)), i.lineStart(), e = 0;
                    e < t;
                    ++e
                  )
                    i.point((r = n[e])[0], r[1]);
                  i.lineEnd();
                }
              } else
                h > 1 && 2 & u && d.push(d.pop().concat(d.shift())),
                  a.push(d.filter(Vh));
          }
          return d;
        };
      }
      function Vh(e) {
        return e.length > 1;
      }
      function qh(e, t) {
        return (
          ((e = e.x)[0] < 0 ? e[1] - Ff - Sf : Ff - e[1]) -
          ((t = t.x)[0] < 0 ? t[1] - Ff - Sf : Ff - t[1])
        );
      }
      var Zh = Hh(
        function () {
          return !0;
        },
        function (e) {
          var t,
            n = NaN,
            r = NaN,
            i = NaN;
          return {
            lineStart: function () {
              e.lineStart(), (t = 1);
            },
            point: function (o, a) {
              var s = o > 0 ? Nf : -Nf,
                u = Wf(o - n);
              Wf(u - Nf) < Sf
                ? (e.point(n, (r = (r + a) / 2 > 0 ? Ff : -Ff)),
                  e.point(i, r),
                  e.lineEnd(),
                  e.lineStart(),
                  e.point(s, r),
                  e.point(o, r),
                  (t = 0))
                : i !== s &&
                  u >= Nf &&
                  (Wf(n - i) < Sf && (n -= i * Sf),
                  Wf(o - s) < Sf && (o -= s * Sf),
                  (r = (function (e, t, n, r) {
                    var i,
                      o,
                      a = Yf(e - n);
                    return Wf(a) > Sf
                      ? jf(
                          (Yf(t) * (o = Uf(r)) * Yf(n) -
                            Yf(r) * (i = Uf(t)) * Yf(e)) /
                            (i * o * a)
                        )
                      : (t + r) / 2;
                  })(n, r, o, a)),
                  e.point(i, r),
                  e.lineEnd(),
                  e.lineStart(),
                  e.point(s, r),
                  (t = 0)),
                e.point((n = o), (r = a)),
                (i = s);
            },
            lineEnd: function () {
              e.lineEnd(), (n = r = NaN);
            },
            clean: function () {
              return 2 - t;
            },
          };
        },
        function (e, t, n, r) {
          var i;
          if (null == e)
            (i = n * Ff),
              r.point(-Nf, i),
              r.point(0, i),
              r.point(Nf, i),
              r.point(Nf, 0),
              r.point(Nf, -i),
              r.point(0, -i),
              r.point(-Nf, -i),
              r.point(-Nf, 0),
              r.point(-Nf, i);
          else if (Wf(e[0] - t[0]) > Sf) {
            var o = e[0] < t[0] ? Nf : -Nf;
            (i = (n * o) / 2), r.point(-o, i), r.point(0, i), r.point(o, i);
          } else r.point(t[0], t[1]);
        },
        [-Nf, -Ff]
      );
      function Yh(e) {
        var t = Uf(e),
          n = 6 * Bf,
          r = t > 0,
          i = Wf(t) > Sf;
        function o(e, n) {
          return Uf(e) * Uf(n) > t;
        }
        function a(e, n, r) {
          var i = [1, 0, 0],
            o = wd(Td(e), Td(n)),
            a = Md(o, o),
            s = o[0],
            u = a - s * s;
          if (!u) return !r && e;
          var c = (t * a) / u,
            l = (-t * s) / u,
            f = wd(i, o),
            d = kd(i, c);
          Ad(d, kd(o, l));
          var h = f,
            p = Md(d, h),
            g = Md(h, h),
            m = p * p - g * (Md(d, d) - 1);
          if (!(m < 0)) {
            var y = $f(m),
              b = kd(h, (-p - y) / g);
            if ((Ad(b, d), (b = xd(b)), !r)) return b;
            var v,
              _ = e[0],
              x = n[0],
              T = e[1],
              M = n[1];
            x < _ && ((v = _), (_ = x), (x = v));
            var w = x - _,
              A = Wf(w - Nf) < Sf;
            if (
              (!A && M < T && ((v = T), (T = M), (M = v)),
              A || w < Sf
                ? A
                  ? (T + M > 0) ^ (b[1] < (Wf(b[0] - _) < Sf ? T : M))
                  : T <= b[1] && b[1] <= M
                : (w > Nf) ^ (_ <= b[0] && b[0] <= x))
            ) {
              var k = kd(h, (-p + y) / g);
              return Ad(k, d), [b, xd(k)];
            }
          }
        }
        function s(t, n) {
          var i = r ? e : Nf - e,
            o = 0;
          return (
            t < -i ? (o |= 1) : t > i && (o |= 2),
            n < -i ? (o |= 4) : n > i && (o |= 8),
            o
          );
        }
        return Hh(
          o,
          function (e) {
            var t, n, u, c, l;
            return {
              lineStart: function () {
                (c = u = !1), (l = 1);
              },
              point: function (f, d) {
                var h,
                  p = [f, d],
                  g = o(f, d),
                  m = r
                    ? g
                      ? 0
                      : s(f, d)
                    : g
                    ? s(f + (f < 0 ? Nf : -Nf), d)
                    : 0;
                if (
                  (!t && (c = u = g) && e.lineStart(),
                  g !== u &&
                    (!(h = a(t, p)) || Rh(t, h) || Rh(p, h)) &&
                    (p[2] = 1),
                  g !== u)
                )
                  (l = 0),
                    g
                      ? (e.lineStart(), (h = a(p, t)), e.point(h[0], h[1]))
                      : ((h = a(t, p)), e.point(h[0], h[1], 2), e.lineEnd()),
                    (t = h);
                else if (i && t && r ^ g) {
                  var y;
                  m & n ||
                    !(y = a(p, t, !0)) ||
                    ((l = 0),
                    r
                      ? (e.lineStart(),
                        e.point(y[0][0], y[0][1]),
                        e.point(y[1][0], y[1][1]),
                        e.lineEnd())
                      : (e.point(y[1][0], y[1][1]),
                        e.lineEnd(),
                        e.lineStart(),
                        e.point(y[0][0], y[0][1], 3)));
                }
                !g || (t && Rh(t, p)) || e.point(p[0], p[1]),
                  (t = p),
                  (u = g),
                  (n = m);
              },
              lineEnd: function () {
                u && e.lineEnd(), (t = null);
              },
              clean: function () {
                return l | ((c && u) << 1);
              },
            };
          },
          function (t, r, i, o) {
            Oh(o, e, n, i, t, r);
          },
          r ? [0, -e] : [-Nf, e - Nf]
        );
      }
      var Xh = 1e9,
        $h = -Xh;
      function Kh(e, t, n, r) {
        function i(i, o) {
          return e <= i && i <= n && t <= o && o <= r;
        }
        function o(i, o, s, c) {
          var l = 0,
            f = 0;
          if (
            null == i ||
            (l = a(i, s)) !== (f = a(o, s)) ||
            (u(i, o) < 0) ^ (s > 0)
          )
            do {
              c.point(0 === l || 3 === l ? e : n, l > 1 ? r : t);
            } while ((l = (l + s + 4) % 4) !== f);
          else c.point(o[0], o[1]);
        }
        function a(r, i) {
          return Wf(r[0] - e) < Sf
            ? i > 0
              ? 0
              : 3
            : Wf(r[0] - n) < Sf
            ? i > 0
              ? 2
              : 1
            : Wf(r[1] - t) < Sf
            ? i > 0
              ? 1
              : 0
            : i > 0
            ? 3
            : 2;
        }
        function s(e, t) {
          return u(e.x, t.x);
        }
        function u(e, t) {
          var n = a(e, 1),
            r = a(t, 1);
          return n !== r
            ? n - r
            : 0 === n
            ? t[1] - e[1]
            : 1 === n
            ? e[0] - t[0]
            : 2 === n
            ? e[1] - t[1]
            : t[0] - e[0];
        }
        return function (a) {
          var u,
            c,
            l,
            f,
            d,
            h,
            p,
            g,
            m,
            y,
            b,
            v = a,
            _ = Dh(),
            x = {
              point: T,
              lineStart: function () {
                (x.point = M), c && c.push((l = []));
                (y = !0), (m = !1), (p = g = NaN);
              },
              lineEnd: function () {
                u && (M(f, d), h && m && _.rejoin(), u.push(_.result()));
                (x.point = T), m && v.lineEnd();
              },
              polygonStart: function () {
                (v = _), (u = []), (c = []), (b = !0);
              },
              polygonEnd: function () {
                var t = (function () {
                    for (var t = 0, n = 0, i = c.length; n < i; ++n)
                      for (
                        var o,
                          a,
                          s = c[n],
                          u = 1,
                          l = s.length,
                          f = s[0],
                          d = f[0],
                          h = f[1];
                        u < l;
                        ++u
                      )
                        (o = d),
                          (a = h),
                          (d = (f = s[u])[0]),
                          (h = f[1]),
                          a <= r
                            ? h > r &&
                              (d - o) * (r - a) > (h - a) * (e - o) &&
                              ++t
                            : h <= r &&
                              (d - o) * (r - a) < (h - a) * (e - o) &&
                              --t;
                    return t;
                  })(),
                  n = b && t,
                  i = (u = G(u)).length;
                (n || i) &&
                  (a.polygonStart(),
                  n && (a.lineStart(), o(null, null, 1, a), a.lineEnd()),
                  i && Bh(u, s, t, o, a),
                  a.polygonEnd());
                (v = a), (u = c = l = null);
              },
            };
          function T(e, t) {
            i(e, t) && v.point(e, t);
          }
          function M(o, a) {
            var s = i(o, a);
            if ((c && l.push([o, a]), y))
              (f = o),
                (d = a),
                (h = s),
                (y = !1),
                s && (v.lineStart(), v.point(o, a));
            else if (s && m) v.point(o, a);
            else {
              var u = [
                  (p = Math.max($h, Math.min(Xh, p))),
                  (g = Math.max($h, Math.min(Xh, g))),
                ],
                _ = [
                  (o = Math.max($h, Math.min(Xh, o))),
                  (a = Math.max($h, Math.min(Xh, a))),
                ];
              !(function (e, t, n, r, i, o) {
                var a,
                  s = e[0],
                  u = e[1],
                  c = 0,
                  l = 1,
                  f = t[0] - s,
                  d = t[1] - u;
                if (((a = n - s), f || !(a > 0))) {
                  if (((a /= f), f < 0)) {
                    if (a < c) return;
                    a < l && (l = a);
                  } else if (f > 0) {
                    if (a > l) return;
                    a > c && (c = a);
                  }
                  if (((a = i - s), f || !(a < 0))) {
                    if (((a /= f), f < 0)) {
                      if (a > l) return;
                      a > c && (c = a);
                    } else if (f > 0) {
                      if (a < c) return;
                      a < l && (l = a);
                    }
                    if (((a = r - u), d || !(a > 0))) {
                      if (((a /= d), d < 0)) {
                        if (a < c) return;
                        a < l && (l = a);
                      } else if (d > 0) {
                        if (a > l) return;
                        a > c && (c = a);
                      }
                      if (((a = o - u), d || !(a < 0))) {
                        if (((a /= d), d < 0)) {
                          if (a > l) return;
                          a > c && (c = a);
                        } else if (d > 0) {
                          if (a < c) return;
                          a < l && (l = a);
                        }
                        return (
                          c > 0 && ((e[0] = s + c * f), (e[1] = u + c * d)),
                          l < 1 && ((t[0] = s + l * f), (t[1] = u + l * d)),
                          !0
                        );
                      }
                    }
                  }
                }
              })(u, _, e, t, n, r)
                ? s && (v.lineStart(), v.point(o, a), (b = !1))
                : (m || (v.lineStart(), v.point(u[0], u[1])),
                  v.point(_[0], _[1]),
                  s || v.lineEnd(),
                  (b = !1));
            }
            (p = o), (g = a), (m = s);
          }
          return x;
        };
      }
      function Qh() {
        var e,
          t,
          n,
          r = 0,
          i = 0,
          o = 960,
          a = 500;
        return (n = {
          stream: function (n) {
            return e && t === n ? e : (e = Kh(r, i, o, a)((t = n)));
          },
          extent: function (s) {
            return arguments.length
              ? ((r = +s[0][0]),
                (i = +s[0][1]),
                (o = +s[1][0]),
                (a = +s[1][1]),
                (e = t = null),
                n)
              : [
                  [r, i],
                  [o, a],
                ];
          },
        });
      }
      var Jh,
        ep,
        tp,
        np = Pf(),
        rp = {
          sphere: td,
          point: td,
          lineStart: function () {
            (rp.point = op), (rp.lineEnd = ip);
          },
          lineEnd: td,
          polygonStart: td,
          polygonEnd: td,
        };
      function ip() {
        rp.point = rp.lineEnd = td;
      }
      function op(e, t) {
        (Jh = e *= Bf), (ep = Yf((t *= Bf))), (tp = Uf(t)), (rp.point = ap);
      }
      function ap(e, t) {
        e *= Bf;
        var n = Yf((t *= Bf)),
          r = Uf(t),
          i = Wf(e - Jh),
          o = Uf(i),
          a = r * Yf(i),
          s = tp * n - ep * r * o,
          u = ep * n + tp * r * o;
        np.add(zf($f(a * a + s * s), u)), (Jh = e), (ep = n), (tp = r);
      }
      function sp(e) {
        return np.reset(), sd(e, rp), +np;
      }
      var up = [null, null],
        cp = { type: "LineString", coordinates: up };
      function lp(e, t) {
        return (up[0] = e), (up[1] = t), sp(cp);
      }
      var fp = {
          Feature: function (e, t) {
            return hp(e.geometry, t);
          },
          FeatureCollection: function (e, t) {
            for (var n = e.features, r = -1, i = n.length; ++r < i; )
              if (hp(n[r].geometry, t)) return !0;
            return !1;
          },
        },
        dp = {
          Sphere: function () {
            return !0;
          },
          Point: function (e, t) {
            return pp(e.coordinates, t);
          },
          MultiPoint: function (e, t) {
            for (var n = e.coordinates, r = -1, i = n.length; ++r < i; )
              if (pp(n[r], t)) return !0;
            return !1;
          },
          LineString: function (e, t) {
            return gp(e.coordinates, t);
          },
          MultiLineString: function (e, t) {
            for (var n = e.coordinates, r = -1, i = n.length; ++r < i; )
              if (gp(n[r], t)) return !0;
            return !1;
          },
          Polygon: function (e, t) {
            return mp(e.coordinates, t);
          },
          MultiPolygon: function (e, t) {
            for (var n = e.coordinates, r = -1, i = n.length; ++r < i; )
              if (mp(n[r], t)) return !0;
            return !1;
          },
          GeometryCollection: function (e, t) {
            for (var n = e.geometries, r = -1, i = n.length; ++r < i; )
              if (hp(n[r], t)) return !0;
            return !1;
          },
        };
      function hp(e, t) {
        return !(!e || !dp.hasOwnProperty(e.type)) && dp[e.type](e, t);
      }
      function pp(e, t) {
        return 0 === lp(e, t);
      }
      function gp(e, t) {
        for (var n, r, i, o = 0, a = e.length; o < a; o++) {
          if (0 === (r = lp(e[o], t))) return !0;
          if (
            o > 0 &&
            (i = lp(e[o], e[o - 1])) > 0 &&
            n <= i &&
            r <= i &&
            (n + r - i) * (1 - Math.pow((n - r) / i, 2)) < Of * i
          )
            return !0;
          n = r;
        }
        return !1;
      }
      function mp(e, t) {
        return !!Uh(e.map(yp), bp(t));
      }
      function yp(e) {
        return (e = e.map(bp)).pop(), e;
      }
      function bp(e) {
        return [e[0] * Bf, e[1] * Bf];
      }
      function vp(e, t) {
        return (e && fp.hasOwnProperty(e.type) ? fp[e.type] : hp)(e, t);
      }
      function _p(e, t, n) {
        var r = M(e, t - Sf, n).concat(t);
        return function (e) {
          return r.map(function (t) {
            return [e, t];
          });
        };
      }
      function xp(e, t, n) {
        var r = M(e, t - Sf, n).concat(t);
        return function (e) {
          return r.map(function (t) {
            return [t, e];
          });
        };
      }
      function Tp() {
        var e,
          t,
          n,
          r,
          i,
          o,
          a,
          s,
          u,
          c,
          l,
          f,
          d = 10,
          h = d,
          p = 90,
          g = 360,
          m = 2.5;
        function y() {
          return { type: "MultiLineString", coordinates: b() };
        }
        function b() {
          return M(Hf(r / p) * p, n, p)
            .map(l)
            .concat(M(Hf(s / g) * g, a, g).map(f))
            .concat(
              M(Hf(t / d) * d, e, d)
                .filter(function (e) {
                  return Wf(e % p) > Sf;
                })
                .map(u)
            )
            .concat(
              M(Hf(o / h) * h, i, h)
                .filter(function (e) {
                  return Wf(e % g) > Sf;
                })
                .map(c)
            );
        }
        return (
          (y.lines = function () {
            return b().map(function (e) {
              return { type: "LineString", coordinates: e };
            });
          }),
          (y.outline = function () {
            return {
              type: "Polygon",
              coordinates: [
                l(r).concat(
                  f(a).slice(1),
                  l(n).reverse().slice(1),
                  f(s).reverse().slice(1)
                ),
              ],
            };
          }),
          (y.extent = function (e) {
            return arguments.length
              ? y.extentMajor(e).extentMinor(e)
              : y.extentMinor();
          }),
          (y.extentMajor = function (e) {
            return arguments.length
              ? ((r = +e[0][0]),
                (n = +e[1][0]),
                (s = +e[0][1]),
                (a = +e[1][1]),
                r > n && ((e = r), (r = n), (n = e)),
                s > a && ((e = s), (s = a), (a = e)),
                y.precision(m))
              : [
                  [r, s],
                  [n, a],
                ];
          }),
          (y.extentMinor = function (n) {
            return arguments.length
              ? ((t = +n[0][0]),
                (e = +n[1][0]),
                (o = +n[0][1]),
                (i = +n[1][1]),
                t > e && ((n = t), (t = e), (e = n)),
                o > i && ((n = o), (o = i), (i = n)),
                y.precision(m))
              : [
                  [t, o],
                  [e, i],
                ];
          }),
          (y.step = function (e) {
            return arguments.length
              ? y.stepMajor(e).stepMinor(e)
              : y.stepMinor();
          }),
          (y.stepMajor = function (e) {
            return arguments.length ? ((p = +e[0]), (g = +e[1]), y) : [p, g];
          }),
          (y.stepMinor = function (e) {
            return arguments.length ? ((d = +e[0]), (h = +e[1]), y) : [d, h];
          }),
          (y.precision = function (d) {
            return arguments.length
              ? ((m = +d),
                (u = _p(o, i, 90)),
                (c = xp(t, e, m)),
                (l = _p(s, a, 90)),
                (f = xp(r, n, m)),
                y)
              : m;
          }),
          y
            .extentMajor([
              [-180, -89.999999],
              [180, 89.999999],
            ])
            .extentMinor([
              [-180, -80.000001],
              [180, 80.000001],
            ])
        );
      }
      function Mp() {
        return Tp()();
      }
      function wp(e, t) {
        var n = e[0] * Bf,
          r = e[1] * Bf,
          i = t[0] * Bf,
          o = t[1] * Bf,
          a = Uf(r),
          s = Yf(r),
          u = Uf(o),
          c = Yf(o),
          l = a * Uf(n),
          f = a * Yf(n),
          d = u * Uf(i),
          h = u * Yf(i),
          p = 2 * Jf($f(ed(o - r) + a * u * ed(i - n))),
          g = Yf(p),
          m = p
            ? function (e) {
                var t = Yf((e *= p)) / g,
                  n = Yf(p - e) / g,
                  r = n * l + t * d,
                  i = n * f + t * h,
                  o = n * s + t * c;
                return [zf(i, r) * Gf, zf(o, $f(r * r + i * i)) * Gf];
              }
            : function () {
                return [n * Gf, r * Gf];
              };
        return (m.distance = p), m;
      }
      function Ap(e) {
        return e;
      }
      var kp,
        Ep,
        Pp,
        Cp,
        Lp = Pf(),
        Ip = Pf(),
        Sp = {
          point: td,
          lineStart: td,
          lineEnd: td,
          polygonStart: function () {
            (Sp.lineStart = Op), (Sp.lineEnd = Dp);
          },
          polygonEnd: function () {
            (Sp.lineStart = Sp.lineEnd = Sp.point = td),
              Lp.add(Wf(Ip)),
              Ip.reset();
          },
          result: function () {
            var e = Lp / 2;
            return Lp.reset(), e;
          },
        };
      function Op() {
        Sp.point = Np;
      }
      function Np(e, t) {
        (Sp.point = Fp), (kp = Pp = e), (Ep = Cp = t);
      }
      function Fp(e, t) {
        Ip.add(Cp * e - Pp * t), (Pp = e), (Cp = t);
      }
      function Dp() {
        Fp(kp, Ep);
      }
      var Rp = Sp,
        Gp = 1 / 0,
        Bp = Gp,
        Wp = -Gp,
        jp = Wp,
        zp = {
          point: function (e, t) {
            e < Gp && (Gp = e);
            e > Wp && (Wp = e);
            t < Bp && (Bp = t);
            t > jp && (jp = t);
          },
          lineStart: td,
          lineEnd: td,
          polygonStart: td,
          polygonEnd: td,
          result: function () {
            var e = [
              [Gp, Bp],
              [Wp, jp],
            ];
            return (Wp = jp = -(Bp = Gp = 1 / 0)), e;
          },
        };
      var Up,
        Hp,
        Vp,
        qp,
        Zp = zp,
        Yp = 0,
        Xp = 0,
        $p = 0,
        Kp = 0,
        Qp = 0,
        Jp = 0,
        eg = 0,
        tg = 0,
        ng = 0,
        rg = {
          point: ig,
          lineStart: og,
          lineEnd: ug,
          polygonStart: function () {
            (rg.lineStart = cg), (rg.lineEnd = lg);
          },
          polygonEnd: function () {
            (rg.point = ig), (rg.lineStart = og), (rg.lineEnd = ug);
          },
          result: function () {
            var e = ng
              ? [eg / ng, tg / ng]
              : Jp
              ? [Kp / Jp, Qp / Jp]
              : $p
              ? [Yp / $p, Xp / $p]
              : [NaN, NaN];
            return (Yp = Xp = $p = Kp = Qp = Jp = eg = tg = ng = 0), e;
          },
        };
      function ig(e, t) {
        (Yp += e), (Xp += t), ++$p;
      }
      function og() {
        rg.point = ag;
      }
      function ag(e, t) {
        (rg.point = sg), ig((Vp = e), (qp = t));
      }
      function sg(e, t) {
        var n = e - Vp,
          r = t - qp,
          i = $f(n * n + r * r);
        (Kp += (i * (Vp + e)) / 2),
          (Qp += (i * (qp + t)) / 2),
          (Jp += i),
          ig((Vp = e), (qp = t));
      }
      function ug() {
        rg.point = ig;
      }
      function cg() {
        rg.point = fg;
      }
      function lg() {
        dg(Up, Hp);
      }
      function fg(e, t) {
        (rg.point = dg), ig((Up = Vp = e), (Hp = qp = t));
      }
      function dg(e, t) {
        var n = e - Vp,
          r = t - qp,
          i = $f(n * n + r * r);
        (Kp += (i * (Vp + e)) / 2),
          (Qp += (i * (qp + t)) / 2),
          (Jp += i),
          (eg += (i = qp * e - Vp * t) * (Vp + e)),
          (tg += i * (qp + t)),
          (ng += 3 * i),
          ig((Vp = e), (qp = t));
      }
      var hg = rg;
      function pg(e) {
        this._context = e;
      }
      pg.prototype = {
        _radius: 4.5,
        pointRadius: function (e) {
          return (this._radius = e), this;
        },
        polygonStart: function () {
          this._line = 0;
        },
        polygonEnd: function () {
          this._line = NaN;
        },
        lineStart: function () {
          this._point = 0;
        },
        lineEnd: function () {
          0 === this._line && this._context.closePath(), (this._point = NaN);
        },
        point: function (e, t) {
          switch (this._point) {
            case 0:
              this._context.moveTo(e, t), (this._point = 1);
              break;
            case 1:
              this._context.lineTo(e, t);
              break;
            default:
              this._context.moveTo(e + this._radius, t),
                this._context.arc(e, t, this._radius, 0, Rf);
          }
        },
        result: td,
      };
      var gg,
        mg,
        yg,
        bg,
        vg,
        _g = Pf(),
        xg = {
          point: td,
          lineStart: function () {
            xg.point = Tg;
          },
          lineEnd: function () {
            gg && Mg(mg, yg), (xg.point = td);
          },
          polygonStart: function () {
            gg = !0;
          },
          polygonEnd: function () {
            gg = null;
          },
          result: function () {
            var e = +_g;
            return _g.reset(), e;
          },
        };
      function Tg(e, t) {
        (xg.point = Mg), (mg = bg = e), (yg = vg = t);
      }
      function Mg(e, t) {
        (bg -= e), (vg -= t), _g.add($f(bg * bg + vg * vg)), (bg = e), (vg = t);
      }
      var wg = xg;
      function Ag() {
        this._string = [];
      }
      function kg(e) {
        return (
          "m0," +
          e +
          "a" +
          e +
          "," +
          e +
          " 0 1,1 0," +
          -2 * e +
          "a" +
          e +
          "," +
          e +
          " 0 1,1 0," +
          2 * e +
          "z"
        );
      }
      function Eg(e, t) {
        var n,
          r,
          i = 4.5;
        function o(e) {
          return (
            e &&
              ("function" === typeof i &&
                r.pointRadius(+i.apply(this, arguments)),
              sd(e, n(r))),
            r.result()
          );
        }
        return (
          (o.area = function (e) {
            return sd(e, n(Rp)), Rp.result();
          }),
          (o.measure = function (e) {
            return sd(e, n(wg)), wg.result();
          }),
          (o.bounds = function (e) {
            return sd(e, n(Zp)), Zp.result();
          }),
          (o.centroid = function (e) {
            return sd(e, n(hg)), hg.result();
          }),
          (o.projection = function (t) {
            return arguments.length
              ? ((n = null == t ? ((e = null), Ap) : (e = t).stream), o)
              : e;
          }),
          (o.context = function (e) {
            return arguments.length
              ? ((r = null == e ? ((t = null), new Ag()) : new pg((t = e))),
                "function" !== typeof i && r.pointRadius(i),
                o)
              : t;
          }),
          (o.pointRadius = function (e) {
            return arguments.length
              ? ((i = "function" === typeof e ? e : (r.pointRadius(+e), +e)), o)
              : i;
          }),
          o.projection(e).context(t)
        );
      }
      function Pg(e) {
        return { stream: Cg(e) };
      }
      function Cg(e) {
        return function (t) {
          var n = new Lg();
          for (var r in e) n[r] = e[r];
          return (n.stream = t), n;
        };
      }
      function Lg() {}
      function Ig(e, t, n) {
        var r = e.clipExtent && e.clipExtent();
        return (
          e.scale(150).translate([0, 0]),
          null != r && e.clipExtent(null),
          sd(n, e.stream(Zp)),
          t(Zp.result()),
          null != r && e.clipExtent(r),
          e
        );
      }
      function Sg(e, t, n) {
        return Ig(
          e,
          function (n) {
            var r = t[1][0] - t[0][0],
              i = t[1][1] - t[0][1],
              o = Math.min(r / (n[1][0] - n[0][0]), i / (n[1][1] - n[0][1])),
              a = +t[0][0] + (r - o * (n[1][0] + n[0][0])) / 2,
              s = +t[0][1] + (i - o * (n[1][1] + n[0][1])) / 2;
            e.scale(150 * o).translate([a, s]);
          },
          n
        );
      }
      function Og(e, t, n) {
        return Sg(e, [[0, 0], t], n);
      }
      function Ng(e, t, n) {
        return Ig(
          e,
          function (n) {
            var r = +t,
              i = r / (n[1][0] - n[0][0]),
              o = (r - i * (n[1][0] + n[0][0])) / 2,
              a = -i * n[0][1];
            e.scale(150 * i).translate([o, a]);
          },
          n
        );
      }
      function Fg(e, t, n) {
        return Ig(
          e,
          function (n) {
            var r = +t,
              i = r / (n[1][1] - n[0][1]),
              o = -i * n[0][0],
              a = (r - i * (n[1][1] + n[0][1])) / 2;
            e.scale(150 * i).translate([o, a]);
          },
          n
        );
      }
      (Ag.prototype = {
        _radius: 4.5,
        _circle: kg(4.5),
        pointRadius: function (e) {
          return (
            (e = +e) !== this._radius &&
              ((this._radius = e), (this._circle = null)),
            this
          );
        },
        polygonStart: function () {
          this._line = 0;
        },
        polygonEnd: function () {
          this._line = NaN;
        },
        lineStart: function () {
          this._point = 0;
        },
        lineEnd: function () {
          0 === this._line && this._string.push("Z"), (this._point = NaN);
        },
        point: function (e, t) {
          switch (this._point) {
            case 0:
              this._string.push("M", e, ",", t), (this._point = 1);
              break;
            case 1:
              this._string.push("L", e, ",", t);
              break;
            default:
              null == this._circle && (this._circle = kg(this._radius)),
                this._string.push("M", e, ",", t, this._circle);
          }
        },
        result: function () {
          if (this._string.length) {
            var e = this._string.join("");
            return (this._string = []), e;
          }
          return null;
        },
      }),
        (Lg.prototype = {
          constructor: Lg,
          point: function (e, t) {
            this.stream.point(e, t);
          },
          sphere: function () {
            this.stream.sphere();
          },
          lineStart: function () {
            this.stream.lineStart();
          },
          lineEnd: function () {
            this.stream.lineEnd();
          },
          polygonStart: function () {
            this.stream.polygonStart();
          },
          polygonEnd: function () {
            this.stream.polygonEnd();
          },
        });
      var Dg = Uf(30 * Bf);
      function Rg(e, t) {
        return +t
          ? (function (e, t) {
              function n(r, i, o, a, s, u, c, l, f, d, h, p, g, m) {
                var y = c - r,
                  b = l - i,
                  v = y * y + b * b;
                if (v > 4 * t && g--) {
                  var _ = a + d,
                    x = s + h,
                    T = u + p,
                    M = $f(_ * _ + x * x + T * T),
                    w = Jf((T /= M)),
                    A =
                      Wf(Wf(T) - 1) < Sf || Wf(o - f) < Sf
                        ? (o + f) / 2
                        : zf(x, _),
                    k = e(A, w),
                    E = k[0],
                    P = k[1],
                    C = E - r,
                    L = P - i,
                    I = b * C - y * L;
                  ((I * I) / v > t ||
                    Wf((y * C + b * L) / v - 0.5) > 0.3 ||
                    a * d + s * h + u * p < Dg) &&
                    (n(r, i, o, a, s, u, E, P, A, (_ /= M), (x /= M), T, g, m),
                    m.point(E, P),
                    n(E, P, A, _, x, T, c, l, f, d, h, p, g, m));
                }
              }
              return function (t) {
                var r,
                  i,
                  o,
                  a,
                  s,
                  u,
                  c,
                  l,
                  f,
                  d,
                  h,
                  p,
                  g = {
                    point: m,
                    lineStart: y,
                    lineEnd: v,
                    polygonStart: function () {
                      t.polygonStart(), (g.lineStart = _);
                    },
                    polygonEnd: function () {
                      t.polygonEnd(), (g.lineStart = y);
                    },
                  };
                function m(n, r) {
                  (n = e(n, r)), t.point(n[0], n[1]);
                }
                function y() {
                  (l = NaN), (g.point = b), t.lineStart();
                }
                function b(r, i) {
                  var o = Td([r, i]),
                    a = e(r, i);
                  n(
                    l,
                    f,
                    c,
                    d,
                    h,
                    p,
                    (l = a[0]),
                    (f = a[1]),
                    (c = r),
                    (d = o[0]),
                    (h = o[1]),
                    (p = o[2]),
                    16,
                    t
                  ),
                    t.point(l, f);
                }
                function v() {
                  (g.point = m), t.lineEnd();
                }
                function _() {
                  y(), (g.point = x), (g.lineEnd = T);
                }
                function x(e, t) {
                  b((r = e), t),
                    (i = l),
                    (o = f),
                    (a = d),
                    (s = h),
                    (u = p),
                    (g.point = b);
                }
                function T() {
                  n(l, f, c, d, h, p, i, o, r, a, s, u, 16, t),
                    (g.lineEnd = v),
                    v();
                }
                return g;
              };
            })(e, t)
          : (function (e) {
              return Cg({
                point: function (t, n) {
                  (t = e(t, n)), this.stream.point(t[0], t[1]);
                },
              });
            })(e);
      }
      var Gg = Cg({
        point: function (e, t) {
          this.stream.point(e * Bf, t * Bf);
        },
      });
      function Bg(e, t, n, r, i) {
        function o(o, a) {
          return [t + e * (o *= r), n - e * (a *= i)];
        }
        return (
          (o.invert = function (o, a) {
            return [((o - t) / e) * r, ((n - a) / e) * i];
          }),
          o
        );
      }
      function Wg(e, t, n, r, i, o) {
        var a = Uf(o),
          s = Yf(o),
          u = a * e,
          c = s * e,
          l = a / e,
          f = s / e,
          d = (s * n - a * t) / e,
          h = (s * t + a * n) / e;
        function p(e, o) {
          return [u * (e *= r) - c * (o *= i) + t, n - c * e - u * o];
        }
        return (
          (p.invert = function (e, t) {
            return [r * (l * e - f * t + d), i * (h - f * e - l * t)];
          }),
          p
        );
      }
      function jg(e) {
        return zg(function () {
          return e;
        })();
      }
      function zg(e) {
        var t,
          n,
          r,
          i,
          o,
          a,
          s,
          u,
          c,
          l,
          f = 150,
          d = 480,
          h = 250,
          p = 0,
          g = 0,
          m = 0,
          y = 0,
          b = 0,
          v = 0,
          _ = 1,
          x = 1,
          T = null,
          M = Zh,
          w = null,
          A = Ap,
          k = 0.5;
        function E(e) {
          return u(e[0] * Bf, e[1] * Bf);
        }
        function P(e) {
          return (e = u.invert(e[0], e[1])) && [e[0] * Gf, e[1] * Gf];
        }
        function C() {
          var e = Wg(f, 0, 0, _, x, v).apply(null, t(p, g)),
            r = (v ? Wg : Bg)(f, d - e[0], h - e[1], _, x, v);
          return (
            (n = Ph(m, y, b)),
            (s = kh(t, r)),
            (u = kh(n, s)),
            (a = Rg(s, k)),
            L()
          );
        }
        function L() {
          return (c = l = null), E;
        }
        return (
          (E.stream = function (e) {
            return c && l === e
              ? c
              : (c = Gg(
                  (function (e) {
                    return Cg({
                      point: function (t, n) {
                        var r = e(t, n);
                        return this.stream.point(r[0], r[1]);
                      },
                    });
                  })(n)(M(a(A((l = e)))))
                ));
          }),
          (E.preclip = function (e) {
            return arguments.length ? ((M = e), (T = void 0), L()) : M;
          }),
          (E.postclip = function (e) {
            return arguments.length
              ? ((A = e), (w = r = i = o = null), L())
              : A;
          }),
          (E.clipAngle = function (e) {
            return arguments.length
              ? ((M = +e ? Yh((T = e * Bf)) : ((T = null), Zh)), L())
              : T * Gf;
          }),
          (E.clipExtent = function (e) {
            return arguments.length
              ? ((A =
                  null == e
                    ? ((w = r = i = o = null), Ap)
                    : Kh(
                        (w = +e[0][0]),
                        (r = +e[0][1]),
                        (i = +e[1][0]),
                        (o = +e[1][1])
                      )),
                L())
              : null == w
              ? null
              : [
                  [w, r],
                  [i, o],
                ];
          }),
          (E.scale = function (e) {
            return arguments.length ? ((f = +e), C()) : f;
          }),
          (E.translate = function (e) {
            return arguments.length ? ((d = +e[0]), (h = +e[1]), C()) : [d, h];
          }),
          (E.center = function (e) {
            return arguments.length
              ? ((p = (e[0] % 360) * Bf), (g = (e[1] % 360) * Bf), C())
              : [p * Gf, g * Gf];
          }),
          (E.rotate = function (e) {
            return arguments.length
              ? ((m = (e[0] % 360) * Bf),
                (y = (e[1] % 360) * Bf),
                (b = e.length > 2 ? (e[2] % 360) * Bf : 0),
                C())
              : [m * Gf, y * Gf, b * Gf];
          }),
          (E.angle = function (e) {
            return arguments.length ? ((v = (e % 360) * Bf), C()) : v * Gf;
          }),
          (E.reflectX = function (e) {
            return arguments.length ? ((_ = e ? -1 : 1), C()) : _ < 0;
          }),
          (E.reflectY = function (e) {
            return arguments.length ? ((x = e ? -1 : 1), C()) : x < 0;
          }),
          (E.precision = function (e) {
            return arguments.length ? ((a = Rg(s, (k = e * e))), L()) : $f(k);
          }),
          (E.fitExtent = function (e, t) {
            return Sg(E, e, t);
          }),
          (E.fitSize = function (e, t) {
            return Og(E, e, t);
          }),
          (E.fitWidth = function (e, t) {
            return Ng(E, e, t);
          }),
          (E.fitHeight = function (e, t) {
            return Fg(E, e, t);
          }),
          function () {
            return (
              (t = e.apply(this, arguments)), (E.invert = t.invert && P), C()
            );
          }
        );
      }
      function Ug(e) {
        var t = 0,
          n = Nf / 3,
          r = zg(e),
          i = r(t, n);
        return (
          (i.parallels = function (e) {
            return arguments.length
              ? r((t = e[0] * Bf), (n = e[1] * Bf))
              : [t * Gf, n * Gf];
          }),
          i
        );
      }
      function Hg(e, t) {
        var n = Yf(e),
          r = (n + Yf(t)) / 2;
        if (Wf(r) < Sf)
          return (function (e) {
            var t = Uf(e);
            function n(e, n) {
              return [e * t, Yf(n) / t];
            }
            return (
              (n.invert = function (e, n) {
                return [e / t, Jf(n * t)];
              }),
              n
            );
          })(e);
        var i = 1 + n * (2 * r - n),
          o = $f(i) / r;
        function a(e, t) {
          var n = $f(i - 2 * r * Yf(t)) / r;
          return [n * Yf((e *= r)), o - n * Uf(e)];
        }
        return (
          (a.invert = function (e, t) {
            var n = o - t,
              a = zf(e, Wf(n)) * Xf(n);
            return (
              n * r < 0 && (a -= Nf * Xf(e) * Xf(n)),
              [a / r, Jf((i - (e * e + n * n) * r * r) / (2 * r))]
            );
          }),
          a
        );
      }
      function Vg() {
        return Ug(Hg).scale(155.424).center([0, 33.6442]);
      }
      function qg() {
        return Vg()
          .parallels([29.5, 45.5])
          .scale(1070)
          .translate([480, 250])
          .rotate([96, 0])
          .center([-0.6, 38.7]);
      }
      function Zg() {
        var e,
          t,
          n,
          r,
          i,
          o,
          a = qg(),
          s = Vg().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]),
          u = Vg().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]),
          c = {
            point: function (e, t) {
              o = [e, t];
            },
          };
        function l(e) {
          var t = e[0],
            a = e[1];
          return (
            (o = null),
            n.point(t, a),
            o || (r.point(t, a), o) || (i.point(t, a), o)
          );
        }
        function f() {
          return (e = t = null), l;
        }
        return (
          (l.invert = function (e) {
            var t = a.scale(),
              n = a.translate(),
              r = (e[0] - n[0]) / t,
              i = (e[1] - n[1]) / t;
            return (
              i >= 0.12 && i < 0.234 && r >= -0.425 && r < -0.214
                ? s
                : i >= 0.166 && i < 0.234 && r >= -0.214 && r < -0.115
                ? u
                : a
            ).invert(e);
          }),
          (l.stream = function (n) {
            return e && t === n
              ? e
              : (e = (function (e) {
                  var t = e.length;
                  return {
                    point: function (n, r) {
                      for (var i = -1; ++i < t; ) e[i].point(n, r);
                    },
                    sphere: function () {
                      for (var n = -1; ++n < t; ) e[n].sphere();
                    },
                    lineStart: function () {
                      for (var n = -1; ++n < t; ) e[n].lineStart();
                    },
                    lineEnd: function () {
                      for (var n = -1; ++n < t; ) e[n].lineEnd();
                    },
                    polygonStart: function () {
                      for (var n = -1; ++n < t; ) e[n].polygonStart();
                    },
                    polygonEnd: function () {
                      for (var n = -1; ++n < t; ) e[n].polygonEnd();
                    },
                  };
                })([a.stream((t = n)), s.stream(n), u.stream(n)]));
          }),
          (l.precision = function (e) {
            return arguments.length
              ? (a.precision(e), s.precision(e), u.precision(e), f())
              : a.precision();
          }),
          (l.scale = function (e) {
            return arguments.length
              ? (a.scale(e),
                s.scale(0.35 * e),
                u.scale(e),
                l.translate(a.translate()))
              : a.scale();
          }),
          (l.translate = function (e) {
            if (!arguments.length) return a.translate();
            var t = a.scale(),
              o = +e[0],
              l = +e[1];
            return (
              (n = a
                .translate(e)
                .clipExtent([
                  [o - 0.455 * t, l - 0.238 * t],
                  [o + 0.455 * t, l + 0.238 * t],
                ])
                .stream(c)),
              (r = s
                .translate([o - 0.307 * t, l + 0.201 * t])
                .clipExtent([
                  [o - 0.425 * t + Sf, l + 0.12 * t + Sf],
                  [o - 0.214 * t - Sf, l + 0.234 * t - Sf],
                ])
                .stream(c)),
              (i = u
                .translate([o - 0.205 * t, l + 0.212 * t])
                .clipExtent([
                  [o - 0.214 * t + Sf, l + 0.166 * t + Sf],
                  [o - 0.115 * t - Sf, l + 0.234 * t - Sf],
                ])
                .stream(c)),
              f()
            );
          }),
          (l.fitExtent = function (e, t) {
            return Sg(l, e, t);
          }),
          (l.fitSize = function (e, t) {
            return Og(l, e, t);
          }),
          (l.fitWidth = function (e, t) {
            return Ng(l, e, t);
          }),
          (l.fitHeight = function (e, t) {
            return Fg(l, e, t);
          }),
          l.scale(1070)
        );
      }
      function Yg(e) {
        return function (t, n) {
          var r = Uf(t),
            i = Uf(n),
            o = e(r * i);
          return [o * i * Yf(t), o * Yf(n)];
        };
      }
      function Xg(e) {
        return function (t, n) {
          var r = $f(t * t + n * n),
            i = e(r),
            o = Yf(i),
            a = Uf(i);
          return [zf(t * o, r * a), Jf(r && (n * o) / r)];
        };
      }
      var $g = Yg(function (e) {
        return $f(2 / (1 + e));
      });
      function Kg() {
        return jg($g).scale(124.75).clipAngle(179.999);
      }
      $g.invert = Xg(function (e) {
        return 2 * Jf(e / 2);
      });
      var Qg = Yg(function (e) {
        return (e = Qf(e)) && e / Yf(e);
      });
      function Jg() {
        return jg(Qg).scale(79.4188).clipAngle(179.999);
      }
      function em(e, t) {
        return [e, qf(Kf((Ff + t) / 2))];
      }
      function tm() {
        return nm(em).scale(961 / Rf);
      }
      function nm(e) {
        var t,
          n,
          r,
          i = jg(e),
          o = i.center,
          a = i.scale,
          s = i.translate,
          u = i.clipExtent,
          c = null;
        function l() {
          var o = Nf * a(),
            s = i(Sh(i.rotate()).invert([0, 0]));
          return u(
            null == c
              ? [
                  [s[0] - o, s[1] - o],
                  [s[0] + o, s[1] + o],
                ]
              : e === em
              ? [
                  [Math.max(s[0] - o, c), t],
                  [Math.min(s[0] + o, n), r],
                ]
              : [
                  [c, Math.max(s[1] - o, t)],
                  [n, Math.min(s[1] + o, r)],
                ]
          );
        }
        return (
          (i.scale = function (e) {
            return arguments.length ? (a(e), l()) : a();
          }),
          (i.translate = function (e) {
            return arguments.length ? (s(e), l()) : s();
          }),
          (i.center = function (e) {
            return arguments.length ? (o(e), l()) : o();
          }),
          (i.clipExtent = function (e) {
            return arguments.length
              ? (null == e
                  ? (c = t = n = r = null)
                  : ((c = +e[0][0]),
                    (t = +e[0][1]),
                    (n = +e[1][0]),
                    (r = +e[1][1])),
                l())
              : null == c
              ? null
              : [
                  [c, t],
                  [n, r],
                ];
          }),
          l()
        );
      }
      function rm(e) {
        return Kf((Ff + e) / 2);
      }
      function im(e, t) {
        var n = Uf(e),
          r = e === t ? Yf(e) : qf(n / Uf(t)) / qf(rm(t) / rm(e)),
          i = (n * Zf(rm(e), r)) / r;
        if (!r) return em;
        function o(e, t) {
          i > 0 ? t < -Ff + Sf && (t = -Ff + Sf) : t > Ff - Sf && (t = Ff - Sf);
          var n = i / Zf(rm(t), r);
          return [n * Yf(r * e), i - n * Uf(r * e)];
        }
        return (
          (o.invert = function (e, t) {
            var n = i - t,
              o = Xf(r) * $f(e * e + n * n),
              a = zf(e, Wf(n)) * Xf(n);
            return (
              n * r < 0 && (a -= Nf * Xf(e) * Xf(n)),
              [a / r, 2 * jf(Zf(i / o, 1 / r)) - Ff]
            );
          }),
          o
        );
      }
      function om() {
        return Ug(im).scale(109.5).parallels([30, 30]);
      }
      function am(e, t) {
        return [e, t];
      }
      function sm() {
        return jg(am).scale(152.63);
      }
      function um(e, t) {
        var n = Uf(e),
          r = e === t ? Yf(e) : (n - Uf(t)) / (t - e),
          i = n / r + e;
        if (Wf(r) < Sf) return am;
        function o(e, t) {
          var n = i - t,
            o = r * e;
          return [n * Yf(o), i - n * Uf(o)];
        }
        return (
          (o.invert = function (e, t) {
            var n = i - t,
              o = zf(e, Wf(n)) * Xf(n);
            return (
              n * r < 0 && (o -= Nf * Xf(e) * Xf(n)),
              [o / r, i - Xf(r) * $f(e * e + n * n)]
            );
          }),
          o
        );
      }
      function cm() {
        return Ug(um).scale(131.154).center([0, 13.9389]);
      }
      (Qg.invert = Xg(function (e) {
        return e;
      })),
        (em.invert = function (e, t) {
          return [e, 2 * jf(Vf(t)) - Ff];
        }),
        (am.invert = am);
      var lm = 1.340264,
        fm = -0.081106,
        dm = 893e-6,
        hm = 0.003796,
        pm = $f(3) / 2;
      function gm(e, t) {
        var n = Jf(pm * Yf(t)),
          r = n * n,
          i = r * r * r;
        return [
          (e * Uf(n)) / (pm * (lm + 3 * fm * r + i * (7 * dm + 9 * hm * r))),
          n * (lm + fm * r + i * (dm + hm * r)),
        ];
      }
      function mm() {
        return jg(gm).scale(177.158);
      }
      function ym(e, t) {
        var n = Uf(t),
          r = Uf(e) * n;
        return [(n * Yf(e)) / r, Yf(t) / r];
      }
      function bm() {
        return jg(ym).scale(144.049).clipAngle(60);
      }
      function vm() {
        var e,
          t,
          n,
          r,
          i,
          o,
          a,
          s = 1,
          u = 0,
          c = 0,
          l = 1,
          f = 1,
          d = 0,
          h = null,
          p = 1,
          g = 1,
          m = Cg({
            point: function (e, t) {
              var n = v([e, t]);
              this.stream.point(n[0], n[1]);
            },
          }),
          y = Ap;
        function b() {
          return (p = s * l), (g = s * f), (o = a = null), v;
        }
        function v(n) {
          var r = n[0] * p,
            i = n[1] * g;
          if (d) {
            var o = i * e - r * t;
            (r = r * e + i * t), (i = o);
          }
          return [r + u, i + c];
        }
        return (
          (v.invert = function (n) {
            var r = n[0] - u,
              i = n[1] - c;
            if (d) {
              var o = i * e + r * t;
              (r = r * e - i * t), (i = o);
            }
            return [r / p, i / g];
          }),
          (v.stream = function (e) {
            return o && a === e ? o : (o = m(y((a = e))));
          }),
          (v.postclip = function (e) {
            return arguments.length
              ? ((y = e), (h = n = r = i = null), b())
              : y;
          }),
          (v.clipExtent = function (e) {
            return arguments.length
              ? ((y =
                  null == e
                    ? ((h = n = r = i = null), Ap)
                    : Kh(
                        (h = +e[0][0]),
                        (n = +e[0][1]),
                        (r = +e[1][0]),
                        (i = +e[1][1])
                      )),
                b())
              : null == h
              ? null
              : [
                  [h, n],
                  [r, i],
                ];
          }),
          (v.scale = function (e) {
            return arguments.length ? ((s = +e), b()) : s;
          }),
          (v.translate = function (e) {
            return arguments.length ? ((u = +e[0]), (c = +e[1]), b()) : [u, c];
          }),
          (v.angle = function (n) {
            return arguments.length
              ? ((t = Yf((d = (n % 360) * Bf))), (e = Uf(d)), b())
              : d * Gf;
          }),
          (v.reflectX = function (e) {
            return arguments.length ? ((l = e ? -1 : 1), b()) : l < 0;
          }),
          (v.reflectY = function (e) {
            return arguments.length ? ((f = e ? -1 : 1), b()) : f < 0;
          }),
          (v.fitExtent = function (e, t) {
            return Sg(v, e, t);
          }),
          (v.fitSize = function (e, t) {
            return Og(v, e, t);
          }),
          (v.fitWidth = function (e, t) {
            return Ng(v, e, t);
          }),
          (v.fitHeight = function (e, t) {
            return Fg(v, e, t);
          }),
          v
        );
      }
      function _m(e, t) {
        var n = t * t,
          r = n * n;
        return [
          e *
            (0.8707 -
              0.131979 * n +
              r * (r * (0.003971 * n - 0.001529 * r) - 0.013791)),
          t *
            (1.007226 +
              n * (0.015085 + r * (0.028874 * n - 0.044475 - 0.005916 * r))),
        ];
      }
      function xm() {
        return jg(_m).scale(175.295);
      }
      function Tm(e, t) {
        return [Uf(t) * Yf(e), Yf(t)];
      }
      function Mm() {
        return jg(Tm).scale(249.5).clipAngle(90.000001);
      }
      function wm(e, t) {
        var n = Uf(t),
          r = 1 + Uf(e) * n;
        return [(n * Yf(e)) / r, Yf(t) / r];
      }
      function Am() {
        return jg(wm).scale(250).clipAngle(142);
      }
      function km(e, t) {
        return [qf(Kf((Ff + t) / 2)), -e];
      }
      function Em() {
        var e = nm(km),
          t = e.center,
          n = e.rotate;
        return (
          (e.center = function (e) {
            return arguments.length ? t([-e[1], e[0]]) : [(e = t())[1], -e[0]];
          }),
          (e.rotate = function (e) {
            return arguments.length
              ? n([e[0], e[1], e.length > 2 ? e[2] + 90 : 90])
              : [(e = n())[0], e[1], e[2] - 90];
          }),
          n([0, 0, 90]).scale(159.155)
        );
      }
      function Pm(e, t) {
        return e.parent === t.parent ? 1 : 2;
      }
      function Cm(e, t) {
        return e + t.x;
      }
      function Lm(e, t) {
        return Math.max(e, t.y);
      }
      function Im() {
        var e = Pm,
          t = 1,
          n = 1,
          r = !1;
        function i(i) {
          var o,
            a = 0;
          i.eachAfter(function (t) {
            var n = t.children;
            n
              ? ((t.x = (function (e) {
                  return e.reduce(Cm, 0) / e.length;
                })(n)),
                (t.y = (function (e) {
                  return 1 + e.reduce(Lm, 0);
                })(n)))
              : ((t.x = o ? (a += e(t, o)) : 0), (t.y = 0), (o = t));
          });
          var s = (function (e) {
              for (var t; (t = e.children); ) e = t[0];
              return e;
            })(i),
            u = (function (e) {
              for (var t; (t = e.children); ) e = t[t.length - 1];
              return e;
            })(i),
            c = s.x - e(s, u) / 2,
            l = u.x + e(u, s) / 2;
          return i.eachAfter(
            r
              ? function (e) {
                  (e.x = (e.x - i.x) * t), (e.y = (i.y - e.y) * n);
                }
              : function (e) {
                  (e.x = ((e.x - c) / (l - c)) * t),
                    (e.y = (1 - (i.y ? e.y / i.y : 1)) * n);
                }
          );
        }
        return (
          (i.separation = function (t) {
            return arguments.length ? ((e = t), i) : e;
          }),
          (i.size = function (e) {
            return arguments.length
              ? ((r = !1), (t = +e[0]), (n = +e[1]), i)
              : r
              ? null
              : [t, n];
          }),
          (i.nodeSize = function (e) {
            return arguments.length
              ? ((r = !0), (t = +e[0]), (n = +e[1]), i)
              : r
              ? [t, n]
              : null;
          }),
          i
        );
      }
      function Sm(e) {
        var t = 0,
          n = e.children,
          r = n && n.length;
        if (r) for (; --r >= 0; ) t += n[r].value;
        else t = 1;
        e.value = t;
      }
      function Om(e, t) {
        var n,
          r,
          i,
          o,
          a,
          s = new Rm(e),
          u = +e.value && (s.value = e.value),
          c = [s];
        for (null == t && (t = Nm); (n = c.pop()); )
          if (
            (u && (n.value = +n.data.value), (i = t(n.data)) && (a = i.length))
          )
            for (n.children = new Array(a), o = a - 1; o >= 0; --o)
              c.push((r = n.children[o] = new Rm(i[o]))),
                (r.parent = n),
                (r.depth = n.depth + 1);
        return s.eachBefore(Dm);
      }
      function Nm(e) {
        return e.children;
      }
      function Fm(e) {
        e.data = e.data.data;
      }
      function Dm(e) {
        var t = 0;
        do {
          e.height = t;
        } while ((e = e.parent) && e.height < ++t);
      }
      function Rm(e) {
        (this.data = e), (this.depth = this.height = 0), (this.parent = null);
      }
      (gm.invert = function (e, t) {
        for (
          var n, r = t, i = r * r, o = i * i * i, a = 0;
          a < 12 &&
          ((o =
            (i =
              (r -= n =
                (r * (lm + fm * i + o * (dm + hm * i)) - t) /
                (lm + 3 * fm * i + o * (7 * dm + 9 * hm * i))) * r) *
            i *
            i),
          !(Wf(n) < Of));
          ++a
        );
        return [
          (pm * e * (lm + 3 * fm * i + o * (7 * dm + 9 * hm * i))) / Uf(r),
          Jf(Yf(r) / pm),
        ];
      }),
        (ym.invert = Xg(jf)),
        (_m.invert = function (e, t) {
          var n,
            r = t,
            i = 25;
          do {
            var o = r * r,
              a = o * o;
            r -= n =
              (r *
                (1.007226 +
                  o *
                    (0.015085 + a * (0.028874 * o - 0.044475 - 0.005916 * a))) -
                t) /
              (1.007226 +
                o *
                  (0.045255 +
                    a * (0.259866 * o - 0.311325 - 0.005916 * 11 * a)));
          } while (Wf(n) > Sf && --i > 0);
          return [
            e /
              (0.8707 +
                (o = r * r) *
                  (o * (o * o * o * (0.003971 - 0.001529 * o) - 0.013791) -
                    0.131979)),
            r,
          ];
        }),
        (Tm.invert = Xg(Jf)),
        (wm.invert = Xg(function (e) {
          return 2 * jf(e);
        })),
        (km.invert = function (e, t) {
          return [-t, 2 * jf(Vf(e)) - Ff];
        }),
        (Rm.prototype = Om.prototype =
          {
            constructor: Rm,
            count: function () {
              return this.eachAfter(Sm);
            },
            each: function (e) {
              var t,
                n,
                r,
                i,
                o = this,
                a = [o];
              do {
                for (t = a.reverse(), a = []; (o = t.pop()); )
                  if ((e(o), (n = o.children)))
                    for (r = 0, i = n.length; r < i; ++r) a.push(n[r]);
              } while (a.length);
              return this;
            },
            eachAfter: function (e) {
              for (var t, n, r, i = this, o = [i], a = []; (i = o.pop()); )
                if ((a.push(i), (t = i.children)))
                  for (n = 0, r = t.length; n < r; ++n) o.push(t[n]);
              for (; (i = a.pop()); ) e(i);
              return this;
            },
            eachBefore: function (e) {
              for (var t, n, r = this, i = [r]; (r = i.pop()); )
                if ((e(r), (t = r.children)))
                  for (n = t.length - 1; n >= 0; --n) i.push(t[n]);
              return this;
            },
            sum: function (e) {
              return this.eachAfter(function (t) {
                for (
                  var n = +e(t.data) || 0, r = t.children, i = r && r.length;
                  --i >= 0;

                )
                  n += r[i].value;
                t.value = n;
              });
            },
            sort: function (e) {
              return this.eachBefore(function (t) {
                t.children && t.children.sort(e);
              });
            },
            path: function (e) {
              for (
                var t = this,
                  n = (function (e, t) {
                    if (e === t) return e;
                    var n = e.ancestors(),
                      r = t.ancestors(),
                      i = null;
                    (e = n.pop()), (t = r.pop());
                    for (; e === t; ) (i = e), (e = n.pop()), (t = r.pop());
                    return i;
                  })(t, e),
                  r = [t];
                t !== n;

              )
                (t = t.parent), r.push(t);
              for (var i = r.length; e !== n; )
                r.splice(i, 0, e), (e = e.parent);
              return r;
            },
            ancestors: function () {
              for (var e = this, t = [e]; (e = e.parent); ) t.push(e);
              return t;
            },
            descendants: function () {
              var e = [];
              return (
                this.each(function (t) {
                  e.push(t);
                }),
                e
              );
            },
            leaves: function () {
              var e = [];
              return (
                this.eachBefore(function (t) {
                  t.children || e.push(t);
                }),
                e
              );
            },
            links: function () {
              var e = this,
                t = [];
              return (
                e.each(function (n) {
                  n !== e && t.push({ source: n.parent, target: n });
                }),
                t
              );
            },
            copy: function () {
              return Om(this).eachBefore(Fm);
            },
          });
      var Gm = Array.prototype.slice;
      function Bm(e) {
        for (
          var t,
            n,
            r = 0,
            i = (e = (function (e) {
              for (var t, n, r = e.length; r; )
                (n = (Math.random() * r--) | 0),
                  (t = e[r]),
                  (e[r] = e[n]),
                  (e[n] = t);
              return e;
            })(Gm.call(e))).length,
            o = [];
          r < i;

        )
          (t = e[r]), n && zm(n, t) ? ++r : ((n = Hm((o = Wm(o, t)))), (r = 0));
        return n;
      }
      function Wm(e, t) {
        var n, r;
        if (Um(t, e)) return [t];
        for (n = 0; n < e.length; ++n)
          if (jm(t, e[n]) && Um(Vm(e[n], t), e)) return [e[n], t];
        for (n = 0; n < e.length - 1; ++n)
          for (r = n + 1; r < e.length; ++r)
            if (
              jm(Vm(e[n], e[r]), t) &&
              jm(Vm(e[n], t), e[r]) &&
              jm(Vm(e[r], t), e[n]) &&
              Um(qm(e[n], e[r], t), e)
            )
              return [e[n], e[r], t];
        throw new Error();
      }
      function jm(e, t) {
        var n = e.r - t.r,
          r = t.x - e.x,
          i = t.y - e.y;
        return n < 0 || n * n < r * r + i * i;
      }
      function zm(e, t) {
        var n = e.r - t.r + 1e-6,
          r = t.x - e.x,
          i = t.y - e.y;
        return n > 0 && n * n > r * r + i * i;
      }
      function Um(e, t) {
        for (var n = 0; n < t.length; ++n) if (!zm(e, t[n])) return !1;
        return !0;
      }
      function Hm(e) {
        switch (e.length) {
          case 1:
            return (function (e) {
              return { x: e.x, y: e.y, r: e.r };
            })(e[0]);
          case 2:
            return Vm(e[0], e[1]);
          case 3:
            return qm(e[0], e[1], e[2]);
        }
      }
      function Vm(e, t) {
        var n = e.x,
          r = e.y,
          i = e.r,
          o = t.x,
          a = t.y,
          s = t.r,
          u = o - n,
          c = a - r,
          l = s - i,
          f = Math.sqrt(u * u + c * c);
        return {
          x: (n + o + (u / f) * l) / 2,
          y: (r + a + (c / f) * l) / 2,
          r: (f + i + s) / 2,
        };
      }
      function qm(e, t, n) {
        var r = e.x,
          i = e.y,
          o = e.r,
          a = t.x,
          s = t.y,
          u = t.r,
          c = n.x,
          l = n.y,
          f = n.r,
          d = r - a,
          h = r - c,
          p = i - s,
          g = i - l,
          m = u - o,
          y = f - o,
          b = r * r + i * i - o * o,
          v = b - a * a - s * s + u * u,
          _ = b - c * c - l * l + f * f,
          x = h * p - d * g,
          T = (p * _ - g * v) / (2 * x) - r,
          M = (g * m - p * y) / x,
          w = (h * v - d * _) / (2 * x) - i,
          A = (d * y - h * m) / x,
          k = M * M + A * A - 1,
          E = 2 * (o + T * M + w * A),
          P = T * T + w * w - o * o,
          C = -(k ? (E + Math.sqrt(E * E - 4 * k * P)) / (2 * k) : P / E);
        return { x: r + T + M * C, y: i + w + A * C, r: C };
      }
      function Zm(e, t, n) {
        var r,
          i,
          o,
          a,
          s = e.x - t.x,
          u = e.y - t.y,
          c = s * s + u * u;
        c
          ? ((i = t.r + n.r),
            (i *= i),
            (a = e.r + n.r),
            i > (a *= a)
              ? ((r = (c + a - i) / (2 * c)),
                (o = Math.sqrt(Math.max(0, a / c - r * r))),
                (n.x = e.x - r * s - o * u),
                (n.y = e.y - r * u + o * s))
              : ((r = (c + i - a) / (2 * c)),
                (o = Math.sqrt(Math.max(0, i / c - r * r))),
                (n.x = t.x + r * s - o * u),
                (n.y = t.y + r * u + o * s)))
          : ((n.x = t.x + n.r), (n.y = t.y));
      }
      function Ym(e, t) {
        var n = e.r + t.r - 1e-6,
          r = t.x - e.x,
          i = t.y - e.y;
        return n > 0 && n * n > r * r + i * i;
      }
      function Xm(e) {
        var t = e._,
          n = e.next._,
          r = t.r + n.r,
          i = (t.x * n.r + n.x * t.r) / r,
          o = (t.y * n.r + n.y * t.r) / r;
        return i * i + o * o;
      }
      function $m(e) {
        (this._ = e), (this.next = null), (this.previous = null);
      }
      function Km(e) {
        if (!(i = e.length)) return 0;
        var t, n, r, i, o, a, s, u, c, l, f;
        if ((((t = e[0]).x = 0), (t.y = 0), !(i > 1))) return t.r;
        if (((n = e[1]), (t.x = -n.r), (n.x = t.r), (n.y = 0), !(i > 2)))
          return t.r + n.r;
        Zm(n, t, (r = e[2])),
          (t = new $m(t)),
          (n = new $m(n)),
          (r = new $m(r)),
          (t.next = r.previous = n),
          (n.next = t.previous = r),
          (r.next = n.previous = t);
        e: for (s = 3; s < i; ++s) {
          Zm(t._, n._, (r = e[s])),
            (r = new $m(r)),
            (u = n.next),
            (c = t.previous),
            (l = n._.r),
            (f = t._.r);
          do {
            if (l <= f) {
              if (Ym(u._, r._)) {
                (n = u), (t.next = n), (n.previous = t), --s;
                continue e;
              }
              (l += u._.r), (u = u.next);
            } else {
              if (Ym(c._, r._)) {
                ((t = c).next = n), (n.previous = t), --s;
                continue e;
              }
              (f += c._.r), (c = c.previous);
            }
          } while (u !== c.next);
          for (
            r.previous = t, r.next = n, t.next = n.previous = n = r, o = Xm(t);
            (r = r.next) !== n;

          )
            (a = Xm(r)) < o && ((t = r), (o = a));
          n = t.next;
        }
        for (t = [n._], r = n; (r = r.next) !== n; ) t.push(r._);
        for (r = Bm(t), s = 0; s < i; ++s) ((t = e[s]).x -= r.x), (t.y -= r.y);
        return r.r;
      }
      function Qm(e) {
        return Km(e), e;
      }
      function Jm(e) {
        return null == e ? null : ey(e);
      }
      function ey(e) {
        if ("function" !== typeof e) throw new Error();
        return e;
      }
      function ty() {
        return 0;
      }
      function ny(e) {
        return function () {
          return e;
        };
      }
      function ry(e) {
        return Math.sqrt(e.value);
      }
      function iy() {
        var e = null,
          t = 1,
          n = 1,
          r = ty;
        function i(i) {
          return (
            (i.x = t / 2),
            (i.y = n / 2),
            e
              ? i.eachBefore(oy(e)).eachAfter(ay(r, 0.5)).eachBefore(sy(1))
              : i
                  .eachBefore(oy(ry))
                  .eachAfter(ay(ty, 1))
                  .eachAfter(ay(r, i.r / Math.min(t, n)))
                  .eachBefore(sy(Math.min(t, n) / (2 * i.r))),
            i
          );
        }
        return (
          (i.radius = function (t) {
            return arguments.length ? ((e = Jm(t)), i) : e;
          }),
          (i.size = function (e) {
            return arguments.length ? ((t = +e[0]), (n = +e[1]), i) : [t, n];
          }),
          (i.padding = function (e) {
            return arguments.length
              ? ((r = "function" === typeof e ? e : ny(+e)), i)
              : r;
          }),
          i
        );
      }
      function oy(e) {
        return function (t) {
          t.children || (t.r = Math.max(0, +e(t) || 0));
        };
      }
      function ay(e, t) {
        return function (n) {
          if ((r = n.children)) {
            var r,
              i,
              o,
              a = r.length,
              s = e(n) * t || 0;
            if (s) for (i = 0; i < a; ++i) r[i].r += s;
            if (((o = Km(r)), s)) for (i = 0; i < a; ++i) r[i].r -= s;
            n.r = o + s;
          }
        };
      }
      function sy(e) {
        return function (t) {
          var n = t.parent;
          (t.r *= e), n && ((t.x = n.x + e * t.x), (t.y = n.y + e * t.y));
        };
      }
      function uy(e) {
        (e.x0 = Math.round(e.x0)),
          (e.y0 = Math.round(e.y0)),
          (e.x1 = Math.round(e.x1)),
          (e.y1 = Math.round(e.y1));
      }
      function cy(e, t, n, r, i) {
        for (
          var o,
            a = e.children,
            s = -1,
            u = a.length,
            c = e.value && (r - t) / e.value;
          ++s < u;

        )
          ((o = a[s]).y0 = n),
            (o.y1 = i),
            (o.x0 = t),
            (o.x1 = t += o.value * c);
      }
      function ly() {
        var e = 1,
          t = 1,
          n = 0,
          r = !1;
        function i(i) {
          var o = i.height + 1;
          return (
            (i.x0 = i.y0 = n),
            (i.x1 = e),
            (i.y1 = t / o),
            i.eachBefore(
              (function (e, t) {
                return function (r) {
                  r.children &&
                    cy(
                      r,
                      r.x0,
                      (e * (r.depth + 1)) / t,
                      r.x1,
                      (e * (r.depth + 2)) / t
                    );
                  var i = r.x0,
                    o = r.y0,
                    a = r.x1 - n,
                    s = r.y1 - n;
                  a < i && (i = a = (i + a) / 2),
                    s < o && (o = s = (o + s) / 2),
                    (r.x0 = i),
                    (r.y0 = o),
                    (r.x1 = a),
                    (r.y1 = s);
                };
              })(t, o)
            ),
            r && i.eachBefore(uy),
            i
          );
        }
        return (
          (i.round = function (e) {
            return arguments.length ? ((r = !!e), i) : r;
          }),
          (i.size = function (n) {
            return arguments.length ? ((e = +n[0]), (t = +n[1]), i) : [e, t];
          }),
          (i.padding = function (e) {
            return arguments.length ? ((n = +e), i) : n;
          }),
          i
        );
      }
      var fy = { depth: -1 },
        dy = {};
      function hy(e) {
        return e.id;
      }
      function py(e) {
        return e.parentId;
      }
      function gy() {
        var e = hy,
          t = py;
        function n(n) {
          var r,
            i,
            o,
            a,
            s,
            u,
            c,
            l = n.length,
            f = new Array(l),
            d = {};
          for (i = 0; i < l; ++i)
            (r = n[i]),
              (s = f[i] = new Rm(r)),
              null != (u = e(r, i, n)) &&
                (u += "") &&
                (d[(c = "$" + (s.id = u))] = c in d ? dy : s);
          for (i = 0; i < l; ++i)
            if (((s = f[i]), null != (u = t(n[i], i, n)) && (u += ""))) {
              if (!(a = d["$" + u])) throw new Error("missing: " + u);
              if (a === dy) throw new Error("ambiguous: " + u);
              a.children ? a.children.push(s) : (a.children = [s]),
                (s.parent = a);
            } else {
              if (o) throw new Error("multiple roots");
              o = s;
            }
          if (!o) throw new Error("no root");
          if (
            ((o.parent = fy),
            o
              .eachBefore(function (e) {
                (e.depth = e.parent.depth + 1), --l;
              })
              .eachBefore(Dm),
            (o.parent = null),
            l > 0)
          )
            throw new Error("cycle");
          return o;
        }
        return (
          (n.id = function (t) {
            return arguments.length ? ((e = ey(t)), n) : e;
          }),
          (n.parentId = function (e) {
            return arguments.length ? ((t = ey(e)), n) : t;
          }),
          n
        );
      }
      function my(e, t) {
        return e.parent === t.parent ? 1 : 2;
      }
      function yy(e) {
        var t = e.children;
        return t ? t[0] : e.t;
      }
      function by(e) {
        var t = e.children;
        return t ? t[t.length - 1] : e.t;
      }
      function vy(e, t, n) {
        var r = n / (t.i - e.i);
        (t.c -= r), (t.s += n), (e.c += r), (t.z += n), (t.m += n);
      }
      function _y(e, t, n) {
        return e.a.parent === t.parent ? e.a : n;
      }
      function xy(e, t) {
        (this._ = e),
          (this.parent = null),
          (this.children = null),
          (this.A = null),
          (this.a = this),
          (this.z = 0),
          (this.m = 0),
          (this.c = 0),
          (this.s = 0),
          (this.t = null),
          (this.i = t);
      }
      function Ty() {
        var e = my,
          t = 1,
          n = 1,
          r = null;
        function i(i) {
          var u = (function (e) {
            for (var t, n, r, i, o, a = new xy(e, 0), s = [a]; (t = s.pop()); )
              if ((r = t._.children))
                for (
                  t.children = new Array((o = r.length)), i = o - 1;
                  i >= 0;
                  --i
                )
                  s.push((n = t.children[i] = new xy(r[i], i))), (n.parent = t);
            return ((a.parent = new xy(null, 0)).children = [a]), a;
          })(i);
          if ((u.eachAfter(o), (u.parent.m = -u.z), u.eachBefore(a), r))
            i.eachBefore(s);
          else {
            var c = i,
              l = i,
              f = i;
            i.eachBefore(function (e) {
              e.x < c.x && (c = e),
                e.x > l.x && (l = e),
                e.depth > f.depth && (f = e);
            });
            var d = c === l ? 1 : e(c, l) / 2,
              h = d - c.x,
              p = t / (l.x + d + h),
              g = n / (f.depth || 1);
            i.eachBefore(function (e) {
              (e.x = (e.x + h) * p), (e.y = e.depth * g);
            });
          }
          return i;
        }
        function o(t) {
          var n = t.children,
            r = t.parent.children,
            i = t.i ? r[t.i - 1] : null;
          if (n) {
            !(function (e) {
              for (
                var t, n = 0, r = 0, i = e.children, o = i.length;
                --o >= 0;

              )
                ((t = i[o]).z += n), (t.m += n), (n += t.s + (r += t.c));
            })(t);
            var o = (n[0].z + n[n.length - 1].z) / 2;
            i ? ((t.z = i.z + e(t._, i._)), (t.m = t.z - o)) : (t.z = o);
          } else i && (t.z = i.z + e(t._, i._));
          t.parent.A = (function (t, n, r) {
            if (n) {
              for (
                var i,
                  o = t,
                  a = t,
                  s = n,
                  u = o.parent.children[0],
                  c = o.m,
                  l = a.m,
                  f = s.m,
                  d = u.m;
                (s = by(s)), (o = yy(o)), s && o;

              )
                (u = yy(u)),
                  ((a = by(a)).a = t),
                  (i = s.z + f - o.z - c + e(s._, o._)) > 0 &&
                    (vy(_y(s, t, r), t, i), (c += i), (l += i)),
                  (f += s.m),
                  (c += o.m),
                  (d += u.m),
                  (l += a.m);
              s && !by(a) && ((a.t = s), (a.m += f - l)),
                o && !yy(u) && ((u.t = o), (u.m += c - d), (r = t));
            }
            return r;
          })(t, i, t.parent.A || r[0]);
        }
        function a(e) {
          (e._.x = e.z + e.parent.m), (e.m += e.parent.m);
        }
        function s(e) {
          (e.x *= t), (e.y = e.depth * n);
        }
        return (
          (i.separation = function (t) {
            return arguments.length ? ((e = t), i) : e;
          }),
          (i.size = function (e) {
            return arguments.length
              ? ((r = !1), (t = +e[0]), (n = +e[1]), i)
              : r
              ? null
              : [t, n];
          }),
          (i.nodeSize = function (e) {
            return arguments.length
              ? ((r = !0), (t = +e[0]), (n = +e[1]), i)
              : r
              ? [t, n]
              : null;
          }),
          i
        );
      }
      function My(e, t, n, r, i) {
        for (
          var o,
            a = e.children,
            s = -1,
            u = a.length,
            c = e.value && (i - n) / e.value;
          ++s < u;

        )
          ((o = a[s]).x0 = t),
            (o.x1 = r),
            (o.y0 = n),
            (o.y1 = n += o.value * c);
      }
      xy.prototype = Object.create(Rm.prototype);
      var wy = (1 + Math.sqrt(5)) / 2;
      function Ay(e, t, n, r, i, o) {
        for (
          var a,
            s,
            u,
            c,
            l,
            f,
            d,
            h,
            p,
            g,
            m,
            y = [],
            b = t.children,
            v = 0,
            _ = 0,
            x = b.length,
            T = t.value;
          v < x;

        ) {
          (u = i - n), (c = o - r);
          do {
            l = b[_++].value;
          } while (!l && _ < x);
          for (
            f = d = l,
              m = l * l * (g = Math.max(c / u, u / c) / (T * e)),
              p = Math.max(d / m, m / f);
            _ < x;
            ++_
          ) {
            if (
              ((l += s = b[_].value),
              s < f && (f = s),
              s > d && (d = s),
              (m = l * l * g),
              (h = Math.max(d / m, m / f)) > p)
            ) {
              l -= s;
              break;
            }
            p = h;
          }
          y.push((a = { value: l, dice: u < c, children: b.slice(v, _) })),
            a.dice
              ? cy(a, n, r, i, T ? (r += (c * l) / T) : o)
              : My(a, n, r, T ? (n += (u * l) / T) : i, o),
            (T -= l),
            (v = _);
        }
        return y;
      }
      var ky = (function e(t) {
        function n(e, n, r, i, o) {
          Ay(t, e, n, r, i, o);
        }
        return (
          (n.ratio = function (t) {
            return e((t = +t) > 1 ? t : 1);
          }),
          n
        );
      })(wy);
      function Ey() {
        var e = ky,
          t = !1,
          n = 1,
          r = 1,
          i = [0],
          o = ty,
          a = ty,
          s = ty,
          u = ty,
          c = ty;
        function l(e) {
          return (
            (e.x0 = e.y0 = 0),
            (e.x1 = n),
            (e.y1 = r),
            e.eachBefore(f),
            (i = [0]),
            t && e.eachBefore(uy),
            e
          );
        }
        function f(t) {
          var n = i[t.depth],
            r = t.x0 + n,
            l = t.y0 + n,
            f = t.x1 - n,
            d = t.y1 - n;
          f < r && (r = f = (r + f) / 2),
            d < l && (l = d = (l + d) / 2),
            (t.x0 = r),
            (t.y0 = l),
            (t.x1 = f),
            (t.y1 = d),
            t.children &&
              ((n = i[t.depth + 1] = o(t) / 2),
              (r += c(t) - n),
              (l += a(t) - n),
              (f -= s(t) - n) < r && (r = f = (r + f) / 2),
              (d -= u(t) - n) < l && (l = d = (l + d) / 2),
              e(t, r, l, f, d));
        }
        return (
          (l.round = function (e) {
            return arguments.length ? ((t = !!e), l) : t;
          }),
          (l.size = function (e) {
            return arguments.length ? ((n = +e[0]), (r = +e[1]), l) : [n, r];
          }),
          (l.tile = function (t) {
            return arguments.length ? ((e = ey(t)), l) : e;
          }),
          (l.padding = function (e) {
            return arguments.length
              ? l.paddingInner(e).paddingOuter(e)
              : l.paddingInner();
          }),
          (l.paddingInner = function (e) {
            return arguments.length
              ? ((o = "function" === typeof e ? e : ny(+e)), l)
              : o;
          }),
          (l.paddingOuter = function (e) {
            return arguments.length
              ? l.paddingTop(e).paddingRight(e).paddingBottom(e).paddingLeft(e)
              : l.paddingTop();
          }),
          (l.paddingTop = function (e) {
            return arguments.length
              ? ((a = "function" === typeof e ? e : ny(+e)), l)
              : a;
          }),
          (l.paddingRight = function (e) {
            return arguments.length
              ? ((s = "function" === typeof e ? e : ny(+e)), l)
              : s;
          }),
          (l.paddingBottom = function (e) {
            return arguments.length
              ? ((u = "function" === typeof e ? e : ny(+e)), l)
              : u;
          }),
          (l.paddingLeft = function (e) {
            return arguments.length
              ? ((c = "function" === typeof e ? e : ny(+e)), l)
              : c;
          }),
          l
        );
      }
      function Py(e, t, n, r, i) {
        var o,
          a,
          s = e.children,
          u = s.length,
          c = new Array(u + 1);
        for (c[0] = a = o = 0; o < u; ++o) c[o + 1] = a += s[o].value;
        !(function e(t, n, r, i, o, a, u) {
          if (t >= n - 1) {
            var l = s[t];
            return (l.x0 = i), (l.y0 = o), (l.x1 = a), void (l.y1 = u);
          }
          var f = c[t],
            d = r / 2 + f,
            h = t + 1,
            p = n - 1;
          for (; h < p; ) {
            var g = (h + p) >>> 1;
            c[g] < d ? (h = g + 1) : (p = g);
          }
          d - c[h - 1] < c[h] - d && t + 1 < h && --h;
          var m = c[h] - f,
            y = r - m;
          if (a - i > u - o) {
            var b = (i * y + a * m) / r;
            e(t, h, m, i, o, b, u), e(h, n, y, b, o, a, u);
          } else {
            var v = (o * y + u * m) / r;
            e(t, h, m, i, o, a, v), e(h, n, y, i, v, a, u);
          }
        })(0, u, e.value, t, n, r, i);
      }
      function Cy(e, t, n, r, i) {
        (1 & e.depth ? My : cy)(e, t, n, r, i);
      }
      var Ly = (function e(t) {
        function n(e, n, r, i, o) {
          if ((a = e._squarify) && a.ratio === t)
            for (
              var a, s, u, c, l, f = -1, d = a.length, h = e.value;
              ++f < d;

            ) {
              for (
                u = (s = a[f]).children, c = s.value = 0, l = u.length;
                c < l;
                ++c
              )
                s.value += u[c].value;
              s.dice
                ? cy(s, n, r, i, (r += ((o - r) * s.value) / h))
                : My(s, n, r, (n += ((i - n) * s.value) / h), o),
                (h -= s.value);
            }
          else (e._squarify = a = Ay(t, e, n, r, i, o)), (a.ratio = t);
        }
        return (
          (n.ratio = function (t) {
            return e((t = +t) > 1 ? t : 1);
          }),
          n
        );
      })(wy);
      function Iy(e, t, n, r, i) {
        var o = e * e,
          a = o * e;
        return (
          ((1 - 3 * e + 3 * o - a) * t +
            (4 - 6 * o + 3 * a) * n +
            (1 + 3 * e + 3 * o - 3 * a) * r +
            a * i) /
          6
        );
      }
      function Sy(e) {
        var t = e.length - 1;
        return function (n) {
          var r =
              n <= 0 ? (n = 0) : n >= 1 ? ((n = 1), t - 1) : Math.floor(n * t),
            i = e[r],
            o = e[r + 1],
            a = r > 0 ? e[r - 1] : 2 * i - o,
            s = r < t - 1 ? e[r + 2] : 2 * o - i;
          return Iy((n - r / t) * t, a, i, o, s);
        };
      }
      function Oy(e) {
        var t = e.length;
        return function (n) {
          var r = Math.floor(((n %= 1) < 0 ? ++n : n) * t),
            i = e[(r + t - 1) % t],
            o = e[r % t],
            a = e[(r + 1) % t],
            s = e[(r + 2) % t];
          return Iy((n - r / t) * t, i, o, a, s);
        };
      }
      function Ny(e) {
        return function () {
          return e;
        };
      }
      function Fy(e, t) {
        return function (n) {
          return e + n * t;
        };
      }
      function Dy(e, t) {
        var n = t - e;
        return n
          ? Fy(e, n > 180 || n < -180 ? n - 360 * Math.round(n / 360) : n)
          : Ny(isNaN(e) ? t : e);
      }
      function Ry(e) {
        return 1 === (e = +e)
          ? Gy
          : function (t, n) {
              return n - t
                ? (function (e, t, n) {
                    return (
                      (e = Math.pow(e, n)),
                      (t = Math.pow(t, n) - e),
                      (n = 1 / n),
                      function (r) {
                        return Math.pow(e + r * t, n);
                      }
                    );
                  })(t, n, e)
                : Ny(isNaN(t) ? n : t);
            };
      }
      function Gy(e, t) {
        var n = t - e;
        return n ? Fy(e, n) : Ny(isNaN(e) ? t : e);
      }
      var By = (function e(t) {
        var n = Ry(t);
        function r(e, t) {
          var r = n((e = wu(e)).r, (t = wu(t)).r),
            i = n(e.g, t.g),
            o = n(e.b, t.b),
            a = Gy(e.opacity, t.opacity);
          return function (t) {
            return (
              (e.r = r(t)),
              (e.g = i(t)),
              (e.b = o(t)),
              (e.opacity = a(t)),
              e + ""
            );
          };
        }
        return (r.gamma = e), r;
      })(1);
      function Wy(e) {
        return function (t) {
          var n,
            r,
            i = t.length,
            o = new Array(i),
            a = new Array(i),
            s = new Array(i);
          for (n = 0; n < i; ++n)
            (r = wu(t[n])),
              (o[n] = r.r || 0),
              (a[n] = r.g || 0),
              (s[n] = r.b || 0);
          return (
            (o = e(o)),
            (a = e(a)),
            (s = e(s)),
            (r.opacity = 1),
            function (e) {
              return (r.r = o(e)), (r.g = a(e)), (r.b = s(e)), r + "";
            }
          );
        };
      }
      var jy = Wy(Sy),
        zy = Wy(Oy);
      function Uy(e, t) {
        t || (t = []);
        var n,
          r = e ? Math.min(t.length, e.length) : 0,
          i = t.slice();
        return function (o) {
          for (n = 0; n < r; ++n) i[n] = e[n] * (1 - o) + t[n] * o;
          return i;
        };
      }
      function Hy(e) {
        return ArrayBuffer.isView(e) && !(e instanceof DataView);
      }
      function Vy(e, t) {
        return (Hy(t) ? Uy : qy)(e, t);
      }
      function qy(e, t) {
        var n,
          r = t ? t.length : 0,
          i = e ? Math.min(r, e.length) : 0,
          o = new Array(i),
          a = new Array(r);
        for (n = 0; n < i; ++n) o[n] = Jy(e[n], t[n]);
        for (; n < r; ++n) a[n] = t[n];
        return function (e) {
          for (n = 0; n < i; ++n) a[n] = o[n](e);
          return a;
        };
      }
      function Zy(e, t) {
        var n = new Date();
        return (
          (e = +e),
          (t = +t),
          function (r) {
            return n.setTime(e * (1 - r) + t * r), n;
          }
        );
      }
      function Yy(e, t) {
        return (
          (e = +e),
          (t = +t),
          function (n) {
            return e * (1 - n) + t * n;
          }
        );
      }
      function Xy(e, t) {
        var n,
          r = {},
          i = {};
        for (n in ((null !== e && "object" === typeof e) || (e = {}),
        (null !== t && "object" === typeof t) || (t = {}),
        t))
          n in e ? (r[n] = Jy(e[n], t[n])) : (i[n] = t[n]);
        return function (e) {
          for (n in r) i[n] = r[n](e);
          return i;
        };
      }
      var $y = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
        Ky = new RegExp($y.source, "g");
      function Qy(e, t) {
        var n,
          r,
          i,
          o = ($y.lastIndex = Ky.lastIndex = 0),
          a = -1,
          s = [],
          u = [];
        for (e += "", t += ""; (n = $y.exec(e)) && (r = Ky.exec(t)); )
          (i = r.index) > o &&
            ((i = t.slice(o, i)), s[a] ? (s[a] += i) : (s[++a] = i)),
            (n = n[0]) === (r = r[0])
              ? s[a]
                ? (s[a] += r)
                : (s[++a] = r)
              : ((s[++a] = null), u.push({ i: a, x: Yy(n, r) })),
            (o = Ky.lastIndex);
        return (
          o < t.length && ((i = t.slice(o)), s[a] ? (s[a] += i) : (s[++a] = i)),
          s.length < 2
            ? u[0]
              ? (function (e) {
                  return function (t) {
                    return e(t) + "";
                  };
                })(u[0].x)
              : (function (e) {
                  return function () {
                    return e;
                  };
                })(t)
            : ((t = u.length),
              function (e) {
                for (var n, r = 0; r < t; ++r) s[(n = u[r]).i] = n.x(e);
                return s.join("");
              })
        );
      }
      function Jy(e, t) {
        var n,
          r = typeof t;
        return null == t || "boolean" === r
          ? Ny(t)
          : ("number" === r
              ? Yy
              : "string" === r
              ? (n = _u(t))
                ? ((t = n), By)
                : Qy
              : t instanceof _u
              ? By
              : t instanceof Date
              ? Zy
              : Hy(t)
              ? Uy
              : Array.isArray(t)
              ? qy
              : ("function" !== typeof t.valueOf &&
                  "function" !== typeof t.toString) ||
                isNaN(t)
              ? Xy
              : Yy)(e, t);
      }
      function eb(e) {
        var t = e.length;
        return function (n) {
          return e[Math.max(0, Math.min(t - 1, Math.floor(n * t)))];
        };
      }
      function tb(e, t) {
        var n = Dy(+e, +t);
        return function (e) {
          var t = n(e);
          return t - 360 * Math.floor(t / 360);
        };
      }
      function nb(e, t) {
        return (
          (e = +e),
          (t = +t),
          function (n) {
            return Math.round(e * (1 - n) + t * n);
          }
        );
      }
      var rb,
        ib,
        ob,
        ab,
        sb = 180 / Math.PI,
        ub = {
          translateX: 0,
          translateY: 0,
          rotate: 0,
          skewX: 0,
          scaleX: 1,
          scaleY: 1,
        };
      function cb(e, t, n, r, i, o) {
        var a, s, u;
        return (
          (a = Math.sqrt(e * e + t * t)) && ((e /= a), (t /= a)),
          (u = e * n + t * r) && ((n -= e * u), (r -= t * u)),
          (s = Math.sqrt(n * n + r * r)) && ((n /= s), (r /= s), (u /= s)),
          e * r < t * n && ((e = -e), (t = -t), (u = -u), (a = -a)),
          {
            translateX: i,
            translateY: o,
            rotate: Math.atan2(t, e) * sb,
            skewX: Math.atan(u) * sb,
            scaleX: a,
            scaleY: s,
          }
        );
      }
      function lb(e, t, n, r) {
        function i(e) {
          return e.length ? e.pop() + " " : "";
        }
        return function (o, a) {
          var s = [],
            u = [];
          return (
            (o = e(o)),
            (a = e(a)),
            (function (e, r, i, o, a, s) {
              if (e !== i || r !== o) {
                var u = a.push("translate(", null, t, null, n);
                s.push({ i: u - 4, x: Yy(e, i) }, { i: u - 2, x: Yy(r, o) });
              } else (i || o) && a.push("translate(" + i + t + o + n);
            })(o.translateX, o.translateY, a.translateX, a.translateY, s, u),
            (function (e, t, n, o) {
              e !== t
                ? (e - t > 180 ? (t += 360) : t - e > 180 && (e += 360),
                  o.push({
                    i: n.push(i(n) + "rotate(", null, r) - 2,
                    x: Yy(e, t),
                  }))
                : t && n.push(i(n) + "rotate(" + t + r);
            })(o.rotate, a.rotate, s, u),
            (function (e, t, n, o) {
              e !== t
                ? o.push({
                    i: n.push(i(n) + "skewX(", null, r) - 2,
                    x: Yy(e, t),
                  })
                : t && n.push(i(n) + "skewX(" + t + r);
            })(o.skewX, a.skewX, s, u),
            (function (e, t, n, r, o, a) {
              if (e !== n || t !== r) {
                var s = o.push(i(o) + "scale(", null, ",", null, ")");
                a.push({ i: s - 4, x: Yy(e, n) }, { i: s - 2, x: Yy(t, r) });
              } else
                (1 === n && 1 === r) ||
                  o.push(i(o) + "scale(" + n + "," + r + ")");
            })(o.scaleX, o.scaleY, a.scaleX, a.scaleY, s, u),
            (o = a = null),
            function (e) {
              for (var t, n = -1, r = u.length; ++n < r; )
                s[(t = u[n]).i] = t.x(e);
              return s.join("");
            }
          );
        };
      }
      var fb = lb(
          function (e) {
            return "none" === e
              ? ub
              : (rb ||
                  ((rb = document.createElement("DIV")),
                  (ib = document.documentElement),
                  (ob = document.defaultView)),
                (rb.style.transform = e),
                (e = ob
                  .getComputedStyle(ib.appendChild(rb), null)
                  .getPropertyValue("transform")),
                ib.removeChild(rb),
                cb(
                  +(e = e.slice(7, -1).split(","))[0],
                  +e[1],
                  +e[2],
                  +e[3],
                  +e[4],
                  +e[5]
                ));
          },
          "px, ",
          "px)",
          "deg)"
        ),
        db = lb(
          function (e) {
            return null == e
              ? ub
              : (ab ||
                  (ab = document.createElementNS(
                    "http://www.w3.org/2000/svg",
                    "g"
                  )),
                ab.setAttribute("transform", e),
                (e = ab.transform.baseVal.consolidate())
                  ? cb((e = e.matrix).a, e.b, e.c, e.d, e.e, e.f)
                  : ub);
          },
          ", ",
          ")",
          ")"
        ),
        hb = Math.SQRT2;
      function pb(e) {
        return ((e = Math.exp(e)) + 1 / e) / 2;
      }
      function gb(e, t) {
        var n,
          r,
          i = e[0],
          o = e[1],
          a = e[2],
          s = t[0],
          u = t[1],
          c = t[2],
          l = s - i,
          f = u - o,
          d = l * l + f * f;
        if (d < 1e-12)
          (r = Math.log(c / a) / hb),
            (n = function (e) {
              return [i + e * l, o + e * f, a * Math.exp(hb * e * r)];
            });
        else {
          var h = Math.sqrt(d),
            p = (c * c - a * a + 4 * d) / (2 * a * 2 * h),
            g = (c * c - a * a - 4 * d) / (2 * c * 2 * h),
            m = Math.log(Math.sqrt(p * p + 1) - p),
            y = Math.log(Math.sqrt(g * g + 1) - g);
          (r = (y - m) / hb),
            (n = function (e) {
              var t = e * r,
                n = pb(m),
                s =
                  (a / (2 * h)) *
                  (n *
                    (function (e) {
                      return ((e = Math.exp(2 * e)) - 1) / (e + 1);
                    })(hb * t + m) -
                    (function (e) {
                      return ((e = Math.exp(e)) - 1 / e) / 2;
                    })(m));
              return [i + s * l, o + s * f, (a * n) / pb(hb * t + m)];
            });
        }
        return (n.duration = 1e3 * r), n;
      }
      function mb(e) {
        return function (t, n) {
          var r = e((t = Iu(t)).h, (n = Iu(n)).h),
            i = Gy(t.s, n.s),
            o = Gy(t.l, n.l),
            a = Gy(t.opacity, n.opacity);
          return function (e) {
            return (
              (t.h = r(e)),
              (t.s = i(e)),
              (t.l = o(e)),
              (t.opacity = a(e)),
              t + ""
            );
          };
        };
      }
      var yb = mb(Dy),
        bb = mb(Gy);
      function vb(e, t) {
        var n = Gy((e = Uu(e)).l, (t = Uu(t)).l),
          r = Gy(e.a, t.a),
          i = Gy(e.b, t.b),
          o = Gy(e.opacity, t.opacity);
        return function (t) {
          return (
            (e.l = n(t)), (e.a = r(t)), (e.b = i(t)), (e.opacity = o(t)), e + ""
          );
        };
      }
      function _b(e) {
        return function (t, n) {
          var r = e((t = Ku(t)).h, (n = Ku(n)).h),
            i = Gy(t.c, n.c),
            o = Gy(t.l, n.l),
            a = Gy(t.opacity, n.opacity);
          return function (e) {
            return (
              (t.h = r(e)),
              (t.c = i(e)),
              (t.l = o(e)),
              (t.opacity = a(e)),
              t + ""
            );
          };
        };
      }
      var xb = _b(Dy),
        Tb = _b(Gy);
      function Mb(e) {
        return (function t(n) {
          function r(t, r) {
            var i = e((t = cc(t)).h, (r = cc(r)).h),
              o = Gy(t.s, r.s),
              a = Gy(t.l, r.l),
              s = Gy(t.opacity, r.opacity);
            return function (e) {
              return (
                (t.h = i(e)),
                (t.s = o(e)),
                (t.l = a(Math.pow(e, n))),
                (t.opacity = s(e)),
                t + ""
              );
            };
          }
          return (n = +n), (r.gamma = t), r;
        })(1);
      }
      var wb = Mb(Dy),
        Ab = Mb(Gy);
      function kb(e, t) {
        for (
          var n = 0, r = t.length - 1, i = t[0], o = new Array(r < 0 ? 0 : r);
          n < r;

        )
          o[n] = e(i, (i = t[++n]));
        return function (e) {
          var t = Math.max(0, Math.min(r - 1, Math.floor((e *= r))));
          return o[t](e - t);
        };
      }
      function Eb(e, t) {
        for (var n = new Array(t), r = 0; r < t; ++r) n[r] = e(r / (t - 1));
        return n;
      }
      function Pb(e) {
        for (var t, n = -1, r = e.length, i = e[r - 1], o = 0; ++n < r; )
          (t = i), (i = e[n]), (o += t[1] * i[0] - t[0] * i[1]);
        return o / 2;
      }
      function Cb(e) {
        for (
          var t, n, r = -1, i = e.length, o = 0, a = 0, s = e[i - 1], u = 0;
          ++r < i;

        )
          (t = s),
            (s = e[r]),
            (u += n = t[0] * s[1] - s[0] * t[1]),
            (o += (t[0] + s[0]) * n),
            (a += (t[1] + s[1]) * n);
        return [o / (u *= 3), a / u];
      }
      function Lb(e, t, n) {
        return (t[0] - e[0]) * (n[1] - e[1]) - (t[1] - e[1]) * (n[0] - e[0]);
      }
      function Ib(e, t) {
        return e[0] - t[0] || e[1] - t[1];
      }
      function Sb(e) {
        for (var t = e.length, n = [0, 1], r = 2, i = 2; i < t; ++i) {
          for (; r > 1 && Lb(e[n[r - 2]], e[n[r - 1]], e[i]) <= 0; ) --r;
          n[r++] = i;
        }
        return n.slice(0, r);
      }
      function Ob(e) {
        if ((n = e.length) < 3) return null;
        var t,
          n,
          r = new Array(n),
          i = new Array(n);
        for (t = 0; t < n; ++t) r[t] = [+e[t][0], +e[t][1], t];
        for (r.sort(Ib), t = 0; t < n; ++t) i[t] = [r[t][0], -r[t][1]];
        var o = Sb(r),
          a = Sb(i),
          s = a[0] === o[0],
          u = a[a.length - 1] === o[o.length - 1],
          c = [];
        for (t = o.length - 1; t >= 0; --t) c.push(e[r[o[t]][2]]);
        for (t = +s; t < a.length - u; ++t) c.push(e[r[a[t]][2]]);
        return c;
      }
      function Nb(e, t) {
        for (
          var n,
            r,
            i = e.length,
            o = e[i - 1],
            a = t[0],
            s = t[1],
            u = o[0],
            c = o[1],
            l = !1,
            f = 0;
          f < i;
          ++f
        )
          (n = (o = e[f])[0]),
            (r = o[1]) > s !== c > s &&
              a < ((u - n) * (s - r)) / (c - r) + n &&
              (l = !l),
            (u = n),
            (c = r);
        return l;
      }
      function Fb(e) {
        for (
          var t,
            n,
            r = -1,
            i = e.length,
            o = e[i - 1],
            a = o[0],
            s = o[1],
            u = 0;
          ++r < i;

        )
          (t = a),
            (n = s),
            (t -= a = (o = e[r])[0]),
            (n -= s = o[1]),
            (u += Math.sqrt(t * t + n * n));
        return u;
      }
      function Db() {
        return Math.random();
      }
      var Rb = (function e(t) {
          function n(e, n) {
            return (
              (e = null == e ? 0 : +e),
              (n = null == n ? 1 : +n),
              1 === arguments.length ? ((n = e), (e = 0)) : (n -= e),
              function () {
                return t() * n + e;
              }
            );
          }
          return (n.source = e), n;
        })(Db),
        Gb = (function e(t) {
          function n(e, n) {
            var r, i;
            return (
              (e = null == e ? 0 : +e),
              (n = null == n ? 1 : +n),
              function () {
                var o;
                if (null != r) (o = r), (r = null);
                else
                  do {
                    (r = 2 * t() - 1), (o = 2 * t() - 1), (i = r * r + o * o);
                  } while (!i || i > 1);
                return e + n * o * Math.sqrt((-2 * Math.log(i)) / i);
              }
            );
          }
          return (n.source = e), n;
        })(Db),
        Bb = (function e(t) {
          function n() {
            var e = Gb.source(t).apply(this, arguments);
            return function () {
              return Math.exp(e());
            };
          }
          return (n.source = e), n;
        })(Db),
        Wb = (function e(t) {
          function n(e) {
            return function () {
              for (var n = 0, r = 0; r < e; ++r) n += t();
              return n;
            };
          }
          return (n.source = e), n;
        })(Db),
        jb = (function e(t) {
          function n(e) {
            var n = Wb.source(t)(e);
            return function () {
              return n() / e;
            };
          }
          return (n.source = e), n;
        })(Db),
        zb = (function e(t) {
          function n(e) {
            return function () {
              return -Math.log(1 - t()) / e;
            };
          }
          return (n.source = e), n;
        })(Db);
      function Ub(e, t) {
        switch (arguments.length) {
          case 0:
            break;
          case 1:
            this.range(e);
            break;
          default:
            this.range(t).domain(e);
        }
        return this;
      }
      function Hb(e, t) {
        switch (arguments.length) {
          case 0:
            break;
          case 1:
            this.interpolator(e);
            break;
          default:
            this.interpolator(t).domain(e);
        }
        return this;
      }
      var Vb = Array.prototype,
        qb = Vb.map,
        Zb = Vb.slice,
        Yb = { name: "implicit" };
      function Xb() {
        var e = Us(),
          t = [],
          n = [],
          r = Yb;
        function i(i) {
          var o = i + "",
            a = e.get(o);
          if (!a) {
            if (r !== Yb) return r;
            e.set(o, (a = t.push(i)));
          }
          return n[(a - 1) % n.length];
        }
        return (
          (i.domain = function (n) {
            if (!arguments.length) return t.slice();
            (t = []), (e = Us());
            for (var r, o, a = -1, s = n.length; ++a < s; )
              e.has((o = (r = n[a]) + "")) || e.set(o, t.push(r));
            return i;
          }),
          (i.range = function (e) {
            return arguments.length ? ((n = Zb.call(e)), i) : n.slice();
          }),
          (i.unknown = function (e) {
            return arguments.length ? ((r = e), i) : r;
          }),
          (i.copy = function () {
            return Xb(t, n).unknown(r);
          }),
          Ub.apply(i, arguments),
          i
        );
      }
      function $b() {
        var e,
          t,
          n = Xb().unknown(void 0),
          r = n.domain,
          i = n.range,
          o = [0, 1],
          a = !1,
          s = 0,
          u = 0,
          c = 0.5;
        function l() {
          var n = r().length,
            l = o[1] < o[0],
            f = o[l - 0],
            d = o[1 - l];
          (e = (d - f) / Math.max(1, n - s + 2 * u)),
            a && (e = Math.floor(e)),
            (f += (d - f - e * (n - s)) * c),
            (t = e * (1 - s)),
            a && ((f = Math.round(f)), (t = Math.round(t)));
          var h = M(n).map(function (t) {
            return f + e * t;
          });
          return i(l ? h.reverse() : h);
        }
        return (
          delete n.unknown,
          (n.domain = function (e) {
            return arguments.length ? (r(e), l()) : r();
          }),
          (n.range = function (e) {
            return arguments.length ? ((o = [+e[0], +e[1]]), l()) : o.slice();
          }),
          (n.rangeRound = function (e) {
            return (o = [+e[0], +e[1]]), (a = !0), l();
          }),
          (n.bandwidth = function () {
            return t;
          }),
          (n.step = function () {
            return e;
          }),
          (n.round = function (e) {
            return arguments.length ? ((a = !!e), l()) : a;
          }),
          (n.padding = function (e) {
            return arguments.length ? ((s = Math.min(1, (u = +e))), l()) : s;
          }),
          (n.paddingInner = function (e) {
            return arguments.length ? ((s = Math.min(1, e)), l()) : s;
          }),
          (n.paddingOuter = function (e) {
            return arguments.length ? ((u = +e), l()) : u;
          }),
          (n.align = function (e) {
            return arguments.length
              ? ((c = Math.max(0, Math.min(1, e))), l())
              : c;
          }),
          (n.copy = function () {
            return $b(r(), o).round(a).paddingInner(s).paddingOuter(u).align(c);
          }),
          Ub.apply(l(), arguments)
        );
      }
      function Kb(e) {
        var t = e.copy;
        return (
          (e.padding = e.paddingOuter),
          delete e.paddingInner,
          delete e.paddingOuter,
          (e.copy = function () {
            return Kb(t());
          }),
          e
        );
      }
      function Qb() {
        return Kb($b.apply(null, arguments).paddingInner(1));
      }
      function Jb(e) {
        return +e;
      }
      var ev = [0, 1];
      function tv(e) {
        return e;
      }
      function nv(e, t) {
        return (t -= e = +e)
          ? function (n) {
              return (n - e) / t;
            }
          : (function (e) {
              return function () {
                return e;
              };
            })(isNaN(t) ? NaN : 0.5);
      }
      function rv(e) {
        var t,
          n = e[0],
          r = e[e.length - 1];
        return (
          n > r && ((t = n), (n = r), (r = t)),
          function (e) {
            return Math.max(n, Math.min(r, e));
          }
        );
      }
      function iv(e, t, n) {
        var r = e[0],
          i = e[1],
          o = t[0],
          a = t[1];
        return (
          i < r
            ? ((r = nv(i, r)), (o = n(a, o)))
            : ((r = nv(r, i)), (o = n(o, a))),
          function (e) {
            return o(r(e));
          }
        );
      }
      function ov(e, t, n) {
        var r = Math.min(e.length, t.length) - 1,
          i = new Array(r),
          o = new Array(r),
          a = -1;
        for (
          e[r] < e[0] && ((e = e.slice().reverse()), (t = t.slice().reverse()));
          ++a < r;

        )
          (i[a] = nv(e[a], e[a + 1])), (o[a] = n(t[a], t[a + 1]));
        return function (t) {
          var n = c(e, t, 1, r) - 1;
          return o[n](i[n](t));
        };
      }
      function av(e, t) {
        return t
          .domain(e.domain())
          .range(e.range())
          .interpolate(e.interpolate())
          .clamp(e.clamp())
          .unknown(e.unknown());
      }
      function sv() {
        var e,
          t,
          n,
          r,
          i,
          o,
          a = ev,
          s = ev,
          u = Jy,
          c = tv;
        function l() {
          return (
            (r = Math.min(a.length, s.length) > 2 ? ov : iv), (i = o = null), f
          );
        }
        function f(t) {
          return isNaN((t = +t)) ? n : (i || (i = r(a.map(e), s, u)))(e(c(t)));
        }
        return (
          (f.invert = function (n) {
            return c(t((o || (o = r(s, a.map(e), Yy)))(n)));
          }),
          (f.domain = function (e) {
            return arguments.length
              ? ((a = qb.call(e, Jb)), c === tv || (c = rv(a)), l())
              : a.slice();
          }),
          (f.range = function (e) {
            return arguments.length ? ((s = Zb.call(e)), l()) : s.slice();
          }),
          (f.rangeRound = function (e) {
            return (s = Zb.call(e)), (u = nb), l();
          }),
          (f.clamp = function (e) {
            return arguments.length ? ((c = e ? rv(a) : tv), f) : c !== tv;
          }),
          (f.interpolate = function (e) {
            return arguments.length ? ((u = e), l()) : u;
          }),
          (f.unknown = function (e) {
            return arguments.length ? ((n = e), f) : n;
          }),
          function (n, r) {
            return (e = n), (t = r), l();
          }
        );
      }
      function uv(e, t) {
        return sv()(e, t);
      }
      function cv(e, t, n, r) {
        var i,
          o = C(e, t, n);
        switch ((r = (0, Mf.Z)(null == r ? ",f" : r)).type) {
          case "s":
            var a = Math.max(Math.abs(e), Math.abs(t));
            return (
              null != r.precision || isNaN((i = kf(o, a))) || (r.precision = i),
              (0, xf.jH)(r, a)
            );
          case "":
          case "e":
          case "g":
          case "p":
          case "r":
            null != r.precision ||
              isNaN((i = Ef(o, Math.max(Math.abs(e), Math.abs(t))))) ||
              (r.precision = i - ("e" === r.type));
            break;
          case "f":
          case "%":
            null != r.precision ||
              isNaN((i = Af(o))) ||
              (r.precision = i - 2 * ("%" === r.type));
        }
        return (0, xf.WU)(r);
      }
      function lv(e) {
        var t = e.domain;
        return (
          (e.ticks = function (e) {
            var n = t();
            return E(n[0], n[n.length - 1], null == e ? 10 : e);
          }),
          (e.tickFormat = function (e, n) {
            var r = t();
            return cv(r[0], r[r.length - 1], null == e ? 10 : e, n);
          }),
          (e.nice = function (n) {
            null == n && (n = 10);
            var r,
              i = t(),
              o = 0,
              a = i.length - 1,
              s = i[o],
              u = i[a];
            return (
              u < s && ((r = s), (s = u), (u = r), (r = o), (o = a), (a = r)),
              (r = P(s, u, n)) > 0
                ? (r = P(
                    (s = Math.floor(s / r) * r),
                    (u = Math.ceil(u / r) * r),
                    n
                  ))
                : r < 0 &&
                  (r = P(
                    (s = Math.ceil(s * r) / r),
                    (u = Math.floor(u * r) / r),
                    n
                  )),
              r > 0
                ? ((i[o] = Math.floor(s / r) * r),
                  (i[a] = Math.ceil(u / r) * r),
                  t(i))
                : r < 0 &&
                  ((i[o] = Math.ceil(s * r) / r),
                  (i[a] = Math.floor(u * r) / r),
                  t(i)),
              e
            );
          }),
          e
        );
      }
      function fv() {
        var e = uv(tv, tv);
        return (
          (e.copy = function () {
            return av(e, fv());
          }),
          Ub.apply(e, arguments),
          lv(e)
        );
      }
      function dv(e) {
        var t;
        function n(e) {
          return isNaN((e = +e)) ? t : e;
        }
        return (
          (n.invert = n),
          (n.domain = n.range =
            function (t) {
              return arguments.length ? ((e = qb.call(t, Jb)), n) : e.slice();
            }),
          (n.unknown = function (e) {
            return arguments.length ? ((t = e), n) : t;
          }),
          (n.copy = function () {
            return dv(e).unknown(t);
          }),
          (e = arguments.length ? qb.call(e, Jb) : [0, 1]),
          lv(n)
        );
      }
      function hv(e, t) {
        var n,
          r = 0,
          i = (e = e.slice()).length - 1,
          o = e[r],
          a = e[i];
        return (
          a < o && ((n = r), (r = i), (i = n), (n = o), (o = a), (a = n)),
          (e[r] = t.floor(o)),
          (e[i] = t.ceil(a)),
          e
        );
      }
      function pv(e) {
        return Math.log(e);
      }
      function gv(e) {
        return Math.exp(e);
      }
      function mv(e) {
        return -Math.log(-e);
      }
      function yv(e) {
        return -Math.exp(-e);
      }
      function bv(e) {
        return isFinite(e) ? +("1e" + e) : e < 0 ? 0 : e;
      }
      function vv(e) {
        return function (t) {
          return -e(-t);
        };
      }
      function _v(e) {
        var t,
          n,
          r = e(pv, gv),
          i = r.domain,
          o = 10;
        function a() {
          return (
            (t = (function (e) {
              return e === Math.E
                ? Math.log
                : (10 === e && Math.log10) ||
                    (2 === e && Math.log2) ||
                    ((e = Math.log(e)),
                    function (t) {
                      return Math.log(t) / e;
                    });
            })(o)),
            (n = (function (e) {
              return 10 === e
                ? bv
                : e === Math.E
                ? Math.exp
                : function (t) {
                    return Math.pow(e, t);
                  };
            })(o)),
            i()[0] < 0 ? ((t = vv(t)), (n = vv(n)), e(mv, yv)) : e(pv, gv),
            r
          );
        }
        return (
          (r.base = function (e) {
            return arguments.length ? ((o = +e), a()) : o;
          }),
          (r.domain = function (e) {
            return arguments.length ? (i(e), a()) : i();
          }),
          (r.ticks = function (e) {
            var r,
              a = i(),
              s = a[0],
              u = a[a.length - 1];
            (r = u < s) && ((d = s), (s = u), (u = d));
            var c,
              l,
              f,
              d = t(s),
              h = t(u),
              p = null == e ? 10 : +e,
              g = [];
            if (!(o % 1) && h - d < p) {
              if (((d = Math.round(d) - 1), (h = Math.round(h) + 1), s > 0)) {
                for (; d < h; ++d)
                  for (l = 1, c = n(d); l < o; ++l)
                    if (!((f = c * l) < s)) {
                      if (f > u) break;
                      g.push(f);
                    }
              } else
                for (; d < h; ++d)
                  for (l = o - 1, c = n(d); l >= 1; --l)
                    if (!((f = c * l) < s)) {
                      if (f > u) break;
                      g.push(f);
                    }
            } else g = E(d, h, Math.min(h - d, p)).map(n);
            return r ? g.reverse() : g;
          }),
          (r.tickFormat = function (e, i) {
            if (
              (null == i && (i = 10 === o ? ".0e" : ","),
              "function" !== typeof i && (i = (0, xf.WU)(i)),
              e === 1 / 0)
            )
              return i;
            null == e && (e = 10);
            var a = Math.max(1, (o * e) / r.ticks().length);
            return function (e) {
              var r = e / n(Math.round(t(e)));
              return r * o < o - 0.5 && (r *= o), r <= a ? i(e) : "";
            };
          }),
          (r.nice = function () {
            return i(
              hv(i(), {
                floor: function (e) {
                  return n(Math.floor(t(e)));
                },
                ceil: function (e) {
                  return n(Math.ceil(t(e)));
                },
              })
            );
          }),
          r
        );
      }
      function xv() {
        var e = _v(sv()).domain([1, 10]);
        return (
          (e.copy = function () {
            return av(e, xv()).base(e.base());
          }),
          Ub.apply(e, arguments),
          e
        );
      }
      function Tv(e) {
        return function (t) {
          return Math.sign(t) * Math.log1p(Math.abs(t / e));
        };
      }
      function Mv(e) {
        return function (t) {
          return Math.sign(t) * Math.expm1(Math.abs(t)) * e;
        };
      }
      function wv(e) {
        var t = 1,
          n = e(Tv(t), Mv(t));
        return (
          (n.constant = function (n) {
            return arguments.length ? e(Tv((t = +n)), Mv(t)) : t;
          }),
          lv(n)
        );
      }
      function Av() {
        var e = wv(sv());
        return (
          (e.copy = function () {
            return av(e, Av()).constant(e.constant());
          }),
          Ub.apply(e, arguments)
        );
      }
      function kv(e) {
        return function (t) {
          return t < 0 ? -Math.pow(-t, e) : Math.pow(t, e);
        };
      }
      function Ev(e) {
        return e < 0 ? -Math.sqrt(-e) : Math.sqrt(e);
      }
      function Pv(e) {
        return e < 0 ? -e * e : e * e;
      }
      function Cv(e) {
        var t = e(tv, tv),
          n = 1;
        function r() {
          return 1 === n
            ? e(tv, tv)
            : 0.5 === n
            ? e(Ev, Pv)
            : e(kv(n), kv(1 / n));
        }
        return (
          (t.exponent = function (e) {
            return arguments.length ? ((n = +e), r()) : n;
          }),
          lv(t)
        );
      }
      function Lv() {
        var e = Cv(sv());
        return (
          (e.copy = function () {
            return av(e, Lv()).exponent(e.exponent());
          }),
          Ub.apply(e, arguments),
          e
        );
      }
      function Iv() {
        return Lv.apply(null, arguments).exponent(0.5);
      }
      function Sv() {
        var e,
          t = [],
          n = [],
          r = [];
        function o() {
          var e = 0,
            i = Math.max(1, n.length);
          for (r = new Array(i - 1); ++e < i; ) r[e - 1] = S(t, e / i);
          return a;
        }
        function a(t) {
          return isNaN((t = +t)) ? e : n[c(r, t)];
        }
        return (
          (a.invertExtent = function (e) {
            var i = n.indexOf(e);
            return i < 0
              ? [NaN, NaN]
              : [
                  i > 0 ? r[i - 1] : t[0],
                  i < r.length ? r[i] : t[t.length - 1],
                ];
          }),
          (a.domain = function (e) {
            if (!arguments.length) return t.slice();
            t = [];
            for (var n, r = 0, a = e.length; r < a; ++r)
              null == (n = e[r]) || isNaN((n = +n)) || t.push(n);
            return t.sort(i), o();
          }),
          (a.range = function (e) {
            return arguments.length ? ((n = Zb.call(e)), o()) : n.slice();
          }),
          (a.unknown = function (t) {
            return arguments.length ? ((e = t), a) : e;
          }),
          (a.quantiles = function () {
            return r.slice();
          }),
          (a.copy = function () {
            return Sv().domain(t).range(n).unknown(e);
          }),
          Ub.apply(a, arguments)
        );
      }
      function Ov() {
        var e,
          t = 0,
          n = 1,
          r = 1,
          i = [0.5],
          o = [0, 1];
        function a(t) {
          return t <= t ? o[c(i, t, 0, r)] : e;
        }
        function s() {
          var e = -1;
          for (i = new Array(r); ++e < r; )
            i[e] = ((e + 1) * n - (e - r) * t) / (r + 1);
          return a;
        }
        return (
          (a.domain = function (e) {
            return arguments.length ? ((t = +e[0]), (n = +e[1]), s()) : [t, n];
          }),
          (a.range = function (e) {
            return arguments.length
              ? ((r = (o = Zb.call(e)).length - 1), s())
              : o.slice();
          }),
          (a.invertExtent = function (e) {
            var a = o.indexOf(e);
            return a < 0
              ? [NaN, NaN]
              : a < 1
              ? [t, i[0]]
              : a >= r
              ? [i[r - 1], n]
              : [i[a - 1], i[a]];
          }),
          (a.unknown = function (t) {
            return arguments.length ? ((e = t), a) : a;
          }),
          (a.thresholds = function () {
            return i.slice();
          }),
          (a.copy = function () {
            return Ov().domain([t, n]).range(o).unknown(e);
          }),
          Ub.apply(lv(a), arguments)
        );
      }
      function Nv() {
        var e,
          t = [0.5],
          n = [0, 1],
          r = 1;
        function i(i) {
          return i <= i ? n[c(t, i, 0, r)] : e;
        }
        return (
          (i.domain = function (e) {
            return arguments.length
              ? ((t = Zb.call(e)), (r = Math.min(t.length, n.length - 1)), i)
              : t.slice();
          }),
          (i.range = function (e) {
            return arguments.length
              ? ((n = Zb.call(e)), (r = Math.min(t.length, n.length - 1)), i)
              : n.slice();
          }),
          (i.invertExtent = function (e) {
            var r = n.indexOf(e);
            return [t[r - 1], t[r]];
          }),
          (i.unknown = function (t) {
            return arguments.length ? ((e = t), i) : e;
          }),
          (i.copy = function () {
            return Nv().domain(t).range(n).unknown(e);
          }),
          Ub.apply(i, arguments)
        );
      }
      var Fv = n(747878),
        Dv = n(243155),
        Rv = n(24645),
        Gv = n(266712),
        Bv = n(245022),
        Wv = (0, Gv.Z)(
          function (e) {
            e.setHours(0, 0, 0, 0);
          },
          function (e, t) {
            e.setDate(e.getDate() + t);
          },
          function (e, t) {
            return (
              (t -
                e -
                (t.getTimezoneOffset() - e.getTimezoneOffset()) * Bv.yB) /
              Bv.UD
            );
          },
          function (e) {
            return e.getDate() - 1;
          }
        ),
        jv = Wv,
        zv = Wv.range,
        Uv = n(775458),
        Hv = n(105957),
        Vv = n(558887),
        qv = n(817540),
        Zv = n(358169),
        Yv = (0, Gv.Z)(
          function (e) {
            e.setUTCHours(0, 0, 0, 0);
          },
          function (e, t) {
            e.setUTCDate(e.getUTCDate() + t);
          },
          function (e, t) {
            return (t - e) / Bv.UD;
          },
          function (e) {
            return e.getUTCDate() - 1;
          }
        ),
        Xv = Yv,
        $v = Yv.range,
        Kv = n(410555);
      function Qv(e) {
        if (0 <= e.y && e.y < 100) {
          var t = new Date(-1, e.m, e.d, e.H, e.M, e.S, e.L);
          return t.setFullYear(e.y), t;
        }
        return new Date(e.y, e.m, e.d, e.H, e.M, e.S, e.L);
      }
      function Jv(e) {
        if (0 <= e.y && e.y < 100) {
          var t = new Date(Date.UTC(-1, e.m, e.d, e.H, e.M, e.S, e.L));
          return t.setUTCFullYear(e.y), t;
        }
        return new Date(Date.UTC(e.y, e.m, e.d, e.H, e.M, e.S, e.L));
      }
      function e_(e, t, n) {
        return { y: e, m: t, d: n, H: 0, M: 0, S: 0, L: 0 };
      }
      function t_(e) {
        var t = e.dateTime,
          n = e.date,
          r = e.time,
          i = e.periods,
          o = e.days,
          a = e.shortDays,
          s = e.months,
          u = e.shortMonths,
          c = h_(i),
          l = p_(i),
          f = h_(o),
          d = p_(o),
          h = h_(a),
          p = p_(a),
          g = h_(s),
          m = p_(s),
          y = h_(u),
          b = p_(u),
          v = {
            a: function (e) {
              return a[e.getDay()];
            },
            A: function (e) {
              return o[e.getDay()];
            },
            b: function (e) {
              return u[e.getMonth()];
            },
            B: function (e) {
              return s[e.getMonth()];
            },
            c: null,
            d: F_,
            e: F_,
            f: W_,
            g: K_,
            G: J_,
            H: D_,
            I: R_,
            j: G_,
            L: B_,
            m: j_,
            M: z_,
            p: function (e) {
              return i[+(e.getHours() >= 12)];
            },
            q: function (e) {
              return 1 + ~~(e.getMonth() / 3);
            },
            Q: Tx,
            s: Mx,
            S: U_,
            u: H_,
            U: V_,
            V: Z_,
            w: Y_,
            W: X_,
            x: null,
            X: null,
            y: $_,
            Y: Q_,
            Z: ex,
            "%": xx,
          },
          _ = {
            a: function (e) {
              return a[e.getUTCDay()];
            },
            A: function (e) {
              return o[e.getUTCDay()];
            },
            b: function (e) {
              return u[e.getUTCMonth()];
            },
            B: function (e) {
              return s[e.getUTCMonth()];
            },
            c: null,
            d: tx,
            e: tx,
            f: ax,
            g: yx,
            G: vx,
            H: nx,
            I: rx,
            j: ix,
            L: ox,
            m: sx,
            M: ux,
            p: function (e) {
              return i[+(e.getUTCHours() >= 12)];
            },
            q: function (e) {
              return 1 + ~~(e.getUTCMonth() / 3);
            },
            Q: Tx,
            s: Mx,
            S: cx,
            u: lx,
            U: fx,
            V: hx,
            w: px,
            W: gx,
            x: null,
            X: null,
            y: mx,
            Y: bx,
            Z: _x,
            "%": xx,
          },
          x = {
            a: function (e, t, n) {
              var r = h.exec(t.slice(n));
              return r ? ((e.w = p[r[0].toLowerCase()]), n + r[0].length) : -1;
            },
            A: function (e, t, n) {
              var r = f.exec(t.slice(n));
              return r ? ((e.w = d[r[0].toLowerCase()]), n + r[0].length) : -1;
            },
            b: function (e, t, n) {
              var r = y.exec(t.slice(n));
              return r ? ((e.m = b[r[0].toLowerCase()]), n + r[0].length) : -1;
            },
            B: function (e, t, n) {
              var r = g.exec(t.slice(n));
              return r ? ((e.m = m[r[0].toLowerCase()]), n + r[0].length) : -1;
            },
            c: function (e, n, r) {
              return w(e, t, n, r);
            },
            d: A_,
            e: A_,
            f: I_,
            g: x_,
            G: __,
            H: E_,
            I: E_,
            j: k_,
            L: L_,
            m: w_,
            M: P_,
            p: function (e, t, n) {
              var r = c.exec(t.slice(n));
              return r ? ((e.p = l[r[0].toLowerCase()]), n + r[0].length) : -1;
            },
            q: M_,
            Q: O_,
            s: N_,
            S: C_,
            u: m_,
            U: y_,
            V: b_,
            w: g_,
            W: v_,
            x: function (e, t, r) {
              return w(e, n, t, r);
            },
            X: function (e, t, n) {
              return w(e, r, t, n);
            },
            y: x_,
            Y: __,
            Z: T_,
            "%": S_,
          };
        function T(e, t) {
          return function (n) {
            var r,
              i,
              o,
              a = [],
              s = -1,
              u = 0,
              c = e.length;
            for (n instanceof Date || (n = new Date(+n)); ++s < c; )
              37 === e.charCodeAt(s) &&
                (a.push(e.slice(u, s)),
                null != (i = s_[(r = e.charAt(++s))])
                  ? (r = e.charAt(++s))
                  : (i = "e" === r ? " " : "0"),
                (o = t[r]) && (r = o(n, i)),
                a.push(r),
                (u = s + 1));
            return a.push(e.slice(u, s)), a.join("");
          };
        }
        function M(e, t) {
          return function (n) {
            var r,
              i,
              o = e_(1900, void 0, 1);
            if (w(o, e, (n += ""), 0) != n.length) return null;
            if ("Q" in o) return new Date(o.Q);
            if ("s" in o) return new Date(1e3 * o.s + ("L" in o ? o.L : 0));
            if (
              (t && !("Z" in o) && (o.Z = 0),
              "p" in o && (o.H = (o.H % 12) + 12 * o.p),
              void 0 === o.m && (o.m = "q" in o ? o.q : 0),
              "V" in o)
            ) {
              if (o.V < 1 || o.V > 53) return null;
              "w" in o || (o.w = 1),
                "Z" in o
                  ? ((i = (r = Jv(e_(o.y, 0, 1))).getUTCDay()),
                    (r = i > 4 || 0 === i ? Zv.l6.ceil(r) : (0, Zv.l6)(r)),
                    (r = Xv.offset(r, 7 * (o.V - 1))),
                    (o.y = r.getUTCFullYear()),
                    (o.m = r.getUTCMonth()),
                    (o.d = r.getUTCDate() + ((o.w + 6) % 7)))
                  : ((i = (r = Qv(e_(o.y, 0, 1))).getDay()),
                    (r = i > 4 || 0 === i ? Rv.wA.ceil(r) : (0, Rv.wA)(r)),
                    (r = jv.offset(r, 7 * (o.V - 1))),
                    (o.y = r.getFullYear()),
                    (o.m = r.getMonth()),
                    (o.d = r.getDate() + ((o.w + 6) % 7)));
            } else
              ("W" in o || "U" in o) &&
                ("w" in o || (o.w = "u" in o ? o.u % 7 : "W" in o ? 1 : 0),
                (i =
                  "Z" in o
                    ? Jv(e_(o.y, 0, 1)).getUTCDay()
                    : Qv(e_(o.y, 0, 1)).getDay()),
                (o.m = 0),
                (o.d =
                  "W" in o
                    ? ((o.w + 6) % 7) + 7 * o.W - ((i + 5) % 7)
                    : o.w + 7 * o.U - ((i + 6) % 7)));
            return "Z" in o
              ? ((o.H += (o.Z / 100) | 0), (o.M += o.Z % 100), Jv(o))
              : Qv(o);
          };
        }
        function w(e, t, n, r) {
          for (var i, o, a = 0, s = t.length, u = n.length; a < s; ) {
            if (r >= u) return -1;
            if (37 === (i = t.charCodeAt(a++))) {
              if (
                ((i = t.charAt(a++)),
                !(o = x[i in s_ ? t.charAt(a++) : i]) || (r = o(e, n, r)) < 0)
              )
                return -1;
            } else if (i != n.charCodeAt(r++)) return -1;
          }
          return r;
        }
        return (
          (v.x = T(n, v)),
          (v.X = T(r, v)),
          (v.c = T(t, v)),
          (_.x = T(n, _)),
          (_.X = T(r, _)),
          (_.c = T(t, _)),
          {
            format: function (e) {
              var t = T((e += ""), v);
              return (
                (t.toString = function () {
                  return e;
                }),
                t
              );
            },
            parse: function (e) {
              var t = M((e += ""), !1);
              return (
                (t.toString = function () {
                  return e;
                }),
                t
              );
            },
            utcFormat: function (e) {
              var t = T((e += ""), _);
              return (
                (t.toString = function () {
                  return e;
                }),
                t
              );
            },
            utcParse: function (e) {
              var t = M((e += ""), !0);
              return (
                (t.toString = function () {
                  return e;
                }),
                t
              );
            },
          }
        );
      }
      var n_,
        r_,
        i_,
        o_,
        a_,
        s_ = { "-": "", _: " ", 0: "0" },
        u_ = /^\s*\d+/,
        c_ = /^%/,
        l_ = /[\\^$*+?|[\]().{}]/g;
      function f_(e, t, n) {
        var r = e < 0 ? "-" : "",
          i = (r ? -e : e) + "",
          o = i.length;
        return r + (o < n ? new Array(n - o + 1).join(t) + i : i);
      }
      function d_(e) {
        return e.replace(l_, "\\$&");
      }
      function h_(e) {
        return new RegExp("^(?:" + e.map(d_).join("|") + ")", "i");
      }
      function p_(e) {
        for (var t = {}, n = -1, r = e.length; ++n < r; )
          t[e[n].toLowerCase()] = n;
        return t;
      }
      function g_(e, t, n) {
        var r = u_.exec(t.slice(n, n + 1));
        return r ? ((e.w = +r[0]), n + r[0].length) : -1;
      }
      function m_(e, t, n) {
        var r = u_.exec(t.slice(n, n + 1));
        return r ? ((e.u = +r[0]), n + r[0].length) : -1;
      }
      function y_(e, t, n) {
        var r = u_.exec(t.slice(n, n + 2));
        return r ? ((e.U = +r[0]), n + r[0].length) : -1;
      }
      function b_(e, t, n) {
        var r = u_.exec(t.slice(n, n + 2));
        return r ? ((e.V = +r[0]), n + r[0].length) : -1;
      }
      function v_(e, t, n) {
        var r = u_.exec(t.slice(n, n + 2));
        return r ? ((e.W = +r[0]), n + r[0].length) : -1;
      }
      function __(e, t, n) {
        var r = u_.exec(t.slice(n, n + 4));
        return r ? ((e.y = +r[0]), n + r[0].length) : -1;
      }
      function x_(e, t, n) {
        var r = u_.exec(t.slice(n, n + 2));
        return r
          ? ((e.y = +r[0] + (+r[0] > 68 ? 1900 : 2e3)), n + r[0].length)
          : -1;
      }
      function T_(e, t, n) {
        var r = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(t.slice(n, n + 6));
        return r
          ? ((e.Z = r[1] ? 0 : -(r[2] + (r[3] || "00"))), n + r[0].length)
          : -1;
      }
      function M_(e, t, n) {
        var r = u_.exec(t.slice(n, n + 1));
        return r ? ((e.q = 3 * r[0] - 3), n + r[0].length) : -1;
      }
      function w_(e, t, n) {
        var r = u_.exec(t.slice(n, n + 2));
        return r ? ((e.m = r[0] - 1), n + r[0].length) : -1;
      }
      function A_(e, t, n) {
        var r = u_.exec(t.slice(n, n + 2));
        return r ? ((e.d = +r[0]), n + r[0].length) : -1;
      }
      function k_(e, t, n) {
        var r = u_.exec(t.slice(n, n + 3));
        return r ? ((e.m = 0), (e.d = +r[0]), n + r[0].length) : -1;
      }
      function E_(e, t, n) {
        var r = u_.exec(t.slice(n, n + 2));
        return r ? ((e.H = +r[0]), n + r[0].length) : -1;
      }
      function P_(e, t, n) {
        var r = u_.exec(t.slice(n, n + 2));
        return r ? ((e.M = +r[0]), n + r[0].length) : -1;
      }
      function C_(e, t, n) {
        var r = u_.exec(t.slice(n, n + 2));
        return r ? ((e.S = +r[0]), n + r[0].length) : -1;
      }
      function L_(e, t, n) {
        var r = u_.exec(t.slice(n, n + 3));
        return r ? ((e.L = +r[0]), n + r[0].length) : -1;
      }
      function I_(e, t, n) {
        var r = u_.exec(t.slice(n, n + 6));
        return r ? ((e.L = Math.floor(r[0] / 1e3)), n + r[0].length) : -1;
      }
      function S_(e, t, n) {
        var r = c_.exec(t.slice(n, n + 1));
        return r ? n + r[0].length : -1;
      }
      function O_(e, t, n) {
        var r = u_.exec(t.slice(n));
        return r ? ((e.Q = +r[0]), n + r[0].length) : -1;
      }
      function N_(e, t, n) {
        var r = u_.exec(t.slice(n));
        return r ? ((e.s = +r[0]), n + r[0].length) : -1;
      }
      function F_(e, t) {
        return f_(e.getDate(), t, 2);
      }
      function D_(e, t) {
        return f_(e.getHours(), t, 2);
      }
      function R_(e, t) {
        return f_(e.getHours() % 12 || 12, t, 2);
      }
      function G_(e, t) {
        return f_(1 + jv.count((0, Fv.Z)(e), e), t, 3);
      }
      function B_(e, t) {
        return f_(e.getMilliseconds(), t, 3);
      }
      function W_(e, t) {
        return B_(e, t) + "000";
      }
      function j_(e, t) {
        return f_(e.getMonth() + 1, t, 2);
      }
      function z_(e, t) {
        return f_(e.getMinutes(), t, 2);
      }
      function U_(e, t) {
        return f_(e.getSeconds(), t, 2);
      }
      function H_(e) {
        var t = e.getDay();
        return 0 === t ? 7 : t;
      }
      function V_(e, t) {
        return f_(Rv.OM.count((0, Fv.Z)(e) - 1, e), t, 2);
      }
      function q_(e) {
        var t = e.getDay();
        return t >= 4 || 0 === t ? (0, Rv.bL)(e) : Rv.bL.ceil(e);
      }
      function Z_(e, t) {
        return (
          (e = q_(e)),
          f_(Rv.bL.count((0, Fv.Z)(e), e) + (4 === (0, Fv.Z)(e).getDay()), t, 2)
        );
      }
      function Y_(e) {
        return e.getDay();
      }
      function X_(e, t) {
        return f_(Rv.wA.count((0, Fv.Z)(e) - 1, e), t, 2);
      }
      function $_(e, t) {
        return f_(e.getFullYear() % 100, t, 2);
      }
      function K_(e, t) {
        return f_((e = q_(e)).getFullYear() % 100, t, 2);
      }
      function Q_(e, t) {
        return f_(e.getFullYear() % 1e4, t, 4);
      }
      function J_(e, t) {
        var n = e.getDay();
        return f_(
          (e =
            n >= 4 || 0 === n ? (0, Rv.bL)(e) : Rv.bL.ceil(e)).getFullYear() %
            1e4,
          t,
          4
        );
      }
      function ex(e) {
        var t = e.getTimezoneOffset();
        return (
          (t > 0 ? "-" : ((t *= -1), "+")) +
          f_((t / 60) | 0, "0", 2) +
          f_(t % 60, "0", 2)
        );
      }
      function tx(e, t) {
        return f_(e.getUTCDate(), t, 2);
      }
      function nx(e, t) {
        return f_(e.getUTCHours(), t, 2);
      }
      function rx(e, t) {
        return f_(e.getUTCHours() % 12 || 12, t, 2);
      }
      function ix(e, t) {
        return f_(1 + Xv.count((0, Kv.Z)(e), e), t, 3);
      }
      function ox(e, t) {
        return f_(e.getUTCMilliseconds(), t, 3);
      }
      function ax(e, t) {
        return ox(e, t) + "000";
      }
      function sx(e, t) {
        return f_(e.getUTCMonth() + 1, t, 2);
      }
      function ux(e, t) {
        return f_(e.getUTCMinutes(), t, 2);
      }
      function cx(e, t) {
        return f_(e.getUTCSeconds(), t, 2);
      }
      function lx(e) {
        var t = e.getUTCDay();
        return 0 === t ? 7 : t;
      }
      function fx(e, t) {
        return f_(Zv.Ox.count((0, Kv.Z)(e) - 1, e), t, 2);
      }
      function dx(e) {
        var t = e.getUTCDay();
        return t >= 4 || 0 === t ? (0, Zv.hB)(e) : Zv.hB.ceil(e);
      }
      function hx(e, t) {
        return (
          (e = dx(e)),
          f_(
            Zv.hB.count((0, Kv.Z)(e), e) + (4 === (0, Kv.Z)(e).getUTCDay()),
            t,
            2
          )
        );
      }
      function px(e) {
        return e.getUTCDay();
      }
      function gx(e, t) {
        return f_(Zv.l6.count((0, Kv.Z)(e) - 1, e), t, 2);
      }
      function mx(e, t) {
        return f_(e.getUTCFullYear() % 100, t, 2);
      }
      function yx(e, t) {
        return f_((e = dx(e)).getUTCFullYear() % 100, t, 2);
      }
      function bx(e, t) {
        return f_(e.getUTCFullYear() % 1e4, t, 4);
      }
      function vx(e, t) {
        var n = e.getUTCDay();
        return f_(
          (e =
            n >= 4 || 0 === n
              ? (0, Zv.hB)(e)
              : Zv.hB.ceil(e)).getUTCFullYear() % 1e4,
          t,
          4
        );
      }
      function _x() {
        return "+0000";
      }
      function xx() {
        return "%";
      }
      function Tx(e) {
        return +e;
      }
      function Mx(e) {
        return Math.floor(+e / 1e3);
      }
      function wx(e) {
        return (
          (n_ = t_(e)),
          (r_ = n_.format),
          (i_ = n_.parse),
          (o_ = n_.utcFormat),
          (a_ = n_.utcParse),
          n_
        );
      }
      wx({
        dateTime: "%x, %X",
        date: "%-m/%-d/%Y",
        time: "%-I:%M:%S %p",
        periods: ["AM", "PM"],
        days: [
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday",
        ],
        shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
        months: [
          "January",
          "February",
          "March",
          "April",
          "May",
          "June",
          "July",
          "August",
          "September",
          "October",
          "November",
          "December",
        ],
        shortMonths: [
          "Jan",
          "Feb",
          "Mar",
          "Apr",
          "May",
          "Jun",
          "Jul",
          "Aug",
          "Sep",
          "Oct",
          "Nov",
          "Dec",
        ],
      });
      var Ax = 1e3,
        kx = 6e4,
        Ex = 36e5,
        Px = 864e5,
        Cx = 2592e6,
        Lx = 31536e6;
      function Ix(e) {
        return new Date(e);
      }
      function Sx(e) {
        return e instanceof Date ? +e : +new Date(+e);
      }
      function Ox(e, t, n, r, i, a, s, u, c) {
        var l = uv(tv, tv),
          f = l.invert,
          d = l.domain,
          h = c(".%L"),
          p = c(":%S"),
          g = c("%I:%M"),
          m = c("%I %p"),
          y = c("%a %d"),
          b = c("%b %d"),
          v = c("%B"),
          _ = c("%Y"),
          x = [
            [s, 1, Ax],
            [s, 5, 5e3],
            [s, 15, 15e3],
            [s, 30, 3e4],
            [a, 1, kx],
            [a, 5, 3e5],
            [a, 15, 9e5],
            [a, 30, 18e5],
            [i, 1, Ex],
            [i, 3, 108e5],
            [i, 6, 216e5],
            [i, 12, 432e5],
            [r, 1, Px],
            [r, 2, 1728e5],
            [n, 1, 6048e5],
            [t, 1, Cx],
            [t, 3, 7776e6],
            [e, 1, Lx],
          ];
        function T(o) {
          return (
            s(o) < o
              ? h
              : a(o) < o
              ? p
              : i(o) < o
              ? g
              : r(o) < o
              ? m
              : t(o) < o
              ? n(o) < o
                ? y
                : b
              : e(o) < o
              ? v
              : _
          )(o);
        }
        function M(t, n, r, i) {
          if ((null == t && (t = 10), "number" === typeof t)) {
            var a = Math.abs(r - n) / t,
              s = o(function (e) {
                return e[2];
              }).right(x, a);
            s === x.length
              ? ((i = C(n / Lx, r / Lx, t)), (t = e))
              : s
              ? ((i = (s = x[a / x[s - 1][2] < x[s][2] / a ? s - 1 : s])[1]),
                (t = s[0]))
              : ((i = Math.max(C(n, r, t), 1)), (t = u));
          }
          return null == i ? t : t.every(i);
        }
        return (
          (l.invert = function (e) {
            return new Date(f(e));
          }),
          (l.domain = function (e) {
            return arguments.length ? d(qb.call(e, Sx)) : d().map(Ix);
          }),
          (l.ticks = function (e, t) {
            var n,
              r = d(),
              i = r[0],
              o = r[r.length - 1],
              a = o < i;
            return (
              a && ((n = i), (i = o), (o = n)),
              (n = (n = M(e, i, o, t)) ? n.range(i, o + 1) : []),
              a ? n.reverse() : n
            );
          }),
          (l.tickFormat = function (e, t) {
            return null == t ? T : c(t);
          }),
          (l.nice = function (e, t) {
            var n = d();
            return (e = M(e, n[0], n[n.length - 1], t)) ? d(hv(n, e)) : l;
          }),
          (l.copy = function () {
            return av(l, Ox(e, t, n, r, i, a, s, u, c));
          }),
          l
        );
      }
      function Nx() {
        return Ub.apply(
          Ox(Fv.Z, Dv.Z, Rv.OM, jv, Uv.Z, Hv.Z, Vv.Z, qv.Z, r_).domain([
            new Date(2e3, 0, 1),
            new Date(2e3, 0, 2),
          ]),
          arguments
        );
      }
      var Fx = n(617231),
        Dx = n(245319),
        Rx = n(868105);
      function Gx() {
        return Ub.apply(
          Ox(Kv.Z, Fx.Z, Zv.Ox, Xv, Dx.Z, Rx.Z, Vv.Z, qv.Z, o_).domain([
            Date.UTC(2e3, 0, 1),
            Date.UTC(2e3, 0, 2),
          ]),
          arguments
        );
      }
      function Bx() {
        var e,
          t,
          n,
          r,
          i,
          o = 0,
          a = 1,
          s = tv,
          u = !1;
        function c(t) {
          return isNaN((t = +t))
            ? i
            : s(
                0 === n
                  ? 0.5
                  : ((t = (r(t) - e) * n), u ? Math.max(0, Math.min(1, t)) : t)
              );
        }
        return (
          (c.domain = function (i) {
            return arguments.length
              ? ((e = r((o = +i[0]))),
                (t = r((a = +i[1]))),
                (n = e === t ? 0 : 1 / (t - e)),
                c)
              : [o, a];
          }),
          (c.clamp = function (e) {
            return arguments.length ? ((u = !!e), c) : u;
          }),
          (c.interpolator = function (e) {
            return arguments.length ? ((s = e), c) : s;
          }),
          (c.unknown = function (e) {
            return arguments.length ? ((i = e), c) : i;
          }),
          function (i) {
            return (
              (r = i),
              (e = i(o)),
              (t = i(a)),
              (n = e === t ? 0 : 1 / (t - e)),
              c
            );
          }
        );
      }
      function Wx(e, t) {
        return t
          .domain(e.domain())
          .interpolator(e.interpolator())
          .clamp(e.clamp())
          .unknown(e.unknown());
      }
      function jx() {
        var e = lv(Bx()(tv));
        return (
          (e.copy = function () {
            return Wx(e, jx());
          }),
          Hb.apply(e, arguments)
        );
      }
      function zx() {
        var e = _v(Bx()).domain([1, 10]);
        return (
          (e.copy = function () {
            return Wx(e, zx()).base(e.base());
          }),
          Hb.apply(e, arguments)
        );
      }
      function Ux() {
        var e = wv(Bx());
        return (
          (e.copy = function () {
            return Wx(e, Ux()).constant(e.constant());
          }),
          Hb.apply(e, arguments)
        );
      }
      function Hx() {
        var e = Cv(Bx());
        return (
          (e.copy = function () {
            return Wx(e, Hx()).exponent(e.exponent());
          }),
          Hb.apply(e, arguments)
        );
      }
      function Vx() {
        return Hx.apply(null, arguments).exponent(0.5);
      }
      function qx() {
        var e = [],
          t = tv;
        function n(n) {
          if (!isNaN((n = +n))) return t((c(e, n) - 1) / (e.length - 1));
        }
        return (
          (n.domain = function (t) {
            if (!arguments.length) return e.slice();
            e = [];
            for (var r, o = 0, a = t.length; o < a; ++o)
              null == (r = t[o]) || isNaN((r = +r)) || e.push(r);
            return e.sort(i), n;
          }),
          (n.interpolator = function (e) {
            return arguments.length ? ((t = e), n) : t;
          }),
          (n.copy = function () {
            return qx(t).domain(e);
          }),
          Hb.apply(n, arguments)
        );
      }
      function Zx() {
        var e,
          t,
          n,
          r,
          i,
          o,
          a,
          s = 0,
          u = 0.5,
          c = 1,
          l = tv,
          f = !1;
        function d(e) {
          return isNaN((e = +e))
            ? a
            : ((e = 0.5 + ((e = +o(e)) - t) * (e < t ? r : i)),
              l(f ? Math.max(0, Math.min(1, e)) : e));
        }
        return (
          (d.domain = function (a) {
            return arguments.length
              ? ((e = o((s = +a[0]))),
                (t = o((u = +a[1]))),
                (n = o((c = +a[2]))),
                (r = e === t ? 0 : 0.5 / (t - e)),
                (i = t === n ? 0 : 0.5 / (n - t)),
                d)
              : [s, u, c];
          }),
          (d.clamp = function (e) {
            return arguments.length ? ((f = !!e), d) : f;
          }),
          (d.interpolator = function (e) {
            return arguments.length ? ((l = e), d) : l;
          }),
          (d.unknown = function (e) {
            return arguments.length ? ((a = e), d) : a;
          }),
          function (a) {
            return (
              (o = a),
              (e = a(s)),
              (t = a(u)),
              (n = a(c)),
              (r = e === t ? 0 : 0.5 / (t - e)),
              (i = t === n ? 0 : 0.5 / (n - t)),
              d
            );
          }
        );
      }
      function Yx() {
        var e = lv(Zx()(tv));
        return (
          (e.copy = function () {
            return Wx(e, Yx());
          }),
          Hb.apply(e, arguments)
        );
      }
      function Xx() {
        var e = _v(Zx()).domain([0.1, 1, 10]);
        return (
          (e.copy = function () {
            return Wx(e, Xx()).base(e.base());
          }),
          Hb.apply(e, arguments)
        );
      }
      function $x() {
        var e = wv(Zx());
        return (
          (e.copy = function () {
            return Wx(e, $x()).constant(e.constant());
          }),
          Hb.apply(e, arguments)
        );
      }
      function Kx() {
        var e = Cv(Zx());
        return (
          (e.copy = function () {
            return Wx(e, Kx()).exponent(e.exponent());
          }),
          Hb.apply(e, arguments)
        );
      }
      function Qx() {
        return Kx.apply(null, arguments).exponent(0.5);
      }
      function Jx(e) {
        for (var t = (e.length / 6) | 0, n = new Array(t), r = 0; r < t; )
          n[r] = "#" + e.slice(6 * r, 6 * ++r);
        return n;
      }
      var eT = Jx(
          "1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"
        ),
        tT = Jx("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"),
        nT = Jx("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"),
        rT = Jx(
          "a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"
        ),
        iT = Jx("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"),
        oT = Jx("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"),
        aT = Jx("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"),
        sT = Jx("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"),
        uT = Jx(
          "8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f"
        ),
        cT = Jx("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab");
      function lT(e) {
        return jy(e[e.length - 1]);
      }
      var fT = new Array(3)
          .concat(
            "d8b365f5f5f55ab4ac",
            "a6611adfc27d80cdc1018571",
            "a6611adfc27df5f5f580cdc1018571",
            "8c510ad8b365f6e8c3c7eae55ab4ac01665e",
            "8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e",
            "8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e",
            "8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e",
            "5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30",
            "5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30"
          )
          .map(Jx),
        dT = lT(fT),
        hT = new Array(3)
          .concat(
            "af8dc3f7f7f77fbf7b",
            "7b3294c2a5cfa6dba0008837",
            "7b3294c2a5cff7f7f7a6dba0008837",
            "762a83af8dc3e7d4e8d9f0d37fbf7b1b7837",
            "762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837",
            "762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837",
            "762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837",
            "40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b",
            "40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b"
          )
          .map(Jx),
        pT = lT(hT),
        gT = new Array(3)
          .concat(
            "e9a3c9f7f7f7a1d76a",
            "d01c8bf1b6dab8e1864dac26",
            "d01c8bf1b6daf7f7f7b8e1864dac26",
            "c51b7de9a3c9fde0efe6f5d0a1d76a4d9221",
            "c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221",
            "c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221",
            "c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221",
            "8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419",
            "8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419"
          )
          .map(Jx),
        mT = lT(gT),
        yT = new Array(3)
          .concat(
            "998ec3f7f7f7f1a340",
            "5e3c99b2abd2fdb863e66101",
            "5e3c99b2abd2f7f7f7fdb863e66101",
            "542788998ec3d8daebfee0b6f1a340b35806",
            "542788998ec3d8daebf7f7f7fee0b6f1a340b35806",
            "5427888073acb2abd2d8daebfee0b6fdb863e08214b35806",
            "5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806",
            "2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08",
            "2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08"
          )
          .map(Jx),
        bT = lT(yT),
        vT = new Array(3)
          .concat(
            "ef8a62f7f7f767a9cf",
            "ca0020f4a58292c5de0571b0",
            "ca0020f4a582f7f7f792c5de0571b0",
            "b2182bef8a62fddbc7d1e5f067a9cf2166ac",
            "b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac",
            "b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac",
            "b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac",
            "67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061",
            "67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061"
          )
          .map(Jx),
        _T = lT(vT),
        xT = new Array(3)
          .concat(
            "ef8a62ffffff999999",
            "ca0020f4a582bababa404040",
            "ca0020f4a582ffffffbababa404040",
            "b2182bef8a62fddbc7e0e0e09999994d4d4d",
            "b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d",
            "b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d",
            "b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d",
            "67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a",
            "67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a"
          )
          .map(Jx),
        TT = lT(xT),
        MT = new Array(3)
          .concat(
            "fc8d59ffffbf91bfdb",
            "d7191cfdae61abd9e92c7bb6",
            "d7191cfdae61ffffbfabd9e92c7bb6",
            "d73027fc8d59fee090e0f3f891bfdb4575b4",
            "d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4",
            "d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4",
            "d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4",
            "a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695",
            "a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695"
          )
          .map(Jx),
        wT = lT(MT),
        AT = new Array(3)
          .concat(
            "fc8d59ffffbf91cf60",
            "d7191cfdae61a6d96a1a9641",
            "d7191cfdae61ffffbfa6d96a1a9641",
            "d73027fc8d59fee08bd9ef8b91cf601a9850",
            "d73027fc8d59fee08bffffbfd9ef8b91cf601a9850",
            "d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850",
            "d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850",
            "a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837",
            "a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837"
          )
          .map(Jx),
        kT = lT(AT),
        ET = new Array(3)
          .concat(
            "fc8d59ffffbf99d594",
            "d7191cfdae61abdda42b83ba",
            "d7191cfdae61ffffbfabdda42b83ba",
            "d53e4ffc8d59fee08be6f59899d5943288bd",
            "d53e4ffc8d59fee08bffffbfe6f59899d5943288bd",
            "d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd",
            "d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd",
            "9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2",
            "9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2"
          )
          .map(Jx),
        PT = lT(ET),
        CT = new Array(3)
          .concat(
            "e5f5f999d8c92ca25f",
            "edf8fbb2e2e266c2a4238b45",
            "edf8fbb2e2e266c2a42ca25f006d2c",
            "edf8fbccece699d8c966c2a42ca25f006d2c",
            "edf8fbccece699d8c966c2a441ae76238b45005824",
            "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824",
            "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b"
          )
          .map(Jx),
        LT = lT(CT),
        IT = new Array(3)
          .concat(
            "e0ecf49ebcda8856a7",
            "edf8fbb3cde38c96c688419d",
            "edf8fbb3cde38c96c68856a7810f7c",
            "edf8fbbfd3e69ebcda8c96c68856a7810f7c",
            "edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b",
            "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b",
            "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b"
          )
          .map(Jx),
        ST = lT(IT),
        OT = new Array(3)
          .concat(
            "e0f3dba8ddb543a2ca",
            "f0f9e8bae4bc7bccc42b8cbe",
            "f0f9e8bae4bc7bccc443a2ca0868ac",
            "f0f9e8ccebc5a8ddb57bccc443a2ca0868ac",
            "f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e",
            "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e",
            "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081"
          )
          .map(Jx),
        NT = lT(OT),
        FT = new Array(3)
          .concat(
            "fee8c8fdbb84e34a33",
            "fef0d9fdcc8afc8d59d7301f",
            "fef0d9fdcc8afc8d59e34a33b30000",
            "fef0d9fdd49efdbb84fc8d59e34a33b30000",
            "fef0d9fdd49efdbb84fc8d59ef6548d7301f990000",
            "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000",
            "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000"
          )
          .map(Jx),
        DT = lT(FT),
        RT = new Array(3)
          .concat(
            "ece2f0a6bddb1c9099",
            "f6eff7bdc9e167a9cf02818a",
            "f6eff7bdc9e167a9cf1c9099016c59",
            "f6eff7d0d1e6a6bddb67a9cf1c9099016c59",
            "f6eff7d0d1e6a6bddb67a9cf3690c002818a016450",
            "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450",
            "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636"
          )
          .map(Jx),
        GT = lT(RT),
        BT = new Array(3)
          .concat(
            "ece7f2a6bddb2b8cbe",
            "f1eef6bdc9e174a9cf0570b0",
            "f1eef6bdc9e174a9cf2b8cbe045a8d",
            "f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d",
            "f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b",
            "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b",
            "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858"
          )
          .map(Jx),
        WT = lT(BT),
        jT = new Array(3)
          .concat(
            "e7e1efc994c7dd1c77",
            "f1eef6d7b5d8df65b0ce1256",
            "f1eef6d7b5d8df65b0dd1c77980043",
            "f1eef6d4b9dac994c7df65b0dd1c77980043",
            "f1eef6d4b9dac994c7df65b0e7298ace125691003f",
            "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f",
            "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f"
          )
          .map(Jx),
        zT = lT(jT),
        UT = new Array(3)
          .concat(
            "fde0ddfa9fb5c51b8a",
            "feebe2fbb4b9f768a1ae017e",
            "feebe2fbb4b9f768a1c51b8a7a0177",
            "feebe2fcc5c0fa9fb5f768a1c51b8a7a0177",
            "feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177",
            "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177",
            "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a"
          )
          .map(Jx),
        HT = lT(UT),
        VT = new Array(3)
          .concat(
            "edf8b17fcdbb2c7fb8",
            "ffffcca1dab441b6c4225ea8",
            "ffffcca1dab441b6c42c7fb8253494",
            "ffffccc7e9b47fcdbb41b6c42c7fb8253494",
            "ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84",
            "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84",
            "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58"
          )
          .map(Jx),
        qT = lT(VT),
        ZT = new Array(3)
          .concat(
            "f7fcb9addd8e31a354",
            "ffffccc2e69978c679238443",
            "ffffccc2e69978c67931a354006837",
            "ffffccd9f0a3addd8e78c67931a354006837",
            "ffffccd9f0a3addd8e78c67941ab5d238443005a32",
            "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32",
            "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529"
          )
          .map(Jx),
        YT = lT(ZT),
        XT = new Array(3)
          .concat(
            "fff7bcfec44fd95f0e",
            "ffffd4fed98efe9929cc4c02",
            "ffffd4fed98efe9929d95f0e993404",
            "ffffd4fee391fec44ffe9929d95f0e993404",
            "ffffd4fee391fec44ffe9929ec7014cc4c028c2d04",
            "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04",
            "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506"
          )
          .map(Jx),
        $T = lT(XT),
        KT = new Array(3)
          .concat(
            "ffeda0feb24cf03b20",
            "ffffb2fecc5cfd8d3ce31a1c",
            "ffffb2fecc5cfd8d3cf03b20bd0026",
            "ffffb2fed976feb24cfd8d3cf03b20bd0026",
            "ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026",
            "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026",
            "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026"
          )
          .map(Jx),
        QT = lT(KT),
        JT = new Array(3)
          .concat(
            "deebf79ecae13182bd",
            "eff3ffbdd7e76baed62171b5",
            "eff3ffbdd7e76baed63182bd08519c",
            "eff3ffc6dbef9ecae16baed63182bd08519c",
            "eff3ffc6dbef9ecae16baed64292c62171b5084594",
            "f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594",
            "f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b"
          )
          .map(Jx),
        eM = lT(JT),
        tM = new Array(3)
          .concat(
            "e5f5e0a1d99b31a354",
            "edf8e9bae4b374c476238b45",
            "edf8e9bae4b374c47631a354006d2c",
            "edf8e9c7e9c0a1d99b74c47631a354006d2c",
            "edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32",
            "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32",
            "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b"
          )
          .map(Jx),
        nM = lT(tM),
        rM = new Array(3)
          .concat(
            "f0f0f0bdbdbd636363",
            "f7f7f7cccccc969696525252",
            "f7f7f7cccccc969696636363252525",
            "f7f7f7d9d9d9bdbdbd969696636363252525",
            "f7f7f7d9d9d9bdbdbd969696737373525252252525",
            "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525",
            "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000"
          )
          .map(Jx),
        iM = lT(rM),
        oM = new Array(3)
          .concat(
            "efedf5bcbddc756bb1",
            "f2f0f7cbc9e29e9ac86a51a3",
            "f2f0f7cbc9e29e9ac8756bb154278f",
            "f2f0f7dadaebbcbddc9e9ac8756bb154278f",
            "f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486",
            "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486",
            "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d"
          )
          .map(Jx),
        aM = lT(oM),
        sM = new Array(3)
          .concat(
            "fee0d2fc9272de2d26",
            "fee5d9fcae91fb6a4acb181d",
            "fee5d9fcae91fb6a4ade2d26a50f15",
            "fee5d9fcbba1fc9272fb6a4ade2d26a50f15",
            "fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d",
            "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d",
            "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d"
          )
          .map(Jx),
        uM = lT(sM),
        cM = new Array(3)
          .concat(
            "fee6cefdae6be6550d",
            "feeddefdbe85fd8d3cd94701",
            "feeddefdbe85fd8d3ce6550da63603",
            "feeddefdd0a2fdae6bfd8d3ce6550da63603",
            "feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04",
            "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04",
            "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704"
          )
          .map(Jx),
        lM = lT(cM);
      function fM(e) {
        return (
          (e = Math.max(0, Math.min(1, e))),
          "rgb(" +
            Math.max(
              0,
              Math.min(
                255,
                Math.round(
                  -4.54 -
                    e *
                      (35.34 -
                        e *
                          (2381.73 -
                            e * (6402.7 - e * (7024.72 - 2710.57 * e))))
                )
              )
            ) +
            ", " +
            Math.max(
              0,
              Math.min(
                255,
                Math.round(
                  32.49 +
                    e *
                      (170.73 +
                        e * (52.82 - e * (131.46 - e * (176.58 - 67.37 * e))))
                )
              )
            ) +
            ", " +
            Math.max(
              0,
              Math.min(
                255,
                Math.round(
                  81.24 +
                    e *
                      (442.36 -
                        e *
                          (2482.43 -
                            e * (6167.24 - e * (6614.94 - 2475.67 * e))))
                )
              )
            ) +
            ")"
        );
      }
      var dM = Ab(cc(300, 0.5, 0), cc(-240, 0.5, 1)),
        hM = Ab(cc(-100, 0.75, 0.35), cc(80, 1.5, 0.8)),
        pM = Ab(cc(260, 0.75, 0.35), cc(80, 1.5, 0.8)),
        gM = cc();
      function mM(e) {
        (e < 0 || e > 1) && (e -= Math.floor(e));
        var t = Math.abs(e - 0.5);
        return (
          (gM.h = 360 * e - 100),
          (gM.s = 1.5 - 1.5 * t),
          (gM.l = 0.8 - 0.9 * t),
          gM + ""
        );
      }
      var yM = wu(),
        bM = Math.PI / 3,
        vM = (2 * Math.PI) / 3;
      function _M(e) {
        var t;
        return (
          (e = (0.5 - e) * Math.PI),
          (yM.r = 255 * (t = Math.sin(e)) * t),
          (yM.g = 255 * (t = Math.sin(e + bM)) * t),
          (yM.b = 255 * (t = Math.sin(e + vM)) * t),
          yM + ""
        );
      }
      function xM(e) {
        return (
          (e = Math.max(0, Math.min(1, e))),
          "rgb(" +
            Math.max(
              0,
              Math.min(
                255,
                Math.round(
                  34.61 +
                    e *
                      (1172.33 -
                        e *
                          (10793.56 -
                            e * (33300.12 - e * (38394.49 - 14825.05 * e))))
                )
              )
            ) +
            ", " +
            Math.max(
              0,
              Math.min(
                255,
                Math.round(
                  23.31 +
                    e *
                      (557.33 +
                        e *
                          (1225.33 -
                            e * (3574.96 - e * (1073.77 + 707.56 * e))))
                )
              )
            ) +
            ", " +
            Math.max(
              0,
              Math.min(
                255,
                Math.round(
                  27.2 +
                    e *
                      (3211.1 -
                        e *
                          (15327.97 -
                            e * (27814 - e * (22569.18 - 6838.66 * e))))
                )
              )
            ) +
            ")"
        );
      }
      function TM(e) {
        var t = e.length;
        return function (n) {
          return e[Math.max(0, Math.min(t - 1, Math.floor(n * t)))];
        };
      }
      var MM = TM(
          Jx(
            "44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"
          )
        ),
        wM = TM(
          Jx(
            "00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"
          )
        ),
        AM = TM(
          Jx(
            "00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"
          )
        ),
        kM = TM(
          Jx(
            "0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"
          )
        ),
        EM = "http://www.w3.org/1999/xhtml",
        PM = {
          svg: "http://www.w3.org/2000/svg",
          xhtml: EM,
          xlink: "http://www.w3.org/1999/xlink",
          xml: "http://www.w3.org/XML/1998/namespace",
          xmlns: "http://www.w3.org/2000/xmlns/",
        };
      function CM(e) {
        var t = (e += ""),
          n = t.indexOf(":");
        return (
          n >= 0 && "xmlns" !== (t = e.slice(0, n)) && (e = e.slice(n + 1)),
          PM.hasOwnProperty(t) ? { space: PM[t], local: e } : e
        );
      }
      function LM(e) {
        return function () {
          var t = this.ownerDocument,
            n = this.namespaceURI;
          return n === EM && t.documentElement.namespaceURI === EM
            ? t.createElement(e)
            : t.createElementNS(n, e);
        };
      }
      function IM(e) {
        return function () {
          return this.ownerDocument.createElementNS(e.space, e.local);
        };
      }
      function SM(e) {
        var t = CM(e);
        return (t.local ? IM : LM)(t);
      }
      function OM() {}
      function NM(e) {
        return null == e
          ? OM
          : function () {
              return this.querySelector(e);
            };
      }
      function FM() {
        return [];
      }
      function DM(e) {
        return null == e
          ? FM
          : function () {
              return this.querySelectorAll(e);
            };
      }
      function RM(e) {
        return function () {
          return this.matches(e);
        };
      }
      function GM(e) {
        return new Array(e.length);
      }
      function BM(e, t) {
        (this.ownerDocument = e.ownerDocument),
          (this.namespaceURI = e.namespaceURI),
          (this._next = null),
          (this._parent = e),
          (this.__data__ = t);
      }
      BM.prototype = {
        constructor: BM,
        appendChild: function (e) {
          return this._parent.insertBefore(e, this._next);
        },
        insertBefore: function (e, t) {
          return this._parent.insertBefore(e, t);
        },
        querySelector: function (e) {
          return this._parent.querySelector(e);
        },
        querySelectorAll: function (e) {
          return this._parent.querySelectorAll(e);
        },
      };
      function WM(e, t, n, r, i, o) {
        for (var a, s = 0, u = t.length, c = o.length; s < c; ++s)
          (a = t[s])
            ? ((a.__data__ = o[s]), (r[s] = a))
            : (n[s] = new BM(e, o[s]));
        for (; s < u; ++s) (a = t[s]) && (i[s] = a);
      }
      function jM(e, t, n, r, i, o, a) {
        var s,
          u,
          c,
          l = {},
          f = t.length,
          d = o.length,
          h = new Array(f);
        for (s = 0; s < f; ++s)
          (u = t[s]) &&
            ((h[s] = c = "$" + a.call(u, u.__data__, s, t)),
            c in l ? (i[s] = u) : (l[c] = u));
        for (s = 0; s < d; ++s)
          (u = l[(c = "$" + a.call(e, o[s], s, o))])
            ? ((r[s] = u), (u.__data__ = o[s]), (l[c] = null))
            : (n[s] = new BM(e, o[s]));
        for (s = 0; s < f; ++s) (u = t[s]) && l[h[s]] === u && (i[s] = u);
      }
      function zM(e, t) {
        return e < t ? -1 : e > t ? 1 : e >= t ? 0 : NaN;
      }
      function UM(e) {
        return function () {
          this.removeAttribute(e);
        };
      }
      function HM(e) {
        return function () {
          this.removeAttributeNS(e.space, e.local);
        };
      }
      function VM(e, t) {
        return function () {
          this.setAttribute(e, t);
        };
      }
      function qM(e, t) {
        return function () {
          this.setAttributeNS(e.space, e.local, t);
        };
      }
      function ZM(e, t) {
        return function () {
          var n = t.apply(this, arguments);
          null == n ? this.removeAttribute(e) : this.setAttribute(e, n);
        };
      }
      function YM(e, t) {
        return function () {
          var n = t.apply(this, arguments);
          null == n
            ? this.removeAttributeNS(e.space, e.local)
            : this.setAttributeNS(e.space, e.local, n);
        };
      }
      function XM(e) {
        return (
          (e.ownerDocument && e.ownerDocument.defaultView) ||
          (e.document && e) ||
          e.defaultView
        );
      }
      function $M(e) {
        return function () {
          this.style.removeProperty(e);
        };
      }
      function KM(e, t, n) {
        return function () {
          this.style.setProperty(e, t, n);
        };
      }
      function QM(e, t, n) {
        return function () {
          var r = t.apply(this, arguments);
          null == r
            ? this.style.removeProperty(e)
            : this.style.setProperty(e, r, n);
        };
      }
      function JM(e, t) {
        return (
          e.style.getPropertyValue(t) ||
          XM(e).getComputedStyle(e, null).getPropertyValue(t)
        );
      }
      function ew(e) {
        return function () {
          delete this[e];
        };
      }
      function tw(e, t) {
        return function () {
          this[e] = t;
        };
      }
      function nw(e, t) {
        return function () {
          var n = t.apply(this, arguments);
          null == n ? delete this[e] : (this[e] = n);
        };
      }
      function rw(e) {
        return e.trim().split(/^|\s+/);
      }
      function iw(e) {
        return e.classList || new ow(e);
      }
      function ow(e) {
        (this._node = e), (this._names = rw(e.getAttribute("class") || ""));
      }
      function aw(e, t) {
        for (var n = iw(e), r = -1, i = t.length; ++r < i; ) n.add(t[r]);
      }
      function sw(e, t) {
        for (var n = iw(e), r = -1, i = t.length; ++r < i; ) n.remove(t[r]);
      }
      function uw(e) {
        return function () {
          aw(this, e);
        };
      }
      function cw(e) {
        return function () {
          sw(this, e);
        };
      }
      function lw(e, t) {
        return function () {
          (t.apply(this, arguments) ? aw : sw)(this, e);
        };
      }
      function fw() {
        this.textContent = "";
      }
      function dw(e) {
        return function () {
          this.textContent = e;
        };
      }
      function hw(e) {
        return function () {
          var t = e.apply(this, arguments);
          this.textContent = null == t ? "" : t;
        };
      }
      function pw() {
        this.innerHTML = "";
      }
      function gw(e) {
        return function () {
          this.innerHTML = e;
        };
      }
      function mw(e) {
        return function () {
          var t = e.apply(this, arguments);
          this.innerHTML = null == t ? "" : t;
        };
      }
      function yw() {
        this.nextSibling && this.parentNode.appendChild(this);
      }
      function bw() {
        this.previousSibling &&
          this.parentNode.insertBefore(this, this.parentNode.firstChild);
      }
      function vw() {
        return null;
      }
      function _w() {
        var e = this.parentNode;
        e && e.removeChild(this);
      }
      function xw() {
        var e = this.cloneNode(!1),
          t = this.parentNode;
        return t ? t.insertBefore(e, this.nextSibling) : e;
      }
      function Tw() {
        var e = this.cloneNode(!0),
          t = this.parentNode;
        return t ? t.insertBefore(e, this.nextSibling) : e;
      }
      ow.prototype = {
        add: function (e) {
          this._names.indexOf(e) < 0 &&
            (this._names.push(e),
            this._node.setAttribute("class", this._names.join(" ")));
        },
        remove: function (e) {
          var t = this._names.indexOf(e);
          t >= 0 &&
            (this._names.splice(t, 1),
            this._node.setAttribute("class", this._names.join(" ")));
        },
        contains: function (e) {
          return this._names.indexOf(e) >= 0;
        },
      };
      var Mw = {},
        ww = null;
      "undefined" !== typeof document &&
        ("onmouseenter" in document.documentElement ||
          (Mw = { mouseenter: "mouseover", mouseleave: "mouseout" }));
      function Aw(e, t, n) {
        return (
          (e = kw(e, t, n)),
          function (t) {
            var n = t.relatedTarget;
            (n && (n === this || 8 & n.compareDocumentPosition(this))) ||
              e.call(this, t);
          }
        );
      }
      function kw(e, t, n) {
        return function (r) {
          var i = ww;
          ww = r;
          try {
            e.call(this, this.__data__, t, n);
          } finally {
            ww = i;
          }
        };
      }
      function Ew(e) {
        return e
          .trim()
          .split(/^|\s+/)
          .map(function (e) {
            var t = "",
              n = e.indexOf(".");
            return (
              n >= 0 && ((t = e.slice(n + 1)), (e = e.slice(0, n))),
              { type: e, name: t }
            );
          });
      }
      function Pw(e) {
        return function () {
          var t = this.__on;
          if (t) {
            for (var n, r = 0, i = -1, o = t.length; r < o; ++r)
              (n = t[r]),
                (e.type && n.type !== e.type) || n.name !== e.name
                  ? (t[++i] = n)
                  : this.removeEventListener(n.type, n.listener, n.capture);
            ++i ? (t.length = i) : delete this.__on;
          }
        };
      }
      function Cw(e, t, n) {
        var r = Mw.hasOwnProperty(e.type) ? Aw : kw;
        return function (i, o, a) {
          var s,
            u = this.__on,
            c = r(t, o, a);
          if (u)
            for (var l = 0, f = u.length; l < f; ++l)
              if ((s = u[l]).type === e.type && s.name === e.name)
                return (
                  this.removeEventListener(s.type, s.listener, s.capture),
                  this.addEventListener(
                    s.type,
                    (s.listener = c),
                    (s.capture = n)
                  ),
                  void (s.value = t)
                );
          this.addEventListener(e.type, c, n),
            (s = {
              type: e.type,
              name: e.name,
              value: t,
              listener: c,
              capture: n,
            }),
            u ? u.push(s) : (this.__on = [s]);
        };
      }
      function Lw(e, t, n, r) {
        var i = ww;
        (e.sourceEvent = ww), (ww = e);
        try {
          return t.apply(n, r);
        } finally {
          ww = i;
        }
      }
      function Iw(e, t, n) {
        var r = XM(e),
          i = r.CustomEvent;
        "function" === typeof i
          ? (i = new i(t, n))
          : ((i = r.document.createEvent("Event")),
            n
              ? (i.initEvent(t, n.bubbles, n.cancelable), (i.detail = n.detail))
              : i.initEvent(t, !1, !1)),
          e.dispatchEvent(i);
      }
      function Sw(e, t) {
        return function () {
          return Iw(this, e, t);
        };
      }
      function Ow(e, t) {
        return function () {
          return Iw(this, e, t.apply(this, arguments));
        };
      }
      var Nw = [null];
      function Fw(e, t) {
        (this._groups = e), (this._parents = t);
      }
      function Dw() {
        return new Fw([[document.documentElement]], Nw);
      }
      Fw.prototype = Dw.prototype = {
        constructor: Fw,
        select: function (e) {
          "function" !== typeof e && (e = NM(e));
          for (
            var t = this._groups, n = t.length, r = new Array(n), i = 0;
            i < n;
            ++i
          )
            for (
              var o,
                a,
                s = t[i],
                u = s.length,
                c = (r[i] = new Array(u)),
                l = 0;
              l < u;
              ++l
            )
              (o = s[l]) &&
                (a = e.call(o, o.__data__, l, s)) &&
                ("__data__" in o && (a.__data__ = o.__data__), (c[l] = a));
          return new Fw(r, this._parents);
        },
        selectAll: function (e) {
          "function" !== typeof e && (e = DM(e));
          for (
            var t = this._groups, n = t.length, r = [], i = [], o = 0;
            o < n;
            ++o
          )
            for (var a, s = t[o], u = s.length, c = 0; c < u; ++c)
              (a = s[c]) && (r.push(e.call(a, a.__data__, c, s)), i.push(a));
          return new Fw(r, i);
        },
        filter: function (e) {
          "function" !== typeof e && (e = RM(e));
          for (
            var t = this._groups, n = t.length, r = new Array(n), i = 0;
            i < n;
            ++i
          )
            for (
              var o, a = t[i], s = a.length, u = (r[i] = []), c = 0;
              c < s;
              ++c
            )
              (o = a[c]) && e.call(o, o.__data__, c, a) && u.push(o);
          return new Fw(r, this._parents);
        },
        data: function (e, t) {
          if (!e)
            return (
              (h = new Array(this.size())),
              (c = -1),
              this.each(function (e) {
                h[++c] = e;
              }),
              h
            );
          var n = t ? jM : WM,
            r = this._parents,
            i = this._groups;
          "function" !== typeof e &&
            (e = (function (e) {
              return function () {
                return e;
              };
            })(e));
          for (
            var o = i.length,
              a = new Array(o),
              s = new Array(o),
              u = new Array(o),
              c = 0;
            c < o;
            ++c
          ) {
            var l = r[c],
              f = i[c],
              d = f.length,
              h = e.call(l, l && l.__data__, c, r),
              p = h.length,
              g = (s[c] = new Array(p)),
              m = (a[c] = new Array(p));
            n(l, f, g, m, (u[c] = new Array(d)), h, t);
            for (var y, b, v = 0, _ = 0; v < p; ++v)
              if ((y = g[v])) {
                for (v >= _ && (_ = v + 1); !(b = m[_]) && ++_ < p; );
                y._next = b || null;
              }
          }
          return ((a = new Fw(a, r))._enter = s), (a._exit = u), a;
        },
        enter: function () {
          return new Fw(this._enter || this._groups.map(GM), this._parents);
        },
        exit: function () {
          return new Fw(this._exit || this._groups.map(GM), this._parents);
        },
        join: function (e, t, n) {
          var r = this.enter(),
            i = this,
            o = this.exit();
          return (
            (r = "function" === typeof e ? e(r) : r.append(e + "")),
            null != t && (i = t(i)),
            null == n ? o.remove() : n(o),
            r && i ? r.merge(i).order() : i
          );
        },
        merge: function (e) {
          for (
            var t = this._groups,
              n = e._groups,
              r = t.length,
              i = n.length,
              o = Math.min(r, i),
              a = new Array(r),
              s = 0;
            s < o;
            ++s
          )
            for (
              var u,
                c = t[s],
                l = n[s],
                f = c.length,
                d = (a[s] = new Array(f)),
                h = 0;
              h < f;
              ++h
            )
              (u = c[h] || l[h]) && (d[h] = u);
          for (; s < r; ++s) a[s] = t[s];
          return new Fw(a, this._parents);
        },
        order: function () {
          for (var e = this._groups, t = -1, n = e.length; ++t < n; )
            for (var r, i = e[t], o = i.length - 1, a = i[o]; --o >= 0; )
              (r = i[o]) &&
                (a &&
                  4 ^ r.compareDocumentPosition(a) &&
                  a.parentNode.insertBefore(r, a),
                (a = r));
          return this;
        },
        sort: function (e) {
          function t(t, n) {
            return t && n ? e(t.__data__, n.__data__) : !t - !n;
          }
          e || (e = zM);
          for (
            var n = this._groups, r = n.length, i = new Array(r), o = 0;
            o < r;
            ++o
          ) {
            for (
              var a, s = n[o], u = s.length, c = (i[o] = new Array(u)), l = 0;
              l < u;
              ++l
            )
              (a = s[l]) && (c[l] = a);
            c.sort(t);
          }
          return new Fw(i, this._parents).order();
        },
        call: function () {
          var e = arguments[0];
          return (arguments[0] = this), e.apply(null, arguments), this;
        },
        nodes: function () {
          var e = new Array(this.size()),
            t = -1;
          return (
            this.each(function () {
              e[++t] = this;
            }),
            e
          );
        },
        node: function () {
          for (var e = this._groups, t = 0, n = e.length; t < n; ++t)
            for (var r = e[t], i = 0, o = r.length; i < o; ++i) {
              var a = r[i];
              if (a) return a;
            }
          return null;
        },
        size: function () {
          var e = 0;
          return (
            this.each(function () {
              ++e;
            }),
            e
          );
        },
        empty: function () {
          return !this.node();
        },
        each: function (e) {
          for (var t = this._groups, n = 0, r = t.length; n < r; ++n)
            for (var i, o = t[n], a = 0, s = o.length; a < s; ++a)
              (i = o[a]) && e.call(i, i.__data__, a, o);
          return this;
        },
        attr: function (e, t) {
          var n = CM(e);
          if (arguments.length < 2) {
            var r = this.node();
            return n.local
              ? r.getAttributeNS(n.space, n.local)
              : r.getAttribute(n);
          }
          return this.each(
            (null == t
              ? n.local
                ? HM
                : UM
              : "function" === typeof t
              ? n.local
                ? YM
                : ZM
              : n.local
              ? qM
              : VM)(n, t)
          );
        },
        style: function (e, t, n) {
          return arguments.length > 1
            ? this.each(
                (null == t ? $M : "function" === typeof t ? QM : KM)(
                  e,
                  t,
                  null == n ? "" : n
                )
              )
            : JM(this.node(), e);
        },
        property: function (e, t) {
          return arguments.length > 1
            ? this.each(
                (null == t ? ew : "function" === typeof t ? nw : tw)(e, t)
              )
            : this.node()[e];
        },
        classed: function (e, t) {
          var n = rw(e + "");
          if (arguments.length < 2) {
            for (var r = iw(this.node()), i = -1, o = n.length; ++i < o; )
              if (!r.contains(n[i])) return !1;
            return !0;
          }
          return this.each(("function" === typeof t ? lw : t ? uw : cw)(n, t));
        },
        text: function (e) {
          return arguments.length
            ? this.each(null == e ? fw : ("function" === typeof e ? hw : dw)(e))
            : this.node().textContent;
        },
        html: function (e) {
          return arguments.length
            ? this.each(null == e ? pw : ("function" === typeof e ? mw : gw)(e))
            : this.node().innerHTML;
        },
        raise: function () {
          return this.each(yw);
        },
        lower: function () {
          return this.each(bw);
        },
        append: function (e) {
          var t = "function" === typeof e ? e : SM(e);
          return this.select(function () {
            return this.appendChild(t.apply(this, arguments));
          });
        },
        insert: function (e, t) {
          var n = "function" === typeof e ? e : SM(e),
            r = null == t ? vw : "function" === typeof t ? t : NM(t);
          return this.select(function () {
            return this.insertBefore(
              n.apply(this, arguments),
              r.apply(this, arguments) || null
            );
          });
        },
        remove: function () {
          return this.each(_w);
        },
        clone: function (e) {
          return this.select(e ? Tw : xw);
        },
        datum: function (e) {
          return arguments.length
            ? this.property("__data__", e)
            : this.node().__data__;
        },
        on: function (e, t, n) {
          var r,
            i,
            o = Ew(e + ""),
            a = o.length;
          if (!(arguments.length < 2)) {
            for (s = t ? Cw : Pw, null == n && (n = !1), r = 0; r < a; ++r)
              this.each(s(o[r], t, n));
            return this;
          }
          var s = this.node().__on;
          if (s)
            for (var u, c = 0, l = s.length; c < l; ++c)
              for (r = 0, u = s[c]; r < a; ++r)
                if ((i = o[r]).type === u.type && i.name === u.name)
                  return u.value;
        },
        dispatch: function (e, t) {
          return this.each(("function" === typeof t ? Ow : Sw)(e, t));
        },
      };
      var Rw = Dw;
      function Gw(e) {
        return "string" === typeof e
          ? new Fw([[document.querySelector(e)]], [document.documentElement])
          : new Fw([[e]], Nw);
      }
      function Bw(e) {
        return Gw(SM(e).call(document.documentElement));
      }
      var Ww = 0;
      function jw() {
        return new zw();
      }
      function zw() {
        this._ = "@" + (++Ww).toString(36);
      }
      function Uw() {
        for (var e, t = ww; (e = t.sourceEvent); ) t = e;
        return t;
      }
      function Hw(e, t) {
        var n = e.ownerSVGElement || e;
        if (n.createSVGPoint) {
          var r = n.createSVGPoint();
          return (
            (r.x = t.clientX),
            (r.y = t.clientY),
            [(r = r.matrixTransform(e.getScreenCTM().inverse())).x, r.y]
          );
        }
        var i = e.getBoundingClientRect();
        return [
          t.clientX - i.left - e.clientLeft,
          t.clientY - i.top - e.clientTop,
        ];
      }
      function Vw(e) {
        var t = Uw();
        return t.changedTouches && (t = t.changedTouches[0]), Hw(e, t);
      }
      function qw(e) {
        return "string" === typeof e
          ? new Fw([document.querySelectorAll(e)], [document.documentElement])
          : new Fw([null == e ? [] : e], Nw);
      }
      function Zw(e, t, n) {
        arguments.length < 3 && ((n = t), (t = Uw().changedTouches));
        for (var r, i = 0, o = t ? t.length : 0; i < o; ++i)
          if ((r = t[i]).identifier === n) return Hw(e, r);
        return null;
      }
      function Yw(e, t) {
        null == t && (t = Uw().touches);
        for (var n = 0, r = t ? t.length : 0, i = new Array(r); n < r; ++n)
          i[n] = Hw(e, t[n]);
        return i;
      }
      zw.prototype = jw.prototype = {
        constructor: zw,
        get: function (e) {
          for (var t = this._; !(t in e); ) if (!(e = e.parentNode)) return;
          return e[t];
        },
        set: function (e, t) {
          return (e[this._] = t);
        },
        remove: function (e) {
          return this._ in e && delete e[this._];
        },
        toString: function () {
          return this._;
        },
      };
      var Xw = n(217728),
        $w = n(90596);
      function Kw(e) {
        return e.innerRadius;
      }
      function Qw(e) {
        return e.outerRadius;
      }
      function Jw(e) {
        return e.startAngle;
      }
      function eA(e) {
        return e.endAngle;
      }
      function tA(e) {
        return e && e.padAngle;
      }
      function nA(e, t, n, r, i, o, a, s) {
        var u = n - e,
          c = r - t,
          l = a - i,
          f = s - o,
          d = f * u - l * c;
        if (!(d * d < $w.Ho))
          return [e + (d = (l * (t - o) - f * (e - i)) / d) * u, t + d * c];
      }
      function rA(e, t, n, r, i, o, a) {
        var s = e - n,
          u = t - r,
          c = (a ? o : -o) / (0, $w._b)(s * s + u * u),
          l = c * u,
          f = -c * s,
          d = e + l,
          h = t + f,
          p = n + l,
          g = r + f,
          m = (d + p) / 2,
          y = (h + g) / 2,
          b = p - d,
          v = g - h,
          _ = b * b + v * v,
          x = i - o,
          T = d * g - p * h,
          M = (v < 0 ? -1 : 1) * (0, $w._b)((0, $w.Fp)(0, x * x * _ - T * T)),
          w = (T * v - b * M) / _,
          A = (-T * b - v * M) / _,
          k = (T * v + b * M) / _,
          E = (-T * b + v * M) / _,
          P = w - m,
          C = A - y,
          L = k - m,
          I = E - y;
        return (
          P * P + C * C > L * L + I * I && ((w = k), (A = E)),
          {
            cx: w,
            cy: A,
            x01: -l,
            y01: -f,
            x11: w * (i / x - 1),
            y11: A * (i / x - 1),
          }
        );
      }
      function iA() {
        var e = Kw,
          t = Qw,
          n = (0, Xw.Z)(0),
          r = null,
          i = Jw,
          o = eA,
          a = tA,
          s = null;
        function u() {
          var u,
            c,
            l = +e.apply(this, arguments),
            f = +t.apply(this, arguments),
            d = i.apply(this, arguments) - $w.ou,
            h = o.apply(this, arguments) - $w.ou,
            p = (0, $w.Wn)(h - d),
            g = h > d;
          if (
            (s || (s = u = (0, Os.Z)()),
            f < l && ((c = f), (f = l), (l = c)),
            f > $w.Ho)
          )
            if (p > $w.BZ - $w.Ho)
              s.moveTo(f * (0, $w.mC)(d), f * (0, $w.O$)(d)),
                s.arc(0, 0, f, d, h, !g),
                l > $w.Ho &&
                  (s.moveTo(l * (0, $w.mC)(h), l * (0, $w.O$)(h)),
                  s.arc(0, 0, l, h, d, g));
            else {
              var m,
                y,
                b = d,
                v = h,
                _ = d,
                x = h,
                T = p,
                M = p,
                w = a.apply(this, arguments) / 2,
                A =
                  w > $w.Ho &&
                  (r ? +r.apply(this, arguments) : (0, $w._b)(l * l + f * f)),
                k = (0, $w.VV)(
                  (0, $w.Wn)(f - l) / 2,
                  +n.apply(this, arguments)
                ),
                E = k,
                P = k;
              if (A > $w.Ho) {
                var C = (0, $w.ZR)((A / l) * (0, $w.O$)(w)),
                  L = (0, $w.ZR)((A / f) * (0, $w.O$)(w));
                (T -= 2 * C) > $w.Ho
                  ? ((_ += C *= g ? 1 : -1), (x -= C))
                  : ((T = 0), (_ = x = (d + h) / 2)),
                  (M -= 2 * L) > $w.Ho
                    ? ((b += L *= g ? 1 : -1), (v -= L))
                    : ((M = 0), (b = v = (d + h) / 2));
              }
              var I = f * (0, $w.mC)(b),
                S = f * (0, $w.O$)(b),
                O = l * (0, $w.mC)(x),
                N = l * (0, $w.O$)(x);
              if (k > $w.Ho) {
                var F,
                  D = f * (0, $w.mC)(v),
                  R = f * (0, $w.O$)(v),
                  G = l * (0, $w.mC)(_),
                  B = l * (0, $w.O$)(_);
                if (p < $w.pi && (F = nA(I, S, G, B, D, R, O, N))) {
                  var W = I - F[0],
                    j = S - F[1],
                    z = D - F[0],
                    U = R - F[1],
                    H =
                      1 /
                      (0, $w.O$)(
                        (0, $w.Kh)(
                          (W * z + j * U) /
                            ((0, $w._b)(W * W + j * j) *
                              (0, $w._b)(z * z + U * U))
                        ) / 2
                      ),
                    V = (0, $w._b)(F[0] * F[0] + F[1] * F[1]);
                  (E = (0, $w.VV)(k, (l - V) / (H - 1))),
                    (P = (0, $w.VV)(k, (f - V) / (H + 1)));
                }
              }
              M > $w.Ho
                ? P > $w.Ho
                  ? ((m = rA(G, B, I, S, f, P, g)),
                    (y = rA(D, R, O, N, f, P, g)),
                    s.moveTo(m.cx + m.x01, m.cy + m.y01),
                    P < k
                      ? s.arc(
                          m.cx,
                          m.cy,
                          P,
                          (0, $w.fv)(m.y01, m.x01),
                          (0, $w.fv)(y.y01, y.x01),
                          !g
                        )
                      : (s.arc(
                          m.cx,
                          m.cy,
                          P,
                          (0, $w.fv)(m.y01, m.x01),
                          (0, $w.fv)(m.y11, m.x11),
                          !g
                        ),
                        s.arc(
                          0,
                          0,
                          f,
                          (0, $w.fv)(m.cy + m.y11, m.cx + m.x11),
                          (0, $w.fv)(y.cy + y.y11, y.cx + y.x11),
                          !g
                        ),
                        s.arc(
                          y.cx,
                          y.cy,
                          P,
                          (0, $w.fv)(y.y11, y.x11),
                          (0, $w.fv)(y.y01, y.x01),
                          !g
                        )))
                  : (s.moveTo(I, S), s.arc(0, 0, f, b, v, !g))
                : s.moveTo(I, S),
                l > $w.Ho && T > $w.Ho
                  ? E > $w.Ho
                    ? ((m = rA(O, N, D, R, l, -E, g)),
                      (y = rA(I, S, G, B, l, -E, g)),
                      s.lineTo(m.cx + m.x01, m.cy + m.y01),
                      E < k
                        ? s.arc(
                            m.cx,
                            m.cy,
                            E,
                            (0, $w.fv)(m.y01, m.x01),
                            (0, $w.fv)(y.y01, y.x01),
                            !g
                          )
                        : (s.arc(
                            m.cx,
                            m.cy,
                            E,
                            (0, $w.fv)(m.y01, m.x01),
                            (0, $w.fv)(m.y11, m.x11),
                            !g
                          ),
                          s.arc(
                            0,
                            0,
                            l,
                            (0, $w.fv)(m.cy + m.y11, m.cx + m.x11),
                            (0, $w.fv)(y.cy + y.y11, y.cx + y.x11),
                            g
                          ),
                          s.arc(
                            y.cx,
                            y.cy,
                            E,
                            (0, $w.fv)(y.y11, y.x11),
                            (0, $w.fv)(y.y01, y.x01),
                            !g
                          )))
                    : s.arc(0, 0, l, x, _, g)
                  : s.lineTo(O, N);
            }
          else s.moveTo(0, 0);
          if ((s.closePath(), u)) return (s = null), u + "" || null;
        }
        return (
          (u.centroid = function () {
            var n = (+e.apply(this, arguments) + +t.apply(this, arguments)) / 2,
              r =
                (+i.apply(this, arguments) + +o.apply(this, arguments)) / 2 -
                $w.pi / 2;
            return [(0, $w.mC)(r) * n, (0, $w.O$)(r) * n];
          }),
          (u.innerRadius = function (t) {
            return arguments.length
              ? ((e = "function" === typeof t ? t : (0, Xw.Z)(+t)), u)
              : e;
          }),
          (u.outerRadius = function (e) {
            return arguments.length
              ? ((t = "function" === typeof e ? e : (0, Xw.Z)(+e)), u)
              : t;
          }),
          (u.cornerRadius = function (e) {
            return arguments.length
              ? ((n = "function" === typeof e ? e : (0, Xw.Z)(+e)), u)
              : n;
          }),
          (u.padRadius = function (e) {
            return arguments.length
              ? ((r =
                  null == e
                    ? null
                    : "function" === typeof e
                    ? e
                    : (0, Xw.Z)(+e)),
                u)
              : r;
          }),
          (u.startAngle = function (e) {
            return arguments.length
              ? ((i = "function" === typeof e ? e : (0, Xw.Z)(+e)), u)
              : i;
          }),
          (u.endAngle = function (e) {
            return arguments.length
              ? ((o = "function" === typeof e ? e : (0, Xw.Z)(+e)), u)
              : o;
          }),
          (u.padAngle = function (e) {
            return arguments.length
              ? ((a = "function" === typeof e ? e : (0, Xw.Z)(+e)), u)
              : a;
          }),
          (u.context = function (e) {
            return arguments.length ? ((s = null == e ? null : e), u) : s;
          }),
          u
        );
      }
      var oA = n(708713),
        aA = n(540652);
      function sA(e, t) {
        return t < e ? -1 : t > e ? 1 : t >= e ? 0 : NaN;
      }
      function uA(e) {
        return e;
      }
      function cA() {
        var e = uA,
          t = sA,
          n = null,
          r = (0, Xw.Z)(0),
          i = (0, Xw.Z)($w.BZ),
          o = (0, Xw.Z)(0);
        function a(a) {
          var s,
            u,
            c,
            l,
            f,
            d = a.length,
            h = 0,
            p = new Array(d),
            g = new Array(d),
            m = +r.apply(this, arguments),
            y = Math.min($w.BZ, Math.max(-$w.BZ, i.apply(this, arguments) - m)),
            b = Math.min(Math.abs(y) / d, o.apply(this, arguments)),
            v = b * (y < 0 ? -1 : 1);
          for (s = 0; s < d; ++s)
            (f = g[(p[s] = s)] = +e(a[s], s, a)) > 0 && (h += f);
          for (
            null != t
              ? p.sort(function (e, n) {
                  return t(g[e], g[n]);
                })
              : null != n &&
                p.sort(function (e, t) {
                  return n(a[e], a[t]);
                }),
              s = 0,
              c = h ? (y - d * v) / h : 0;
            s < d;
            ++s, m = l
          )
            (u = p[s]),
              (l = m + ((f = g[u]) > 0 ? f * c : 0) + v),
              (g[u] = {
                data: a[u],
                index: s,
                value: f,
                startAngle: m,
                endAngle: l,
                padAngle: b,
              });
          return g;
        }
        return (
          (a.value = function (t) {
            return arguments.length
              ? ((e = "function" === typeof t ? t : (0, Xw.Z)(+t)), a)
              : e;
          }),
          (a.sortValues = function (e) {
            return arguments.length ? ((t = e), (n = null), a) : t;
          }),
          (a.sort = function (e) {
            return arguments.length ? ((n = e), (t = null), a) : n;
          }),
          (a.startAngle = function (e) {
            return arguments.length
              ? ((r = "function" === typeof e ? e : (0, Xw.Z)(+e)), a)
              : r;
          }),
          (a.endAngle = function (e) {
            return arguments.length
              ? ((i = "function" === typeof e ? e : (0, Xw.Z)(+e)), a)
              : i;
          }),
          (a.padAngle = function (e) {
            return arguments.length
              ? ((o = "function" === typeof e ? e : (0, Xw.Z)(+e)), a)
              : o;
          }),
          a
        );
      }
      var lA = n(404224),
        fA = hA(lA.Z);
      function dA(e) {
        this._curve = e;
      }
      function hA(e) {
        function t(t) {
          return new dA(e(t));
        }
        return (t._curve = e), t;
      }
      function pA(e) {
        var t = e.curve;
        return (
          (e.angle = e.x),
          delete e.x,
          (e.radius = e.y),
          delete e.y,
          (e.curve = function (e) {
            return arguments.length ? t(hA(e)) : t()._curve;
          }),
          e
        );
      }
      function gA() {
        return pA((0, aA.Z)().curve(fA));
      }
      function mA() {
        var e = (0, oA.Z)().curve(fA),
          t = e.curve,
          n = e.lineX0,
          r = e.lineX1,
          i = e.lineY0,
          o = e.lineY1;
        return (
          (e.angle = e.x),
          delete e.x,
          (e.startAngle = e.x0),
          delete e.x0,
          (e.endAngle = e.x1),
          delete e.x1,
          (e.radius = e.y),
          delete e.y,
          (e.innerRadius = e.y0),
          delete e.y0,
          (e.outerRadius = e.y1),
          delete e.y1,
          (e.lineStartAngle = function () {
            return pA(n());
          }),
          delete e.lineX0,
          (e.lineEndAngle = function () {
            return pA(r());
          }),
          delete e.lineX1,
          (e.lineInnerRadius = function () {
            return pA(i());
          }),
          delete e.lineY0,
          (e.lineOuterRadius = function () {
            return pA(o());
          }),
          delete e.lineY1,
          (e.curve = function (e) {
            return arguments.length ? t(hA(e)) : t()._curve;
          }),
          e
        );
      }
      function yA(e, t) {
        return [(t = +t) * Math.cos((e -= Math.PI / 2)), t * Math.sin(e)];
      }
      dA.prototype = {
        areaStart: function () {
          this._curve.areaStart();
        },
        areaEnd: function () {
          this._curve.areaEnd();
        },
        lineStart: function () {
          this._curve.lineStart();
        },
        lineEnd: function () {
          this._curve.lineEnd();
        },
        point: function (e, t) {
          this._curve.point(t * Math.sin(e), t * -Math.cos(e));
        },
      };
      var bA = n(89555),
        vA = n(641221);
      function _A(e) {
        return e.source;
      }
      function xA(e) {
        return e.target;
      }
      function TA(e) {
        var t = _A,
          n = xA,
          r = vA.x,
          i = vA.y,
          o = null;
        function a() {
          var a,
            s = bA.t.call(arguments),
            u = t.apply(this, s),
            c = n.apply(this, s);
          if (
            (o || (o = a = (0, Os.Z)()),
            e(
              o,
              +r.apply(this, ((s[0] = u), s)),
              +i.apply(this, s),
              +r.apply(this, ((s[0] = c), s)),
              +i.apply(this, s)
            ),
            a)
          )
            return (o = null), a + "" || null;
        }
        return (
          (a.source = function (e) {
            return arguments.length ? ((t = e), a) : t;
          }),
          (a.target = function (e) {
            return arguments.length ? ((n = e), a) : n;
          }),
          (a.x = function (e) {
            return arguments.length
              ? ((r = "function" === typeof e ? e : (0, Xw.Z)(+e)), a)
              : r;
          }),
          (a.y = function (e) {
            return arguments.length
              ? ((i = "function" === typeof e ? e : (0, Xw.Z)(+e)), a)
              : i;
          }),
          (a.context = function (e) {
            return arguments.length ? ((o = null == e ? null : e), a) : o;
          }),
          a
        );
      }
      function MA(e, t, n, r, i) {
        e.moveTo(t, n), e.bezierCurveTo((t = (t + r) / 2), n, t, i, r, i);
      }
      function wA(e, t, n, r, i) {
        e.moveTo(t, n), e.bezierCurveTo(t, (n = (n + i) / 2), r, n, r, i);
      }
      function AA(e, t, n, r, i) {
        var o = yA(t, n),
          a = yA(t, (n = (n + i) / 2)),
          s = yA(r, n),
          u = yA(r, i);
        e.moveTo(o[0], o[1]),
          e.bezierCurveTo(a[0], a[1], s[0], s[1], u[0], u[1]);
      }
      function kA() {
        return TA(MA);
      }
      function EA() {
        return TA(wA);
      }
      function PA() {
        var e = TA(AA);
        return (e.angle = e.x), delete e.x, (e.radius = e.y), delete e.y, e;
      }
      var CA = {
          draw: function (e, t) {
            var n = Math.sqrt(t / $w.pi);
            e.moveTo(n, 0), e.arc(0, 0, n, 0, $w.BZ);
          },
        },
        LA = {
          draw: function (e, t) {
            var n = Math.sqrt(t / 5) / 2;
            e.moveTo(-3 * n, -n),
              e.lineTo(-n, -n),
              e.lineTo(-n, -3 * n),
              e.lineTo(n, -3 * n),
              e.lineTo(n, -n),
              e.lineTo(3 * n, -n),
              e.lineTo(3 * n, n),
              e.lineTo(n, n),
              e.lineTo(n, 3 * n),
              e.lineTo(-n, 3 * n),
              e.lineTo(-n, n),
              e.lineTo(-3 * n, n),
              e.closePath();
          },
        },
        IA = Math.sqrt(1 / 3),
        SA = 2 * IA,
        OA = {
          draw: function (e, t) {
            var n = Math.sqrt(t / SA),
              r = n * IA;
            e.moveTo(0, -n),
              e.lineTo(r, 0),
              e.lineTo(0, n),
              e.lineTo(-r, 0),
              e.closePath();
          },
        },
        NA = Math.sin($w.pi / 10) / Math.sin((7 * $w.pi) / 10),
        FA = Math.sin($w.BZ / 10) * NA,
        DA = -Math.cos($w.BZ / 10) * NA,
        RA = {
          draw: function (e, t) {
            var n = Math.sqrt(0.8908130915292852 * t),
              r = FA * n,
              i = DA * n;
            e.moveTo(0, -n), e.lineTo(r, i);
            for (var o = 1; o < 5; ++o) {
              var a = ($w.BZ * o) / 5,
                s = Math.cos(a),
                u = Math.sin(a);
              e.lineTo(u * n, -s * n), e.lineTo(s * r - u * i, u * r + s * i);
            }
            e.closePath();
          },
        },
        GA = {
          draw: function (e, t) {
            var n = Math.sqrt(t),
              r = -n / 2;
            e.rect(r, r, n, n);
          },
        },
        BA = Math.sqrt(3),
        WA = {
          draw: function (e, t) {
            var n = -Math.sqrt(t / (3 * BA));
            e.moveTo(0, 2 * n),
              e.lineTo(-BA * n, -n),
              e.lineTo(BA * n, -n),
              e.closePath();
          },
        },
        jA = -0.5,
        zA = Math.sqrt(3) / 2,
        UA = 1 / Math.sqrt(12),
        HA = 3 * (UA / 2 + 1),
        VA = {
          draw: function (e, t) {
            var n = Math.sqrt(t / HA),
              r = n / 2,
              i = n * UA,
              o = r,
              a = n * UA + n,
              s = -o,
              u = a;
            e.moveTo(r, i),
              e.lineTo(o, a),
              e.lineTo(s, u),
              e.lineTo(jA * r - zA * i, zA * r + jA * i),
              e.lineTo(jA * o - zA * a, zA * o + jA * a),
              e.lineTo(jA * s - zA * u, zA * s + jA * u),
              e.lineTo(jA * r + zA * i, jA * i - zA * r),
              e.lineTo(jA * o + zA * a, jA * a - zA * o),
              e.lineTo(jA * s + zA * u, jA * u - zA * s),
              e.closePath();
          },
        },
        qA = [CA, LA, OA, GA, RA, WA, VA];
      function ZA() {
        var e = (0, Xw.Z)(CA),
          t = (0, Xw.Z)(64),
          n = null;
        function r() {
          var r;
          if (
            (n || (n = r = (0, Os.Z)()),
            e.apply(this, arguments).draw(n, +t.apply(this, arguments)),
            r)
          )
            return (n = null), r + "" || null;
        }
        return (
          (r.type = function (t) {
            return arguments.length
              ? ((e = "function" === typeof t ? t : (0, Xw.Z)(t)), r)
              : e;
          }),
          (r.size = function (e) {
            return arguments.length
              ? ((t = "function" === typeof e ? e : (0, Xw.Z)(+e)), r)
              : t;
          }),
          (r.context = function (e) {
            return arguments.length ? ((n = null == e ? null : e), r) : n;
          }),
          r
        );
      }
      var YA = n(988973),
        XA = n(274372),
        $A = n(473021),
        KA = n(432830),
        QA = n(191390),
        JA = n(141599),
        ek = n(888800),
        tk = n(807391),
        nk = n(463703),
        rk = n(248917),
        ik = n(929458),
        ok = n(578509),
        ak = n(403499),
        sk = n(521468),
        uk = n(454058),
        ck = n(778113),
        lk = n(771474),
        fk = n(214535),
        dk = n(441904),
        hk = n(118749),
        pk = n(444724),
        gk = n(337035),
        mk = n(315595),
        yk = n(613391),
        bk = n(2281),
        vk = n(283818),
        _k = "%Y-%m-%dT%H:%M:%S.%LZ";
      var xk = Date.prototype.toISOString
          ? function (e) {
              return e.toISOString();
            }
          : o_(_k),
        Tk = xk;
      var Mk = +new Date("2000-01-01T00:00:00.000Z")
          ? function (e) {
              var t = new Date(e);
              return isNaN(t) ? null : t;
            }
          : a_(_k),
        wk = Mk;
      function Ak(e, t, n) {
        var r = new Ji(),
          i = t;
        return null == t
          ? (r.restart(e, t, n), r)
          : ((t = +t),
            (n = null == n ? Ki() : +n),
            r.restart(
              function o(a) {
                (a += i), r.restart(o, (i += t), n), e(a);
              },
              t,
              n
            ),
            r);
      }
      function kk(e) {
        return function () {
          return e;
        };
      }
      function Ek(e) {
        return e[0];
      }
      function Pk(e) {
        return e[1];
      }
      function Ck() {
        this._ = null;
      }
      function Lk(e) {
        e.U = e.C = e.L = e.R = e.P = e.N = null;
      }
      function Ik(e, t) {
        var n = t,
          r = t.R,
          i = n.U;
        i ? (i.L === n ? (i.L = r) : (i.R = r)) : (e._ = r),
          (r.U = i),
          (n.U = r),
          (n.R = r.L),
          n.R && (n.R.U = n),
          (r.L = n);
      }
      function Sk(e, t) {
        var n = t,
          r = t.L,
          i = n.U;
        i ? (i.L === n ? (i.L = r) : (i.R = r)) : (e._ = r),
          (r.U = i),
          (n.U = r),
          (n.L = r.R),
          n.L && (n.L.U = n),
          (r.R = n);
      }
      function Ok(e) {
        for (; e.L; ) e = e.L;
        return e;
      }
      Ck.prototype = {
        constructor: Ck,
        insert: function (e, t) {
          var n, r, i;
          if (e) {
            if (((t.P = e), (t.N = e.N), e.N && (e.N.P = t), (e.N = t), e.R)) {
              for (e = e.R; e.L; ) e = e.L;
              e.L = t;
            } else e.R = t;
            n = e;
          } else
            this._
              ? ((e = Ok(this._)),
                (t.P = null),
                (t.N = e),
                (e.P = e.L = t),
                (n = e))
              : ((t.P = t.N = null), (this._ = t), (n = null));
          for (t.L = t.R = null, t.U = n, t.C = !0, e = t; n && n.C; )
            n === (r = n.U).L
              ? (i = r.R) && i.C
                ? ((n.C = i.C = !1), (r.C = !0), (e = r))
                : (e === n.R && (Ik(this, n), (n = (e = n).U)),
                  (n.C = !1),
                  (r.C = !0),
                  Sk(this, r))
              : (i = r.L) && i.C
              ? ((n.C = i.C = !1), (r.C = !0), (e = r))
              : (e === n.L && (Sk(this, n), (n = (e = n).U)),
                (n.C = !1),
                (r.C = !0),
                Ik(this, r)),
              (n = e.U);
          this._.C = !1;
        },
        remove: function (e) {
          e.N && (e.N.P = e.P), e.P && (e.P.N = e.N), (e.N = e.P = null);
          var t,
            n,
            r,
            i = e.U,
            o = e.L,
            a = e.R;
          if (
            ((n = o ? (a ? Ok(a) : o) : a),
            i ? (i.L === e ? (i.L = n) : (i.R = n)) : (this._ = n),
            o && a
              ? ((r = n.C),
                (n.C = e.C),
                (n.L = o),
                (o.U = n),
                n !== a
                  ? ((i = n.U),
                    (n.U = e.U),
                    (e = n.R),
                    (i.L = e),
                    (n.R = a),
                    (a.U = n))
                  : ((n.U = i), (i = n), (e = n.R)))
              : ((r = e.C), (e = n)),
            e && (e.U = i),
            !r)
          )
            if (e && e.C) e.C = !1;
            else {
              do {
                if (e === this._) break;
                if (e === i.L) {
                  if (
                    ((t = i.R).C &&
                      ((t.C = !1), (i.C = !0), Ik(this, i), (t = i.R)),
                    (t.L && t.L.C) || (t.R && t.R.C))
                  ) {
                    (t.R && t.R.C) ||
                      ((t.L.C = !1), (t.C = !0), Sk(this, t), (t = i.R)),
                      (t.C = i.C),
                      (i.C = t.R.C = !1),
                      Ik(this, i),
                      (e = this._);
                    break;
                  }
                } else if (
                  ((t = i.L).C &&
                    ((t.C = !1), (i.C = !0), Sk(this, i), (t = i.L)),
                  (t.L && t.L.C) || (t.R && t.R.C))
                ) {
                  (t.L && t.L.C) ||
                    ((t.R.C = !1), (t.C = !0), Ik(this, t), (t = i.L)),
                    (t.C = i.C),
                    (i.C = t.L.C = !1),
                    Sk(this, i),
                    (e = this._);
                  break;
                }
                (t.C = !0), (e = i), (i = i.U);
              } while (!e.C);
              e && (e.C = !1);
            }
        },
      };
      var Nk = Ck;
      function Fk(e, t, n, r) {
        var i = [null, null],
          o = oE.push(i) - 1;
        return (
          (i.left = e),
          (i.right = t),
          n && Rk(i, e, t, n),
          r && Rk(i, t, e, r),
          rE[e.index].halfedges.push(o),
          rE[t.index].halfedges.push(o),
          i
        );
      }
      function Dk(e, t, n) {
        var r = [t, n];
        return (r.left = e), r;
      }
      function Rk(e, t, n, r) {
        e[0] || e[1]
          ? e.left === n
            ? (e[1] = r)
            : (e[0] = r)
          : ((e[0] = r), (e.left = t), (e.right = n));
      }
      function Gk(e, t, n, r, i) {
        var o,
          a = e[0],
          s = e[1],
          u = a[0],
          c = a[1],
          l = 0,
          f = 1,
          d = s[0] - u,
          h = s[1] - c;
        if (((o = t - u), d || !(o > 0))) {
          if (((o /= d), d < 0)) {
            if (o < l) return;
            o < f && (f = o);
          } else if (d > 0) {
            if (o > f) return;
            o > l && (l = o);
          }
          if (((o = r - u), d || !(o < 0))) {
            if (((o /= d), d < 0)) {
              if (o > f) return;
              o > l && (l = o);
            } else if (d > 0) {
              if (o < l) return;
              o < f && (f = o);
            }
            if (((o = n - c), h || !(o > 0))) {
              if (((o /= h), h < 0)) {
                if (o < l) return;
                o < f && (f = o);
              } else if (h > 0) {
                if (o > f) return;
                o > l && (l = o);
              }
              if (((o = i - c), h || !(o < 0))) {
                if (((o /= h), h < 0)) {
                  if (o > f) return;
                  o > l && (l = o);
                } else if (h > 0) {
                  if (o < l) return;
                  o < f && (f = o);
                }
                return (
                  !(l > 0 || f < 1) ||
                  (l > 0 && (e[0] = [u + l * d, c + l * h]),
                  f < 1 && (e[1] = [u + f * d, c + f * h]),
                  !0)
                );
              }
            }
          }
        }
      }
      function Bk(e, t, n, r, i) {
        var o = e[1];
        if (o) return !0;
        var a,
          s,
          u = e[0],
          c = e.left,
          l = e.right,
          f = c[0],
          d = c[1],
          h = l[0],
          p = l[1],
          g = (f + h) / 2,
          m = (d + p) / 2;
        if (p === d) {
          if (g < t || g >= r) return;
          if (f > h) {
            if (u) {
              if (u[1] >= i) return;
            } else u = [g, n];
            o = [g, i];
          } else {
            if (u) {
              if (u[1] < n) return;
            } else u = [g, i];
            o = [g, n];
          }
        } else if (((s = m - (a = (f - h) / (p - d)) * g), a < -1 || a > 1))
          if (f > h) {
            if (u) {
              if (u[1] >= i) return;
            } else u = [(n - s) / a, n];
            o = [(i - s) / a, i];
          } else {
            if (u) {
              if (u[1] < n) return;
            } else u = [(i - s) / a, i];
            o = [(n - s) / a, n];
          }
        else if (d < p) {
          if (u) {
            if (u[0] >= r) return;
          } else u = [t, a * t + s];
          o = [r, a * r + s];
        } else {
          if (u) {
            if (u[0] < t) return;
          } else u = [r, a * r + s];
          o = [t, a * t + s];
        }
        return (e[0] = u), (e[1] = o), !0;
      }
      function Wk(e, t) {
        var n = e.site,
          r = t.left,
          i = t.right;
        return (
          n === i && ((i = r), (r = n)),
          i
            ? Math.atan2(i[1] - r[1], i[0] - r[0])
            : (n === r ? ((r = t[1]), (i = t[0])) : ((r = t[0]), (i = t[1])),
              Math.atan2(r[0] - i[0], i[1] - r[1]))
        );
      }
      function jk(e, t) {
        return t[+(t.left !== e.site)];
      }
      function zk(e, t) {
        return t[+(t.left === e.site)];
      }
      var Uk,
        Hk = [];
      function Vk() {
        Lk(this), (this.x = this.y = this.arc = this.site = this.cy = null);
      }
      function qk(e) {
        var t = e.P,
          n = e.N;
        if (t && n) {
          var r = t.site,
            i = e.site,
            o = n.site;
          if (r !== o) {
            var a = i[0],
              s = i[1],
              u = r[0] - a,
              c = r[1] - s,
              l = o[0] - a,
              f = o[1] - s,
              d = 2 * (u * f - c * l);
            if (!(d >= -sE)) {
              var h = u * u + c * c,
                p = l * l + f * f,
                g = (f * h - c * p) / d,
                m = (u * p - l * h) / d,
                y = Hk.pop() || new Vk();
              (y.arc = e),
                (y.site = i),
                (y.x = g + a),
                (y.y = (y.cy = m + s) + Math.sqrt(g * g + m * m)),
                (e.circle = y);
              for (var b = null, v = iE._; v; )
                if (y.y < v.y || (y.y === v.y && y.x <= v.x)) {
                  if (!v.L) {
                    b = v.P;
                    break;
                  }
                  v = v.L;
                } else {
                  if (!v.R) {
                    b = v;
                    break;
                  }
                  v = v.R;
                }
              iE.insert(b, y), b || (Uk = y);
            }
          }
        }
      }
      function Zk(e) {
        var t = e.circle;
        t &&
          (t.P || (Uk = t.N),
          iE.remove(t),
          Hk.push(t),
          Lk(t),
          (e.circle = null));
      }
      var Yk = [];
      function Xk() {
        Lk(this), (this.edge = this.site = this.circle = null);
      }
      function $k(e) {
        var t = Yk.pop() || new Xk();
        return (t.site = e), t;
      }
      function Kk(e) {
        Zk(e), nE.remove(e), Yk.push(e), Lk(e);
      }
      function Qk(e) {
        var t = e.circle,
          n = t.x,
          r = t.cy,
          i = [n, r],
          o = e.P,
          a = e.N,
          s = [e];
        Kk(e);
        for (
          var u = o;
          u.circle &&
          Math.abs(n - u.circle.x) < aE &&
          Math.abs(r - u.circle.cy) < aE;

        )
          (o = u.P), s.unshift(u), Kk(u), (u = o);
        s.unshift(u), Zk(u);
        for (
          var c = a;
          c.circle &&
          Math.abs(n - c.circle.x) < aE &&
          Math.abs(r - c.circle.cy) < aE;

        )
          (a = c.N), s.push(c), Kk(c), (c = a);
        s.push(c), Zk(c);
        var l,
          f = s.length;
        for (l = 1; l < f; ++l)
          (c = s[l]), (u = s[l - 1]), Rk(c.edge, u.site, c.site, i);
        (u = s[0]),
          ((c = s[f - 1]).edge = Fk(u.site, c.site, null, i)),
          qk(u),
          qk(c);
      }
      function Jk(e) {
        for (var t, n, r, i, o = e[0], a = e[1], s = nE._; s; )
          if ((r = eE(s, a) - o) > aE) s = s.L;
          else {
            if (!((i = o - tE(s, a)) > aE)) {
              r > -aE
                ? ((t = s.P), (n = s))
                : i > -aE
                ? ((t = s), (n = s.N))
                : (t = n = s);
              break;
            }
            if (!s.R) {
              t = s;
              break;
            }
            s = s.R;
          }
        !(function (e) {
          rE[e.index] = { site: e, halfedges: [] };
        })(e);
        var u = $k(e);
        if ((nE.insert(t, u), t || n)) {
          if (t === n)
            return (
              Zk(t),
              (n = $k(t.site)),
              nE.insert(u, n),
              (u.edge = n.edge = Fk(t.site, u.site)),
              qk(t),
              void qk(n)
            );
          if (n) {
            Zk(t), Zk(n);
            var c = t.site,
              l = c[0],
              f = c[1],
              d = e[0] - l,
              h = e[1] - f,
              p = n.site,
              g = p[0] - l,
              m = p[1] - f,
              y = 2 * (d * m - h * g),
              b = d * d + h * h,
              v = g * g + m * m,
              _ = [(m * b - h * v) / y + l, (d * v - g * b) / y + f];
            Rk(n.edge, c, p, _),
              (u.edge = Fk(c, e, null, _)),
              (n.edge = Fk(e, p, null, _)),
              qk(t),
              qk(n);
          } else u.edge = Fk(t.site, u.site);
        }
      }
      function eE(e, t) {
        var n = e.site,
          r = n[0],
          i = n[1],
          o = i - t;
        if (!o) return r;
        var a = e.P;
        if (!a) return -1 / 0;
        var s = (n = a.site)[0],
          u = n[1],
          c = u - t;
        if (!c) return s;
        var l = s - r,
          f = 1 / o - 1 / c,
          d = l / c;
        return f
          ? (-d +
              Math.sqrt(
                d * d - 2 * f * ((l * l) / (-2 * c) - u + c / 2 + i - o / 2)
              )) /
              f +
              r
          : (r + s) / 2;
      }
      function tE(e, t) {
        var n = e.N;
        if (n) return eE(n, t);
        var r = e.site;
        return r[1] === t ? r[0] : 1 / 0;
      }
      var nE,
        rE,
        iE,
        oE,
        aE = 1e-6,
        sE = 1e-12;
      function uE(e, t, n) {
        return (e[0] - n[0]) * (t[1] - e[1]) - (e[0] - t[0]) * (n[1] - e[1]);
      }
      function cE(e, t) {
        return t[1] - e[1] || t[0] - e[0];
      }
      function lE(e, t) {
        var n,
          r,
          i,
          o = e.sort(cE).pop();
        for (
          oE = [], rE = new Array(e.length), nE = new Nk(), iE = new Nk();
          ;

        )
          if (
            ((i = Uk), o && (!i || o[1] < i.y || (o[1] === i.y && o[0] < i.x)))
          )
            (o[0] === n && o[1] === r) || (Jk(o), (n = o[0]), (r = o[1])),
              (o = e.pop());
          else {
            if (!i) break;
            Qk(i.arc);
          }
        if (
          ((function () {
            for (var e, t, n, r, i = 0, o = rE.length; i < o; ++i)
              if ((e = rE[i]) && (r = (t = e.halfedges).length)) {
                var a = new Array(r),
                  s = new Array(r);
                for (n = 0; n < r; ++n) (a[n] = n), (s[n] = Wk(e, oE[t[n]]));
                for (
                  a.sort(function (e, t) {
                    return s[t] - s[e];
                  }),
                    n = 0;
                  n < r;
                  ++n
                )
                  s[n] = t[a[n]];
                for (n = 0; n < r; ++n) t[n] = s[n];
              }
          })(),
          t)
        ) {
          var a = +t[0][0],
            s = +t[0][1],
            u = +t[1][0],
            c = +t[1][1];
          !(function (e, t, n, r) {
            for (var i, o = oE.length; o--; )
              (Bk((i = oE[o]), e, t, n, r) &&
                Gk(i, e, t, n, r) &&
                (Math.abs(i[0][0] - i[1][0]) > aE ||
                  Math.abs(i[0][1] - i[1][1]) > aE)) ||
                delete oE[o];
          })(a, s, u, c),
            (function (e, t, n, r) {
              var i,
                o,
                a,
                s,
                u,
                c,
                l,
                f,
                d,
                h,
                p,
                g,
                m = rE.length,
                y = !0;
              for (i = 0; i < m; ++i)
                if ((o = rE[i])) {
                  for (a = o.site, s = (u = o.halfedges).length; s--; )
                    oE[u[s]] || u.splice(s, 1);
                  for (s = 0, c = u.length; s < c; )
                    (p = (h = zk(o, oE[u[s]]))[0]),
                      (g = h[1]),
                      (f = (l = jk(o, oE[u[++s % c]]))[0]),
                      (d = l[1]),
                      (Math.abs(p - f) > aE || Math.abs(g - d) > aE) &&
                        (u.splice(
                          s,
                          0,
                          oE.push(
                            Dk(
                              a,
                              h,
                              Math.abs(p - e) < aE && r - g > aE
                                ? [e, Math.abs(f - e) < aE ? d : r]
                                : Math.abs(g - r) < aE && n - p > aE
                                ? [Math.abs(d - r) < aE ? f : n, r]
                                : Math.abs(p - n) < aE && g - t > aE
                                ? [n, Math.abs(f - n) < aE ? d : t]
                                : Math.abs(g - t) < aE && p - e > aE
                                ? [Math.abs(d - t) < aE ? f : e, t]
                                : null
                            )
                          ) - 1
                        ),
                        ++c);
                  c && (y = !1);
                }
              if (y) {
                var b,
                  v,
                  _,
                  x = 1 / 0;
                for (i = 0, y = null; i < m; ++i)
                  (o = rE[i]) &&
                    (_ = (b = (a = o.site)[0] - e) * b + (v = a[1] - t) * v) <
                      x &&
                    ((x = _), (y = o));
                if (y) {
                  var T = [e, t],
                    M = [e, r],
                    w = [n, r],
                    A = [n, t];
                  y.halfedges.push(
                    oE.push(Dk((a = y.site), T, M)) - 1,
                    oE.push(Dk(a, M, w)) - 1,
                    oE.push(Dk(a, w, A)) - 1,
                    oE.push(Dk(a, A, T)) - 1
                  );
                }
              }
              for (i = 0; i < m; ++i)
                (o = rE[i]) && (o.halfedges.length || delete rE[i]);
            })(a, s, u, c);
        }
        (this.edges = oE), (this.cells = rE), (nE = iE = oE = rE = null);
      }
      function fE() {
        var e = Ek,
          t = Pk,
          n = null;
        function r(r) {
          return new lE(
            r.map(function (n, i) {
              var o = [
                Math.round(e(n, i, r) / aE) * aE,
                Math.round(t(n, i, r) / aE) * aE,
              ];
              return (o.index = i), (o.data = n), o;
            }),
            n
          );
        }
        return (
          (r.polygons = function (e) {
            return r(e).polygons();
          }),
          (r.links = function (e) {
            return r(e).links();
          }),
          (r.triangles = function (e) {
            return r(e).triangles();
          }),
          (r.x = function (t) {
            return arguments.length
              ? ((e = "function" === typeof t ? t : kk(+t)), r)
              : e;
          }),
          (r.y = function (e) {
            return arguments.length
              ? ((t = "function" === typeof e ? e : kk(+e)), r)
              : t;
          }),
          (r.extent = function (e) {
            return arguments.length
              ? ((n =
                  null == e
                    ? null
                    : [
                        [+e[0][0], +e[0][1]],
                        [+e[1][0], +e[1][1]],
                      ]),
                r)
              : n && [
                  [n[0][0], n[0][1]],
                  [n[1][0], n[1][1]],
                ];
          }),
          (r.size = function (e) {
            return arguments.length
              ? ((n =
                  null == e
                    ? null
                    : [
                        [0, 0],
                        [+e[0], +e[1]],
                      ]),
                r)
              : n && [n[1][0] - n[0][0], n[1][1] - n[0][1]];
          }),
          r
        );
      }
      function dE(e) {
        return function () {
          return e;
        };
      }
      function hE(e, t, n) {
        (this.target = e), (this.type = t), (this.transform = n);
      }
      function pE(e, t, n) {
        (this.k = e), (this.x = t), (this.y = n);
      }
      (lE.prototype = {
        constructor: lE,
        polygons: function () {
          var e = this.edges;
          return this.cells.map(function (t) {
            var n = t.halfedges.map(function (n) {
              return jk(t, e[n]);
            });
            return (n.data = t.site.data), n;
          });
        },
        triangles: function () {
          var e = [],
            t = this.edges;
          return (
            this.cells.forEach(function (n, r) {
              if ((o = (i = n.halfedges).length))
                for (
                  var i,
                    o,
                    a,
                    s = n.site,
                    u = -1,
                    c = t[i[o - 1]],
                    l = c.left === s ? c.right : c.left;
                  ++u < o;

                )
                  (a = l),
                    (l = (c = t[i[u]]).left === s ? c.right : c.left),
                    a &&
                      l &&
                      r < a.index &&
                      r < l.index &&
                      uE(s, a, l) < 0 &&
                      e.push([s.data, a.data, l.data]);
            }),
            e
          );
        },
        links: function () {
          return this.edges
            .filter(function (e) {
              return e.right;
            })
            .map(function (e) {
              return { source: e.left.data, target: e.right.data };
            });
        },
        find: function (e, t, n) {
          for (
            var r, i, o = this, a = o._found || 0, s = o.cells.length;
            !(i = o.cells[a]);

          )
            if (++a >= s) return null;
          var u = e - i.site[0],
            c = t - i.site[1],
            l = u * u + c * c;
          do {
            (i = o.cells[(r = a)]),
              (a = null),
              i.halfedges.forEach(function (n) {
                var r = o.edges[n],
                  s = r.left;
                if ((s !== i.site && s) || (s = r.right)) {
                  var u = e - s[0],
                    c = t - s[1],
                    f = u * u + c * c;
                  f < l && ((l = f), (a = s.index));
                }
              });
          } while (null !== a);
          return (o._found = r), null == n || l <= n * n ? i.site : null;
        },
      }),
        (pE.prototype = {
          constructor: pE,
          scale: function (e) {
            return 1 === e ? this : new pE(this.k * e, this.x, this.y);
          },
          translate: function (e, t) {
            return (0 === e) & (0 === t)
              ? this
              : new pE(this.k, this.x + this.k * e, this.y + this.k * t);
          },
          apply: function (e) {
            return [e[0] * this.k + this.x, e[1] * this.k + this.y];
          },
          applyX: function (e) {
            return e * this.k + this.x;
          },
          applyY: function (e) {
            return e * this.k + this.y;
          },
          invert: function (e) {
            return [(e[0] - this.x) / this.k, (e[1] - this.y) / this.k];
          },
          invertX: function (e) {
            return (e - this.x) / this.k;
          },
          invertY: function (e) {
            return (e - this.y) / this.k;
          },
          rescaleX: function (e) {
            return e
              .copy()
              .domain(e.range().map(this.invertX, this).map(e.invert, e));
          },
          rescaleY: function (e) {
            return e
              .copy()
              .domain(e.range().map(this.invertY, this).map(e.invert, e));
          },
          toString: function () {
            return (
              "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")"
            );
          },
        });
      var gE = new pE(1, 0, 0);
      function mE(e) {
        for (; !e.__zoom; ) if (!(e = e.parentNode)) return gE;
        return e.__zoom;
      }
      function yE() {
        ww.stopImmediatePropagation();
      }
      function bE() {
        ww.preventDefault(), ww.stopImmediatePropagation();
      }
      function vE() {
        return !ww.ctrlKey && !ww.button;
      }
      function _E() {
        var e = this;
        return e instanceof SVGElement
          ? (e = e.ownerSVGElement || e).hasAttribute("viewBox")
            ? [
                [(e = e.viewBox.baseVal).x, e.y],
                [e.x + e.width, e.y + e.height],
              ]
            : [
                [0, 0],
                [e.width.baseVal.value, e.height.baseVal.value],
              ]
          : [
              [0, 0],
              [e.clientWidth, e.clientHeight],
            ];
      }
      function xE() {
        return this.__zoom || gE;
      }
      function TE() {
        return (
          -ww.deltaY * (1 === ww.deltaMode ? 0.05 : ww.deltaMode ? 1 : 0.002)
        );
      }
      function ME() {
        return navigator.maxTouchPoints || "ontouchstart" in this;
      }
      function wE(e, t, n) {
        var r = e.invertX(t[0][0]) - n[0][0],
          i = e.invertX(t[1][0]) - n[1][0],
          o = e.invertY(t[0][1]) - n[0][1],
          a = e.invertY(t[1][1]) - n[1][1];
        return e.translate(
          i > r ? (r + i) / 2 : Math.min(0, r) || Math.max(0, i),
          a > o ? (o + a) / 2 : Math.min(0, o) || Math.max(0, a)
        );
      }
      function AE() {
        var e,
          t,
          n = vE,
          r = _E,
          i = wE,
          o = TE,
          a = ME,
          s = [0, 1 / 0],
          u = [
            [-1 / 0, -1 / 0],
            [1 / 0, 1 / 0],
          ],
          c = 250,
          l = gb,
          f = de("start", "zoom", "end"),
          d = 500,
          h = 0;
        function p(e) {
          e.property("__zoom", xE)
            .on("wheel.zoom", x)
            .on("mousedown.zoom", T)
            .on("dblclick.zoom", M)
            .filter(a)
            .on("touchstart.zoom", w)
            .on("touchmove.zoom", A)
            .on("touchend.zoom touchcancel.zoom", k)
            .style("touch-action", "none")
            .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
        }
        function g(e, t) {
          return (t = Math.max(s[0], Math.min(s[1], t))) === e.k
            ? e
            : new pE(t, e.x, e.y);
        }
        function m(e, t, n) {
          var r = t[0] - n[0] * e.k,
            i = t[1] - n[1] * e.k;
          return r === e.x && i === e.y ? e : new pE(e.k, r, i);
        }
        function y(e) {
          return [(+e[0][0] + +e[1][0]) / 2, (+e[0][1] + +e[1][1]) / 2];
        }
        function b(e, t, n) {
          e.on("start.zoom", function () {
            v(this, arguments).start();
          })
            .on("interrupt.zoom end.zoom", function () {
              v(this, arguments).end();
            })
            .tween("zoom", function () {
              var e = this,
                i = arguments,
                o = v(e, i),
                a = r.apply(e, i),
                s =
                  null == n
                    ? y(a)
                    : "function" === typeof n
                    ? n.apply(e, i)
                    : n,
                u = Math.max(a[1][0] - a[0][0], a[1][1] - a[0][1]),
                c = e.__zoom,
                f = "function" === typeof t ? t.apply(e, i) : t,
                d = l(c.invert(s).concat(u / c.k), f.invert(s).concat(u / f.k));
              return function (e) {
                if (1 === e) e = f;
                else {
                  var t = d(e),
                    n = u / t[2];
                  e = new pE(n, s[0] - t[0] * n, s[1] - t[1] * n);
                }
                o.zoom(null, e);
              };
            });
        }
        function v(e, t, n) {
          return (!n && e.__zooming) || new _(e, t);
        }
        function _(e, t) {
          (this.that = e),
            (this.args = t),
            (this.active = 0),
            (this.extent = r.apply(e, t)),
            (this.taps = 0);
        }
        function x() {
          if (n.apply(this, arguments)) {
            var e = v(this, arguments),
              t = this.__zoom,
              r = Math.max(
                s[0],
                Math.min(s[1], t.k * Math.pow(2, o.apply(this, arguments)))
              ),
              a = Vw(this);
            if (e.wheel)
              (e.mouse[0][0] === a[0] && e.mouse[0][1] === a[1]) ||
                (e.mouse[1] = t.invert((e.mouse[0] = a))),
                clearTimeout(e.wheel);
            else {
              if (t.k === r) return;
              (e.mouse = [a, t.invert(a)]), ho(this), e.start();
            }
            bE(),
              (e.wheel = setTimeout(c, 150)),
              e.zoom(
                "mouse",
                i(m(g(t, r), e.mouse[0], e.mouse[1]), e.extent, u)
              );
          }
          function c() {
            (e.wheel = null), e.end();
          }
        }
        function T() {
          if (!t && n.apply(this, arguments)) {
            var e = v(this, arguments, !0),
              r = Gw(ww.view)
                .on("mousemove.zoom", c, !0)
                .on("mouseup.zoom", l, !0),
              o = Vw(this),
              a = ww.clientX,
              s = ww.clientY;
            wt(ww.view),
              yE(),
              (e.mouse = [o, this.__zoom.invert(o)]),
              ho(this),
              e.start();
          }
          function c() {
            if ((bE(), !e.moved)) {
              var t = ww.clientX - a,
                n = ww.clientY - s;
              e.moved = t * t + n * n > h;
            }
            e.zoom(
              "mouse",
              i(
                m(e.that.__zoom, (e.mouse[0] = Vw(e.that)), e.mouse[1]),
                e.extent,
                u
              )
            );
          }
          function l() {
            r.on("mousemove.zoom mouseup.zoom", null),
              At(ww.view, e.moved),
              bE(),
              e.end();
          }
        }
        function M() {
          if (n.apply(this, arguments)) {
            var e = this.__zoom,
              t = Vw(this),
              o = e.invert(t),
              a = e.k * (ww.shiftKey ? 0.5 : 2),
              s = i(m(g(e, a), t, o), r.apply(this, arguments), u);
            bE(),
              c > 0
                ? Gw(this).transition().duration(c).call(b, s, t)
                : Gw(this).call(p.transform, s);
          }
        }
        function w() {
          if (n.apply(this, arguments)) {
            var t,
              r,
              i,
              o,
              a = ww.touches,
              s = a.length,
              u = v(this, arguments, ww.changedTouches.length === s);
            for (yE(), r = 0; r < s; ++r)
              (o = [
                (o = Zw(this, a, (i = a[r]).identifier)),
                this.__zoom.invert(o),
                i.identifier,
              ]),
                u.touch0
                  ? u.touch1 ||
                    u.touch0[2] === o[2] ||
                    ((u.touch1 = o), (u.taps = 0))
                  : ((u.touch0 = o), (t = !0), (u.taps = 1 + !!e));
            e && (e = clearTimeout(e)),
              t &&
                (u.taps < 2 &&
                  (e = setTimeout(function () {
                    e = null;
                  }, d)),
                ho(this),
                u.start());
          }
        }
        function A() {
          if (this.__zooming) {
            var t,
              n,
              r,
              o,
              a = v(this, arguments),
              s = ww.changedTouches,
              c = s.length;
            for (
              bE(), e && (e = clearTimeout(e)), a.taps = 0, t = 0;
              t < c;
              ++t
            )
              (r = Zw(this, s, (n = s[t]).identifier)),
                a.touch0 && a.touch0[2] === n.identifier
                  ? (a.touch0[0] = r)
                  : a.touch1 &&
                    a.touch1[2] === n.identifier &&
                    (a.touch1[0] = r);
            if (((n = a.that.__zoom), a.touch1)) {
              var l = a.touch0[0],
                f = a.touch0[1],
                d = a.touch1[0],
                h = a.touch1[1],
                p = (p = d[0] - l[0]) * p + (p = d[1] - l[1]) * p,
                y = (y = h[0] - f[0]) * y + (y = h[1] - f[1]) * y;
              (n = g(n, Math.sqrt(p / y))),
                (r = [(l[0] + d[0]) / 2, (l[1] + d[1]) / 2]),
                (o = [(f[0] + h[0]) / 2, (f[1] + h[1]) / 2]);
            } else {
              if (!a.touch0) return;
              (r = a.touch0[0]), (o = a.touch0[1]);
            }
            a.zoom("touch", i(m(n, r, o), a.extent, u));
          }
        }
        function k() {
          if (this.__zooming) {
            var e,
              n,
              r = v(this, arguments),
              i = ww.changedTouches,
              o = i.length;
            for (
              yE(),
                t && clearTimeout(t),
                t = setTimeout(function () {
                  t = null;
                }, d),
                e = 0;
              e < o;
              ++e
            )
              (n = i[e]),
                r.touch0 && r.touch0[2] === n.identifier
                  ? delete r.touch0
                  : r.touch1 && r.touch1[2] === n.identifier && delete r.touch1;
            if (
              (r.touch1 &&
                !r.touch0 &&
                ((r.touch0 = r.touch1), delete r.touch1),
              r.touch0)
            )
              r.touch0[1] = this.__zoom.invert(r.touch0[0]);
            else if ((r.end(), 2 === r.taps)) {
              var a = Gw(this).on("dblclick.zoom");
              a && a.apply(this, arguments);
            }
          }
        }
        return (
          (p.transform = function (e, t, n) {
            var r = e.selection ? e.selection() : e;
            r.property("__zoom", xE),
              e !== r
                ? b(e, t, n)
                : r.interrupt().each(function () {
                    v(this, arguments)
                      .start()
                      .zoom(
                        null,
                        "function" === typeof t ? t.apply(this, arguments) : t
                      )
                      .end();
                  });
          }),
          (p.scaleBy = function (e, t, n) {
            p.scaleTo(
              e,
              function () {
                var e = this.__zoom.k,
                  n = "function" === typeof t ? t.apply(this, arguments) : t;
                return e * n;
              },
              n
            );
          }),
          (p.scaleTo = function (e, t, n) {
            p.transform(
              e,
              function () {
                var e = r.apply(this, arguments),
                  o = this.__zoom,
                  a =
                    null == n
                      ? y(e)
                      : "function" === typeof n
                      ? n.apply(this, arguments)
                      : n,
                  s = o.invert(a),
                  c = "function" === typeof t ? t.apply(this, arguments) : t;
                return i(m(g(o, c), a, s), e, u);
              },
              n
            );
          }),
          (p.translateBy = function (e, t, n) {
            p.transform(e, function () {
              return i(
                this.__zoom.translate(
                  "function" === typeof t ? t.apply(this, arguments) : t,
                  "function" === typeof n ? n.apply(this, arguments) : n
                ),
                r.apply(this, arguments),
                u
              );
            });
          }),
          (p.translateTo = function (e, t, n, o) {
            p.transform(
              e,
              function () {
                var e = r.apply(this, arguments),
                  a = this.__zoom,
                  s =
                    null == o
                      ? y(e)
                      : "function" === typeof o
                      ? o.apply(this, arguments)
                      : o;
                return i(
                  gE
                    .translate(s[0], s[1])
                    .scale(a.k)
                    .translate(
                      "function" === typeof t ? -t.apply(this, arguments) : -t,
                      "function" === typeof n ? -n.apply(this, arguments) : -n
                    ),
                  e,
                  u
                );
              },
              o
            );
          }),
          (_.prototype = {
            start: function () {
              return (
                1 === ++this.active &&
                  ((this.that.__zooming = this), this.emit("start")),
                this
              );
            },
            zoom: function (e, t) {
              return (
                this.mouse &&
                  "mouse" !== e &&
                  (this.mouse[1] = t.invert(this.mouse[0])),
                this.touch0 &&
                  "touch" !== e &&
                  (this.touch0[1] = t.invert(this.touch0[0])),
                this.touch1 &&
                  "touch" !== e &&
                  (this.touch1[1] = t.invert(this.touch1[0])),
                (this.that.__zoom = t),
                this.emit("zoom"),
                this
              );
            },
            end: function () {
              return (
                0 === --this.active &&
                  (delete this.that.__zooming, this.emit("end")),
                this
              );
            },
            emit: function (e) {
              Lw(new hE(p, e, this.that.__zoom), f.apply, f, [
                e,
                this.that,
                this.args,
              ]);
            },
          }),
          (p.wheelDelta = function (e) {
            return arguments.length
              ? ((o = "function" === typeof e ? e : dE(+e)), p)
              : o;
          }),
          (p.filter = function (e) {
            return arguments.length
              ? ((n = "function" === typeof e ? e : dE(!!e)), p)
              : n;
          }),
          (p.touchable = function (e) {
            return arguments.length
              ? ((a = "function" === typeof e ? e : dE(!!e)), p)
              : a;
          }),
          (p.extent = function (e) {
            return arguments.length
              ? ((r =
                  "function" === typeof e
                    ? e
                    : dE([
                        [+e[0][0], +e[0][1]],
                        [+e[1][0], +e[1][1]],
                      ])),
                p)
              : r;
          }),
          (p.scaleExtent = function (e) {
            return arguments.length
              ? ((s[0] = +e[0]), (s[1] = +e[1]), p)
              : [s[0], s[1]];
          }),
          (p.translateExtent = function (e) {
            return arguments.length
              ? ((u[0][0] = +e[0][0]),
                (u[1][0] = +e[1][0]),
                (u[0][1] = +e[0][1]),
                (u[1][1] = +e[1][1]),
                p)
              : [
                  [u[0][0], u[0][1]],
                  [u[1][0], u[1][1]],
                ];
          }),
          (p.constrain = function (e) {
            return arguments.length ? ((i = e), p) : i;
          }),
          (p.duration = function (e) {
            return arguments.length ? ((c = +e), p) : c;
          }),
          (p.interpolate = function (e) {
            return arguments.length ? ((l = e), p) : l;
          }),
          (p.on = function () {
            var e = f.on.apply(f, arguments);
            return e === f ? p : e;
          }),
          (p.clickDistance = function (e) {
            return arguments.length ? ((h = (e = +e) * e), p) : Math.sqrt(h);
          }),
          p
        );
      }
      mE.prototype = pE.prototype;
    },
    533637: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      class r {
        constructor() {
          (this.ids = []), (this.values = []), (this.length = 0);
        }
        clear() {
          this.length = 0;
        }
        push(e, t) {
          let n = this.length++;
          for (this.ids[n] = e, this.values[n] = t; n > 0; ) {
            const e = (n - 1) >> 1,
              r = this.values[e];
            if (t >= r) break;
            (this.ids[n] = this.ids[e]), (this.values[n] = r), (n = e);
          }
          (this.ids[n] = e), (this.values[n] = t);
        }
        pop() {
          if (0 === this.length) return;
          const e = this.ids[0];
          if ((this.length--, this.length > 0)) {
            const e = (this.ids[0] = this.ids[this.length]),
              t = (this.values[0] = this.values[this.length]),
              n = this.length >> 1;
            let r = 0;
            for (; r < n; ) {
              let e = 1 + (r << 1);
              const n = e + 1;
              let i = this.ids[e],
                o = this.values[e];
              const a = this.values[n];
              if (
                (n < this.length &&
                  a < o &&
                  ((e = n), (i = this.ids[n]), (o = a)),
                o >= t)
              )
                break;
              (this.ids[r] = i), (this.values[r] = o), (r = e);
            }
            (this.ids[r] = e), (this.values[r] = t);
          }
          return e;
        }
        peek() {
          if (0 !== this.length) return this.ids[0];
        }
        peekValue() {
          if (0 !== this.length) return this.values[0];
        }
      }
      const i = [
        Int8Array,
        Uint8Array,
        Uint8ClampedArray,
        Int16Array,
        Uint16Array,
        Int32Array,
        Uint32Array,
        Float32Array,
        Float64Array,
      ];
      class o {
        static from(e) {
          if (!(e instanceof ArrayBuffer))
            throw new Error("Data must be an instance of ArrayBuffer.");
          const [t, n] = new Uint8Array(e, 0, 2);
          if (251 !== t)
            throw new Error("Data does not appear to be in a Flatbush format.");
          if (n >> 4 !== 3)
            throw new Error(`Got v${n >> 4} data when expected v3.`);
          const [r] = new Uint16Array(e, 2, 1),
            [a] = new Uint32Array(e, 4, 1);
          return new o(a, r, i[15 & n], e);
        }
        constructor(e, t = 16, n = Float64Array, o) {
          if (void 0 === e)
            throw new Error("Missing required argument: numItems.");
          if (isNaN(e) || e <= 0)
            throw new Error(`Unpexpected numItems value: ${e}.`);
          (this.numItems = +e),
            (this.nodeSize = Math.min(Math.max(+t, 2), 65535));
          let a = e,
            s = a;
          this._levelBounds = [4 * a];
          do {
            (a = Math.ceil(a / this.nodeSize)),
              (s += a),
              this._levelBounds.push(4 * s);
          } while (1 !== a);
          (this.ArrayType = n || Float64Array),
            (this.IndexArrayType = s < 16384 ? Uint16Array : Uint32Array);
          const u = i.indexOf(this.ArrayType),
            c = 4 * s * this.ArrayType.BYTES_PER_ELEMENT;
          if (u < 0) throw new Error(`Unexpected typed array class: ${n}.`);
          o && o instanceof ArrayBuffer
            ? ((this.data = o),
              (this._boxes = new this.ArrayType(this.data, 8, 4 * s)),
              (this._indices = new this.IndexArrayType(this.data, 8 + c, s)),
              (this._pos = 4 * s),
              (this.minX = this._boxes[this._pos - 4]),
              (this.minY = this._boxes[this._pos - 3]),
              (this.maxX = this._boxes[this._pos - 2]),
              (this.maxY = this._boxes[this._pos - 1]))
            : ((this.data = new ArrayBuffer(
                8 + c + s * this.IndexArrayType.BYTES_PER_ELEMENT
              )),
              (this._boxes = new this.ArrayType(this.data, 8, 4 * s)),
              (this._indices = new this.IndexArrayType(this.data, 8 + c, s)),
              (this._pos = 0),
              (this.minX = 1 / 0),
              (this.minY = 1 / 0),
              (this.maxX = -1 / 0),
              (this.maxY = -1 / 0),
              new Uint8Array(this.data, 0, 2).set([251, 48 + u]),
              (new Uint16Array(this.data, 2, 1)[0] = t),
              (new Uint32Array(this.data, 4, 1)[0] = e)),
            (this._queue = new r());
        }
        add(e, t, n, r) {
          const i = this._pos >> 2;
          return (
            (this._indices[i] = i),
            (this._boxes[this._pos++] = e),
            (this._boxes[this._pos++] = t),
            (this._boxes[this._pos++] = n),
            (this._boxes[this._pos++] = r),
            e < this.minX && (this.minX = e),
            t < this.minY && (this.minY = t),
            n > this.maxX && (this.maxX = n),
            r > this.maxY && (this.maxY = r),
            i
          );
        }
        finish() {
          if (this._pos >> 2 !== this.numItems)
            throw new Error(
              `Added ${this._pos >> 2} items when expected ${this.numItems}.`
            );
          if (this.numItems <= this.nodeSize)
            return (
              (this._boxes[this._pos++] = this.minX),
              (this._boxes[this._pos++] = this.minY),
              (this._boxes[this._pos++] = this.maxX),
              void (this._boxes[this._pos++] = this.maxY)
            );
          const e = this.maxX - this.minX,
            t = this.maxY - this.minY,
            n = new Uint32Array(this.numItems);
          for (let r = 0; r < this.numItems; r++) {
            let i = 4 * r;
            const o = this._boxes[i++],
              a = this._boxes[i++],
              s = this._boxes[i++],
              u = this._boxes[i++],
              c = Math.floor((65535 * ((o + s) / 2 - this.minX)) / e),
              f = Math.floor((65535 * ((a + u) / 2 - this.minY)) / t);
            n[r] = l(c, f);
          }
          u(n, this._boxes, this._indices, 0, this.numItems - 1, this.nodeSize);
          for (let r = 0, i = 0; r < this._levelBounds.length - 1; r++) {
            const e = this._levelBounds[r];
            for (; i < e; ) {
              const t = i;
              let n = 1 / 0,
                r = 1 / 0,
                o = -1 / 0,
                a = -1 / 0;
              for (let s = 0; s < this.nodeSize && i < e; s++)
                (n = Math.min(n, this._boxes[i++])),
                  (r = Math.min(r, this._boxes[i++])),
                  (o = Math.max(o, this._boxes[i++])),
                  (a = Math.max(a, this._boxes[i++]));
              (this._indices[this._pos >> 2] = t),
                (this._boxes[this._pos++] = n),
                (this._boxes[this._pos++] = r),
                (this._boxes[this._pos++] = o),
                (this._boxes[this._pos++] = a);
            }
          }
        }
        search(e, t, n, r, i) {
          if (this._pos !== this._boxes.length)
            throw new Error("Data not yet indexed - call index.finish().");
          let o = this._boxes.length - 4;
          const a = [],
            u = [];
          for (; void 0 !== o; ) {
            const c = Math.min(o + 4 * this.nodeSize, s(o, this._levelBounds));
            for (let s = o; s < c; s += 4) {
              const c = 0 | this._indices[s >> 2];
              n < this._boxes[s] ||
                r < this._boxes[s + 1] ||
                e > this._boxes[s + 2] ||
                t > this._boxes[s + 3] ||
                (o < 4 * this.numItems
                  ? (void 0 === i || i(c)) && u.push(c)
                  : a.push(c));
            }
            o = a.pop();
          }
          return u;
        }
        neighbors(e, t, n = 1 / 0, r = 1 / 0, i) {
          if (this._pos !== this._boxes.length)
            throw new Error("Data not yet indexed - call index.finish().");
          let o = this._boxes.length - 4;
          const u = this._queue,
            c = [],
            l = r * r;
          for (; void 0 !== o; ) {
            const r = Math.min(o + 4 * this.nodeSize, s(o, this._levelBounds));
            for (let n = o; n < r; n += 4) {
              const r = 0 | this._indices[n >> 2],
                s = a(e, this._boxes[n], this._boxes[n + 2]),
                c = a(t, this._boxes[n + 1], this._boxes[n + 3]),
                l = s * s + c * c;
              o < 4 * this.numItems
                ? (void 0 === i || i(r)) && u.push(-r - 1, l)
                : u.push(r, l);
            }
            for (; u.length && u.peek() < 0; ) {
              if (u.peekValue() > l) return u.clear(), c;
              if ((c.push(-u.pop() - 1), c.length === n)) return u.clear(), c;
            }
            o = u.pop();
          }
          return u.clear(), c;
        }
      }
      function a(e, t, n) {
        return e < t ? t - e : e <= n ? 0 : e - n;
      }
      function s(e, t) {
        let n = 0,
          r = t.length - 1;
        for (; n < r; ) {
          const i = (n + r) >> 1;
          t[i] > e ? (r = i) : (n = i + 1);
        }
        return t[n];
      }
      function u(e, t, n, r, i, o) {
        if (Math.floor(r / o) >= Math.floor(i / o)) return;
        const a = e[(r + i) >> 1];
        let s = r - 1,
          l = i + 1;
        for (;;) {
          do {
            s++;
          } while (e[s] < a);
          do {
            l--;
          } while (e[l] > a);
          if (s >= l) break;
          c(e, t, n, s, l);
        }
        u(e, t, n, r, l, o), u(e, t, n, l + 1, i, o);
      }
      function c(e, t, n, r, i) {
        const o = e[r];
        (e[r] = e[i]), (e[i] = o);
        const a = 4 * r,
          s = 4 * i,
          u = t[a],
          c = t[a + 1],
          l = t[a + 2],
          f = t[a + 3];
        (t[a] = t[s]),
          (t[a + 1] = t[s + 1]),
          (t[a + 2] = t[s + 2]),
          (t[a + 3] = t[s + 3]),
          (t[s] = u),
          (t[s + 1] = c),
          (t[s + 2] = l),
          (t[s + 3] = f);
        const d = n[r];
        (n[r] = n[i]), (n[i] = d);
      }
      function l(e, t) {
        let n = e ^ t,
          r = 65535 ^ n,
          i = 65535 ^ (e | t),
          o = e & (65535 ^ t),
          a = n | (r >> 1),
          s = (n >> 1) ^ n,
          u = (i >> 1) ^ (r & (o >> 1)) ^ i,
          c = (n & (i >> 1)) ^ (o >> 1) ^ o;
        (n = a),
          (r = s),
          (i = u),
          (o = c),
          (a = (n & (n >> 2)) ^ (r & (r >> 2))),
          (s = (n & (r >> 2)) ^ (r & ((n ^ r) >> 2))),
          (u ^= (n & (i >> 2)) ^ (r & (o >> 2))),
          (c ^= (r & (i >> 2)) ^ ((n ^ r) & (o >> 2))),
          (n = a),
          (r = s),
          (i = u),
          (o = c),
          (a = (n & (n >> 4)) ^ (r & (r >> 4))),
          (s = (n & (r >> 4)) ^ (r & ((n ^ r) >> 4))),
          (u ^= (n & (i >> 4)) ^ (r & (o >> 4))),
          (c ^= (r & (i >> 4)) ^ ((n ^ r) & (o >> 4))),
          (n = a),
          (r = s),
          (i = u),
          (o = c),
          (u ^= (n & (i >> 8)) ^ (r & (o >> 8))),
          (c ^= (r & (i >> 8)) ^ ((n ^ r) & (o >> 8))),
          (n = u ^ (u >> 1)),
          (r = c ^ (c >> 1));
        let l = e ^ t,
          f = r | (65535 ^ (l | n));
        return (
          (l = 16711935 & (l | (l << 8))),
          (l = 252645135 & (l | (l << 4))),
          (l = 858993459 & (l | (l << 2))),
          (l = 1431655765 & (l | (l << 1))),
          (f = 16711935 & (f | (f << 8))),
          (f = 252645135 & (f | (f << 4))),
          (f = 858993459 & (f | (f << 2))),
          (f = 1431655765 & (f | (f << 1))),
          ((f << 1) | l) >>> 0
        );
      }
    },
    844955: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      const r = n(408116),
        i = n(202347),
        o = n(338834),
        a = n(785944),
        s = n(359207),
        u = n(370),
        c = n(343521),
        l =
          (r.default.multiply,
          Object.assign({}, r.default, i.default, o.default, u.default, {
            random: s.default,
            fromRoots: c.default,
            allRoots: a.default,
          }));
      t.default = l;
    },
    785944: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      const r = n(408116),
        i = n(202347),
        o = n(338834),
        { clip0: a, evaluate: s, differentiate: u, toCasStr: c } = r.default,
        { brent: l, quadraticRoots: f } = i.default,
        {
          rootMagnitudeUpperBound_fujiwara: d,
          positiveRootUpperBound_LMQ: h,
          positiveRootLowerBound_LMQ: p,
          negativeRootUpperBound_LMQ: g,
          negativeRootLowerBound_LMQ: m,
        } = o.default,
        y = Number.POSITIVE_INFINITY;
      t.default = function e(t, n = -y, r = +y) {
        let i = (t = a(t)).length - 1,
          o = (function (e, t) {
            return (n) => n >= e && n <= t;
          })(n, r);
        if (2 === i) return f(t).filter(o);
        if (i > 2) {
          let i, a;
          n === -y || r === +y
            ? ((i = n === -y ? m(t) : n), (a = r === +y ? h(t) : r))
            : ((i = n), (a = r));
          let c = e(u(t), i, a).filter(o);
          return (
            c[0] !== i && c.unshift(i),
            c[c.length - 1] !== a && c.push(a),
            (function (e, t) {
              let n,
                r = [],
                i = s(e),
                o = t[0];
              for (let a = 1; a < t.length; a++) {
                let e,
                  s = t[a],
                  u = i(o),
                  c = i(s);
                0 === u * c
                  ? 0 === u
                    ? (e = o)
                    : 0 === c && a === t.length - 1 && (e = s)
                  : u * c < 0 && (e = l(i, o, s)),
                  void 0 !== e && e !== n && (r.push(e), (n = e)),
                  (o = s);
              }
              return r;
            })(t, c)
          );
        }
        return 1 === i ? [-t[1] / t[0]].filter(o) : [];
      };
    },
    408116: function (e, t) {
      "use strict";
      function n(e, t) {
        let n = e.length - 1,
          r = t.length - 1,
          i = n - r,
          o = 0,
          s = 0;
        i > 0 ? (s = -i) : i < 0 && (o = +i);
        let u = Math.max(n, r),
          c = [];
        for (let a = 0; a < u + 1; a++) {
          let n = e[a + o],
            r = t[a + s];
          c.push((n || 0) - (r || 0));
        }
        return a(c);
      }
      function r(e) {
        let t = [],
          n = e.length - 1;
        for (let r = 0; r < n; r++) t.push((n - r) * e[r]);
        return t;
      }
      function i(e, t) {
        let n = e.length - 1,
          r = t.length - 1,
          i = n + r,
          o = new Array(i + 1).fill(0);
        for (let a = 0; a < n + 1; a++)
          for (let s = 0; s < r + 1; s++) o[i - (a + s)] += e[n - a] * t[r - s];
        return a(o);
      }
      function o(e, t) {
        if (0 === e) return [];
        let n = t.length - 1,
          r = [];
        for (let i = 0; i < n + 1; i++) r.push(e * t[i]);
        return a(r);
      }
      function a(e) {
        return 0 !== e[0] ? e : a(e.slice(1));
      }
      function s(e) {
        let t = 0;
        for (let n = 0; n < e.length; n++) {
          let r = Math.abs(e[n]);
          r > t && (t = r);
        }
        return t;
      }
      Object.defineProperty(t, "__esModule", { value: !0 });
      let u = {
        equal: function (e, t) {
          if (e.length !== t.length) return !1;
          for (let n = 0; n < e.length; n++) if (e[n] !== t[n]) return !1;
          return !0;
        },
        add: function (e, t) {
          let n = e.length - 1,
            r = t.length - 1,
            i = n - r,
            o = 0,
            s = 0;
          i > 0 ? (s = -i) : i < 0 && (o = +i);
          let u = Math.max(n, r),
            c = [];
          for (let a = 0; a < u + 1; a++) {
            let n = e[a + o],
              r = t[a + s];
            c.push((n || 0) + (r || 0));
          }
          return a(c);
        },
        subtract: n,
        multiplyByConst: o,
        negate: function (e) {
          return o(-1, e);
        },
        differentiate: r,
        multiply: i,
        degree: function (e) {
          return e.length - 1;
        },
        evaluate: function (e, t) {
          function n(t) {
            let n = e[0];
            for (let r = 1; r < e.length; r++) n = e[r] + n * t;
            return n;
          }
          return void 0 === t ? n : n(t);
        },
        evaluateAt0: function (e) {
          return e[e.length - 1];
        },
        signChanges: function (e) {
          let t = e.length - 1,
            n = 0,
            r = Math.sign(e[0]);
          for (let i = 1; i < t + 1; i++) {
            let t = Math.sign(e[i]);
            t !== r && 0 !== t && (n++, (r = t));
          }
          return n;
        },
        invert: function (e) {
          return e.slice().reverse();
        },
        changeVariables: function (e, t, n) {
          let r = e.length - 1,
            i = [];
          for (let a = 0; a < r + 1; a++) i.push(new Array(r + 1).fill(0));
          i[0][0] = 1;
          for (let a = 1; a <= r; a++) {
            i[0][a] = n * i[0][a - 1];
            for (let e = 1; e <= a; e++)
              i[e][a] = n * i[e][a - 1] + t * i[e - 1][a - 1];
          }
          let o = new Array(r + 1).fill(0);
          for (let a = 0; a <= r; a++) {
            o[r - a] = 0;
            for (let t = a; t <= r; t++) {
              let n = i[a][t] * e[r - t];
              o[r - a] += n;
            }
          }
          return o;
        },
        reflectAboutYAxis: function (e) {
          let t = e.length - 1,
            n = e.slice();
          for (let r = 0; r < t + 1; r++) r % 2 && (n[r] = -n[r]);
          return n;
        },
        sturmChain: function (e) {
          function t(e, t) {
            e.length, t.length;
            let r = e[1] / e[0] - t[1] / t[0];
            return n(i(o(e[0] / t[0], t), [1, r]), e);
          }
          let a = [];
          a.push(e), a.push(r(e));
          let s = 1;
          for (; a[s].length - 1 > 0; ) {
            let e = t(a[s - 1], a[s]);
            for (; a[s].length - e.length < 1; ) e.shift();
            a.push(e), s++;
          }
          return a;
        },
        clip: function e(t, n) {
          n = void 0 === n ? Number.EPSILON : n;
          let r = s(t);
          if (0 === r) return [];
          if (Math.abs(t[0]) > n * r) return t;
          let i = t.slice(1);
          for (; Math.abs(i[0]) < n * r; ) i = i.slice(1);
          return e(i, n);
        },
        clip0: a,
        deflate: function (e, t) {
          let n = e.length - 1,
            r = [e[0]];
          for (let i = 1; i < n; i++) r.push(e[i] + t * r[i - 1]);
          return r;
        },
        maxCoefficient: s,
        toCasStr: function (e) {
          let t = e.length - 1,
            n = "";
          for (let r = 0; r < t + 1; r++) {
            let i = e[r].toString();
            n +=
              r === t
                ? i
                : r === t - 1
                ? "x*" + i + " + "
                : "x^" + (t - r).toString() + "*" + i + " + ";
          }
          return n;
        },
      };
      t.default = u;
    },
    370: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      const r = n(408116),
        { evaluate: i } = r.default;
      let o = {
        hornerErrorBound: function (e, t) {
          const n = Number.EPSILON;
          return (
            2 *
            (e.length - 1) *
            n *
            (function (e, t) {
              let n = e.length - 1,
                r = 0;
              for (let i = 0; i < n; i++)
                r += Math.abs(e[i] * Math.pow(t, n - i));
              return r;
            })(e, t)
          );
        },
      };
      t.default = o;
    },
    343521: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      const r = n(408116),
        { multiply: i } = r.default;
      t.default = function (e) {
        let t = [1];
        for (let n = 0; n < e.length; n++) t = i(t, [1, -e[n]]);
        return t;
      };
    },
    359207: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      const r = n(343521),
        i = 123456789,
        o = 4294967296;
      function a(e) {
        return function (t, n, r, o, a = i, s = 0) {
          let u = [];
          for (let i = 0; i < t; i++) {
            let t = e(n, r, o, a, s),
              i = t.p;
            (a = t.seed), u.push(i);
          }
          return u;
        };
      }
      function s(e) {
        return (134775813 * e + 1) % o;
      }
      function u(e, t, n, r = i, a = 0) {
        let u = [];
        for (let i = 0; i < e; i++) {
          r = c((r = s(r)), u, (r / o) * (n - t) + t, a);
        }
        return (u = u.slice(0, e)), { vs: u, seed: r };
      }
      function c(e, t, n, r) {
        return (e = s(e)), t.push(n), e / o < r && (e = c(e, t, n, r)), e;
      }
      function l(e, t = 0, n = 1, o = i, a = 0) {
        let s = u(e, t, n, o, a);
        return (o = s.seed), { p: r.default(s.vs), seed: o };
      }
      function f(e, t = -1, n = 1, r = i) {
        let o = u(
          e,
          (t = void 0 === t ? -1 : t),
          (n = void 0 === n ? 1 : n),
          (r = void 0 === r ? i : r)
        );
        return (r = o.seed), { p: o.vs, seed: r };
      }
      let d = {
        flatRoots: l,
        flatRootsArr: a(l),
        flatCoefficients: f,
        flatCoefficientsArr: a(f),
      };
      t.default = d;
    },
    338834: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      const r = n(408116),
        { invert: i, negate: o, reflectAboutYAxis: a } = r.default;
      const s = [
        1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384,
        32768, 65536, 131072, 262144, 524288, 1048576, 2097152,
      ];
      function u(e) {
        let t = e.length - 1;
        if (t < 1) return 0;
        e[0] < 0 && (e = o(e));
        let n = [];
        for (let i = 0; i < t; i++) n.push(1);
        let r = 0;
        for (let i = 0; i <= t; i++) {
          if (e[i] >= 0) continue;
          let t = Number.POSITIVE_INFINITY,
            o = !1;
          for (let r = 0; r < i; r++) {
            if (e[r] <= 0) continue;
            let a,
              u = n[r];
            a = u > 20 ? Math.pow(2, u) : s[u];
            let c = Math.pow(-e[i] / (e[r] / a), 1 / (i - r));
            n[r]++, t > c && (t = c), (o = !0);
          }
          o && r < t && (r = t);
        }
        return r;
      }
      function c(e) {
        let t = u(i(e));
        return 0 === t ? 0 : 1 / t;
      }
      let l = {
        rootMagnitudeUpperBound_fujiwara: function (e) {
          let t = e.length - 1,
            n = e[0],
            r = [];
          for (let i = 1; i < t; i++) {
            let t = Math.pow(Math.abs(e[i] / n), 1 / i);
            r.push(t);
          }
          return (
            r.push(Math.pow(Math.abs((e[t] / 2) * n), 1 / t)),
            2 * Math.max.apply(void 0, r)
          );
        },
        positiveRootUpperBound_LMQ: u,
        positiveRootLowerBound_LMQ: c,
        negativeRootUpperBound_LMQ: function (e) {
          return -c(a(e));
        },
        negativeRootLowerBound_LMQ: function (e) {
          return -u(a(e));
        },
        rootMagnitudeUpperBound_rouche: function (e) {
          var t;
          return (
            e.length,
            1 +
              (1 / e[0]) *
                ((t = e.slice(1)), Math.max(...t.map((e) => Math.abs(e))))
          );
        },
      };
      t.default = l;
    },
    202347: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      const r = n(408116),
        { sturmChain: i, evaluate: o, signChanges: a } = r.default;
      let s = {
        quadraticRoots: function (e) {
          let t,
            n,
            [r, i, o] = e,
            a = i * i - 4 * r * o;
          return a < 0
            ? []
            : 0 === a
            ? [-i / (2 * r)]
            : ((a = Math.sqrt(a)),
              i >= 0
                ? ((t = (-i - a) / (2 * r)), (n = (2 * o) / (-i - a)))
                : ((t = (2 * o) / (-i + a)), (n = (-i + a) / (2 * r))),
              t < n ? [t, n] : [n, t]);
        },
        numRootsWithin: function (e, t, n) {
          let r = i(e),
            s = (o(e), r.map((e) => o(e)(t))),
            u = r.map((e) => o(e)(n));
          return a(s) - a(u);
        },
        brent: function (e, t, n) {
          if (t === n) return t;
          let r,
            i = e(t),
            o = e(n);
          if (i * o > 0) throw new Error("Root not bracketed");
          if (Math.abs(i) < Math.abs(o)) {
            (r = t), (t = n), (n = r);
            let e = i;
            (i = o), (o = e);
          }
          r = t;
          let a,
            s = !0;
          for (;;) {
            let u,
              c = 2 * Number.EPSILON * Math.abs(n),
              l = e(r);
            if (i !== l && o !== l) {
              let e = i - l,
                a = i - o,
                s = o - l;
              u = ((t * o * s - n * i * e) * l + r * i * a * o) / (a * e * s);
            } else u = n - o * ((n - t) / (o - i));
            let f = (3 * t + n) / 4,
              d = Math.abs(n - r),
              h = Math.abs(u - n),
              p = Math.abs(r - a);
            !((u > f && u < n) || (u < f && u > n)) ||
            (s && (h >= d / 2 || d < c)) ||
            (!s && (h >= p / 2 || p < c))
              ? ((u = (t + n) / 2), (s = !0))
              : (s = !1);
            let g = e(u);
            if (
              ((a = r),
              (r = n),
              i * g < 0 ? (n = u) : (t = u),
              Math.abs(i) < Math.abs(o))
            ) {
              let e = t;
              (t = n), (n = e);
            }
            if (0 === o) return n;
            if (0 === g) return u;
            if (Math.abs(t - n) <= c) return n;
            (i = e(t)), (o = e(n));
          }
        },
        bisection: function (e, t, n) {
          if (t === n) return t;
          n < t && ([t, n] = [n, t]);
          let r = e(t),
            i = e(n);
          if (0 === r) return t;
          if (0 === i) return n;
          if (r * i > 0) throw new Error("Root not bracketed");
          for (;;) {
            let i = t + (n - t) / 2,
              o = e(i);
            if (0 === o) return i;
            r * o < 0 ? (n = i) : (t = i);
            let a = 2 * Number.EPSILON * Math.abs(n);
            if (Math.abs(t - n) <= a) return n;
          }
        },
      };
      t.default = s;
    },
    650580: function (e, t, n) {
      var r = n(728579),
        i = n(467213),
        o = r.DEFAULT_COMPARATOR,
        a = r.reverseComparator;
      function s(e, t, n, r) {
        for (var o, a = n, s = r, u = t[r], c = 2 * r + 1; c < a; )
          (o = c + 1) < a && e(t[c], t[o]) >= 0 && (c = o),
            (t[r] = t[c]),
            (c = 2 * (r = c) + 1);
        (t[r] = u), i.siftDown(e, t, s, r);
      }
      function u(e, t, n, r) {
        for (var i, o, a = r, u = new e(r); a > 0; )
          (i = n[--a]),
            0 !== a && ((o = n[0]), (n[0] = i), s(t, n, --r, 0), (i = o)),
            (u[a] = i);
        return u;
      }
      function c(e, t, n) {
        if (
          (2 === arguments.length && ((n = t), (t = null)),
          (this.ArrayClass = e),
          (this.capacity = n),
          (this.items = new e(n)),
          this.clear(),
          (this.comparator = t || o),
          "number" !== typeof n && n <= 0)
        )
          throw new Error(
            "mnemonist/FixedReverseHeap.constructor: capacity should be a number > 0."
          );
        if ("function" !== typeof this.comparator)
          throw new Error(
            "mnemonist/FixedReverseHeap.constructor: given comparator should be a function."
          );
        this.comparator = a(this.comparator);
      }
      (c.prototype.clear = function () {
        this.size = 0;
      }),
        (c.prototype.push = function (e) {
          return (
            this.size < this.capacity
              ? ((this.items[this.size] = e),
                i.siftDown(this.comparator, this.items, 0, this.size),
                this.size++)
              : this.comparator(e, this.items[0]) > 0 &&
                i.replace(this.comparator, this.items, e),
            this.size
          );
        }),
        (c.prototype.peek = function () {
          return this.items[0];
        }),
        (c.prototype.consume = function () {
          var e = u(this.ArrayClass, this.comparator, this.items, this.size);
          return (this.size = 0), e;
        }),
        (c.prototype.toArray = function () {
          return u(
            this.ArrayClass,
            this.comparator,
            this.items.slice(0, this.size),
            this.size
          );
        }),
        (c.prototype.inspect = function () {
          var e = this.toArray();
          return (
            Object.defineProperty(e, "constructor", {
              value: c,
              enumerable: !1,
            }),
            e
          );
        }),
        "undefined" !== typeof Symbol &&
          (c.prototype[Symbol.for("nodejs.util.inspect.custom")] =
            c.prototype.inspect),
        (e.exports = c);
    },
    467213: function (e, t, n) {
      var r = n(848210),
        i = n(728579),
        o = n(413118),
        a = i.DEFAULT_COMPARATOR,
        s = i.reverseComparator;
      function u(e, t, n, r) {
        for (
          var i, o, a = t[r];
          r > n && e(a, (o = t[(i = (r - 1) >> 1)])) < 0;

        )
          (t[r] = o), (r = i);
        t[r] = a;
      }
      function c(e, t, n) {
        for (var r, i = t.length, o = n, a = t[n], s = 2 * n + 1; s < i; )
          (r = s + 1) < i && e(t[s], t[r]) >= 0 && (s = r),
            (t[n] = t[s]),
            (s = 2 * (n = s) + 1);
        (t[n] = a), u(e, t, o, n);
      }
      function l(e, t, n) {
        t.push(n), u(e, t, 0, t.length - 1);
      }
      function f(e, t) {
        var n = t.pop();
        if (0 !== t.length) {
          var r = t[0];
          return (t[0] = n), c(e, t, 0), r;
        }
        return n;
      }
      function d(e, t, n) {
        if (0 === t.length)
          throw new Error("mnemonist/heap.replace: cannot pop an empty heap.");
        var r = t[0];
        return (t[0] = n), c(e, t, 0), r;
      }
      function h(e, t, n) {
        var r;
        return (
          0 !== t.length &&
            e(t[0], n) < 0 &&
            ((r = t[0]), (t[0] = n), (n = r), c(e, t, 0)),
          n
        );
      }
      function p(e, t) {
        for (var n = t.length >> 1; --n >= 0; ) c(e, t, n);
      }
      function g(e, t) {
        for (var n = t.length, r = 0, i = new Array(n); r < n; )
          i[r++] = f(e, t);
        return i;
      }
      function m(e) {
        if (
          (this.clear(),
          (this.comparator = e || a),
          "function" !== typeof this.comparator)
        )
          throw new Error(
            "mnemonist/Heap.constructor: given comparator should be a function."
          );
      }
      function y(e) {
        if (
          (this.clear(),
          (this.comparator = e || a),
          "function" !== typeof this.comparator)
        )
          throw new Error(
            "mnemonist/MaxHeap.constructor: given comparator should be a function."
          );
        this.comparator = s(this.comparator);
      }
      (m.prototype.clear = function () {
        (this.items = []), (this.size = 0);
      }),
        (m.prototype.push = function (e) {
          return l(this.comparator, this.items, e), ++this.size;
        }),
        (m.prototype.peek = function () {
          return this.items[0];
        }),
        (m.prototype.pop = function () {
          return 0 !== this.size && this.size--, f(this.comparator, this.items);
        }),
        (m.prototype.replace = function (e) {
          return d(this.comparator, this.items, e);
        }),
        (m.prototype.pushpop = function (e) {
          return h(this.comparator, this.items, e);
        }),
        (m.prototype.consume = function () {
          return (this.size = 0), g(this.comparator, this.items);
        }),
        (m.prototype.toArray = function () {
          return g(this.comparator, this.items.slice());
        }),
        (m.prototype.inspect = function () {
          var e = this.toArray();
          return (
            Object.defineProperty(e, "constructor", {
              value: m,
              enumerable: !1,
            }),
            e
          );
        }),
        "undefined" !== typeof Symbol &&
          (m.prototype[Symbol.for("nodejs.util.inspect.custom")] =
            m.prototype.inspect),
        (y.prototype = m.prototype),
        (m.from = function (e, t) {
          var n,
            r = new m(t);
          return (
            (n = o.isArrayLike(e) ? e.slice() : o.toArray(e)),
            p(r.comparator, n),
            (r.items = n),
            (r.size = n.length),
            r
          );
        }),
        (y.from = function (e, t) {
          var n,
            r = new y(t);
          return (
            (n = o.isArrayLike(e) ? e.slice() : o.toArray(e)),
            p(r.comparator, n),
            (r.items = n),
            (r.size = n.length),
            r
          );
        }),
        (m.siftUp = c),
        (m.siftDown = u),
        (m.push = l),
        (m.pop = f),
        (m.replace = d),
        (m.pushpop = h),
        (m.heapify = p),
        (m.consume = g),
        (m.nsmallest = function (e, t, n) {
          2 === arguments.length && ((n = t), (t = e), (e = a));
          var i,
            u,
            c,
            l,
            f = s(e),
            h = 1 / 0;
          if (1 === t) {
            if (o.isArrayLike(n)) {
              for (i = 0, u = n.length; i < u; i++)
                (c = n[i]), (h === 1 / 0 || e(c, h) < 0) && (h = c);
              return ((l = new n.constructor(1))[0] = h), l;
            }
            return (
              r(n, function (t) {
                (h === 1 / 0 || e(t, h) < 0) && (h = t);
              }),
              [h]
            );
          }
          if (o.isArrayLike(n)) {
            if (t >= n.length) return n.slice().sort(e);
            for (l = n.slice(0, t), p(f, l), i = t, u = n.length; i < u; i++)
              f(n[i], l[0]) > 0 && d(f, l, n[i]);
            return l.sort(e);
          }
          var g = o.guessLength(n);
          return (
            null !== g && g < t && (t = g),
            (l = new Array(t)),
            (i = 0),
            r(n, function (e) {
              i < t
                ? (l[i] = e)
                : (i === t && p(f, l), f(e, l[0]) > 0 && d(f, l, e)),
                i++;
            }),
            l.length > i && (l.length = i),
            l.sort(e)
          );
        }),
        (m.nlargest = function (e, t, n) {
          2 === arguments.length && ((n = t), (t = e), (e = a));
          var i,
            u,
            c,
            l,
            f = s(e),
            h = -1 / 0;
          if (1 === t) {
            if (o.isArrayLike(n)) {
              for (i = 0, u = n.length; i < u; i++)
                (c = n[i]), (h === -1 / 0 || e(c, h) > 0) && (h = c);
              return ((l = new n.constructor(1))[0] = h), l;
            }
            return (
              r(n, function (t) {
                (h === -1 / 0 || e(t, h) > 0) && (h = t);
              }),
              [h]
            );
          }
          if (o.isArrayLike(n)) {
            if (t >= n.length) return n.slice().sort(f);
            for (l = n.slice(0, t), p(e, l), i = t, u = n.length; i < u; i++)
              e(n[i], l[0]) > 0 && d(e, l, n[i]);
            return l.sort(f);
          }
          var g = o.guessLength(n);
          return (
            null !== g && g < t && (t = g),
            (l = new Array(t)),
            (i = 0),
            r(n, function (n) {
              i < t
                ? (l[i] = n)
                : (i === t && p(e, l), e(n, l[0]) > 0 && d(e, l, n)),
                i++;
            }),
            l.length > i && (l.length = i),
            l.sort(f)
          );
        }),
        (m.MinHeap = m),
        (m.MaxHeap = y),
        (e.exports = m);
    },
    138385: function (e, t, n) {
      var r = n(413118),
        i = n(800670),
        o = n(728579).createTupleComparator,
        a = n(650580),
        s = n(412295).O;
      function u(e, t, n, r) {
        var i,
          o,
          a = 0;
        for (i = 0; i < e; i++) a += (o = t[i][n] - r[i]) * o;
        return a;
      }
      function c(e, t, n, r) {
        for (
          var o,
            a,
            u,
            c,
            l,
            f,
            d,
            h,
            p = r.length,
            g = i.getPointerArray(p + 1),
            m = new g(p),
            y = new g(p),
            b = new g(p),
            v = [[0, 0, n.length, -1, 0]],
            _ = 0;
          0 !== v.length;

        )
          (h = (o = v.pop())[0]),
            (f = o[1]),
            (d = o[2]),
            (a = o[3]),
            (u = o[4]),
            s(t[h], n, f, d),
            (l = n[(c = f + ((p = d - f) >>> 1))]),
            (m[_] = l),
            a > -1 && (0 === u ? (y[a] = _ + 1) : (b[a] = _ + 1)),
            (h = (h + 1) % e),
            c !== f && c !== d - 1 && v.push([h, c + 1, d, _, 1]),
            c !== f && v.push([h, f, c, _, 0]),
            _++;
        return { axes: t, labels: r, pivots: m, lefts: y, rights: b };
      }
      function l(e, t) {
        (this.dimensions = e),
          (this.visited = 0),
          (this.axes = t.axes),
          (this.labels = t.labels),
          (this.pivots = t.pivots),
          (this.lefts = t.lefts),
          (this.rights = t.rights),
          (this.size = this.labels.length);
      }
      l.prototype.nearestNeighbor = function (e) {
        var t = 1 / 0,
          n = null,
          r = this.dimensions,
          i = this.axes,
          o = this.pivots,
          a = this.lefts,
          s = this.rights,
          c = 0;
        return (
          (function l(f, d) {
            c++;
            var h = a[d],
              p = s[d],
              g = o[d],
              m = u(r, i, g, e);
            if (!(m < t && ((n = g), (t = m), 0 === m))) {
              var y = i[f][g] - e[f];
              (f = (f + 1) % r),
                y > 0 ? 0 !== h && l(f, h - 1) : 0 !== p && l(f, p - 1),
                y * y < t &&
                  (y > 0 ? 0 !== p && l(f, p - 1) : 0 !== h && l(f, h - 1));
            }
          })(0, 0),
          (this.visited = c),
          this.labels[n]
        );
      };
      var f = o(3),
        d = o(2);
      (l.prototype.kNearestNeighbors = function (e, t) {
        if (e <= 0)
          throw new Error(
            "mnemonist/kd-tree.kNearestNeighbors: k should be a positive number."
          );
        if (1 === (e = Math.min(e, this.size)))
          return [this.nearestNeighbor(t)];
        var n = new a(Array, f, e),
          r = this.dimensions,
          i = this.axes,
          o = this.pivots,
          s = this.lefts,
          c = this.rights,
          l = 0;
        !(function a(f, d) {
          var h = s[d],
            p = c[d],
            g = o[d],
            m = u(r, i, g, t);
          n.push([m, l++, g]);
          var y = t[f],
            b = i[f][g],
            v = y - b;
          (f = (f + 1) % r),
            y < b ? 0 !== h && a(f, h - 1) : 0 !== p && a(f, p - 1),
            (v * v < n.peek()[0] || n.size < e) &&
              (y < b ? 0 !== p && a(f, p - 1) : 0 !== h && a(f, h - 1));
        })(0, 0),
          (this.visited = l);
        for (var d = n.consume(), h = 0; h < d.length; h++)
          d[h] = this.labels[d[h][2]];
        return d;
      }),
        (l.prototype.linearKNearestNeighbors = function (e, t) {
          if (e <= 0)
            throw new Error(
              "mnemonist/kd-tree.kNearestNeighbors: k should be a positive number."
            );
          e = Math.min(e, this.size);
          var n,
            r,
            i,
            o = new a(Array, d, e);
          for (n = 0, r = this.size; n < r; n++)
            (i = u(this.dimensions, this.axes, this.pivots[n], t)),
              o.push([i, n]);
          var s = o.consume();
          for (n = 0; n < s.length; n++)
            s[n] = this.labels[this.pivots[s[n][1]]];
          return s;
        }),
        (l.prototype.inspect = function () {
          var e,
            t,
            n,
            r = new Map();
          for (
            r.dimensions = this.dimensions,
              Object.defineProperty(r, "constructor", {
                value: l,
                enumerable: !1,
              }),
              e = 0;
            e < this.size;
            e++
          ) {
            for (
              n = new Array(this.dimensions), t = 0;
              t < this.dimensions;
              t++
            )
              n[t] = this.axes[t][e];
            r.set(this.labels[e], n);
          }
          return r;
        }),
        "undefined" !== typeof Symbol &&
          (l.prototype[Symbol.for("nodejs.util.inspect.custom")] =
            l.prototype.inspect),
        (l.from = function (e, t) {
          var n = (function (e, t) {
            var n,
              r,
              o,
              a,
              s = t.length,
              u = new Array(e),
              c = new Array(s),
              l = new (i.getPointerArray(s))(s),
              f = !0;
            for (r = 0; r < e; r++) {
              for (n = new Float64Array(s), o = 0; o < s; o++)
                (a = t[o]), (n[o] = a[1][r]), f && ((c[o] = a[0]), (l[o] = o));
              (f = !1), (u[r] = n);
            }
            return { axes: u, ids: l, labels: c };
          })(t, r.toArray(e));
          return new l(t, c(t, n.axes, n.ids, n.labels));
        }),
        (l.fromAxes = function (e, t) {
          return (
            t || (t = i.indices(e[0].length)),
            new l(e.length, c(e.length, e, i.indices(t.length), t))
          );
        }),
        (e.exports = l);
    },
    412295: function (e, t) {
      var n = new Float64Array(64),
        r = new Float64Array(64);
      t.O = function (e, t, i, o) {
        var a, s, u, c, l, f;
        for (n[0] = i, r[0] = o, s = 0; s >= 0; )
          if ((u = n[s]) < (c = r[s] - 1)) {
            for (a = e[(l = t[u])]; u < c; ) {
              for (; e[t[c]] >= a && u < c; ) c--;
              for (u < c && (t[u++] = t[c]); e[t[u]] <= a && u < c; ) u++;
              u < c && (t[c--] = t[u]);
            }
            (t[u] = l),
              (n[s + 1] = u + 1),
              (r[s + 1] = r[s]),
              (r[s++] = u),
              r[s] - n[s] > r[s - 1] - n[s - 1] &&
                ((f = n[s]),
                (n[s] = n[s - 1]),
                (n[s - 1] = f),
                (f = r[s]),
                (r[s] = r[s - 1]),
                (r[s - 1] = f));
          } else s--;
        return t;
      };
    },
    540742: function (e, t, n) {
      var r = n(800670);
      function i(e) {
        var t = r.getPointerArray(e),
          n = r.getPointerArray(Math.log2(e));
        (this.size = e),
          (this.dimension = e),
          (this.parents = new t(e)),
          (this.ranks = new n(e));
        for (var i = 0; i < e; i++) this.parents[i] = i;
      }
      (i.prototype.find = function (e) {
        for (var t, n, r = e; r !== (t = this.parents[r]); ) r = t;
        for (; (n = this.parents[e]) !== r; ) (this.parents[e] = r), (e = n);
        return r;
      }),
        (i.prototype.union = function (e, t) {
          var n = this.find(e),
            r = this.find(t);
          if (n === r) return this;
          this.dimension--;
          var i = this.ranks[e],
            o = this.ranks[t];
          return (
            i < o
              ? (this.parents[n] = r)
              : i > o
              ? (this.parents[r] = n)
              : ((this.parents[r] = n), this.ranks[n]++),
            this
          );
        }),
        (i.prototype.connected = function (e, t) {
          return this.find(e) === this.find(t);
        }),
        (i.prototype.mapping = function () {
          for (
            var e,
              t = {},
              n = new (r.getPointerArray(this.dimension))(this.size),
              i = 0,
              o = 0,
              a = this.parents.length;
            o < a;
            o++
          )
            "undefined" === typeof t[(e = this.find(o))]
              ? ((n[o] = i), (t[e] = i++))
              : (n[o] = t[e]);
          return n;
        }),
        (i.prototype.compile = function () {
          for (
            var e,
              t = {},
              n = new Array(this.dimension),
              r = 0,
              i = 0,
              o = this.parents.length;
            i < o;
            i++
          )
            "undefined" === typeof t[(e = this.find(i))]
              ? ((n[r] = [i]), (t[e] = r++))
              : n[t[e]].push(i);
          return n;
        }),
        (i.prototype.inspect = function () {
          var e = this.compile();
          return (
            Object.defineProperty(e, "constructor", {
              value: i,
              enumerable: !1,
            }),
            e
          );
        }),
        "undefined" !== typeof Symbol &&
          (i.prototype[Symbol.for("nodejs.util.inspect.custom")] =
            i.prototype.inspect),
        (e.exports = i);
    },
    728579: function (e, t) {
      (t.DEFAULT_COMPARATOR = function (e, t) {
        return e < t ? -1 : e > t ? 1 : 0;
      }),
        (t.DEFAULT_REVERSE_COMPARATOR = function (e, t) {
          return e < t ? 1 : e > t ? -1 : 0;
        }),
        (t.reverseComparator = function (e) {
          return function (t, n) {
            return e(n, t);
          };
        }),
        (t.createTupleComparator = function (e) {
          return 2 === e
            ? function (e, t) {
                return e[0] < t[0]
                  ? -1
                  : e[0] > t[0]
                  ? 1
                  : e[1] < t[1]
                  ? -1
                  : e[1] > t[1]
                  ? 1
                  : 0;
              }
            : function (t, n) {
                for (var r = 0; r < e; ) {
                  if (t[r] < n[r]) return -1;
                  if (t[r] > n[r]) return 1;
                  r++;
                }
                return 0;
              };
        });
    },
    413118: function (e, t, n) {
      var r = n(848210),
        i = n(800670);
      function o(e) {
        return "number" === typeof e.length
          ? e.length
          : "number" === typeof e.size
          ? e.size
          : void 0;
      }
      (t.isArrayLike = function (e) {
        return Array.isArray(e) || i.isTypedArray(e);
      }),
        (t.guessLength = o),
        (t.toArray = function (e) {
          var t = o(e),
            n = "number" === typeof t ? new Array(t) : [],
            i = 0;
          return (
            r(e, function (e) {
              n[i++] = e;
            }),
            n
          );
        }),
        (t.toArrayWithIndices = function (e) {
          var t = o(e),
            n = "number" === typeof t ? i.getPointerArray(t) : Array,
            a = "number" === typeof t ? new Array(t) : [],
            s = "number" === typeof t ? new n(t) : [],
            u = 0;
          return (
            r(e, function (e) {
              (a[u] = e), (s[u] = u++);
            }),
            [a, s]
          );
        });
    },
    800670: function (e, t) {
      var n = Math.pow(2, 8) - 1,
        r = Math.pow(2, 16) - 1,
        i = Math.pow(2, 32) - 1,
        o = Math.pow(2, 7) - 1,
        a = Math.pow(2, 15) - 1,
        s = Math.pow(2, 31) - 1;
      (t.getPointerArray = function (e) {
        var t = e - 1;
        if (t <= n) return Uint8Array;
        if (t <= r) return Uint16Array;
        if (t <= i) return Uint32Array;
        throw new Error(
          "mnemonist: Pointer Array of size > 4294967295 is not supported."
        );
      }),
        (t.getSignedPointerArray = function (e) {
          var t = e - 1;
          return t <= o
            ? Int8Array
            : t <= a
            ? Int16Array
            : t <= s
            ? Int32Array
            : Float64Array;
        }),
        (t.getNumberType = function (e) {
          return e === (0 | e)
            ? -1 === Math.sign(e)
              ? e <= 127 && e >= -128
                ? Int8Array
                : e <= 32767 && e >= -32768
                ? Int16Array
                : Int32Array
              : e <= 255
              ? Uint8Array
              : e <= 65535
              ? Uint16Array
              : Uint32Array
            : Float64Array;
        });
      var u = {
        Uint8Array: 1,
        Int8Array: 2,
        Uint16Array: 3,
        Int16Array: 4,
        Uint32Array: 5,
        Int32Array: 6,
        Float32Array: 7,
        Float64Array: 8,
      };
      (t.getMinimalRepresentation = function (e, n) {
        var r,
          i,
          o,
          a,
          s,
          c = null,
          l = 0;
        for (a = 0, s = e.length; a < s; a++)
          (o = n ? n(e[a]) : e[a]),
            (i = t.getNumberType(o)),
            (r = u[i.name]) > l && ((l = r), (c = i));
        return c;
      }),
        (t.isTypedArray = function (e) {
          return "undefined" !== typeof ArrayBuffer && ArrayBuffer.isView(e);
        }),
        (t.concat = function () {
          var e,
            t,
            n,
            r = 0;
          for (e = 0, n = arguments.length; e < n; e++)
            r += arguments[e].length;
          var i = new arguments[0].constructor(r);
          for (e = 0, t = 0; e < n; e++)
            i.set(arguments[e], t), (t += arguments[e].length);
          return i;
        }),
        (t.indices = function (e) {
          for (var n = new (t.getPointerArray(e))(e), r = 0; r < e; r++)
            n[r] = r;
          return n;
        });
    },
    289624: function (e) {
      var t = parseInt(Number.MAX_SAFE_INTEGER / 2) || (1 << 26) * (1 << 26);
      function n() {
        (this.C = null),
          (this.row_covered = []),
          (this.col_covered = []),
          (this.n = 0),
          (this.Z0_r = 0),
          (this.Z0_c = 0),
          (this.marked = null),
          (this.path = null);
      }
      function r(e, t) {
        return new n().compute(e, t);
      }
      (n.prototype.pad_matrix = function (e, t) {
        t = t || 0;
        var n,
          r = 0,
          i = e.length;
        for (n = 0; n < i; ++n) e[n].length > r && (r = e[n].length);
        i = r > i ? r : i;
        var o = [];
        for (n = 0; n < i; ++n) {
          for (var a = (e[n] || []).slice(); i > a.length; ) a.push(t);
          o.push(a);
        }
        return o;
      }),
        (n.prototype.compute = function (e, t) {
          ((t = t || {}).padValue = t.padValue || 0),
            (this.C = this.pad_matrix(e, t.padValue)),
            (this.n = this.C.length),
            (this.original_length = e.length),
            (this.original_width = e[0].length);
          for (var n = []; n.length < this.n; ) n.push(!1);
          (this.row_covered = n.slice()),
            (this.col_covered = n.slice()),
            (this.Z0_r = 0),
            (this.Z0_c = 0),
            (this.path = this.__make_matrix(2 * this.n, 0)),
            (this.marked = this.__make_matrix(this.n, 0));
          for (
            var r = 1,
              i = {
                1: this.__step1,
                2: this.__step2,
                3: this.__step3,
                4: this.__step4,
                5: this.__step5,
                6: this.__step6,
              };
            ;

          ) {
            var o = i[r];
            if (!o) break;
            r = o.apply(this);
          }
          for (var a = [], s = 0; s < this.original_length; ++s)
            for (var u = 0; u < this.original_width; ++u)
              1 == this.marked[s][u] && a.push([s, u]);
          return a;
        }),
        (n.prototype.__make_matrix = function (e, t) {
          for (var n = [], r = 0; r < e; ++r) {
            n[r] = [];
            for (var i = 0; i < e; ++i) n[r][i] = t;
          }
          return n;
        }),
        (n.prototype.__step1 = function () {
          for (var e = 0; e < this.n; ++e)
            for (
              var t = Math.min.apply(Math, this.C[e]), n = 0;
              n < this.n;
              ++n
            )
              this.C[e][n] -= t;
          return 2;
        }),
        (n.prototype.__step2 = function () {
          for (var e = 0; e < this.n; ++e)
            for (var t = 0; t < this.n; ++t)
              if (
                0 === this.C[e][t] &&
                !this.col_covered[t] &&
                !this.row_covered[e]
              ) {
                (this.marked[e][t] = 1),
                  (this.col_covered[t] = !0),
                  (this.row_covered[e] = !0);
                break;
              }
          return this.__clear_covers(), 3;
        }),
        (n.prototype.__step3 = function () {
          for (var e = 0, t = 0; t < this.n; ++t)
            for (var n = 0; n < this.n; ++n)
              1 == this.marked[t][n] &&
                0 == this.col_covered[n] &&
                ((this.col_covered[n] = !0), ++e);
          return e >= this.n ? 7 : 4;
        }),
        (n.prototype.__step4 = function () {
          for (var e = -1, t = -1, n = -1; ; ) {
            var r = this.__find_a_zero();
            if (((e = r[0]), (t = r[1]), e < 0)) return 6;
            if (
              ((this.marked[e][t] = 2),
              !((n = this.__find_star_in_row(e)) >= 0))
            )
              return (this.Z0_r = e), (this.Z0_c = t), 5;
            (t = n), (this.row_covered[e] = !0), (this.col_covered[t] = !1);
          }
        }),
        (n.prototype.__step5 = function () {
          var e = 0;
          (this.path[e][0] = this.Z0_r), (this.path[e][1] = this.Z0_c);
          for (var t = !1; !t; ) {
            var n = this.__find_star_in_col(this.path[e][1]);
            if (
              (n >= 0
                ? (e++,
                  (this.path[e][0] = n),
                  (this.path[e][1] = this.path[e - 1][1]))
                : (t = !0),
              !t)
            ) {
              var r = this.__find_prime_in_row(this.path[e][0]);
              e++,
                (this.path[e][0] = this.path[e - 1][0]),
                (this.path[e][1] = r);
            }
          }
          return (
            this.__convert_path(this.path, e),
            this.__clear_covers(),
            this.__erase_primes(),
            3
          );
        }),
        (n.prototype.__step6 = function () {
          for (var e = this.__find_smallest(), t = 0; t < this.n; ++t)
            for (var n = 0; n < this.n; ++n)
              this.row_covered[t] && (this.C[t][n] += e),
                this.col_covered[n] || (this.C[t][n] -= e);
          return 4;
        }),
        (n.prototype.__find_smallest = function () {
          for (var e = t, n = 0; n < this.n; ++n)
            for (var r = 0; r < this.n; ++r)
              this.row_covered[n] ||
                this.col_covered[r] ||
                (e > this.C[n][r] && (e = this.C[n][r]));
          return e;
        }),
        (n.prototype.__find_a_zero = function () {
          for (var e = 0; e < this.n; ++e)
            for (var t = 0; t < this.n; ++t)
              if (
                0 === this.C[e][t] &&
                !this.row_covered[e] &&
                !this.col_covered[t]
              )
                return [e, t];
          return [-1, -1];
        }),
        (n.prototype.__find_star_in_row = function (e) {
          for (var t = 0; t < this.n; ++t) if (1 == this.marked[e][t]) return t;
          return -1;
        }),
        (n.prototype.__find_star_in_col = function (e) {
          for (var t = 0; t < this.n; ++t) if (1 == this.marked[t][e]) return t;
          return -1;
        }),
        (n.prototype.__find_prime_in_row = function (e) {
          for (var t = 0; t < this.n; ++t) if (2 == this.marked[e][t]) return t;
          return -1;
        }),
        (n.prototype.__convert_path = function (e, t) {
          for (var n = 0; n <= t; ++n)
            this.marked[e[n][0]][e[n][1]] =
              1 == this.marked[e[n][0]][e[n][1]] ? 0 : 1;
        }),
        (n.prototype.__clear_covers = function () {
          for (var e = 0; e < this.n; ++e)
            (this.row_covered[e] = !1), (this.col_covered[e] = !1);
        }),
        (n.prototype.__erase_primes = function () {
          for (var e = 0; e < this.n; ++e)
            for (var t = 0; t < this.n; ++t)
              2 == this.marked[e][t] && (this.marked[e][t] = 0);
        }),
        (r.version = "1.2.2"),
        (r.format_matrix = function (e) {
          var t,
            n,
            r = [];
          for (t = 0; t < e.length; ++t)
            for (n = 0; n < e[t].length; ++n) {
              var i = String(e[t][n]).length;
              (!r[n] || i >= r[n]) && (r[n] = i);
            }
          var o = "";
          for (t = 0; t < e.length; ++t) {
            for (n = 0; n < e[t].length; ++n) {
              for (var a = String(e[t][n]); a.length < r[n]; ) a = " " + a;
              (o += a), n != e[t].length - 1 && (o += " ");
            }
            t != e[t].length - 1 && (o += "\n");
          }
          return o;
        }),
        (r.make_cost_matrix = function (e, t) {
          var n, r;
          if (!t) {
            var i = -1 / 0;
            for (n = 0; n < e.length; ++n)
              for (r = 0; r < e[n].length; ++r) e[n][r] > i && (i = e[n][r]);
            t = function (e) {
              return i - e;
            };
          }
          var o = [];
          for (n = 0; n < e.length; ++n) {
            var a = e[n];
            for (o[n] = [], r = 0; r < a.length; ++r) o[n][r] = t(e[n][r]);
          }
          return o;
        }),
        (r.Munkres = n),
        e.exports && (e.exports = r);
    },
    848210: function (e, t, n) {
      var r = n(971694),
        i = r.ARRAY_BUFFER_SUPPORT,
        o = r.SYMBOL_SUPPORT;
      e.exports = function (e, t) {
        var n, r, a, s, u;
        if (!e) throw new Error("obliterator/forEach: invalid iterable.");
        if ("function" !== typeof t)
          throw new Error("obliterator/forEach: expecting a callback.");
        if (
          Array.isArray(e) ||
          (i && ArrayBuffer.isView(e)) ||
          "string" === typeof e ||
          "[object Arguments]" === e.toString()
        )
          for (a = 0, s = e.length; a < s; a++) t(e[a], a);
        else if ("function" !== typeof e.forEach)
          if (
            (o &&
              Symbol.iterator in e &&
              "function" !== typeof e.next &&
              (e = e[Symbol.iterator]()),
            "function" !== typeof e.next)
          )
            for (r in e) e.hasOwnProperty(r) && t(e[r], r);
          else
            for (n = e, a = 0; !0 !== (u = n.next()).done; ) t(u.value, a), a++;
        else e.forEach(t);
      };
    },
    971694: function (e, t) {
      (t.ARRAY_BUFFER_SUPPORT = "undefined" !== typeof ArrayBuffer),
        (t.SYMBOL_SUPPORT = "undefined" !== typeof Symbol);
    },
    373291: function (e, t, n) {
      var r,
        i = n(681009),
        o = n(521835),
        a = n(567671),
        s = n(689048),
        u = n(900571),
        c = n(693928),
        l = !1,
        f = o();
      function d(e, t, n) {
        var i = r.segments(e),
          o = r.segments(t),
          a = n(r.combine(i, o));
        return r.polygon(a);
      }
      (r = {
        buildLog: function (e) {
          return (
            !0 === e ? (l = i()) : !1 === e && (l = !1), !1 !== l && l.list
          );
        },
        epsilon: function (e) {
          return f.epsilon(e);
        },
        segments: function (e) {
          var t = a(!0, f, l);
          return (
            e.regions.forEach(t.addRegion),
            { segments: t.calculate(e.inverted), inverted: e.inverted }
          );
        },
        combine: function (e, t) {
          return {
            combined: a(!1, f, l).calculate(
              e.segments,
              e.inverted,
              t.segments,
              t.inverted
            ),
            inverted1: e.inverted,
            inverted2: t.inverted,
          };
        },
        selectUnion: function (e) {
          return {
            segments: u.union(e.combined, l),
            inverted: e.inverted1 || e.inverted2,
          };
        },
        selectIntersect: function (e) {
          return {
            segments: u.intersect(e.combined, l),
            inverted: e.inverted1 && e.inverted2,
          };
        },
        selectDifference: function (e) {
          return {
            segments: u.difference(e.combined, l),
            inverted: e.inverted1 && !e.inverted2,
          };
        },
        selectDifferenceRev: function (e) {
          return {
            segments: u.differenceRev(e.combined, l),
            inverted: !e.inverted1 && e.inverted2,
          };
        },
        selectXor: function (e) {
          return {
            segments: u.xor(e.combined, l),
            inverted: e.inverted1 !== e.inverted2,
          };
        },
        polygon: function (e) {
          return { regions: s(e.segments, f, l), inverted: e.inverted };
        },
        polygonFromGeoJSON: function (e) {
          return c.toPolygon(r, e);
        },
        polygonToGeoJSON: function (e) {
          return c.fromPolygon(r, f, e);
        },
        union: function (e, t) {
          return d(e, t, r.selectUnion);
        },
        intersect: function (e, t) {
          return d(e, t, r.selectIntersect);
        },
        difference: function (e, t) {
          return d(e, t, r.selectDifference);
        },
        differenceRev: function (e, t) {
          return d(e, t, r.selectDifferenceRev);
        },
        xor: function (e, t) {
          return d(e, t, r.selectXor);
        },
      }),
        "object" === typeof window && (window.PolyBool = r),
        (e.exports = r);
    },
    681009: function (e) {
      e.exports = function () {
        var e,
          t = 0,
          n = !1;
        function r(t, n) {
          return (
            e.list.push({
              type: t,
              data: n ? JSON.parse(JSON.stringify(n)) : void 0,
            }),
            e
          );
        }
        return (e = {
          list: [],
          segmentId: function () {
            return t++;
          },
          checkIntersection: function (e, t) {
            return r("check", { seg1: e, seg2: t });
          },
          segmentChop: function (e, t) {
            return (
              r("div_seg", { seg: e, pt: t }), r("chop", { seg: e, pt: t })
            );
          },
          statusRemove: function (e) {
            return r("pop_seg", { seg: e });
          },
          segmentUpdate: function (e) {
            return r("seg_update", { seg: e });
          },
          segmentNew: function (e, t) {
            return r("new_seg", { seg: e, primary: t });
          },
          segmentRemove: function (e) {
            return r("rem_seg", { seg: e });
          },
          tempStatus: function (e, t, n) {
            return r("temp_status", { seg: e, above: t, below: n });
          },
          rewind: function (e) {
            return r("rewind", { seg: e });
          },
          status: function (e, t, n) {
            return r("status", { seg: e, above: t, below: n });
          },
          vert: function (t) {
            return t === n ? e : ((n = t), r("vert", { x: t }));
          },
          log: function (e) {
            return (
              "string" !== typeof e && (e = JSON.stringify(e, !1, "  ")),
              r("log", { txt: e })
            );
          },
          reset: function () {
            return r("reset");
          },
          selected: function (e) {
            return r("selected", { segs: e });
          },
          chainStart: function (e) {
            return r("chain_start", { seg: e });
          },
          chainRemoveHead: function (e, t) {
            return r("chain_rem_head", { index: e, pt: t });
          },
          chainRemoveTail: function (e, t) {
            return r("chain_rem_tail", { index: e, pt: t });
          },
          chainNew: function (e, t) {
            return r("chain_new", { pt1: e, pt2: t });
          },
          chainMatch: function (e) {
            return r("chain_match", { index: e });
          },
          chainClose: function (e) {
            return r("chain_close", { index: e });
          },
          chainAddHead: function (e, t) {
            return r("chain_add_head", { index: e, pt: t });
          },
          chainAddTail: function (e, t) {
            return r("chain_add_tail", { index: e, pt: t });
          },
          chainConnect: function (e, t) {
            return r("chain_con", { index1: e, index2: t });
          },
          chainReverse: function (e) {
            return r("chain_rev", { index: e });
          },
          chainJoin: function (e, t) {
            return r("chain_join", { index1: e, index2: t });
          },
          done: function () {
            return r("done");
          },
        });
      };
    },
    521835: function (e) {
      e.exports = function (e) {
        "number" !== typeof e && (e = 1e-10);
        var t = {
          epsilon: function (t) {
            return "number" === typeof t && (e = t), e;
          },
          pointAboveOrOnLine: function (t, n, r) {
            var i = n[0],
              o = n[1],
              a = r[0],
              s = r[1],
              u = t[0];
            return (a - i) * (t[1] - o) - (s - o) * (u - i) >= -e;
          },
          pointBetween: function (t, n, r) {
            var i = t[1] - n[1],
              o = r[0] - n[0],
              a = t[0] - n[0],
              s = r[1] - n[1],
              u = a * o + i * s;
            return !(u < e) && !(u - (o * o + s * s) > -e);
          },
          pointsSameX: function (t, n) {
            return Math.abs(t[0] - n[0]) < e;
          },
          pointsSameY: function (t, n) {
            return Math.abs(t[1] - n[1]) < e;
          },
          pointsSame: function (e, n) {
            return t.pointsSameX(e, n) && t.pointsSameY(e, n);
          },
          pointsCompare: function (e, n) {
            return t.pointsSameX(e, n)
              ? t.pointsSameY(e, n)
                ? 0
                : e[1] < n[1]
                ? -1
                : 1
              : e[0] < n[0]
              ? -1
              : 1;
          },
          pointsCollinear: function (t, n, r) {
            var i = t[0] - n[0],
              o = t[1] - n[1],
              a = n[0] - r[0],
              s = n[1] - r[1];
            return Math.abs(i * s - a * o) < e;
          },
          linesIntersect: function (t, n, r, i) {
            var o = n[0] - t[0],
              a = n[1] - t[1],
              s = i[0] - r[0],
              u = i[1] - r[1],
              c = o * u - a * s;
            if (Math.abs(c) < e) return !1;
            var l = t[0] - r[0],
              f = t[1] - r[1],
              d = (s * f - u * l) / c,
              h = (o * f - a * l) / c,
              p = { alongA: 0, alongB: 0, pt: [t[0] + d * o, t[1] + d * a] };
            return (
              (p.alongA =
                d <= -e
                  ? -2
                  : d < e
                  ? -1
                  : d - 1 <= -e
                  ? 0
                  : d - 1 < e
                  ? 1
                  : 2),
              (p.alongB =
                h <= -e
                  ? -2
                  : h < e
                  ? -1
                  : h - 1 <= -e
                  ? 0
                  : h - 1 < e
                  ? 1
                  : 2),
              p
            );
          },
          pointInsideRegion: function (t, n) {
            for (
              var r = t[0],
                i = t[1],
                o = n[n.length - 1][0],
                a = n[n.length - 1][1],
                s = !1,
                u = 0;
              u < n.length;
              u++
            ) {
              var c = n[u][0],
                l = n[u][1];
              l - i > e != a - i > e &&
                ((o - c) * (i - l)) / (a - l) + c - r > e &&
                (s = !s),
                (o = c),
                (a = l);
            }
            return s;
          },
        };
        return t;
      };
    },
    693928: function (e) {
      var t = {
        toPolygon: function (e, t) {
          function n(t) {
            if (t.length <= 0) return e.segments({ inverted: !1, regions: [] });
            function n(t) {
              var n = t.slice(0, t.length - 1);
              return e.segments({ inverted: !1, regions: [n] });
            }
            for (var r = n(t[0]), i = 1; i < t.length; i++)
              r = e.selectDifference(e.combine(r, n(t[i])));
            return r;
          }
          if ("Polygon" === t.type) return e.polygon(n(t.coordinates));
          if ("MultiPolygon" === t.type) {
            for (
              var r = e.segments({ inverted: !1, regions: [] }), i = 0;
              i < t.coordinates.length;
              i++
            )
              r = e.selectUnion(e.combine(r, n(t.coordinates[i])));
            return e.polygon(r);
          }
          throw new Error(
            "PolyBool: Cannot convert GeoJSON object to PolyBool polygon"
          );
        },
        fromPolygon: function (e, t, n) {
          function r(e, n) {
            return t.pointInsideRegion(
              [0.5 * (e[0][0] + e[1][0]), 0.5 * (e[0][1] + e[1][1])],
              n
            );
          }
          function i(e) {
            return { region: e, children: [] };
          }
          n = e.polygon(e.segments(n));
          var o = i(null);
          function a(e, t) {
            for (var n = 0; n < e.children.length; n++) {
              if (r(t, (s = e.children[n]).region)) return void a(s, t);
            }
            var o = i(t);
            for (n = 0; n < e.children.length; n++) {
              var s;
              r((s = e.children[n]).region, t) &&
                (o.children.push(s), e.children.splice(n, 1), n--);
            }
            e.children.push(o);
          }
          for (var s = 0; s < n.regions.length; s++) {
            var u = n.regions[s];
            u.length < 3 || a(o, u);
          }
          function c(e, t) {
            for (
              var n = 0,
                r = e[e.length - 1][0],
                i = e[e.length - 1][1],
                o = [],
                a = 0;
              a < e.length;
              a++
            ) {
              var s = e[a][0],
                u = e[a][1];
              o.push([s, u]), (n += u * r - s * i), (r = s), (i = u);
            }
            return n < 0 !== t && o.reverse(), o.push([o[0][0], o[0][1]]), o;
          }
          var l = [];
          function f(e) {
            var t = [c(e.region, !1)];
            l.push(t);
            for (var n = 0; n < e.children.length; n++)
              t.push(d(e.children[n]));
          }
          function d(e) {
            for (var t = 0; t < e.children.length; t++) f(e.children[t]);
            return c(e.region, !0);
          }
          for (s = 0; s < o.children.length; s++) f(o.children[s]);
          return l.length <= 0
            ? { type: "Polygon", coordinates: [] }
            : 1 == l.length
            ? { type: "Polygon", coordinates: l[0] }
            : { type: "MultiPolygon", coordinates: l };
        },
      };
      e.exports = t;
    },
    567671: function (e, t, n) {
      var r = n(159186);
      e.exports = function (e, t, n) {
        function i(e, t, r) {
          return {
            id: n ? n.segmentId() : -1,
            start: e,
            end: t,
            myFill: { above: r.myFill.above, below: r.myFill.below },
            otherFill: null,
          };
        }
        var o = r.create();
        function a(e, n) {
          o.insertBefore(e, function (r) {
            return (
              (function (e, n, r, i, o, a) {
                var s = t.pointsCompare(n, o);
                return 0 !== s
                  ? s
                  : t.pointsSame(r, a)
                  ? 0
                  : e !== i
                  ? e
                    ? 1
                    : -1
                  : t.pointAboveOrOnLine(r, i ? o : a, i ? a : o)
                  ? 1
                  : -1;
              })(e.isStart, e.pt, n, r.isStart, r.pt, r.other.pt) < 0
            );
          });
        }
        function s(e, t) {
          var n = (function (e, t) {
            var n = r.node({
              isStart: !0,
              pt: e.start,
              seg: e,
              primary: t,
              other: null,
              status: null,
            });
            return a(n, e.end), n;
          })(e, t);
          return (
            (function (e, t, n) {
              var i = r.node({
                isStart: !1,
                pt: t.end,
                seg: t,
                primary: n,
                other: e,
                status: null,
              });
              (e.other = i), a(i, e.pt);
            })(n, e, t),
            n
          );
        }
        function u(e, t) {
          var r = i(t, e.seg.end, e.seg);
          return (
            (function (e, t) {
              n && n.segmentChop(e.seg, t),
                e.other.remove(),
                (e.seg.end = t),
                (e.other.pt = t),
                a(e.other, e.pt);
            })(e, t),
            s(r, e.primary)
          );
        }
        function c(i, a) {
          var s = r.create();
          function c(e) {
            return s.findTransition(function (n) {
              return (
                (function (e, n) {
                  var r = e.seg.start,
                    i = e.seg.end,
                    o = n.seg.start,
                    a = n.seg.end;
                  return t.pointsCollinear(r, o, a)
                    ? t.pointsCollinear(i, o, a) ||
                      t.pointAboveOrOnLine(i, o, a)
                      ? 1
                      : -1
                    : t.pointAboveOrOnLine(r, o, a)
                    ? 1
                    : -1;
                })(e, n.ev) > 0
              );
            });
          }
          function l(e, r) {
            var i = e.seg,
              o = r.seg,
              a = i.start,
              s = i.end,
              c = o.start,
              l = o.end;
            n && n.checkIntersection(i, o);
            var f = t.linesIntersect(a, s, c, l);
            if (!1 === f) {
              if (!t.pointsCollinear(a, s, c)) return !1;
              if (t.pointsSame(a, l) || t.pointsSame(s, c)) return !1;
              var d = t.pointsSame(a, c),
                h = t.pointsSame(s, l);
              if (d && h) return r;
              var p = !d && t.pointBetween(a, c, l),
                g = !h && t.pointBetween(s, c, l);
              if (d) return g ? u(r, s) : u(e, l), r;
              p && (h || (g ? u(r, s) : u(e, l)), u(r, a));
            } else
              0 === f.alongA &&
                (-1 === f.alongB
                  ? u(e, c)
                  : 0 === f.alongB
                  ? u(e, f.pt)
                  : 1 === f.alongB && u(e, l)),
                0 === f.alongB &&
                  (-1 === f.alongA
                    ? u(r, a)
                    : 0 === f.alongA
                    ? u(r, f.pt)
                    : 1 === f.alongA && u(r, s));
            return !1;
          }
          for (var f = []; !o.isEmpty(); ) {
            var d = o.getHead();
            if ((n && n.vert(d.pt[0]), d.isStart)) {
              n && n.segmentNew(d.seg, d.primary);
              var h = c(d),
                p = h.before ? h.before.ev : null,
                g = h.after ? h.after.ev : null;
              function m() {
                if (p) {
                  var e = l(d, p);
                  if (e) return e;
                }
                return !!g && l(d, g);
              }
              n && n.tempStatus(d.seg, !!p && p.seg, !!g && g.seg);
              var y,
                b = m();
              if (b) {
                var v;
                if (e)
                  (v =
                    null === d.seg.myFill.below ||
                    d.seg.myFill.above !== d.seg.myFill.below) &&
                    (b.seg.myFill.above = !b.seg.myFill.above);
                else b.seg.otherFill = d.seg.myFill;
                n && n.segmentUpdate(b.seg), d.other.remove(), d.remove();
              }
              if (o.getHead() !== d) {
                n && n.rewind(d.seg);
                continue;
              }
              if (e)
                (v =
                  null === d.seg.myFill.below ||
                  d.seg.myFill.above !== d.seg.myFill.below),
                  (d.seg.myFill.below = g ? g.seg.myFill.above : i),
                  (d.seg.myFill.above = v
                    ? !d.seg.myFill.below
                    : d.seg.myFill.below);
              else if (null === d.seg.otherFill)
                (y = g
                  ? d.primary === g.primary
                    ? g.seg.otherFill.above
                    : g.seg.myFill.above
                  : d.primary
                  ? a
                  : i),
                  (d.seg.otherFill = { above: y, below: y });
              n && n.status(d.seg, !!p && p.seg, !!g && g.seg),
                (d.other.status = h.insert(r.node({ ev: d })));
            } else {
              var _ = d.status;
              if (null === _)
                throw new Error(
                  "PolyBool: Zero-length segment detected; your epsilon is probably too small or too large"
                );
              if (
                (s.exists(_.prev) &&
                  s.exists(_.next) &&
                  l(_.prev.ev, _.next.ev),
                n && n.statusRemove(_.ev.seg),
                _.remove(),
                !d.primary)
              ) {
                var x = d.seg.myFill;
                (d.seg.myFill = d.seg.otherFill), (d.seg.otherFill = x);
              }
              f.push(d.seg);
            }
            o.getHead().remove();
          }
          return n && n.done(), f;
        }
        return e
          ? {
              addRegion: function (e) {
                for (
                  var r, i, o, a = e[e.length - 1], u = 0;
                  u < e.length;
                  u++
                ) {
                  (r = a), (a = e[u]);
                  var c = t.pointsCompare(r, a);
                  0 !== c &&
                    s(
                      ((i = c < 0 ? r : a),
                      (o = c < 0 ? a : r),
                      {
                        id: n ? n.segmentId() : -1,
                        start: i,
                        end: o,
                        myFill: { above: null, below: null },
                        otherFill: null,
                      }),
                      !0
                    );
                }
              },
              calculate: function (e) {
                return c(e, !1);
              },
            }
          : {
              calculate: function (e, t, n, r) {
                return (
                  e.forEach(function (e) {
                    s(i(e.start, e.end, e), !0);
                  }),
                  n.forEach(function (e) {
                    s(i(e.start, e.end, e), !1);
                  }),
                  c(t, r)
                );
              },
            };
      };
    },
    159186: function (e) {
      e.exports = {
        create: function () {
          var e = {
            root: { root: !0, next: null },
            exists: function (t) {
              return null !== t && t !== e.root;
            },
            isEmpty: function () {
              return null === e.root.next;
            },
            getHead: function () {
              return e.root.next;
            },
            insertBefore: function (t, n) {
              for (var r = e.root, i = e.root.next; null !== i; ) {
                if (n(i))
                  return (
                    (t.prev = i.prev),
                    (t.next = i),
                    (i.prev.next = t),
                    void (i.prev = t)
                  );
                (r = i), (i = i.next);
              }
              (r.next = t), (t.prev = r), (t.next = null);
            },
            findTransition: function (t) {
              for (var n = e.root, r = e.root.next; null !== r && !t(r); )
                (n = r), (r = r.next);
              return {
                before: n === e.root ? null : n,
                after: r,
                insert: function (e) {
                  return (
                    (e.prev = n),
                    (e.next = r),
                    (n.next = e),
                    null !== r && (r.prev = e),
                    e
                  );
                },
              };
            },
          };
          return e;
        },
        node: function (e) {
          return (
            (e.prev = null),
            (e.next = null),
            (e.remove = function () {
              (e.prev.next = e.next),
                e.next && (e.next.prev = e.prev),
                (e.prev = null),
                (e.next = null);
            }),
            e
          );
        },
      };
    },
    689048: function (e) {
      e.exports = function (e, t, n) {
        var r = [],
          i = [];
        return (
          e.forEach(function (e) {
            var o = e.start,
              a = e.end;
            if (t.pointsSame(o, a))
              console.warn(
                "PolyBool: Warning: Zero-length segment detected; your epsilon is probably too small or too large"
              );
            else {
              n && n.chainStart(e);
              for (
                var s = { index: 0, matches_head: !1, matches_pt1: !1 },
                  u = { index: 0, matches_head: !1, matches_pt1: !1 },
                  c = s,
                  l = 0;
                l < r.length;
                l++
              ) {
                var f = (m = r[l])[0],
                  d = (m[1], m[m.length - 1]);
                m[m.length - 2];
                if (t.pointsSame(f, o)) {
                  if (w(l, !0, !0)) break;
                } else if (t.pointsSame(f, a)) {
                  if (w(l, !0, !1)) break;
                } else if (t.pointsSame(d, o)) {
                  if (w(l, !1, !0)) break;
                } else if (t.pointsSame(d, a) && w(l, !1, !1)) break;
              }
              if (c === s) return r.push([o, a]), void (n && n.chainNew(o, a));
              if (c === u) {
                n && n.chainMatch(s.index);
                var h = s.index,
                  p = s.matches_pt1 ? a : o,
                  g = s.matches_head,
                  m = r[h],
                  y = g ? m[0] : m[m.length - 1],
                  b = g ? m[1] : m[m.length - 2],
                  v = g ? m[m.length - 1] : m[0],
                  _ = g ? m[m.length - 2] : m[1];
                return (
                  t.pointsCollinear(b, y, p) &&
                    (g
                      ? (n && n.chainRemoveHead(s.index, p), m.shift())
                      : (n && n.chainRemoveTail(s.index, p), m.pop()),
                    (y = b)),
                  t.pointsSame(v, p)
                    ? (r.splice(h, 1),
                      t.pointsCollinear(_, v, y) &&
                        (g
                          ? (n && n.chainRemoveTail(s.index, y), m.pop())
                          : (n && n.chainRemoveHead(s.index, y), m.shift())),
                      n && n.chainClose(s.index),
                      void i.push(m))
                    : void (g
                        ? (n && n.chainAddHead(s.index, p), m.unshift(p))
                        : (n && n.chainAddTail(s.index, p), m.push(p)))
                );
              }
              var x = s.index,
                T = u.index;
              n && n.chainConnect(x, T);
              var M = r[x].length < r[T].length;
              s.matches_head
                ? u.matches_head
                  ? M
                    ? (A(x), k(x, T))
                    : (A(T), k(T, x))
                  : k(T, x)
                : u.matches_head
                ? k(x, T)
                : M
                ? (A(x), k(T, x))
                : (A(T), k(x, T));
            }
            function w(e, t, n) {
              return (
                (c.index = e),
                (c.matches_head = t),
                (c.matches_pt1 = n),
                c === s ? ((c = u), !1) : ((c = null), !0)
              );
            }
            function A(e) {
              n && n.chainReverse(e), r[e].reverse();
            }
            function k(e, i) {
              var o = r[e],
                a = r[i],
                s = o[o.length - 1],
                u = o[o.length - 2],
                c = a[0],
                l = a[1];
              t.pointsCollinear(u, s, c) &&
                (n && n.chainRemoveTail(e, s), o.pop(), (s = u)),
                t.pointsCollinear(s, c, l) &&
                  (n && n.chainRemoveHead(i, c), a.shift()),
                n && n.chainJoin(e, i),
                (r[e] = o.concat(a)),
                r.splice(i, 1);
            }
          }),
          i
        );
      };
    },
    900571: function (e) {
      function t(e, t, n) {
        var r = [];
        return (
          e.forEach(function (e) {
            var i =
              (e.myFill.above ? 8 : 0) +
              (e.myFill.below ? 4 : 0) +
              (e.otherFill && e.otherFill.above ? 2 : 0) +
              (e.otherFill && e.otherFill.below ? 1 : 0);
            0 !== t[i] &&
              r.push({
                id: n ? n.segmentId() : -1,
                start: e.start,
                end: e.end,
                myFill: { above: 1 === t[i], below: 2 === t[i] },
                otherFill: null,
              });
          }),
          n && n.selected(r),
          r
        );
      }
      var n = {
        union: function (e, n) {
          return t(e, [0, 2, 1, 0, 2, 2, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], n);
        },
        intersect: function (e, n) {
          return t(e, [0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 1, 1, 0, 2, 1, 0], n);
        },
        difference: function (e, n) {
          return t(e, [0, 0, 0, 0, 2, 0, 2, 0, 1, 1, 0, 0, 0, 1, 2, 0], n);
        },
        differenceRev: function (e, n) {
          return t(e, [0, 2, 1, 0, 0, 0, 1, 1, 0, 2, 0, 2, 0, 0, 0, 0], n);
        },
        xor: function (e, n) {
          return t(e, [0, 2, 1, 0, 2, 0, 0, 1, 1, 0, 0, 2, 0, 1, 2, 0], n);
        },
      };
      e.exports = n;
    },
    527352: function (e, t, n) {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: !0 });
      var r = n(268748),
        i = [],
        o = function (e) {
          return i.push(e);
        },
        a = function (e) {
          e && (o(e), l(e) || e.children.forEach(a));
        },
        s = function (e) {
          var t = i.pop();
          return (
            t
              ? ((t.children = e),
                (t.height = 1),
                (t.leaf = !0),
                (t.minX = 1 / 0),
                (t.minY = 1 / 0),
                (t.minZ = 1 / 0),
                (t.maxX = -1 / 0),
                (t.maxY = -1 / 0),
                (t.maxZ = -1 / 0))
              : (t = {
                  children: e,
                  height: 1,
                  leaf: !0,
                  minX: 1 / 0,
                  minY: 1 / 0,
                  minZ: 1 / 0,
                  maxX: -1 / 0,
                  maxY: -1 / 0,
                  maxZ: -1 / 0,
                }),
            t
          );
        },
        u = [],
        c = function (e, t) {
          var n = u.pop();
          return (
            n ? ((n.dist = e), (n.node = t)) : (n = { dist: e, node: t }), n
          );
        },
        l = function (e) {
          return e.leaf;
        },
        f = function (e, t) {
          return e.leaf;
        },
        d = function (e, t, n) {
          if (!n) return t.indexOf(e);
          for (var r = 0; r < t.length; r++) if (n(e, t[r])) return r;
          return -1;
        },
        h = function (e) {
          p(e, 0, e.children.length, e);
        },
        p = function (e, t, n, r) {
          var i = r;
          i
            ? ((i.minX = 1 / 0),
              (i.minY = 1 / 0),
              (i.minZ = 1 / 0),
              (i.maxX = -1 / 0),
              (i.maxY = -1 / 0),
              (i.maxZ = -1 / 0))
            : (i = s([]));
          for (var o = t, a = void 0; o < n; o++) (a = e.children[o]), g(i, a);
          return i;
        },
        g = function (e, t) {
          return (
            (e.minX = Math.min(e.minX, t.minX)),
            (e.minY = Math.min(e.minY, t.minY)),
            (e.minZ = Math.min(e.minZ, t.minZ)),
            (e.maxX = Math.max(e.maxX, t.maxX)),
            (e.maxY = Math.max(e.maxY, t.maxY)),
            (e.maxZ = Math.max(e.maxZ, t.maxZ)),
            e
          );
        },
        m = function (e) {
          return (e.maxX - e.minX) * (e.maxY - e.minY) * (e.maxZ - e.minZ);
        },
        y = function (e) {
          return e.maxX - e.minX + (e.maxY - e.minY) + (e.maxZ - e.minZ);
        },
        b = function (e, t) {
          var n = Math.min(e.minX, t.minX),
            r = Math.min(e.minY, t.minY),
            i = Math.min(e.minZ, t.minZ);
          return (
            (Math.max(e.maxX, t.maxX) - n) *
            (Math.max(e.maxY, t.maxY) - r) *
            (Math.max(e.maxZ, t.maxZ) - i)
          );
        },
        v = function (e, t) {
          var n = Math.max(e.minX, t.minX),
            r = Math.max(e.minY, t.minY),
            i = Math.max(e.minZ, t.minZ),
            o = Math.min(e.maxX, t.maxX),
            a = Math.min(e.maxY, t.maxY),
            s = Math.min(e.maxZ, t.maxZ);
          return Math.max(0, o - n) * Math.max(0, a - r) * Math.max(0, s - i);
        },
        _ = function (e, t) {
          return (
            e.minX <= t.minX &&
            e.minY <= t.minY &&
            e.minZ <= t.minZ &&
            t.maxX <= e.maxX &&
            t.maxY <= e.maxY &&
            t.maxZ <= e.maxZ
          );
        };
      (t.intersects = function (e, t) {
        return (
          t.minX <= e.maxX &&
          t.minY <= e.maxY &&
          t.minZ <= e.maxZ &&
          t.maxX >= e.minX &&
          t.maxY >= e.minY &&
          t.maxZ >= e.minZ
        );
      }),
        (t.boxRayIntersects = function (e, t, n, r, i, o, a) {
          var s = (e.minX - t) * i,
            u = (e.maxX - t) * i,
            c = (e.minY - n) * o,
            l = (e.maxY - n) * o,
            f = (e.minZ - r) * a,
            d = (e.maxZ - r) * a,
            h = Math.min(f, d),
            p = Math.max(f, d),
            g = Math.min(c, l),
            m = Math.max(c, l),
            y = Math.min(s, u),
            b = Math.max(s, u),
            v = Math.max(0, y, g, h);
          return Math.min(b, m, p) >= v ? v : 1 / 0;
        });
      var x = function (e, t, n, i, o) {
          for (var a, s = [t, n]; s.length; )
            (n = s.pop()) - (t = s.pop()) <= i ||
              ((a = t + Math.ceil((n - t) / i / 2) * i),
              r(e, a, t, n, o),
              s.push(t, a, a, n));
        },
        T = function (e, t) {
          return e.minX - t.minX;
        },
        M = function (e, t) {
          return e.minY - t.minY;
        },
        w = function (e, t) {
          return e.minZ - t.minZ;
        },
        A = (function () {
          function e(e) {
            void 0 === e && (e = 16),
              (this.maxEntries = Math.max(e, 8)),
              (this.minEntries = Math.max(4, Math.ceil(0.4 * this.maxEntries))),
              this.clear();
          }
          return (
            (e.alloc = function () {
              return this.pool.pop() || new this();
            }),
            (e.free = function (e) {
              e.clear(), this.pool.push(e);
            }),
            (e.prototype.search = function (e) {
              var n = this.data,
                r = [];
              if (!t.intersects(e, n)) return r;
              for (var i = []; n; ) {
                for (var o = 0, a = n.children.length; o < a; o++) {
                  var s = n.children[o];
                  t.intersects(e, s) &&
                    (f(n) ? r.push(s) : _(e, s) ? this._all(s, r) : i.push(s));
                }
                n = i.pop();
              }
              return r;
            }),
            (e.prototype.collides = function (e) {
              var n = this.data;
              if (!t.intersects(e, n)) return !1;
              for (var r = []; n; ) {
                for (var i = 0, o = n.children.length; i < o; i++) {
                  var a = n.children[i];
                  if (t.intersects(e, a)) {
                    if (f(n) || _(e, a)) return !0;
                    r.push(a);
                  }
                }
                n = r.pop();
              }
              return !1;
            }),
            (e.prototype.raycastInv = function (e, n, r, i, o, a, s) {
              void 0 === s && (s = 1 / 0);
              var l = this.data;
              if (i === 1 / 0 && o === 1 / 0 && a === 1 / 0)
                return c(1 / 0, void 0);
              if (t.boxRayIntersects(l, e, n, r, i, o, a) === 1 / 0)
                return c(1 / 0, void 0);
              for (
                var d,
                  h = [c(0, l)],
                  p = function (e, t) {
                    var n = h[e];
                    (h[e] = h[t]), (h[t] = n);
                  },
                  g = function () {
                    var e = h[0],
                      t = h.length - 1;
                    (h[0] = h[t]), (h.length = t);
                    for (var n = 0; ; ) {
                      var r = (n << 1) | 1;
                      if (r >= t) break;
                      var i = r + 1;
                      if (
                        (i < t && h[i].dist < h[r].dist && (r = i),
                        h[n].dist < h[r].dist)
                      )
                        break;
                      p(n, r), (n = r);
                    }
                    return (
                      (function (e) {
                        u.push(e);
                      })(e),
                      e.node
                    );
                  },
                  m = function (e, t) {
                    var n = h.length;
                    for (h.push(c(e, t)); n > 0; ) {
                      var r = (n - 1) >> 1;
                      if (h[r].dist <= h[n].dist) break;
                      p(n, r), (n = r);
                    }
                  },
                  y = s;
                h.length && h[0].dist < y;

              )
                for (var b = 0, v = (l = g()).children.length; b < v; b++) {
                  var _ = l.children[b],
                    x = t.boxRayIntersects(_, e, n, r, i, o, a);
                  if (f(l)) {
                    if (x < y) {
                      if (0 === x) return c(x, _);
                      (y = x), (d = _);
                    }
                  } else m(x, _);
                }
              return c(y < s ? y : 1 / 0, d);
            }),
            (e.prototype.raycast = function (e, t, n, r, i, o, a) {
              return (
                void 0 === a && (a = 1 / 0),
                this.raycastInv(e, t, n, 1 / r, 1 / i, 1 / o, a)
              );
            }),
            (e.prototype.all = function () {
              return this._all(this.data, []);
            }),
            (e.prototype.load = function (e) {
              if (!e || !e.length) return this;
              if (e.length < this.minEntries) {
                for (var t = 0, n = e.length; t < n; t++) this.insert(e[t]);
                return this;
              }
              var r = this.build(e.slice(), 0, e.length - 1, 0);
              if (this.data.children.length)
                if (this.data.height === r.height) this.splitRoot(this.data, r);
                else {
                  if (this.data.height < r.height) {
                    var i = this.data;
                    (this.data = r), (r = i);
                  }
                  this._insert(r, this.data.height - r.height - 1, !0);
                }
              else this.data = r;
              return this;
            }),
            (e.prototype.insert = function (e) {
              return e && this._insert(e, this.data.height - 1), this;
            }),
            (e.prototype.clear = function () {
              return this.data && a(this.data), (this.data = s([])), this;
            }),
            (e.prototype.remove = function (e, t) {
              if (!e) return this;
              for (
                var n, r, i = this.data, o = 0, a = !1, s = [], u = [];
                i || s.length;

              ) {
                if (
                  (i ||
                    ((i = s.pop()),
                    (o = u.pop()),
                    (r = s[s.length - 1]),
                    (a = !0)),
                  l(i) && -1 !== (n = d(e, i.children, t)))
                )
                  return (
                    i.children.splice(n, 1), s.push(i), this.condense(s), this
                  );
                a || l(i) || !_(i, e)
                  ? r
                    ? (o++, (i = r.children[o]), (a = !1))
                    : (i = void 0)
                  : (s.push(i),
                    u.push(o),
                    (o = 0),
                    (r = i),
                    (i = i.children[0]));
              }
              return this;
            }),
            (e.prototype.toJSON = function () {
              return this.data;
            }),
            (e.prototype.fromJSON = function (e) {
              return a(this.data), (this.data = e), this;
            }),
            (e.prototype.build = function (e, t, n, r) {
              var i,
                o = n - t + 1,
                a = this.maxEntries;
              if (o <= a) return (i = s(e.slice(t, n + 1))), h(i), i;
              r ||
                ((r = Math.ceil(Math.log(o) / Math.log(a))),
                (a = Math.ceil(o / Math.pow(a, r - 1)))),
                ((i = s([])).leaf = !1),
                (i.height = r);
              var u = Math.ceil(o / a),
                c = u * Math.ceil(Math.pow(a, 2 / 3)),
                l = u * Math.ceil(Math.pow(a, 1 / 3));
              x(e, t, n, l, T);
              for (var f = t; f <= n; f += l) {
                var d = Math.min(f + l - 1, n);
                x(e, f, d, c, M);
                for (var p = f; p <= d; p += c) {
                  var g = Math.min(p + c - 1, d);
                  x(e, p, g, u, w);
                  for (var m = p; m <= g; m += u) {
                    var y = Math.min(m + u - 1, g);
                    i.children.push(this.build(e, m, y, r - 1));
                  }
                }
              }
              return h(i), i;
            }),
            (e.prototype._all = function (e, t) {
              for (var n = []; e; )
                l(e)
                  ? t.push.apply(t, e.children)
                  : n.push.apply(n, e.children),
                  (e = n.pop());
              return t;
            }),
            (e.prototype.chooseSubtree = function (e, t, n, r) {
              for (var i, o, a; r.push(t), !l(t) && r.length - 1 !== n; ) {
                i = o = 1 / 0;
                for (var s = 0, u = t.children.length; s < u; s++) {
                  var c = t.children[s],
                    f = m(c),
                    d = b(e, c) - f;
                  d < o
                    ? ((o = d), (i = f < i ? f : i), (a = c))
                    : d === o && f < i && ((i = f), (a = c));
                }
                t = a || t.children[0];
              }
              return t;
            }),
            (e.prototype.split = function (e, t) {
              var n = e[t],
                r = n.children.length,
                i = this.minEntries;
              this.chooseSplitAxis(n, i, r);
              var o = this.chooseSplitIndex(n, i, r),
                a = s(n.children.splice(o, n.children.length - o));
              (a.height = n.height),
                (a.leaf = n.leaf),
                h(n),
                h(a),
                t ? e[t - 1].children.push(a) : this.splitRoot(n, a);
            }),
            (e.prototype.splitRoot = function (e, t) {
              (this.data = s([e, t])),
                (this.data.height = e.height + 1),
                (this.data.leaf = !1),
                h(this.data);
            }),
            (e.prototype.chooseSplitIndex = function (e, t, n) {
              for (var r, i = 1 / 0, o = 1 / 0, a = t; a <= n - t; a++) {
                var s = p(e, 0, a),
                  u = p(e, a, n),
                  c = v(s, u),
                  l = m(s) + m(u);
                c < i
                  ? ((i = c), (r = a), (o = l < o ? l : o))
                  : c === i && l < o && ((o = l), (r = a));
              }
              return r;
            }),
            (e.prototype.chooseSplitAxis = function (e, t, n) {
              var r = this.allDistMargin(e, t, n, T),
                i = this.allDistMargin(e, t, n, M),
                o = this.allDistMargin(e, t, n, w);
              r < i && r < o
                ? e.children.sort(T)
                : i < r && i < o && e.children.sort(M);
            }),
            (e.prototype.allDistMargin = function (e, t, n, r) {
              e.children.sort(r);
              for (
                var i = p(e, 0, t), o = p(e, n - t, n), a = y(i) + y(o), s = t;
                s < n - t;
                s++
              ) {
                var u = e.children[s];
                g(i, u), (a += y(i));
              }
              for (s = n - t - 1; s >= t; s--) {
                u = e.children[s];
                g(o, u), (a += y(o));
              }
              return a;
            }),
            (e.prototype.adjustParentBBoxes = function (e, t, n) {
              for (var r = n; r >= 0; r--) g(t[r], e);
            }),
            (e.prototype.condense = function (e) {
              for (var t = e.length - 1, n = void 0; t >= 0; t--)
                0 === e[t].children.length
                  ? t > 0
                    ? ((n = e[t - 1].children).splice(n.indexOf(e[t]), 1),
                      o(e[t]))
                    : this.clear()
                  : h(e[t]);
            }),
            (e.prototype._insert = function (e, t, n) {
              var r = [],
                i = this.chooseSubtree(e, this.data, t, r);
              for (
                i.children.push(e), g(i, e);
                t >= 0 && r[t].children.length > this.maxEntries;

              )
                this.split(r, t), t--;
              this.adjustParentBBoxes(e, r, t);
            }),
            (e.pool = []),
            e
          );
        })();
      t.RBush3D = A;
    },
    268748: function (e) {
      e.exports = (function () {
        "use strict";
        function e(e, n, i, o, a) {
          t(e, n, i || 0, o || e.length - 1, a || r);
        }
        function t(e, r, i, o, a) {
          for (; o > i; ) {
            if (o - i > 600) {
              var s = o - i + 1,
                u = r - i + 1,
                c = Math.log(s),
                l = 0.5 * Math.exp((2 * c) / 3),
                f =
                  0.5 *
                  Math.sqrt((c * l * (s - l)) / s) *
                  (u - s / 2 < 0 ? -1 : 1);
              t(
                e,
                r,
                Math.max(i, Math.floor(r - (u * l) / s + f)),
                Math.min(o, Math.floor(r + ((s - u) * l) / s + f)),
                a
              );
            }
            var d = e[r],
              h = i,
              p = o;
            for (n(e, i, r), a(e[o], d) > 0 && n(e, i, o); h < p; ) {
              for (n(e, h, p), h++, p--; a(e[h], d) < 0; ) h++;
              for (; a(e[p], d) > 0; ) p--;
            }
            0 === a(e[i], d) ? n(e, i, p) : n(e, ++p, o),
              p <= r && (i = p + 1),
              r <= p && (o = p - 1);
          }
        }
        function n(e, t, n) {
          var r = e[t];
          (e[t] = e[n]), (e[n] = r);
        }
        function r(e, t) {
          return e < t ? -1 : e > t ? 1 : 0;
        }
        return e;
      })();
    },
    555956: function (e, t) {
      "use strict";
      var n = function (e, t, r = {}) {
        (this.data = void 0),
          (this.columns = void 0),
          (this.valueMaps = void 0),
          (this.storedResults = void 0),
          (this.lastUpdated = void 0),
          (this.validScales = ["nominal", "ordinal", "interval", "metric"]),
          (this.zTable = void 0),
          (this.factorials = [
            1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800,
            479001600, 6227020800, 87178291200, 1307674368e3, 20922789888e3,
            355687428096e3, 6402373705728e3, 0x1b02b9306890000,
            243290200817664e4, 0x46e7261f127a0000,
          ]),
          (this.defaultOptions = {
            epsilon: 1e-5,
            excludeColumns: ["ID", "id"],
            incompleteBetaIterations: 40,
            incompleteGammaIterations: 80,
            maxBarnardsN: 200,
            spougeConstant: 40,
            suppressWarnings: !1,
            zTableIterations: 25,
          }),
          (this.init = function (e, t, n = {}) {
            for (var r in ("undefined" === typeof e &&
              this.errorMessage("No data was supplied."),
            this.defaultOptions)) {
              var i =
                "object" === typeof n &&
                this.has(n, r) &&
                this.has(this.defaultOptions, r)
                  ? n[r]
                  : this.defaultOptions[r];
              Object.defineProperty(this, r, { value: i, writable: !1 });
            }
            return "undefined" !== typeof e && this.updateData(e, t), this;
          }),
          (this.updateData = function (e, t) {
            this.addData(e),
              "object" === typeof t && this.assignValueMap(t),
              e.constructor === Array &&
                "object" !== typeof t &&
                (this.errorMessage(
                  "It is strongly encouraged to initalise statistics.js with a variable table that defines the scale of measurement of each variable (e.g. nominal, metric.). All variables will be assumed as nominal and subsequent analyses will likely be flawed."
                ),
                i.apply(this));
          }),
          (this.addData = function (e) {
            try {
              let t = typeof e;
              if (("string" !== t && "object" !== t) || null === e)
                throw (
                  "Input variable data is neither an object nor a JSON encoded string. The variable type is " +
                  t +
                  ". The data could not be properly imported."
                );
              return (
                "string" === t && (e = JSON.parse(e)),
                (this.data = this.data ? this.data.concat(e) : e),
                (this.lastUpdated = Date.now()),
                !0
              );
            } catch (t) {
              return this.errorMessage(t);
            }
          }),
          (this.addRow = function (e) {
            if ("undefined" === typeof e)
              return this.errorMessage("Add Row: No data was given.");
            let t = "undefined" !== typeof this.data ? this.data : [];
            return (
              t.push(e), (this.data = t), (this.lastUpdated = Date.now()), !0
            );
          }),
          (this.removeRow = function (e, t = !1) {
            if ("undefined" === typeof e)
              return this.errorMessage("Remove row: No index was given.");
            let n = this.data,
              r = this.has(this.columns, "id") || this.has(this.columns, "ID");
            if (t && r) {
              let e = -1,
                r = 0;
              for (; -1 === e && r < n.length; )
                ((this.has(n[r], "id") && n[r].id === t) ||
                  (this.has(n[r], "ID") && n[r].ID === t)) &&
                  (e = r);
              n.splice(r, 1);
            } else {
              if (
                (t &&
                  !r &&
                  this.errorMessage(
                    'Remove row: There is no column "id" or "ID". The index ' +
                      e +
                      " will be treated as the number of the row, starting at 0."
                  ),
                e > n.length - 1)
              )
                return this.errorMessage(
                  "Remove row: The stored data has only " +
                    n.length +
                    " rows and index " +
                    e +
                    " is too large. Indexes start at 0."
                );
              n.splice(e, 1);
            }
            return (this.data = n), (this.lastUpdated = Date.now()), !0;
          }),
          (this.reset = function () {
            try {
              return (
                (this.data = void 0),
                (this.storedResults = void 0),
                (this.lastUpdated = Date.now()),
                !0
              );
            } catch (e) {
              this.errorMessage(e.message);
            }
          }),
          (this.assignValueMap = function (e) {
            let t = {},
              n = {};
            for (var r in e) {
              if (!this.has(e, r) || this.excludeColumns.indexOf(r) > -1)
                continue;
              let i,
                o = e[r],
                a = o;
              if (
                ("object" === typeof o &&
                  this.has(o, "scale") &&
                  (this.has(o, "valueMap") && (i = o.valueMap), (a = o.scale)),
                "undefined" !== typeof i ||
                  ("nominal" !== a && "ordinal" !== a) ||
                  (i = this.getUniqueValues(this.data.map((e) => e[r]))),
                "undefined" !== typeof i && (n[r] = i),
                this.validScales.indexOf(a) > -1)
              )
                t[r] = a;
              else {
                t[r] = "nominal";
                let e =
                  '"' +
                  a +
                  '" scale for variable "' +
                  r +
                  '" is invalid. It was assumed as nominal. Valid scales of measurement include: ' +
                  this.validScales.join(", ");
                this.errorMessage(e);
              }
            }
            (this.columns = t), (this.valueMaps = n), this.sanitizeColumns();
          });
        var i = function () {
          let e = {},
            t = ["th", "st", "nd", "rd"];
          for (var n = 0; n < this.data.length; n++)
            if ("object" !== typeof this.data[n]) {
              let e = n % 100,
                r = n + (t[(e - 20) % 10] || t[e] || t[0]);
              this.errorMessage(
                "The " + r + " row was ignored because it is not an object."
              );
            } else
              for (var r in Object.keys(this.data[n]))
                !r in e && (e[r] = "nominal");
          (this.columns = e), (this.lastUpdated = Date.now());
        };
        (this.sanitizeColumns = function () {
          let e = this.columns,
            t = this.data;
          for (var n = 0; n < t.length; n++) {
            let i = t[n];
            for (var r in e) {
              let o = i[r],
                a = o;
              switch (e[r]) {
                case "metric":
                case "interval":
                  a = this.isNumeric(o) ? o : NaN;
                  break;
                case "ordinal":
                  if ("undefined" !== typeof this.valueMaps) {
                    let e = this.valueMaps[r];
                    "undefined" !== typeof e && (a = e.indexOf(o));
                  }
              }
              t[n][r] = a;
            }
          }
          (this.data = t), (this.lastUpdated = Date.now());
        }),
          (this.setScale = function (e, t) {
            return "undefined" === typeof t
              ? (this.errorMessage(
                  "This method needs to be called with valid values for both the variable and the scale of measurement to set."
                ),
                !1)
              : this.has(this.columns, e)
              ? -1 === this.validScales.indexOf(t)
                ? (this.errorMessage(
                    '"' +
                      t +
                      '" is not a valid scale of measurement. Valid scales include: ' +
                      this.validScales.join(", ")
                  ),
                  !1)
                : ((this.columns[e] = t), !0)
              : (this.errorMessage('There is no variable "' + e + '" defined.'),
                !1);
          }),
          (this.getScale = function (e) {
            if ("undefined" !== typeof e && this.has(this.columns, e))
              return this.columns[e];
          }),
          (this.getValueMap = function (e) {
            if ("undefined" !== typeof e && this.has(this.columns, e))
              return this.valueMaps[e];
          }),
          (this.applyValueMap = function (e, t) {
            let n = this.getValueMap(e);
            if ("ordinal" === this.getScale(e) && "undefined" !== typeof n)
              return (
                "undefined" === t && (t = this.getColumn(e)), t.map((e) => n[e])
              );
          }),
          (this.checkLastUpdated = function (e, t) {
            return (
              !(
                "" === e ||
                !this.has(this.columns, e) ||
                "undefined" === typeof e ||
                "undefined" === typeof t
              ) &&
              ("undefined" === typeof this.storedResults ||
                "undefined" === typeof this.storedResults[e] ||
                "undefined" === typeof this.storedResults[e][t] ||
                "undefined" === typeof this.storedResults[e][t].lastUpdated ||
                this.storedResults[e][t].lastUpdated < this.lastUpdated)
            );
          }),
          (this.updateStatistics = function (e, t, n) {
            if (
              "undefined" !== typeof e &&
              "undefined" !== typeof t &&
              "undefined" !== typeof n
            ) {
              var r = { value: n, lastUpdated: Date.now() };
              "undefined" === typeof this.storedResults
                ? (this.storedResults = { column: { parameter: r } })
                : "undefined" === typeof this.storedResults[e]
                ? (this.storedResults[e] = { parameter: r })
                : (this.storedResults[e][t] = r);
            }
          }),
          (this.getStatistics = function (e, t) {
            if (
              "undefined" !== typeof e &&
              "undefined" !== typeof t &&
              this.has(this.columns, e) &&
              "undefined" !== typeof this.storedResults[e][t].value
            )
              return this.storedResults[e][t].value;
          }),
          (this.getColumn = function (e) {
            return "undefined" === typeof e
              ? this.errorMessage(
                  "Get column: No column to sort was specified."
                )
              : this.has(this.columns, e)
              ? this.data.map((t) => t[e])
              : this.errorMessage(
                  'Get column: The column "' + e + '" was not found.'
                );
          }),
          (this.sortColumn = function (e, t = "asc") {
            return "undefined" === typeof e
              ? this.errorMessage(
                  "Sort column: No column to sort was specified."
                )
              : this.has(this.columns, e)
              ? this.sort(this.getColumn(e), t)
              : this.errorMessage(
                  'Sort column: The column "' + e + '" was not found.'
                );
          }),
          (this.sortDataByColumn = function (
            e,
            {
              data: t = this.data,
              order: n = "asc",
              changeOriginal: r = !1,
            } = {}
          ) {
            return t !== this.data ||
              ("undefined" !== typeof e && this.has(this.columns, e))
              ? t === this.data || this.has(t[0], e)
                ? (function (e, t, n, r) {
                    return t.sort(function (t, i) {
                      return r.isNumeric(t[e]) && r.isNumeric(i[e])
                        ? ("asc" === n ? 1 : -1) * (t[e] - i[e])
                        : 0;
                    });
                  })(e, r ? t : this.deepCopy(t), n, this)
                : this.errorMessage(
                    'Sort data by column: The column "' +
                      e +
                      '" does not exist.'
                  )
              : this.errorMessage(
                  "Sort data by column: No column was specified or this column does not exist."
                );
          }),
          (this.sort = function (e, t = "asc") {
            return "undefined" === typeof e
              ? this.errorMessage("Sort: No values given.")
              : e.constructor !== Array || 0 === e.length
              ? this.errorMessage(
                  "Sort: No array or an empty array of values was given."
                )
              : (function (e, t, n) {
                  return e.sort((e, r) =>
                    t.isNumeric(e) && t.isNumeric(r)
                      ? ("asc" === n ? 1 : -1) * (e - r)
                      : 0
                  );
                })(this.deepCopy(e), this, t);
          }),
          (this.getUniqueValues = function (e) {
            if ("undefined" === typeof e)
              return this.errorMessage("Get unique values: No values given.");
            let t = this.validateInput(e, "nominal", "get unique values");
            return !1 !== t
              ? this.sort(t.data.filter((e, n) => t.data.indexOf(e) === n))
              : void 0;
          }),
          (this.reduceToPairs = function (e, t) {
            if ("undefined" === typeof t || "undefined" === typeof e)
              return this.errorMessage(
                "This method requires two variables to be compared."
              );
            let n = this.validateInput(e, "nominal");
            if (!1 === n) return;
            let r = this.validateInput(t, "nominal");
            if (!1 === r) return;
            let i = n.length >= r.length ? n.length : r.length,
              o = [],
              a = [],
              s = [],
              u = "string" === typeof e ? e : "first",
              c = "string" === typeof t ? t : "second";
            for (var l = 0; l < i; l++) {
              let e = n.data[l],
                t = r.data[l];
              if (
                void 0 !== typeof e &&
                void 0 !== typeof t &&
                !isNaN(e) &&
                !isNaN(t)
              ) {
                o.push(e), a.push(t);
                let n = {};
                (n[u] = e), (n[c] = t), s.push(n);
              }
            }
            return {
              length: o.length,
              missings: i - o.length,
              valuesFirst: o,
              valuesSecond: a,
              valuesCombined: s,
            };
          }),
          (this.validateInput = function (e, t = "metric", n = "") {
            let r = {};
            if (
              "string" !== typeof e &&
              (e.constructor !== Array ||
                (e.constructor === Array && 0 == e.length))
            )
              return (
                this.errorMessage(
                  "No properly formatted data was supplied. Specify a column by its name (string) or supply an array of values."
                ),
                !1
              );
            if ("string" === typeof e && "" !== e)
              (r.data = this.getColumn(e)),
                (r.scale = this.getScale(e)),
                (r.length = r.data.length);
            else {
              if (!(e.constructor === Array && e.length > 0)) return !1;
              if (!1 === this.validateData(e, t)) return !1;
              (r.data = e), (r.scale = t), (r.length = r.data.length);
            }
            if (0 == r.length)
              return (
                this.errorMessage(
                  "The supplied data or the data of the supplied column contains no values."
                ),
                !1
              );
            if (!o.apply(this, [r.scale, t])) {
              let e = this.validScales
                  .slice(this.validScales.indexOf(t))
                  .join(", "),
                i =
                  "" !== n
                    ? n.charAt(0).toUpperCase() + n.slice(1)
                    : "This statistical method";
              return (
                (i +=
                  " is only defined for these scales of measurement: " +
                  e +
                  ". The scale of the supplied data is " +
                  r.scale +
                  "."),
                this.errorMessage(i),
                !1
              );
            }
            return r;
          }),
          (this.validateData = function (t, n = "metric") {
            if ("undefined" === typeof t || e.constructor !== Array)
              return this.errorMessage(
                "Validate data: Specify an array storing the values to be validated."
              );
            if ("nominal" === n) return !0;
            for (var r = 0; r < t.length; r++)
              if (!this.isNumeric(t[r]))
                return (
                  this.errorMessage(
                    "Validate data: The supplied data contains non-numeric values: " +
                      t[r] +
                      " at index " +
                      r
                  ),
                  !1
                );
            return !0;
          }),
          (this.isNumeric = function (e) {
            return "undefined" !== typeof e
              ? !Array.isArray(e) && !isNaN(parseFloat(e)) && isFinite(e)
              : void 0;
          });
        var o = function (e, t) {
          return this.validScales.indexOf(e) >= this.validScales.indexOf(t);
        };
        return (
          (this.errorMessage = function (e) {
            if (!this.suppressWarnings)
              try {
                throw new TypeError("string" == typeof e ? e : e.message);
              } catch (t) {
                console.error("statistics.js: " + t.message);
              }
          }),
          (this.has = function (e, t) {
            return Object.prototype.hasOwnProperty.call(e, t);
          }),
          (this.deepCopy = function (e) {
            let t = Array.isArray(e) ? [] : {};
            for (let n in e) {
              let r = e[n];
              t[n] = "object" === typeof r ? this.deepCopy(r) : r;
            }
            return t;
          }),
          (n.prototype.assignRanks = function (
            e,
            {
              data: t = this.data,
              order: n = "asc",
              handleTiedValues: r = "mean",
              returnFrequencies: i = !1,
            } = {}
          ) {
            if ("undefined" === typeof e)
              return this.errorMessage(
                "Assign ranks: You need to specify a column to be ranked."
              );
            let o = this.deepCopy(
                this.sortDataByColumn(e, {
                  data: t,
                  order: n,
                  changeOriginal: !1,
                })
              ),
              a = {};
            for (var s = 0; s < o.length; s++) {
              let t = o[s][e];
              a[t] = a[t] ? a[t] + 1 : 1;
            }
            let u = 0,
              c = [];
            for (s = 0; s < o.length; s++) {
              let t = o[s][e],
                n = s + 1,
                i = "rank-" + e;
              1 === a[t]
                ? (u = 0)
                : "mean" === r
                ? (u++, (n = s + a[t] / 2 - u + 1.5))
                : "random" === r &&
                  (0 === c.length &&
                    (c = Array.from(new Array(a[t]), (e, t) => t + s + 1)),
                  (n = c[Math.floor(Math.random() * c.length)]),
                  c.splice(c.indexOf(n), 1)),
                u == a[t] && (u = 0),
                (o[s][i] = n);
            }
            return i ? { data: o, frequencies: a } : o;
          }),
          (n.prototype.contingencyTable = function (e, t) {
            if ("undefined" === typeof t)
              return this.errorMessage(
                "A contingency table requires two columns to analyze."
              );
            if (!this.has(this.columns, e))
              return this.errorMessage(
                'There is no variable "' + e + '" defined.'
              );
            if (!this.has(this.columns, t))
              return this.errorMessage(
                'There is no variable "' + t + '" defined.'
              );
            let n = this.getScale(e),
              r = this.getScale(t);
            if (
              ("nominal" !== n && "ordinal" !== n) ||
              ("nominal" !== r && "ordinal" !== r)
            )
              return this.errorMessage(
                "Both variables need to be nominal for. They are " +
                  n +
                  " and " +
                  r +
                  "."
              );
            let i = this.getValueMap(e),
              o = this.getValueMap(t);
            if ("undefined" === typeof i || "undefined" === typeof o)
              return this.errorMessage(
                "Contingency table: There are no valid values."
              );
            let a = { total: { total: 0 } },
              s = this.data;
            for (var u = 0; u < s.length; u++) {
              let n = s[u][e],
                r = s[u][t];
              "undefined" === typeof a[n] && (a[n] = { total: 0 }),
                (a[n][r] = "undefined" !== typeof a[n][r] ? a[n][r] + 1 : 1),
                (a.total[n] =
                  "undefined" !== typeof a.total[n] ? a.total[n] + 1 : 1),
                (a.total[r] =
                  "undefined" !== typeof a.total[r] ? a.total[r] + 1 : 1),
                a[n].total++,
                a.total.total++;
            }
            let c = { detailled: a };
            return (
              i.length <= 2 &&
                o.length <= 2 &&
                ((c.a = a[i[0]][o[0]] || 0),
                (c.b = a[i[0]][o[1]] || 0),
                (c.c = a[i[1]][o[0]] || 0),
                (c.d = a[i[1]][o[1]] || 0)),
              c
            );
          }),
          (this.showData = function (e) {
            if ("string" === typeof e && this.has(this.columns, e))
              "ordinal" === this.getScale(e)
                ? console.log(this.applyValueMap(e))
                : console.log(this.getColumn(e));
            else if ("undefined" === typeof e) {
              let e = this.valueMaps,
                r = this.data;
              if ("undefined" !== typeof e)
                for (var t in e)
                  if (
                    this.has(e, t) &&
                    "undefined" !== typeof e[t] &&
                    "ordinal" === this.getScale(t)
                  )
                    for (var n = 0; n < r.length; n++) r[n][t] = e[t][r[n][t]];
              console.table(r);
            } else console.log(e);
          }),
          (this.scatterPlot = function (
            e = this.data,
            {
              canvas: t = null,
              xAxis: n = null,
              yAxis: r = null,
              width: i = null,
              height: o = null,
              dotRadius: a = 4,
              showGrid: s = !1,
              minNumberXMarks: u = 8,
              minNumberYMarks: c = 8,
              background: l = "#FFFFFF",
              dotColor: f = "#000000",
              gridColor: d = "#CCCCCC",
              axisColor: h = "#000000",
            } = {}
          ) {
            if ("undefined" === typeof e)
              return this.errorMessage("Scatter plot: No data given.");
            if (e.constructor !== Array || 0 === e.length)
              return this.errorMessage(
                "Scotter plot: Data is not an array or empty."
              );
            if (u <= 0 || c <= 0)
              return this.errorMessage(
                "Scotter plot: The number of line to plot must be larger than 0."
              );
            let p = typeof e[0];
            if ("object" === p && (!n || !r))
              return this.errorMessage(
                "Scatter plot: The variables for the x and y axes need to be supplied."
              );
            let g = {},
              m = 1 / 0,
              y = -1 / 0,
              b = 1 / 0,
              v = -1 / 0,
              _ = 0;
            for (var x = 0; x < e.length; x++) {
              let t,
                i,
                o = [];
              if ("number" === p || e[0].constructor === Array) {
                if (!this.isNumeric(e[x])) continue;
                (t = x), (i = e[x]);
              } else if ("object" === p) {
                if (
                  !this.has(e[x], n) ||
                  !this.has(e[x], r) ||
                  !this.isNumeric(e[x][n]) ||
                  !this.isNumeric(e[x][r])
                )
                  continue;
                (t = e[x][n]), (i = e[x][r]);
              }
              this.has(g, t) ? (o = g[t]) : (_ += 1),
                o.push(i),
                (g[t] = o),
                t > y && (y = t),
                t < m && (m = t),
                i > v && (v = i),
                i < b && (b = i);
            }
            m / y < 0.1 && (m = 0),
              b / v < 0.1 && (b = 0),
              null === t && (t = document.createElement("canvas"));
            let T = t.getContext("2d"),
              M = i ? 0.1 * i : 0.1 * (y - m);
            for (var w in ((i = (i ? i - 2 * M : y - m) + 2 * a) < 400 &&
              (i = 400),
            (o = (o ? o - 2 * M : v - b) + 2 * a) < 400 && (o = 400),
            M < 40 && (M = 40),
            (t.width = i),
            (t.height = o),
            (T.fillStyle = "transparent"),
            T.fillRect(0, 0, i, o),
            (T.fillStyle = f),
            g))
              for (var A = 0; A < g[w].length; A++) {
                let e = ((w - m) * (i - a)) / (y - m),
                  t = o - ((g[w][A] - b) * (o - a)) / (v - b) - a;
                T.fillRect(e, t, a, a);
              }
            const k = function (e, t, n, r, i, o = h) {
              (e.strokeStyle = o),
                e.beginPath(),
                e.moveTo(Math.floor(t), Math.floor(n)),
                e.lineTo(Math.floor(r), Math.floor(i)),
                e.stroke(),
                (e.strokeStyle = h);
            };
            let E = document.createElement("canvas"),
              P = E.getContext("2d"),
              C = i + 2 * M - 2 * a,
              L = o + 2 * M - 2 * a;
            (E.width = C),
              (E.height = L),
              (P.fillStyle = l),
              P.fillRect(0, 0, C, L),
              (P.fillStyle = h),
              (P.font = 0.2 * M + "px Arial"),
              (P.textAlign = "center"),
              (P.textBaseline = "middle");
            let I = Math.round((y - m) / u),
              S =
                I >= 1
                  ? Math.pow(10, parseInt(I).toString().length - 1)
                  : Math.pow(10, -2);
            I = Math.round(I / S) * S;
            let O = 0,
              N = 0,
              F = 0;
            if (I > 0)
              for (x = 0; x < u || (O <= y && N <= i - 2 * M); x++)
                (O = Math.round(m / S) * S + x * I),
                  (N = 0.5 * M + ((O - m) * (i - a)) / (y - m)),
                  N > C - 0.5 * M ||
                    N < 0.5 * M ||
                    (k(P, N, L - 0.4 * M, N, L - 0.6 * M),
                    s && k(P, N, L - 0.6 * M, N, 0.5 * M, d),
                    P.fillText(O, N, L - 0.2 * M));
            let D = (v - b) / c,
              R =
                D >= 1
                  ? Math.pow(10, parseInt(D).toString().length - 1)
                  : Math.pow(10, -2);
            if (((D = Math.round(D / R) * R), (O = 0), D > 0))
              for (x = 0; x < c || (O <= v && F <= o - 2 * M); x++)
                (O = Math.round(b / R) * R + x * D),
                  (F = 1.5 * M - 2 * a + o - ((O - b) * (o - a)) / (v - b)),
                  F > L - 0.5 * M ||
                    F < 0.5 * M ||
                    (k(P, 0.4 * M, F, 0.6 * M, F),
                    s && k(P, 0.6 * M, F, i + M - 2 * a, F, d),
                    P.fillText(O, 0.2 * M, F));
            return (
              k(P, 0.5 * M, L - 0.5 * M, C - M, L - 0.5 * M),
              k(P, 0.5 * M, L - 0.5 * M, 0.5 * M, 0.5 * M),
              P.drawImage(t, 0.5 * M - 0.5 * a, 1.5 * M - 1.5 * a),
              T.drawImage(E, 0, 0, i, o),
              t
            );
          }),
          this.init(e, t, r)
        );
      };
      e.exports && (t = e.exports = n),
        (t.Statistics = n),
        (n.prototype.mean = function (e) {
          return "undefined" !== typeof e ? this.arithmeticMean(e) : void 0;
        }),
        (n.prototype.arithmeticMean = function (e) {
          if ("undefined" === typeof e)
            return this.errorMessage("Arithmetic mean: No data was supplied.");
          if ("string" === typeof e && !1 === this.checkLastUpdated(e, "mean"))
            return this.getStatistics(e, "mean");
          let t = this.validateInput(e, "interval", "arithmetic mean");
          if (!1 === t) return;
          let n = this.sumExact(t.data) / t.length;
          return (
            "string" === typeof e && this.updateStatistics(e, "mean", n), n
          );
        }),
        (n.prototype.geometricMean = function (e) {
          if ("undefined" === typeof e)
            return this.errorMessage("Geometric mean: No data was supplied.");
          if (
            "string" === typeof e &&
            !1 === this.checkLastUpdated(e, "geometricMean")
          )
            return this.getStatistics(e, "geometricMean");
          let t = this.validateInput(e, "metric", "geometric mean");
          if (!1 === t) return;
          let n,
            r = !1;
          return (
            (n = t.data.reduce((e, t) => (t > 0 ? e * t : ((r = !0), e)), 1)),
            !r && t.length > 0
              ? (n = Math.pow(n, 1 / t.length))
              : (this.errorMessage(
                  "Geometric mean is not defined because the data contains non-positive values."
                ),
                (n = void 0)),
            "string" === typeof e &&
              this.updateStatistics(e, "geometricMean", n),
            n
          );
        }),
        (n.prototype.harmonicMean = function (e) {
          if ("undefined" === typeof e)
            return this.errorMessage("Harmonic mean: No data was supplied.");
          if (
            "string" === typeof e &&
            !1 === this.checkLastUpdated(e, "harmonicMean")
          )
            return this.getStatistics(e, "harmonicMean");
          let t = this.validateInput(e, "metric", "harmonicMean");
          if (!1 === t) return;
          let n = !1,
            r = !1,
            i = t.data.reduce(
              (e, t) =>
                t < 0 ? ((r = !0), 0) : 0 !== t ? e + 1 / t : ((n = !0), 0),
              0
            );
          return (
            (i = n ? 0 : t.length / i),
            (i = r ? void 0 : i),
            "string" === typeof e &&
              this.updateStatistics(e, "harmonicMean", i),
            i
          );
        }),
        (n.prototype.rootMeanSquare = function (e) {
          if ("undefined" === typeof e)
            return this.errorMessage("Root mean square: No data was supplied.");
          if (
            "string" === typeof e &&
            !1 === this.checkLastUpdated(e, "rootMeanSquare")
          )
            return this.getStatistics(e, "rootMeanSquare");
          let t = this.validateInput(e, "interval", "root mean square");
          if (!1 === t) return;
          let n = Math.sqrt(t.data.reduce((e, t) => e + t * t, 0) / t.length);
          return (
            "string" === typeof e &&
              this.updateStatistics(e, "rootMeanSquare", n),
            n
          );
        }),
        (n.prototype.cubicMean = function (e) {
          if ("undefined" === typeof e)
            return this.errorMessage("Cubic mean: No data was supplied.");
          if (
            "string" === typeof e &&
            !1 === this.checkLastUpdated(e, "cubicMean")
          )
            return this.getStatistics(e, "cubicMean");
          let t = this.validateInput(e, "interval", "cubic mean");
          if (!1 === t) return;
          let n = t.data.reduce((e, t) => e + t * t * t, 0);
          return (
            (n =
              n >= 0 && t.length > 0 ? Math.pow(n / t.length, 1 / 3) : void 0),
            "string" === typeof e && this.updateStatistics(e, "cubicMean", n),
            n
          );
        }),
        (n.prototype.winsorisedMean = function (e, t = 0.2) {
          if ("undefined" === typeof e)
            return this.errorMessage("Winsorised mean: No data was supplied.");
          if (t < 0 || t > 0.5)
            return this.errorMessage(
              "winsorisedMean should be called with a percentage value within the range of [0, 0.5]."
            );
          if (0.5 === t) return this.median(e);
          let n = this.validateInput(
            e,
            "interval",
            "Winsorised (truncated) mean"
          );
          if (!1 === n) return;
          let r = Math.floor(n.length * t),
            i = this.sort(n.data).slice(r, n.length - r);
          return (
            (i = Array(r)
              .fill(i[0])
              .concat(i)
              .concat(Array(r).fill(i[i.length - 1]))),
            this.sumExact(i) / n.length
          );
        }),
        (n.prototype.gastwirthCohenMean = function (
          e,
          { alpha: t = 0.25, lambda: n = 0.25 } = {}
        ) {
          if ("undefined" === typeof e)
            return this.errorMessage(
              "Gastwirth-Cohen mean: No data was supplied."
            );
          if (!1 === this.validateInput(e, "ordinal", "Gastwirth-Cohen Mean"))
            return;
          if (!this.isNumeric(t) || t < 0 || t > 0.5)
            return this.errorMessage(
              "Gastwirth-Cohen mean should be called with an alpha value within the range of [0, 0.5]."
            );
          if (!this.isNumeric(n) || n < 0 || n > 0.5)
            return this.errorMessage(
              "Gastwirth-Cohen mean should be called with a lambda value within the range of [0, 0.5]."
            );
          let r,
            i = this.quantile(e, t),
            o = this.quantile(e, 1 - t),
            a = this.median(e);
          return (
            "undefined" !== typeof i &&
              "undefined" !== typeof o &&
              "undefined" !== typeof a &&
              (r = n * (i + o) + (1 - 2 * n) * a),
            r
          );
        }),
        (n.prototype.midRange = function (e) {
          if ("undefined" === typeof e)
            return this.errorMessage("Mid-range: No data was supplied.");
          if (!1 === this.validateInput(e, "interval", "mid-range")) return;
          let t = this.minimum(e),
            n = this.maximum(e);
          return "undefined" !== typeof t && "undefined" !== typeof n
            ? 0.5 * (t + n)
            : void 0;
        }),
        (n.prototype.median = function (e) {
          if ("undefined" === typeof e)
            return this.errorMessage("Median: No data was supplied.");
          if (
            "string" === typeof e &&
            !1 === this.checkLastUpdated(e, "median")
          )
            return this.getStatistics(e, "median");
          let t = this.quantile(e, 0.5);
          return (
            "string" === typeof e && this.updateStatistics(e, "median", t), t
          );
        }),
        (n.prototype.mode = function (e) {
          if ("undefined" === typeof e)
            return this.errorMessage("Mode: No data was supplied.");
          if ("string" === typeof e && !1 === this.checkLastUpdated(e, "mode"))
            return this.getStatistics(e, "mode");
          let t = this.validateInput(e, "nominal", "mode");
          if (!1 === t) return;
          let n = t.data,
            r = [],
            i = [n[0]],
            o = 1;
          for (var a = 1; a < t.length; a++) {
            let e = n[a];
            (r[e] = null == r[e] ? 1 : r[e] + 1),
              r[e] > o ? ((i = [e]), (o = r[e])) : r[e] === o && i.push(e);
          }
          return (
            1 === i.length && (i = i[0]),
            "string" === typeof e && this.updateStatistics(e, "mode", i),
            i
          );
        }),
        (n.prototype.minimum = function (e) {
          if ("undefined" === typeof e)
            return this.errorMessage("Minimum: No data was supplied.");
          if (
            "string" === typeof e &&
            !1 === this.checkLastUpdated(e, "minimum")
          )
            return this.getStatistics(e, "minimum");
          let t = this.validateInput(e, "ordinal", "minimum");
          if (!1 === t) return;
          let n = 1 / 0,
            r = t.length;
          for (; r--; ) t.data[r] < n && (n = t.data[r]);
          return (
            "string" === typeof e && this.updateStatistics(e, "minimum", n), n
          );
        }),
        (n.prototype.maximum = function (e) {
          if ("undefined" === typeof e)
            return this.errorMessage("Maximum: No data was supplied.");
          if (
            "string" === typeof e &&
            !1 === this.checkLastUpdated(e, "maximum")
          )
            return this.getStatistics(e, "maximum");
          let t = this.validateInput(e, "ordinal", "maximum");
          if (!1 === t) return;
          let n = -1 / 0,
            r = t.length;
          for (; r--; ) t.data[r] > n && (n = t.data[r]);
          return (
            "string" === typeof e && this.updateStatistics(e, "maximum", n), n
          );
        }),
        (n.prototype.range = function (e) {
          if ("undefined" === typeof e)
            return this.errorMessage("Range: No data was supplied.");
          if ("string" === typeof e && !1 === this.checkLastUpdated(e, "range"))
            return this.getStatistics(e, "range");
          let t, n;
          if ("string" === typeof e && "nominal" === this.getScale(e)) {
            if (((t = this.validateInput(e, "nominal", "range")), !1 === t))
              return;
            n = this.getUniqueValues(t.data);
          } else {
            if (((t = this.validateInput(e, "ordinal", "range")), !1 === t))
              return;
            let r = this.sort(t.data);
            n = r[t.length - 1] - r[0];
          }
          return (
            "string" === typeof e && this.updateStatistics(e, "range", n), n
          );
        }),
        (n.prototype.variance = function (e, t = !0) {
          if ("undefined" === typeof e)
            return this.errorMessage("Variance: No data was supplied.");
          if (
            "string" === typeof e &&
            !1 === this.checkLastUpdated(e, "variance")
          )
            return this.getStatistics(e, "variance");
          let n = this.validateInput(e, "interval", "variance");
          if (!1 === n) return;
          if (n.length < 2)
            return this.errorMessage(
              "The data supplied to compute variance needs to contain at least two datasets."
            );
          let r = 0;
          if (this.isNumeric(t)) {
            for (var i = 0; i < n.length; i++) r += Math.pow(t - n.data[i], 2);
            r /= n.length - 1;
          } else {
            let e = 0,
              o = 0;
            for (i = 0; i < n.length; i++) {
              e += 1;
              let t = n.data[i] - o;
              (o += t / e), (r += t * (n.data[i] - o));
            }
            t && e > 1 ? (r /= e - 1) : !t && e > 0 ? (r /= e) : (r = void 0);
          }
          return (
            "string" === typeof e && this.updateStatistics(e, "variance", r), r
          );
        }),
        (n.prototype.standardDeviation = function (e, t = !0) {
          if ("undefined" === typeof e)
            return this.errorMessage(
              "Standard deviation: No data was supplied."
            );
          if (
            "string" === typeof e &&
            !1 === this.checkLastUpdated(e, "standardDeviation")
          )
            return this.getStatistics(e, "standardDeviation");
          let n = this.validateInput(e, "interval", "standard deviation");
          if (!1 === n) return;
          if (n.length < 2)
            return this.errorMessage(
              "The data supplied to compute standardDeviation needs to contain at least two datasets."
            );
          let r = Math.sqrt(this.variance(e, t));
          return (
            "string" === typeof e &&
              this.updateStatistics(e, "standardDeviation", r),
            r
          );
        }),
        (n.prototype.coefficientOfVariation = function (e, t) {
          if ("undefined" === typeof e)
            return this.errorMessage(
              "Coefficient of variation: No data was supplied."
            );
          let n = this.validateInput(e, "interval", "coefficient of variation");
          if (!1 === n) return;
          let r = this.standardDeviation(n.data),
            i = "undefined" === typeof t ? this.mean(n.data) : t;
          return "undefined" !== typeof r && "undefined" !== typeof i && 0 !== i
            ? r / i
            : void 0;
        }),
        (n.prototype.indexOfDispersion = function (e, t) {
          if ("undefined" === typeof e)
            return this.errorMessage(
              "Index of dispersion: No data was supplied."
            );
          let n = this.validateInput(e, "interval", "coefficient of variation");
          if (!1 === n) return;
          let r = this.variance(n.data),
            i = "undefined" === typeof t ? this.mean(n.data) : t;
          return "undefined" !== typeof r && "undefined" !== typeof i && 0 !== i
            ? r / i
            : void 0;
        }),
        (n.prototype.geometricStandardDeviation = function (e) {
          if ("undefined" === typeof e)
            return this.errorMessage(
              "Geomtric standard deviation: No data was supplied."
            );
          if (
            "string" === typeof e &&
            !1 === this.checkLastUpdated(e, "geometricStandardDeviation")
          )
            return this.getStatistics(e, "geometricStandardDeviation");
          let t = this.validateInput(
            e,
            "interval",
            "geometric standard deviation"
          );
          if (!1 === t) return;
          let n = t.length,
            r = this.geometricMean(e),
            i = 0,
            o = !1;
          for (var a = 0; a < n; a++)
            t.data[a] <= 0
              ? (o = !0)
              : (i += Math.pow(Math.log(t.data[a] / r), 2));
          return (
            (i = o ? void 0 : Math.exp(Math.sqrt(i / n))),
            "string" === typeof e &&
              this.updateStatistics(e, "geometricStandardDeviation", i),
            i
          );
        }),
        (n.prototype.medianAbsoluteDeviation = function (e) {
          if ("undefined" === typeof e)
            return this.errorMessage(
              "Median absolute deviation: No data was supplied."
            );
          let t = this.validateInput(
            e,
            "interval",
            "median absolute deviation"
          );
          if (!1 === t) return;
          let n = t.data,
            r = this.median(n);
          return "undefined" !== typeof r
            ? ((n = n.map((e) => Math.abs(e - r))), this.median(n))
            : void 0;
        }),
        (n.prototype.cumulativeFrequency = function (e, t) {
          if ("undefined" === typeof e)
            return this.errorMessage(
              "Cumulative frequency: No data was supplied."
            );
          if ("undefined" === typeof t || !this.isNumeric(t))
            return void this.errorMessage(
              "You need to specify a boundary for the cumulative frequency analysis that is either an integer or a floating point number."
            );
          let n = this.validateInput(
            e,
            "ordinal",
            "cumulative frequency analysis"
          );
          if (!1 === n) return;
          let r = this.sort(n.data),
            i = 0;
          for (; t >= r[i]; ) i++;
          return i;
        }),
        (n.prototype.frequencies = function (e) {
          if ("undefined" === typeof e)
            return this.errorMessage("Frequencies: No data was supplied.");
          let t = this.validateInput(e, "nominal", "frequencies");
          if (!1 === t) return;
          let n = t.data,
            r = {},
            i = [];
          for (var o = 0; o < t.length; o++) {
            let e = n[o];
            null == r[e] ? (i.push(e), (r[e] = 1)) : r[e]++;
          }
          return (
            (i = i.sort((e, t) => r[t] - r[e])),
            (i = i.map((e) => ({
              value: e,
              absolute: r[e],
              relative: r[e] / t.length,
            }))),
            i
          );
        }),
        (n.prototype.quantile = function (e, t = 0.5) {
          if ("undefined" === typeof e)
            return this.errorMessage("Quantile: No data was supplied.");
          if (!this.isNumeric(t) || t < 0 || t > 1)
            return this.errorMessage(
              "Quantiles should be called with a percentage value within the range of [0, 1]."
            );
          let n = this.validateInput(e, "ordinal", "quantile");
          if (!1 === n) return;
          let r = t * n.length,
            i = this.sort(n.data);
          return r % 1 === 0 ? 0.5 * (i[r] + i[r - 1]) : i[Math.floor(r)];
        }),
        (n.prototype.quartiles = function (e) {
          if ("undefined" === typeof e)
            return this.errorMessage("Quartiles: No data was supplied.");
          if (
            "string" === typeof e &&
            !1 === this.checkLastUpdated(e, "quartiles")
          )
            return this.getStatistics(e, "quartiles");
          let t = [this.quantile(e, 0.25), this.quantile(e, 0.75)];
          return "undefined" !== typeof t[0] && "undefined" !== typeof t[1]
            ? (this.updateStatistics(e, "quartiles", t), t)
            : void 0;
        }),
        (n.prototype.interQuartileRange = function (e) {
          if ("undefined" === typeof e)
            return this.errorMessage(
              "Interquartile range: No data was supplied."
            );
          let t = this.validateInput(e, "interval", "interquartile range");
          if (!1 === t) return;
          let n = this.quartiles(t.data);
          return "undefined" !== typeof n ? n[1] - n[0] : void 0;
        }),
        (n.prototype.skewness = function (e, t = !1) {
          if ("undefined" === typeof e)
            return this.errorMessage("Skewness: No data was supplied.");
          if (
            "string" === typeof e &&
            !1 === this.checkLastUpdated(e, "skewness")
          )
            return this.getStatistics(e, "skewness");
          let n = this.validateInput(e, "ordinal", "skewness");
          if (!1 === n) return;
          if (n.length < 2) return;
          let r = this.mean(e),
            i = this.standardDeviation(e, !1),
            o = 0;
          for (var a = 0; a < n.length; a++) o += Math.pow(n.data[a] - r, 3);
          let s = o / Math.pow(i, 3);
          return (
            (s *= t
              ? n.length / ((n.length - 1) * (n.length - 2))
              : 1 / n.length),
            "string" === typeof e && this.updateStatistics(e, "skewness", s),
            s
          );
        }),
        (n.prototype.kurtosis = function (e) {
          if ("undefined" === typeof e)
            return this.errorMessage("Kurtosis: No data was supplied.");
          if (
            "string" === typeof e &&
            !1 === this.checkLastUpdated(e, "kurtosis")
          )
            return this.getStatistics(e, "kurtosis");
          let t = this.validateInput(e, "ordinal", "kurtosis");
          if (!1 === t) return;
          if (t.length < 2) return;
          let n = this.mean(e),
            r = this.standardDeviation(e),
            i = 0;
          for (var o = 0; o < t.length; o++) i += Math.pow(t.data[o] - n, 4);
          let a = i / (t.length * Math.pow(r, 4));
          return (
            "string" === typeof e && this.updateStatistics(e, "kurtosis", a), a
          );
        }),
        (n.prototype.excessKurtosis = function (e) {
          if ("undefined" === typeof e)
            return this.errorMessage("Excess kurtosis: No data was supplied.");
          let t = this.kurtosis(e);
          return "undefined" !== typeof t ? t - 3 : void 0;
        }),
        (n.prototype.sum = function (e) {
          return "undefined" === typeof e
            ? this.errorMessage("Sum: No data given.")
            : ("string" === typeof e &&
                this.has(this.columns, e) &&
                (e = this.getColumn(e)),
              0 != e.length
                ? e.reduce((e, t) => (this.isNumeric(t) ? e + t : e), 0)
                : void 0);
        }),
        (n.prototype.sumExact = function (e) {
          if ("undefined" === typeof e)
            return this.errorMessage("Sum exact: No data given.");
          if (
            ("string" === typeof e &&
              this.has(this.columns, e) &&
              (e = this.getColumn(e)),
            0 == e.length)
          )
            return;
          let t = 0,
            n = 0;
          for (var r = 0; r < e.length; r++) {
            let i = this.isNumeric(e[r]) ? e[r] : 0;
            i -= n;
            let o = t + i;
            (n = o - t - i), (t = o);
          }
          return t;
        }),
        (n.prototype.product = function (e) {
          return "undefined" === typeof e
            ? this.errorMessage("Product: No data given.")
            : ("string" === typeof e &&
                this.has(this.columns, e) &&
                (e = this.getColumn(e)),
              0 === e.length
                ? 1
                : e.reduce((e, t) => (this.isNumeric(t) ? e * t : e), 1));
        }),
        (n.prototype.factorial = function (e) {
          return this.isNumeric(e) && !Number.isInteger(e)
            ? this.gamma(e)
            : "undefined" !== typeof this.factorials[e]
            ? this.factorials[e]
            : this.computeFactorial(e);
        }),
        (n.prototype.computeFactorial = function (e) {
          if ("undefined" === typeof e || !this.isNumeric(e) || e < 0) return;
          if ("undefined" !== typeof this.factorials[e])
            return this.factorials[e];
          if (!Number.isInteger(e)) return this.gamma(e);
          let t = 1,
            n = 1;
          for (; e > n; )
            n++,
              (t *= n),
              "undefined" === typeof this.factorials[n] &&
                (this.factorials[n] = t);
          return t;
        }),
        (n.prototype.binomialCoefficient = function (e = 1, t = 1) {
          if (e < t || t < 0)
            return this.errorMessage(
              "The binomial coefficient is only defined for n and k with n \u2265 k \u2265 0. N is " +
                e +
                " and k is " +
                t +
                "."
            );
          if (!Number.isInteger(e) || !Number.isInteger(t))
            return this.errorMessage(
              "The binomial coefficient is only defined for integers n and k."
            );
          let n = [];
          for (var r = 1; r <= t; r++) n.push((e + 1 - r) / r);
          return this.product(n);
        }),
        (n.prototype.gamma = function (e, t = !1) {
          if ("undefined" !== typeof e && this.isNumeric(e) && !(e < 0))
            return Number.isInteger(e) &&
              "undefined" !== typeof this.factorials[e - 1]
              ? this.factorials[e - 1]
              : t
              ? this.gammaSpouge(e)
              : this.gammaStirling(e);
        }),
        (n.prototype.gammaSpouge = function (e) {
          if ("undefined" === typeof e || !this.isNumeric(e) || e < 0) return;
          if (
            Number.isInteger(e) &&
            "undefined" !== typeof this.factorials[e - 1]
          )
            return this.factorials[e - 1];
          const t = this.spougeConstant;
          let n = Math.pow(e + t, e + 0.5),
            r = 1,
            i = 0,
            o = Math.sqrt(2 * Math.PI);
          (n *= Math.exp(-e - t)), (n /= e);
          for (var a = 1; a < t; a++)
            e++,
              (i = Math.pow(t - a, a - 0.5)),
              (i *= Math.exp(t - a)),
              (i /= r),
              (o += i / e),
              (r *= -a);
          return o * n;
        }),
        (n.prototype.gammaStirling = function (e) {
          if ("undefined" === typeof e || !this.isNumeric(e) || e < 0) return;
          if (
            Number.isInteger(e) &&
            "undefined" !== typeof this.factorials[e - 1]
          )
            return this.factorials[e - 1];
          let t = 1 / (10 * e);
          return (
            (t = 1 / (12 * e - t)),
            (t = 0.36787944117144233 * (t + e)),
            (t = Math.pow(t, e)),
            (t *= Math.sqrt(6.283185307179586 / e)),
            t
          );
        }),
        (n.prototype.incompleteGamma = function (e, t) {
          if ("undefined" === typeof t)
            return this.errorMessage(
              "The incomplete lower gamma function is only defined for two numeric variables s and x."
            );
          if (!this.isNumeric(e) || !this.isNumeric(t))
            return this.errorMessage(
              "The incomplete lower gamma function is only defined for numeric variables s and x."
            );
          if (t < 0)
            return this.errorMessage(
              "The incomplete lower gamma function is defined for x > 0."
            );
          let n = this.incompleteGammaIterations,
            r = 1;
          for (var i = 0; i < n; i++) {
            let o = n - i;
            r = t + (o - e) / (1 + o / r);
          }
          return this.gamma(e, !0) - (Math.exp(-t) * Math.pow(t, e)) / r;
        }),
        (n.prototype.regularisedGamma = function (e, t) {
          return "undefined" === typeof t
            ? this.errorMessage(
                "The regularised lower gamma function is only defined for two numeric variables s and x."
              )
            : this.isNumeric(e) && this.isNumeric(t)
            ? t < 0
              ? this.errorMessage(
                  "The regularised lower gamma function is defined for x > 0."
                )
              : this.incompleteGamma(e, t) / this.gamma(e, !0)
            : this.errorMessage(
                "The regularised lower gamma function is only defined for numeric variables s and x."
              );
        }),
        (n.prototype.beta = function (e, t) {
          return "undefined" === typeof t
            ? this.errorMessage(
                "The beta function is only defined for two numeric variables a and b."
              )
            : this.isNumeric(e) && this.isNumeric(t)
            ? e <= 0 || t <= 0
              ? this.errorMessage(
                  "The beta function is defined for a and b with a > 0 and b > 0."
                )
              : Number.isInteger(e) && Number.isInteger(t) && e > 0 && t > 0
              ? (this.factorial(e - 1) * this.factorial(t - 1)) /
                this.factorial(e + t - 1)
              : (this.gamma(e, !0) * this.gamma(t, !0)) / this.gamma(e + t, !0)
            : this.errorMessage(
                "The beta function is only defined for numeric variables a and b."
              );
        }),
        (n.prototype.incompleteBeta = function (e, t, n) {
          if ("undefined" === typeof n)
            return this.errorMessage(
              "The incomplete beta function is only defined for two numeric variables a and b."
            );
          if (!this.isNumeric(e) || !this.isNumeric(t) || !this.isNumeric(n))
            return this.errorMessage(
              "The incomplete beta function is only defined for numeric variables x, a and b."
            );
          if (e < 0 || e > 1)
            return this.errorMessage(
              "The incomplete beta function is defined for x \u2265 0 and x \u2266 1."
            );
          if (t <= 0 || n <= 0)
            return this.errorMessage(
              "The incomplete beta function is defined for a and b with a > 0 and b > 0."
            );
          if (1 == e) return this.beta(t, n);
          var r = function (e, t, n, r) {
            if (e % 2 == 0) {
              let i = 0.5 * e;
              return (i * (n - i) * r) / ((t + 2 * i - 1) * (t + 2 * i));
            }
            {
              let i = 0.5 * e - 0.5;
              return (
                (-(t + i) * (t + n + i) * r) / ((t + 2 * i) * (t + 2 * i + 1))
              );
            }
          };
          let i = (Math.pow(e, t) * Math.pow(1 - e, n)) / t,
            o = this.incompleteBetaIterations,
            a = 1;
          for (var s = 0; s < o; s++) {
            a = 1 + r(o - s, t, n, e) / a;
          }
          return i / a;
        }),
        (n.prototype.regularisedBeta = function (e, t, n) {
          if ("undefined" === typeof n)
            return this.errorMessage(
              "The regularised beta function is only defined for two numeric variables a and b."
            );
          if (!this.isNumeric(e) || !this.isNumeric(t) || !this.isNumeric(n))
            return this.errorMessage(
              "The regularised beta function is only defined for numeric variables x, a and b."
            );
          if (e > 1 || e < 0)
            return this.errorMessage(
              "The regularised beta function is defined for x \u2265 0 and x \u2266 1."
            );
          if (t <= 0 || n <= 0)
            return this.errorMessage(
              "The regularised beta function is defined for a and b with a > 0 and b > 0."
            );
          if (!Number.isInteger(t) || !Number.isInteger(n))
            return this.incompleteBeta(e, t, n) / this.beta(t, n);
          let r = this.epsilon + 1,
            i = t,
            o = 0;
          for (; r >= this.epsilon; )
            (r = this.binomialCoefficient(n + i - 1, i) * Math.pow(e, i)),
              (o += r),
              i++;
          return o * Math.pow(1 - e, n);
        }),
        (n.prototype.covariance = function (e, t, n = !0) {
          if ("undefined" === typeof t)
            return this.errorMessage(
              "Covariance requires two variables to be compared."
            );
          let r = this.validateInput(e, "interval", "covariance");
          if (!1 === r) return;
          let i = this.validateInput(t, "interval", "covariance");
          if (!1 === i) return;
          let o = this.reduceToPairs(r.data, i.data);
          if (0 === o.length) return;
          let a = this.mean(o.valuesFirst),
            s = this.mean(o.valuesSecond),
            u = 0;
          for (var c = 0; c < o.length; c++)
            u += (o.valuesFirst[c] - a) * (o.valuesSecond[c] - s);
          return (
            n && o.length > 1
              ? (u /= o.length - 1)
              : !n && o.length > 0
              ? (u /= o.length)
              : (u = void 0),
            { covariance: u, missings: o.missings }
          );
        }),
        (n.prototype.correlationCoefficient = function (e, t) {
          if ("undefined" === typeof t)
            return this.errorMessage(
              "Pearson correlation coefficient requires two variables to be compared."
            );
          let n = this.validateInput(
            e,
            "interval",
            "Pearson correlation coefficient"
          );
          if (!1 === n) return;
          let r = this.validateInput(
            t,
            "interval",
            "Pearson correlation coefficient"
          );
          if (!1 === r) return;
          let i = n.length >= r.length ? n.length : r.length,
            o = n.data,
            a = r.data,
            s = [],
            u = 0,
            c = 0;
          for (var l = 0; l < i; l++) {
            let e = o[l],
              t = a[l];
            void 0 === typeof e ||
              void 0 === typeof t ||
              isNaN(e) ||
              isNaN(t) ||
              ((u += e), (c += t), s.push([e, t]));
          }
          let f = i - s.length;
          if (((i = s.length), 0 === i)) return;
          (u /= i), (c /= i);
          let d = 0,
            h = 0,
            p = 0;
          for (l = 0; l < i; l++) {
            let e = s[l][0] - u,
              t = s[l][1] - c;
            (d += e * t), (h += e * e), (p += t * t);
          }
          return {
            correlationCoefficient: h > 0 && p > 0 ? d / Math.sqrt(h * p) : 0,
            missings: f,
          };
        }),
        (n.prototype.spearmansRho = function (e, t, n = !1) {
          if ("undefined" === typeof t)
            return this.errorMessage(
              "Spearman's Rho requires two variables to be compared."
            );
          if (!1 === this.validateInput(e, "ordinal", "Spearman's Rho")) return;
          if (!1 === this.validateInput(t, "ordinal", "Spearman's Rho")) return;
          let r = this.reduceToPairs(e, t),
            i = r.length;
          if (0 === i) return;
          let o = this.assignRanks(e, {
              data: r.valuesCombined,
              returnFrequencies: !0,
              order: "desc",
            }),
            a = o.frequencies;
          o = this.assignRanks(t, {
            data: o.data,
            returnFrequencies: !0,
            order: "desc",
          });
          let s = o.frequencies;
          o = o.data;
          let u =
            6 *
            o.reduce(
              (n, r) => n + Math.pow(r["rank-" + e] - r["rank-" + t], 2),
              0
            );
          if (n) {
            let e = Object.values(a).reduce((e, t) => e + Math.pow(t, 3) - t),
              t = Object.values(s).reduce((e, t) => e + Math.pow(t, 3) - t);
            u =
              (Math.pow(i, 3) - i - 0.5 * e - 0.5 * t - u) /
              Math.sqrt((Math.pow(i, 3) - i - e) * (Math.pow(i, 3) - i - t));
          } else u = 1 - u / (Math.pow(i, 3) - i);
          let c = i - 2,
            l = Math.sqrt((c - 1) / 1.06) * this.fisherTransformation(u),
            f = 1 - this.normalCumulativeValue(Math.abs(l)),
            d = u * Math.sqrt(c / (1 - u * u)),
            h = 1 - this.studentsTCumulativeValue(Math.abs(d), c);
          return {
            rho: u,
            significanceNormal: { zScore: l, pOneTailed: f, pTwoTailed: 2 * f },
            significanceStudent: {
              degreesOfFreedom: c,
              tStatistic: d,
              pOneTailed: h,
              pTwoTailed: 2 * h,
            },
            missings: r.missings,
          };
        }),
        (n.prototype.kendallsTau = function (e, t) {
          if ("undefined" === typeof t)
            return this.errorMessage(
              "Kendall's Tau requires two columns to analyze."
            );
          if (!1 === this.validateInput(e, "ordinal", "Kendall's Tau")) return;
          if (!1 === this.validateInput(t, "ordinal", "Kendall's Tau")) return;
          let n = this.reduceToPairs(e, t),
            r = n.length,
            i = n.valuesCombined,
            o = 0,
            a = 0,
            s = {},
            u = {},
            c = 0;
          for (var l = 0; l < r - 1; l++)
            for (var f = l + 1; f < r; f++) {
              let n = i[l][e],
                r = i[f][e],
                d = i[l][t],
                h = i[f][t];
              n === r
                ? d === h
                  ? (c += 1)
                  : (s[d] = this.has(s, d) ? s[d] + 1 : 1)
                : d === h
                ? (u[d] = this.has(u, d) ? u[d] + 1 : 1)
                : Math.sign(n - r) === Math.sign(d - h)
                ? (o += 1)
                : (a += 1);
            }
          let d = o - a,
            h =
              Object.keys(s).length + Object.keys(u).length === 0
                ? (2 * d) / (r * (r - 1))
                : void 0,
            p = (3 * d) / Math.sqrt(0.5 * r * (r - 1) * (2 * r + 5)),
            g = this.normalCumulativeValue(-Math.abs(p)),
            m = 2 < n.length ? 2 : n.length,
            y = (2 * m * d) / (r * r * (m - 1)),
            b = h,
            v = p,
            _ = g;
          if ("undefined" === typeof h) {
            b =
              d /
              Math.sqrt(
                (o + a + Object.keys(s).length) *
                  (o + a + Object.keys(u).length)
              );
            let e = 0,
              t = 0,
              n = 0,
              i = 0,
              c = 0,
              l = 0;
            for (var x in s)
              (e += x * (x - 1) * (2 * x + 5)),
                (n += x * (x - 1)),
                (i += x * (x - 1) * (x - 2));
            for (var x in u)
              (t += x * (x - 1) * (2 * x + 5)),
                (i += (x * (x - 1)) / (2 * r * (r - 1))),
                (l += (x * (x - 1) * (x - 2)) / (9 * r * (r - 1) * (r - 2)));
            (v = r * (r - 1) * (2 * r + 5)),
              (v = (v - e - t) / 18 + n * i + c * l),
              (v = d / Math.sqrt(v)),
              (_ = this.normalCumulativeValue(-Math.abs(v)));
          }
          return {
            a:
              "undefined" !== typeof h
                ? { tauA: h, z: p, pOneTailed: g, pTwoTailed: 2 * g }
                : void 0,
            b:
              "undefined" !== typeof h
                ? { tauB: h, z: p, pOneTailed: g, pTwoTailed: 2 * g }
                : { tauB: b, z: v, pOneTailed: _, pTwoTailed: 2 * _ },
            c: { tauC: y },
            missings: n.missings,
          };
        }),
        (n.prototype.goodmanKruskalsGamma = function (e, t) {
          if ("undefined" === typeof t)
            return this.errorMessage(
              "Goodman and Kruskal's Gamma requires two columns to analyze."
            );
          if (
            !1 ===
            this.validateInput(e, "ordinal", "Goodman and Kruskal's Gamma")
          )
            return;
          if (
            !1 ===
            this.validateInput(t, "ordinal", "Goodman and Kruskal's Gamma")
          )
            return;
          let n = this.reduceToPairs(e, t),
            r = n.valuesCombined,
            i = n.length,
            o = 0,
            a = 0;
          for (var s = 0; s < i - 1; s++)
            for (var u = s + 1; u < i; u++) {
              let n = r[s][e],
                i = r[u][e],
                c = r[s][t],
                l = r[u][t];
              n !== i &&
                c !== l &&
                (Math.sign(n - i) === Math.sign(c - l) ? (o += 1) : (a += 1));
            }
          let c = (o - a) / (o + a),
            l = c * Math.sqrt((o + a) / (i * (1 - c * c))),
            f = 1 - this.studentsTCumulativeValue(Math.abs(l), i - 2);
          return {
            gamma: c,
            tStatistic: l,
            pOneTailed: f,
            pTwoTailed: 2 * f,
            missings: n.missings,
          };
        }),
        (n.prototype.fisherTransformation = function (e) {
          return "undefined" === typeof e ||
            !this.isNumeric(e) ||
            e < -1 ||
            e > 1
            ? this.errorMessage(
                "Fisher transformation is only defined for a Pearson correlation coefficient within the interval of [-1, 1]."
              )
            : Math.atanh(e) || 0.5 * Math.log((1 + e) / (1 - e));
        }),
        (n.prototype.linearRegression = function (e, t) {
          if ("undefined" === typeof t)
            return this.errorMessage(
              "Linear regression requires two columns to compare."
            );
          let n = this.validateInput(e, "interval", "linear regression");
          if (!1 === n) return;
          let r = this.validateInput(t, "interval", "linear regression");
          if (!1 === r) return;
          let i = this.reduceToPairs(n.data, r.data),
            o = i.valuesFirst,
            a = i.valuesSecond,
            s = (i.missings, i.length);
          if (0 === s) return;
          let u = this.mean(o),
            c = this.mean(a),
            l = 0,
            f = 0,
            d = 0;
          for (var h = 0; h < s; h++) {
            let e = o[h] - u,
              t = a[h] - c;
            (d += e * t), (l += e * e), (f += t * t);
          }
          if (0 === l || 0 === f) return;
          let p = d / l,
            g = d / f,
            m = c - p * u,
            y = u - g * c,
            b = d / Math.sqrt(l * f),
            v = b * b,
            _ = s > 2 ? 1 - ((1 - v) * (s - 1)) / (s - 2) : void 0,
            x = (180 * Math.acos(b)) / Math.PI;
          return (
            x > 90 && (x = 180 - x),
            {
              regressionFirst: { beta1: m, beta2: p },
              regressionSecond: { beta1: y, beta2: g },
              coefficientOfDetermination: v,
              coefficientOfDeterminationCorrected: _,
              correlationCoefficient: b,
              phi: x,
            }
          );
        }),
        (n.prototype.normalProbabilityDensity = function (e, t = 0, n = 1) {
          if ("undefined" === typeof e)
            return this.errorMessage(
              "Normal probability density: no x is given."
            );
          if (n <= 0)
            return this.errorMessage(
              "Normal probability density: variance must be larger than 0."
            );
          let r = -Math.pow(e - t, 2) / (2 * n);
          return Math.exp(r) / Math.sqrt(2 * Math.PI * n);
        }),
        (n.prototype.normalDistribution = function (e = 0, t = 1) {
          if (t <= 0)
            return this.errorMessage(
              "Normal distribution: variance must be larger than 0."
            );
          let n = 0,
            r = 1,
            i = {};
          for (
            ;
            r >= this.epsilon &&
            ((r = this.normalProbabilityDensity(e + n, e, t)),
            !(r < this.epsilon));

          )
            (i[(e + n).toFixed(2)] = r),
              (i[(e - n).toFixed(2)] = r),
              (n += 0.01);
          return i;
        }),
        (n.prototype.normalCumulativeValue = function (e) {
          if ("undefined" === typeof e)
            return this.errorMessage("Normal cumulative value: no z is given.");
          let t = e,
            n = e;
          for (var r = 1; r < this.zTableIterations; r++)
            (n *= (e * e) / (2 * r + 1)), (t += n);
          return (
            Math.round(
              1e5 *
                (0.5 + (t / Math.sqrt(2 * Math.PI)) * Math.exp(-0.5 * e * e))
            ) / 1e5
          );
        }),
        (n.prototype.normalCumulativeDistribution = function () {
          let e = this.zTable;
          if ("undefined" === typeof e) {
            e = {};
            for (var t = 0; t <= 4.09; t += 0.01) {
              e[(Math.round(100 * t) / 100).toFixed(2)] =
                this.normalCumulativeValue(t);
            }
            this.zTable = e;
          }
          return e;
        }),
        (n.prototype.binomialProbabilityMass = function (e, t = 10, n = 0.5) {
          return "undefined" === typeof e
            ? this.errorMessage(
                "Binomial probability mass: the required argument k was not given."
              )
            : e < 0 || !Number.isInteger(e)
            ? this.errorMessage(
                "Binomial probability mass: k must be a non-negative integer."
              )
            : t < 0 || !Number.isInteger(t)
            ? this.errorMessage(
                "Binomial probability mass: n must be a non-negative integer."
              )
            : n < 0 || n > 1
            ? this.errorMessage(
                "Binomial probability mass: The probability must lie within the range of [0, 1]."
              )
            : this.binomialCoefficient(t, e) *
              Math.pow(n, e) *
              Math.pow(1 - n, t - e);
        }),
        (n.prototype.binomialDistribution = function (e = 10, t = 0.5) {
          if (e < 0 || !Number.isInteger(e))
            return this.errorMessage(
              "Binomial distribution: n must be a non-negative integer."
            );
          if (t < 0 || t > 1)
            return this.errorMessage(
              "Binomial distribution: The probability must lie within the range of [0, 1]."
            );
          let n = 0,
            r = 0,
            i = 0,
            o = [],
            a = 1;
          for (; n <= e; )
            (r = a * Math.pow(t, n) * Math.pow(1 - t, e - n)),
              o.push(r),
              (i += r),
              n++,
              (a = (a * (e + 1 - n)) / n);
          return o;
        }),
        (n.prototype.binomialCumulativeValue = function (e, t = 10, n = 0.5) {
          return "undefined" === typeof e
            ? this.errorMessage(
                "Binomial cumulative distribution value: the required argument k was not given."
              )
            : e < 0 || !Number.isInteger(e)
            ? this.errorMessage(
                "Binomial cumulative distribution value: k must be a non-negative integer."
              )
            : t < 0 || !Number.isInteger(t)
            ? this.errorMessage(
                "Binomial cumulative distribution value: n must be a non-negative integer."
              )
            : n < 0 || n > 1
            ? this.errorMessage(
                "Binomial cumulative distribution value: The probability must lie within the range of [0, 1]."
              )
            : this.regularisedBeta(1 - n, t - e, e + 1);
        }),
        (n.prototype.binomialCumulativeDistribution = function (
          e = 10,
          t = 0.5
        ) {
          if (e < 0 || !Number.isInteger(e))
            return this.errorMessage(
              "Binomial cumulative distribution: n must be a non-negative integer."
            );
          if (t < 0 || t > 1)
            return this.errorMessage(
              "Binomial cumulative distribution: The probability must lie within the range of [0, 1]."
            );
          let n = this.binomialDistribution(e, t),
            r = 0;
          return n.map(function (e) {
            return (r = this.sumExact([r, e])), r;
          }, this);
        }),
        (n.prototype.poissonProbabilityMass = function (e, t = 1) {
          if ("undefined" === typeof e || !Number.isInteger(e))
            return this.errorMessage(
              "Poisson probability mass: the required argument k must be an integer."
            );
          if (e < 0 || t <= 0)
            return this.errorMessage(
              "Poisson probability mass: Both k and lambda must be larger than 0."
            );
          if (e > 10) {
            let r = 1;
            for (var n = 1; n <= e; n++) r *= (t * Math.exp(-t / e)) / n;
            return r;
          }
          return (Math.exp(-t) * Math.pow(t, e)) / this.factorial(e);
        }),
        (n.prototype.poissonDistribution = function (e = 1) {
          if (e <= 0)
            return this.errorMessage(
              "Poisson distribution: Lambda must be larger than 0."
            );
          let t = 0,
            n = 0,
            r = [];
          for (; n < 1 - this.epsilon; ) {
            let i = this.poissonProbabilityMass(t, e);
            r.push(i), (n += i), t++;
          }
          return r;
        }),
        (n.prototype.poissonCumulativeValue = function (e, t = 1) {
          if ("undefined" === typeof e || !Number.isInteger(e))
            return this.errorMessage(
              "Poisson cumulative distribution: The number of cumulative events k must be supplied."
            );
          if (e < 0 || t <= 0)
            return this.errorMessage(
              "Poisson distribution: Both k and lambda must be larger than 0."
            );
          let n = this.poissonDistribution(t);
          return e < n.length - 1 ? this.sumExact(n.slice(0, e + 1)) : 1;
        }),
        (n.prototype.poissonCumulativeDistribution = function (e = 1) {
          if (e <= 0)
            return this.errorMessage(
              "Poisson distribution: lambda must be larger than 0."
            );
          let t = this.poissonDistribution(e),
            n = 0;
          return t.map(function (e) {
            return (n = this.sumExact([n, e])), n;
          }, this);
        }),
        (n.prototype.studentsTProbabilityDensity = function (e, t) {
          if ("undefined" === typeof t)
            return this.errorMessage(
              "Student's t-distribution probability density: no value for degrees of freedom (df) given."
            );
          if (t <= 0)
            return this.errorMessage(
              "Student's t-distribution probability density: degrees of freedom (df) must be larger than 0."
            );
          let n = Math.pow(1 + (e * e) / t, -0.5 * (t + 1));
          return (n /= Math.sqrt(t) * this.beta(0.5, 0.5 * t)), n;
        }),
        (n.prototype.studentsTDistribution = function (e) {
          if ("undefined" === typeof e)
            return this.errorMessage(
              "Student's t-distribution: no value for degrees of freedom (df) given."
            );
          if (e <= 0)
            return this.errorMessage(
              "Student's t-distribution: degrees of freedom (df) must be larger than 0."
            );
          let t = 0,
            n = 1,
            r = {};
          for (
            ;
            n >= this.epsilon &&
            ((n = this.studentsTProbabilityDensity(t, e)), !(n < this.epsilon));

          )
            (r[t.toFixed(2)] = n), (r[(-t).toFixed(2)] = n), (t += 0.01);
          return r;
        }),
        (n.prototype.studentsTCumulativeValue = function (e, t) {
          return "undefined" === typeof t
            ? this.errorMessage(
                "Student's cumulative t-distribution value: no value for degrees of freedom (df) given."
              )
            : t <= 0
            ? this.errorMessage(
                "Student's cumulative t-distribution value: degrees of freedom (df) must be larger than 0."
              )
            : e <= 0
            ? 0.5 * this.regularisedBeta(t / (e * e + t), 0.5 * t, 0.5)
            : 0.5 +
              0.5 * this.regularisedBeta((e * e) / (e * e + t), 0.5, 0.5 * t);
        }),
        (n.prototype.studentsTCumulativeDistribution = function (e) {
          if ("undefined" === typeof e)
            return this.errorMessage(
              "Student's cumulative t-distribution: no value for degrees of freedom (df) given."
            );
          if (e <= 0)
            return this.errorMessage(
              "Student's cumulative t-distribution: degrees of freedom (df) must be larger than 0."
            );
          let t = 0,
            n = 0,
            r = -0.1,
            i = {};
          for (
            ;
            n <= 1 - this.epsilon &&
            ((n = this.studentsTCumulativeValue(t, e)), !(r >= n));

          )
            (i[t.toFixed(2)] = n),
              (i[(-t).toFixed(2)] = n),
              (r = n),
              (t += 0.01);
          return i;
        }),
        (n.prototype.chiSquaredProbabilityDensity = function (e, t) {
          return "undefined" === typeof t
            ? this.errorMessage(
                "Chi squared distribution probability density: no value for degrees of freedom (df) given."
              )
            : t <= 0
            ? this.errorMessage(
                "Chi squared distribution probability density: degrees of freedom (df) must be larger than 0."
              )
            : e <= 0
            ? 0
            : (Math.pow(e, 0.5 * t - 1) * Math.exp(-0.5 * e)) /
              (Math.pow(2, 0.5 * t) * this.gamma(0.5 * t, !0));
        }),
        (n.prototype.chiSquaredDistribution = function (e) {
          if ("undefined" === typeof e)
            return this.errorMessage(
              "Chi squared distribution: no value for degrees of freedom (df) given."
            );
          if (e <= 0)
            return this.errorMessage(
              "Chi squared distribution: degrees of freedom (df) must be larger than 0."
            );
          let t = 0.01,
            n = 1,
            r = { "0.00": 0 };
          for (
            ;
            ((e <= 2 && n >= this.epsilon) ||
              (e > 2 && t <= e - 2) ||
              (e > 2 && n >= this.epsilon)) &&
            ((n = this.chiSquaredProbabilityDensity(t, e)),
            !(n < this.epsilon && t >= e - 2 && e > 2));

          )
            (r[t.toFixed(2)] = n), (t += 0.01);
          return r;
        }),
        (n.prototype.chiSquaredCumulativeValue = function (e, t) {
          return "undefined" === typeof t
            ? this.errorMessage(
                "Chi squared cumulative distribution value: no value for degrees of freedom (df) given."
              )
            : t <= 0
            ? this.errorMessage(
                "Chi squared cumulative distribution value: degrees of freedom (df) must be larger than 0."
              )
            : e <= 0
            ? 0
            : this.regularisedGamma(0.5 * t, 0.5 * e);
        }),
        (n.prototype.chiSquaredCumulativeDistribution = function (e) {
          if ("undefined" === typeof e)
            return this.errorMessage(
              "Chi squared cumulative distribution: no value for degrees of freedom (df) given."
            );
          if (e <= 0)
            return this.errorMessage(
              "Chi squared cumulative distribution: degrees of freedom (df) must be larger than 0."
            );
          let t = 0.01,
            n = 0,
            r = { "0.00": 0 };
          for (
            ;
            n <= 1 - this.epsilon &&
            ((n = this.chiSquaredCumulativeValue(t, e)),
            !(n >= 1 - this.epsilon));

          )
            n > 0 && (r[t.toFixed(2)] = n), (t += 0.01);
          return r;
        }),
        (n.prototype.barnardsTest = function (e, t) {
          if ("undefined" === typeof t)
            return this.errorMessage("Barnard's test: No data was supplied.");
          let n = this.contingencyTable(e, t, "Barnard's test");
          if ("undefined" === typeof n) return;
          let { a: r, b: i, c: o, d: a } = n,
            s = r + i + o + a;
          if (s > this.maxBarnardsN)
            return this.errorMessage(
              "Barnard's test is a resource-intensive method, relative to the total number of datasets to analyze. There are " +
                s +
                " datasets in the supplied data, exceeding the maxinum of " +
                this.maxBarnardsN +
                '. You can change this number by changing the "maxBarnardsN" option (be cautious).'
            );
          var u = (r + i) / s;
          (u = u * (1 - u) * (1 / (r + o) + 1 / (i + a))),
            (u = (i / (i + a) - r / (r + o)) / Math.sqrt(u)),
            isNaN(u) && (u = 0);
          let c = [];
          for (var l = 0; l < 1; l = this.sumExact([l, 0.001])) {
            let e = 0;
            for (var f = 0; f <= r + o; f++)
              for (var d = 0; d <= i + a; d++) {
                let t = (f + d) / s;
                if (
                  ((t = t * (1 - t) * (1 / (r + o) + 1 / (i + a))),
                  (t = (f / (r + o) - d / (i + a)) / Math.sqrt(t)),
                  !isNaN(t) && Math.abs(t) >= Math.abs(u))
                ) {
                  let t =
                    this.binomialCoefficient(r + o, f) *
                    this.binomialCoefficient(i + a, d);
                  (t *= Math.pow(l, f + d) * Math.pow(1 - l, s - f - d)),
                    (e += isNaN(t) ? 0 : t);
                }
              }
            c.push({ nuisance: l, significance: e });
          }
          return (
            (c = this.sortDataByColumn("significance", {
              data: c,
              order: "desc",
            })),
            {
              wald: u,
              nuisance: c[0].nuisance,
              pOneTailed: 0.5 * c[0].significance,
              pTwoTailed: c[0].significance,
            }
          );
        }),
        (n.prototype.binomialTest = function (e, t, n = 0.5) {
          if ("undefined" === typeof t)
            return this.errorMessage(
              "Binomial test requires the data to test and a value which is hypotethised to be observed with a probability of alpha."
            );
          if (n < 0 || n > 1)
            return this.errorMessage(
              "Binomial test is only defined for probabilities alpha with alpha \u2265 0 and alpha \u2266 1."
            );
          let r = this.getScale(e);
          if ("interval" === r || "metric" === r)
            return this.errorMessage(
              "Binomial test is only defined for data of nominal or ordinal dichotomic scale."
            );
          let i = this.validateInput(e, "nominal", "binomial test");
          if (!1 === i) return;
          let o = this.getUniqueValues(i.data);
          if (o.length > 2)
            return this.errorMessage(
              "Binomial test is only defined for dichotomic data. The supplied data has " +
                o.length +
                " unique values."
            );
          if (2 === o.length && o.indexOf(t) < 0)
            return this.errorMessage(
              'The value "' + t + '" was not found in the supplied data.'
            );
          let a = i.data.filter(function (e) {
              return e === t;
            }).length,
            s = this.binomialProbabilityMass(a, i.length, n),
            u = this.binomialCumulativeValue(a - 1, i.length, n),
            c = 1 - u - s;
          return {
            pExactly: s,
            pFewer: u,
            pAtMost: u + s,
            pMore: c,
            pAtLeast: c + s,
          };
        }),
        (n.prototype.signTest = function (e, t) {
          if ("undefined" === typeof t)
            return this.errorMessage("Sign test: No data was supplied.");
          let n = this.validateInput(e, "ordinal", "sign test"),
            r = this.validateInput(t, "ordinal", "sign test");
          if (!1 === n || !1 === r) return;
          if (0 === n.length || 0 === r.length) return;
          let i = this.reduceToPairs(n.data, r.data),
            o = (i.missings, i.length),
            a = i.valuesFirst,
            s = i.valuesSecond,
            u = 0;
          for (var c = 0; c < o; c++) a[c] > s[c] && (u += 1);
          let l = this.binomialProbabilityMass(u, o),
            f = this.binomialCumulativeValue(u - 1, o),
            d = 1 - f - l;
          return {
            positives: u,
            pExactly: l,
            pFewer: f,
            pAtMost: f + l,
            pMore: d,
            pAtLeast: d + l,
          };
        }),
        (n.prototype.fishersExactTest = function (e, t) {
          if ("undefined" === typeof t)
            return this.errorMessage(
              "Fisher's exact test requires two columns to analyze."
            );
          let n = this.contingencyTable(e, t, "Fisher's exact test");
          if ("undefined" === typeof n) return;
          let { a: r, b: i, c: o, d: a } = n;
          return (
            (this.binomialCoefficient(r + i, r) *
              this.binomialCoefficient(o + a, o)) /
            this.binomialCoefficient(r + i + o + a, r + o)
          );
        }),
        (n.prototype.mannWhitneyU = function (e, t) {
          if ("undefined" === typeof t)
            return this.errorMessage(
              "Mann-Whitney-U test requires two columns to analyze."
            );
          let n = this.validateInput(e, "nominal", "Mann-Whitney-U test"),
            r = this.validateInput(t, "ordinal", "Mann-Whitney-U test");
          if (!1 === n || !1 === r) return;
          if (0 === n.length || 0 === r.length) return;
          this.sort(r.data);
          let i = this.getUniqueValues(n.data);
          if (2 !== i.length)
            return this.errorMessage(
              'The Mann-Whitney-U test requires the independent variable to have exactly two unique values. Variable "' +
                independentValue +
                '" has ' +
                i.length +
                " different values: " +
                n.data.join(", ")
            );
          let o = this.assignRanks(t),
            a = o.reduce((n, r) => (r[e] === i[0] ? n + r["rank-" + t] : n), 0),
            s = o.reduce((t, n) => (n[e] === i[0] ? t + 1 : t), 0),
            u = o.reduce((n, r) => (r[e] === i[1] ? n + r["rank-" + t] : n), 0),
            c = o.reduce((t, n) => (n[e] === i[1] ? t + 1 : t), 0),
            l = s * (0.5 * s + c + 0.5) - a,
            f = c * (0.5 * c + s + 0.5) - u,
            d = Math.min(l, f),
            h = (d - 0.5 * s * c) / Math.sqrt((s * c * (s + c + 1)) / 12),
            p = 1 - this.normalCumulativeValue(Math.abs(h));
          return {
            MannWhitneyU: d,
            zScore: h,
            pOneTailed: p,
            pTwoTailed: 2 * p,
          };
        }),
        (n.prototype.chiSquaredTest = function (e, t) {
          if ("undefined" === typeof t)
            return this.errorMessage(
              "Chi Squared Test: You need to specify two variables, either of nominal or ordinal scale."
            );
          let n = this.getScale(e),
            r = this.getScale(t);
          if (
            ("ordinal" !== n && "nominal" !== n) ||
            ("ordinal" !== r && "nominal" !== r)
          )
            return this.errorMessage(
              "Chi Squared Test: Both variables need to be either of nominal or ordinal scale."
            );
          let i = this.contingencyTable(e, t);
          if ("undefined" === typeof i)
            return this.errorMessage(
              "Chi Squared Test: Failed to create a contingency table. Please make sure your data is prepared correctly."
            );
          i = i.detailled;
          let o,
            a = i.total.total,
            s = 0,
            u = Object.keys(i).length - 1;
          for (var c in ((u = (u - 1) * (Object.keys(i.total).length - u - 2)),
          i))
            if (this.has(i, c) && "total" !== c) {
              let e = i[c].total;
              for (var l in i[c])
                if (this.has(i[c], l) && "total" !== l) {
                  let t = (e * i.total[l]) / a;
                  s += Math.pow(i[c][l] - t, 2) / t;
                }
            }
          return (
            (o = s < 0 || u < 1 ? 0 : 1 - this.chiSquaredCumulativeValue(s, u)),
            { PearsonChiSquared: s, degreesOfFreedom: u, significance: o }
          );
        }),
        (n.prototype.studentsTTestOneSample = function (e, t) {
          if ("undefined" === typeof t || !this.isNumeric(t))
            return this.errorMessage(
              "Student's t-test (one sample) requires data and the mean for which the null hypothesis should hold true."
            );
          let n = this.validateInput(
            e,
            "interval",
            "student's t-test (one sample)"
          );
          if (!1 === n) return;
          if (0 === n.length) return;
          let r = this.mean(n.data),
            i = this.standardDeviation(n.data),
            o = (Math.sqrt(n.length) * (r - t)) / i,
            a = n.length - 1,
            s = this.studentsTCumulativeValue(Math.abs(o), a);
          return (
            s > 0.5 && (s = 1 - s),
            {
              tStatistic: o,
              degreesOfFreedom: a,
              pOneSided: s,
              pTwoSided: 2 * s,
            }
          );
        }),
        (n.prototype.studentsTTestTwoSamples = function (
          e,
          t,
          { nullHypothesisDifference: n = 0, dependent: r = !1 } = {}
        ) {
          if ("undefined" === typeof t)
            return this.errorMessage(
              "Student's t-test (two sample) requires data for two columns and the difference of their means for which the null hypothesis should hold true."
            );
          let i = this.validateInput(
              e,
              "interval",
              "student's t-test (two sample)"
            ),
            o = this.validateInput(
              t,
              "interval",
              "student's t-test (two sample)"
            );
          if (!1 === i || !1 === o) return;
          let a,
            s,
            u = i.length,
            c = o.length,
            l = {};
          if (0 === u || 0 === c) return;
          if (r) {
            let e = this.reduceToPairs(i.data, o.data),
              t = e.valuesFirst,
              r = e.valuesSecond,
              c = 0,
              d = 0;
            for (var f = 0; f < e.length; f++) d += t[f] - r[f];
            d /= e.length;
            for (f = 0; f < e.length; f++) c += Math.pow(t[f] - r[f] - d, 2);
            (c = Math.sqrt(c / (e.length - 1))),
              (a = (Math.sqrt(u) * (d - n)) / c),
              (s = e.length - 1),
              (l = {
                tStatistic: a,
                degreesOfFreedom: s,
                missings: e.missings,
              });
          } else {
            let e = this.mean(i.data),
              t = this.mean(o.data),
              r = this.variance(i.data),
              f = this.variance(o.data);
            (a =
              (e - t - n) /
              Math.sqrt(((u - 1) * r + (c - 1) * f) / (u + c - 2))),
              (a *= Math.sqrt((u * c) / (u + c))),
              (s = u + c - 2),
              (l = { tStatistic: a, degreesOfFreedom: s });
          }
          let d = this.studentsTCumulativeValue(a, s);
          return (
            d > 0.5 && (d = 1 - d), (l.pOneSided = d), (l.pTwoSided = 2 * d), l
          );
        }),
        (n.prototype.gaussianError = function (e) {
          if ("undefined" === typeof e || !this.isNumeric(e))
            return this.errorMessage(
              "Gaussian Error Function: No valid value for x supplied. X needs to be numeric."
            );
          let t = 1 / (1 + 0.5 * Math.abs(e)),
            n =
              -e * e -
              1.26551223 +
              1.00002368 * t +
              0.37409196 * t * t +
              0.09678418 * Math.pow(t, 3) -
              0.18628806 * Math.pow(t, 4) +
              0.27886807 * Math.pow(t, 5) -
              1.13520398 * Math.pow(t, 6) +
              1.48851587 * Math.pow(t, 7) -
              0.82215223 * Math.pow(t, 8) +
              0.17087277 * Math.pow(t, 9);
          return (n = Math.exp(n) * t), e >= 0 ? 1 - n : n - 1;
        }),
        (n.prototype.inverseGaussianError = function (e) {
          if ("undefined" === typeof e || !this.isNumeric(e))
            return this.errorMessage(
              "Inverse Gaussian Error Function: No valid value for x supplied. X needs to be numeric."
            );
          if (e > 1)
            return this.errorMessage(
              "Inverse Gaussian Error Function: x can not be larger than 1."
            );
          if (e < -1)
            return this.errorMessage(
              "Inverse Gaussian Error Function: x can not be smaller than -1."
            );
          var t,
            n = -Math.log((1 - e) * (1 + e));
          return (
            n < 5
              ? ((n -= 2.5),
                (t = Number(3.43273939e-7) + Number(2.81022636e-8) * n),
                (t = Number(-35233877e-13) + t * n),
                (t =
                  1.50140941 +
                  (t =
                    0.246640727 +
                    (t =
                      (t =
                        (t =
                          0.00021858087 +
                          (t = Number(-439150654e-14) + t * n) * n) *
                          n -
                        0.00125372503) *
                        n -
                      0.00417768164) *
                      n) *
                    n))
              : (t =
                  2.83297682 +
                  (t =
                    1.00167406 +
                    (t =
                      0.00943887047 +
                      (t =
                        (t =
                          0.00573950773 +
                          (t =
                            (t =
                              0.00134934322 +
                              (t =
                                0.000100950558 -
                                0.000200214257 * (n = Math.sqrt(n) - 3)) *
                                n) *
                              n -
                            0.00367342844) *
                            n) *
                          n -
                        0.0076224613) *
                        n) *
                      n) *
                    n),
            (t * e).toFixed(7)
          );
        }),
        (n.prototype.probit = function (e) {
          return "undefined" !== typeof e && this.isNumeric(e)
            ? e < 0 || e > 1
              ? this.errorMessage(
                  "Probit is only defined for quantiles p with 1 \u2265 p \u2265 0."
                )
              : 0 === e
              ? -1 / 0
              : 1 === e
              ? 1 / 0
              : Math.sqrt(2) * this.inverseGaussianError(2 * e - 1)
            : this.errorMessage(
                "Probit: No valid value for quantile supplied. quantile needs to be numeric."
              );
        }),
        (n.prototype.fisherYatesShuffle = function (e, t = Math.random) {
          if ("undefined" === typeof e)
            return this.errorMessage("Fisher-Yates shuffle: No data given.");
          let n = this.validateInput(e, "nominal", "");
          if (!1 === n) return;
          let r,
            i,
            o = n.data,
            a = n.length;
          for (; a; )
            (i = Math.floor(t() * a--)), (r = o[a]), (o[a] = o[i]), (o[i] = r);
          return o;
        }),
        (n.prototype.xorshift = function (e, t = 0) {
          if (
            "undefined" === typeof e ||
            e.constructor !== Array ||
            4 !== e.length
          )
            return this.errorMessage(
              "Xorshift needs to be seeded with an array consisting of four numbers."
            );
          if (!Number.isInteger(t) || t < 0)
            return this.errorMessage(
              "Xorshift: startIndex must be a non-negative integer."
            );
          let n = 0,
            r = 4,
            i = new Uint32Array(64);
          (i[0] = e[0]), (i[1] = e[1]), (i[2] = e[2]), (i[3] = e[3]);
          const o = function (e, t, n) {
            for (var r = t; r < n; r++) {
              let t = (e[0] ^ (e[0] << 11)) >>> 0;
              (e[0] = e[1]),
                (e[1] = e[2]),
                (e[2] = e[3]),
                (e[3] =
                  (((e[3] ^ (e[3] >>> 19)) >>> 0) ^ ((t ^ (t >>> 8)) >>> 0)) >>>
                  0),
                (e[r] = e[3]);
            }
            return e;
          };
          (this.next = function (e = !0) {
            let t = i[r];
            return (
              (n += 1),
              r++ >= 64 && ((r = 4), o(i, 4, 64)),
              e ? t / 4294967296 : t
            );
          }),
            (i = o(i, 4, 64));
          for (var a = 0, s = t; a < s; a++) this.next();
        }),
        (n.prototype.boxMuller = function (
          e = 0,
          t = 1,
          {
            randomSourceA: n = Math.random,
            randomSourceB: r = Math.random,
          } = {}
        ) {
          let i = 0,
            o = 0,
            a = 0,
            s = 0;
          do {
            (i = n()), (a += 1);
          } while ((i <= 0 || i >= 1) && a < 50);
          do {
            (o = r()), (s += 1);
          } while ((o <= 0 || o >= 1) && s < 50);
          for (; i <= 0 || i >= 1; ) i = Math.random();
          for (; o <= 0 || o >= 1; ) o = Math.random();
          return (
            Math.sqrt(-2 * Math.log(i)) * Math.cos(2 * Math.PI * o) * t + e
          );
        }),
        (n.prototype.ziggurat = function (e = 0, t = 1) {
          let n = 123456789,
            r = [128],
            i = [128],
            o = [128];
          const a = function () {
              let e = n,
                t = n;
              return (
                (t ^= t << 13),
                (t ^= t >>> 17),
                (t ^= t << 5),
                (n = t),
                (e + t) | 0
              );
            },
            s = function () {
              return 0.5 * (1 + a() / -Math.pow(2, 31));
            };
          !(function () {
            n ^= new Date().getTime();
            let e = 2147483648,
              t = 3.442619855899,
              a = t,
              s = 0.00991256303526217,
              u = s / Math.exp(-0.5 * t * t);
            (o[0] = Math.floor((t * e) / u)),
              (o[1] = 0),
              (r[0] = u / e),
              (r[127] = t / e),
              (i[0] = 1),
              (i[127] = Math.exp(-0.5 * t * t));
            for (var c = 126; c >= 1; c--)
              (t = Math.sqrt(-2 * Math.log(s / t + Math.exp(-0.5 * t * t)))),
                (o[c + 1] = Math.floor((t * e) / a)),
                (a = t),
                (i[c] = Math.exp(-0.5 * t * t)),
                (r[c] = t / e);
          })(),
            (this.next = function () {
              let n = a(),
                u = 127 & n,
                c =
                  Math.abs(n) < o[u]
                    ? n * r[u]
                    : (function (e, t) {
                        let n,
                          u,
                          c = 3.442619855899,
                          l = 1 / c;
                        for (;;) {
                          if (((n = e * r[t]), 0 === t)) {
                            for (
                              n = -Math.log(s()) * l, u = -Math.log(s());
                              u + u < n * n;

                            )
                              (n = -Math.log(s()) * l), (u = -Math.log(s()));
                            return e > 0 ? c + n : -c - n;
                          }
                          if (
                            i[t] + s() * (i[t - 1] - i[t]) <
                            Math.exp(-0.5 * n * n)
                          )
                            return n;
                          if (((t = 127 & (e = a())), Math.abs(e) < o[t]))
                            return e * r[t];
                        }
                      })(n, u);
              return c * t + e;
            });
        });
    },
  },
]);
